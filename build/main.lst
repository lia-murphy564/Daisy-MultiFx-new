ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"main.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN11Passthrough18processAudioSampleEf,"axG",%progbits,_ZN11Passthrough18processAud
  17              		.align	1
  18              		.p2align 2,,3
  19              		.weak	_ZN11Passthrough18processAudioSampleEf
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN11Passthrough18processAudioSampleEf:
  27              	.LVL0:
  28              	.LFB2985:
  29              		.file 1 "src/lmdsp.hpp"
   1:src/lmdsp.hpp **** #ifndef _LMDSP_H_
   2:src/lmdsp.hpp **** #define _LMDSP_H_
   3:src/lmdsp.hpp **** 
   4:src/lmdsp.hpp **** #include <stdlib.h>
   5:src/lmdsp.hpp **** #include <stdint.h>
   6:src/lmdsp.hpp **** 
   7:src/lmdsp.hpp **** #include "parameter_controller.h"
   8:src/lmdsp.hpp **** 
   9:src/lmdsp.hpp **** class LMAudioSignalProcessor {
  10:src/lmdsp.hpp **** public:
  11:src/lmdsp.hpp ****     LMAudioSignalProcessor() {};
  12:src/lmdsp.hpp ****     virtual ~LMAudioSignalProcessor() {};
  13:src/lmdsp.hpp ****     //virtual bool reset(double _fs);
  14:src/lmdsp.hpp ****     //virtual bool canProcessAudioFrame();
  15:src/lmdsp.hpp ****     //virtual void setSampleRate(double _fs); 
  16:src/lmdsp.hpp ****     virtual float processAudioSample(float xn) {
  17:src/lmdsp.hpp ****         return xn;
  18:src/lmdsp.hpp ****     }
  19:src/lmdsp.hpp ****     virtual bool processAudioFrame(const float* inputFrame, 
  20:src/lmdsp.hpp ****                                     float* outputFrame, 
  21:src/lmdsp.hpp ****                                     uint32_t inputChannels,
  22:src/lmdsp.hpp ****                                     uint32_t outputChannels) {
  23:src/lmdsp.hpp ****         return false;
  24:src/lmdsp.hpp ****     }
  25:src/lmdsp.hpp **** };
  26:src/lmdsp.hpp **** 
  27:src/lmdsp.hpp **** class Passthrough : public LMAudioSignalProcessor {
  28:src/lmdsp.hpp **** private:
  29:src/lmdsp.hpp ****     ParameterMap params;
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 2


  30:src/lmdsp.hpp **** public:
  31:src/lmdsp.hpp ****     Passthrough() {};
  32:src/lmdsp.hpp ****     ~Passthrough() {};
  33:src/lmdsp.hpp ****     //bool reset(double _fs);
  34:src/lmdsp.hpp ****     //bool canProcessAudioFrame();
  35:src/lmdsp.hpp ****     //virtual void setSampleRate(double _fs); 
  36:src/lmdsp.hpp ****     float processAudioSample(float xn) {
  30              		.loc 1 36 11 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  37:src/lmdsp.hpp ****         return xn;
  35              		.loc 1 37 9 view .LVU1
  38:src/lmdsp.hpp ****     }
  36              		.loc 1 38 5 is_stmt 0 view .LVU2
  37 0000 7047     		bx	lr
  38              		.cfi_endproc
  39              	.LFE2985:
  41 0002 00BF     		.section	.text._ZN11Passthrough17processAudioFrameEPKfPfmm,"axG",%progbits,_ZN11Passthrough17proce
  42              		.align	1
  43              		.p2align 2,,3
  44              		.weak	_ZN11Passthrough17processAudioFrameEPKfPfmm
  45              		.syntax unified
  46              		.thumb
  47              		.thumb_func
  48              		.fpu fpv5-d16
  50              	_ZN11Passthrough17processAudioFrameEPKfPfmm:
  51              	.LVL1:
  52              	.LFB2986:
  39:src/lmdsp.hpp ****     bool processAudioFrame(const float* inputFrame, 
  53              		.loc 1 39 10 is_stmt 1 view -0
  54              		.cfi_startproc
  55              		@ args = 4, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              		@ link register save eliminated.
  40:src/lmdsp.hpp ****                                     float* outputFrame, 
  41:src/lmdsp.hpp ****                                     uint32_t inputChannels,
  42:src/lmdsp.hpp ****                                     uint32_t outputChannels) {
  43:src/lmdsp.hpp ****         return false;
  58              		.loc 1 43 9 view .LVU4
  44:src/lmdsp.hpp ****     }
  59              		.loc 1 44 5 is_stmt 0 view .LVU5
  60 0000 0020     		movs	r0, #0
  61              	.LVL2:
  62              		.loc 1 44 5 view .LVU6
  63 0002 7047     		bx	lr
  64              		.cfi_endproc
  65              	.LFE2986:
  67              		.section	.text._ZN9GainStage18processAudioSampleEf,"axG",%progbits,_ZN9GainStage18processAudioSamp
  68              		.align	1
  69              		.p2align 2,,3
  70              		.weak	_ZN9GainStage18processAudioSampleEf
  71              		.syntax unified
  72              		.thumb
  73              		.thumb_func
  74              		.fpu fpv5-d16
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 3


  76              	_ZN9GainStage18processAudioSampleEf:
  77              	.LVL3:
  78              	.LFB2997:
  45:src/lmdsp.hpp ****     void setParameters(ParameterMap p) {
  46:src/lmdsp.hpp ****         params = p;
  47:src/lmdsp.hpp ****     }
  48:src/lmdsp.hpp **** };
  49:src/lmdsp.hpp **** 
  50:src/lmdsp.hpp **** class GainStage : public LMAudioSignalProcessor {
  51:src/lmdsp.hpp **** private:
  52:src/lmdsp.hpp ****     ParameterMap params;
  53:src/lmdsp.hpp ****     int gain;
  54:src/lmdsp.hpp **** public:
  55:src/lmdsp.hpp ****     GainStage() {};
  56:src/lmdsp.hpp ****     ~GainStage() {};
  57:src/lmdsp.hpp ****     //bool reset(double _fs);
  58:src/lmdsp.hpp ****     //bool canProcessAudioFrame();
  59:src/lmdsp.hpp ****     //virtual void setSampleRate(double _fs); 
  60:src/lmdsp.hpp ****     float processAudioSample(float xn) {
  79              		.loc 1 60 11 is_stmt 1 view -0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83              		@ link register save eliminated.
  61:src/lmdsp.hpp ****         return xn * gain;
  84              		.loc 1 61 9 view .LVU8
  85              		.loc 1 61 19 is_stmt 0 view .LVU9
  86 0000 D0ED097A 		vldr.32	s15, [r0, #36]	@ int
  87 0004 F8EEE77A 		vcvt.f32.s32	s15, s15
  62:src/lmdsp.hpp ****     }
  88              		.loc 1 62 5 view .LVU10
  89 0008 27EE800A 		vmul.f32	s0, s15, s0
  90              	.LVL4:
  91              		.loc 1 62 5 view .LVU11
  92 000c 7047     		bx	lr
  93              		.cfi_endproc
  94              	.LFE2997:
  96 000e 00BF     		.section	.text._ZN9GainStage17processAudioFrameEPKfPfmm,"axG",%progbits,_ZN9GainStage17processAudi
  97              		.align	1
  98              		.p2align 2,,3
  99              		.weak	_ZN9GainStage17processAudioFrameEPKfPfmm
 100              		.syntax unified
 101              		.thumb
 102              		.thumb_func
 103              		.fpu fpv5-d16
 105              	_ZN9GainStage17processAudioFrameEPKfPfmm:
 106              	.LVL5:
 107              	.LFB2998:
  63:src/lmdsp.hpp ****     bool processAudioFrame(const float* inputFrame, 
 108              		.loc 1 63 10 is_stmt 1 view -0
 109              		.cfi_startproc
 110              		@ args = 4, pretend = 0, frame = 0
 111              		@ frame_needed = 0, uses_anonymous_args = 0
 112              		@ link register save eliminated.
  64:src/lmdsp.hpp ****                                     float* outputFrame, 
  65:src/lmdsp.hpp ****                                     uint32_t inputChannels,
  66:src/lmdsp.hpp ****                                     uint32_t outputChannels) {
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 4


  67:src/lmdsp.hpp ****         return false;
 113              		.loc 1 67 9 view .LVU13
  68:src/lmdsp.hpp ****     }
 114              		.loc 1 68 5 is_stmt 0 view .LVU14
 115 0000 0020     		movs	r0, #0
 116              	.LVL6:
 117              		.loc 1 68 5 view .LVU15
 118 0002 7047     		bx	lr
 119              		.cfi_endproc
 120              	.LFE2998:
 122              		.section	.text._ZN7daisysp7AutowahD2Ev,"axG",%progbits,_ZN7daisysp7AutowahD5Ev,comdat
 123              		.align	1
 124              		.p2align 2,,3
 125              		.weak	_ZN7daisysp7AutowahD2Ev
 126              		.syntax unified
 127              		.thumb
 128              		.thumb_func
 129              		.fpu fpv5-d16
 131              	_ZN7daisysp7AutowahD2Ev:
 132              	.LVL7:
 133              	.LFB4256:
 134              		.file 2 "../../DaisySP//Source/Effects/autowah.h"
   1:../../DaisySP//Source/Effects/autowah.h **** #pragma once
   2:../../DaisySP//Source/Effects/autowah.h **** #ifndef DSY_AUTOWAH_H
   3:../../DaisySP//Source/Effects/autowah.h **** #define DSY_AUTOWAH_H
   4:../../DaisySP//Source/Effects/autowah.h **** 
   5:../../DaisySP//Source/Effects/autowah.h **** #include <stdint.h>
   6:../../DaisySP//Source/Effects/autowah.h **** #ifdef __cplusplus
   7:../../DaisySP//Source/Effects/autowah.h **** 
   8:../../DaisySP//Source/Effects/autowah.h **** namespace daisysp
   9:../../DaisySP//Source/Effects/autowah.h **** {
  10:../../DaisySP//Source/Effects/autowah.h **** /** Autowah module
  11:../../DaisySP//Source/Effects/autowah.h **** 
  12:../../DaisySP//Source/Effects/autowah.h ****     Original author(s) :
  13:../../DaisySP//Source/Effects/autowah.h **** 
  14:../../DaisySP//Source/Effects/autowah.h ****     Ported from soundpipe by Ben Sergentanis, May 2020
  15:../../DaisySP//Source/Effects/autowah.h **** */
  16:../../DaisySP//Source/Effects/autowah.h **** class Autowah
  17:../../DaisySP//Source/Effects/autowah.h **** {
  18:../../DaisySP//Source/Effects/autowah.h ****   public:
  19:../../DaisySP//Source/Effects/autowah.h ****     Autowah() {}
  20:../../DaisySP//Source/Effects/autowah.h ****     ~Autowah() {}
 135              		.loc 2 20 5 is_stmt 1 view -0
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 0
 138              		@ frame_needed = 0, uses_anonymous_args = 0
 139              		@ link register save eliminated.
 140              		.loc 2 20 17 is_stmt 0 view .LVU17
 141 0000 7047     		bx	lr
 142              		.cfi_endproc
 143              	.LFE4256:
 145              		.weak	_ZN7daisysp7AutowahD1Ev
 146              		.thumb_set _ZN7daisysp7AutowahD1Ev,_ZN7daisysp7AutowahD2Ev
 147              		.section	.text._ZN7daisysp9OverdriveD2Ev,"axG",%progbits,_ZN7daisysp9OverdriveD5Ev,comdat
 148              		.align	1
 149              		.p2align 2,,3
 150              		.weak	_ZN7daisysp9OverdriveD2Ev
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 5


 151              		.syntax unified
 152              		.thumb
 153              		.thumb_func
 154              		.fpu fpv5-d16
 156              	_ZN7daisysp9OverdriveD2Ev:
 157              	.LVL8:
 158              	.LFB4314:
 159              		.file 3 "../../DaisySP//Source/Effects/overdrive.h"
   1:../../DaisySP//Source/Effects/overdrive.h **** #pragma once
   2:../../DaisySP//Source/Effects/overdrive.h **** #ifndef DSY_OVERDRIVE_H
   3:../../DaisySP//Source/Effects/overdrive.h **** #define DSY_OVERDRIVE_H
   4:../../DaisySP//Source/Effects/overdrive.h **** 
   5:../../DaisySP//Source/Effects/overdrive.h **** #include <stdint.h>
   6:../../DaisySP//Source/Effects/overdrive.h **** #ifdef __cplusplus
   7:../../DaisySP//Source/Effects/overdrive.h **** 
   8:../../DaisySP//Source/Effects/overdrive.h **** /** @file overdrive.h */
   9:../../DaisySP//Source/Effects/overdrive.h **** 
  10:../../DaisySP//Source/Effects/overdrive.h **** namespace daisysp
  11:../../DaisySP//Source/Effects/overdrive.h **** {
  12:../../DaisySP//Source/Effects/overdrive.h **** /**  
  13:../../DaisySP//Source/Effects/overdrive.h ****        @brief Distortion / Overdrive Module
  14:../../DaisySP//Source/Effects/overdrive.h ****        @author Ported by Ben Sergentanis 
  15:../../DaisySP//Source/Effects/overdrive.h ****        @date Jan 2021 
  16:../../DaisySP//Source/Effects/overdrive.h ****        Ported from pichenettes/eurorack/plaits/dsp/fx/overdrive.h \n
  17:../../DaisySP//Source/Effects/overdrive.h ****        to an independent module. \n
  18:../../DaisySP//Source/Effects/overdrive.h ****        Original code written by Emilie Gillet in 2014. \n
  19:../../DaisySP//Source/Effects/overdrive.h **** */
  20:../../DaisySP//Source/Effects/overdrive.h **** class Overdrive
  21:../../DaisySP//Source/Effects/overdrive.h **** {
  22:../../DaisySP//Source/Effects/overdrive.h ****   public:
  23:../../DaisySP//Source/Effects/overdrive.h ****     Overdrive() {}
  24:../../DaisySP//Source/Effects/overdrive.h ****     ~Overdrive() {}
 160              		.loc 3 24 5 is_stmt 1 view -0
 161              		.cfi_startproc
 162              		@ args = 0, pretend = 0, frame = 0
 163              		@ frame_needed = 0, uses_anonymous_args = 0
 164              		@ link register save eliminated.
 165              		.loc 3 24 19 is_stmt 0 view .LVU19
 166 0000 7047     		bx	lr
 167              		.cfi_endproc
 168              	.LFE4314:
 170              		.weak	_ZN7daisysp9OverdriveD1Ev
 171              		.thumb_set _ZN7daisysp9OverdriveD1Ev,_ZN7daisysp9OverdriveD2Ev
 172              		.section	.text._ZN7daisysp6PhaserD2Ev,"axG",%progbits,_ZN7daisysp6PhaserD5Ev,comdat
 173              		.align	1
 174              		.p2align 2,,3
 175              		.weak	_ZN7daisysp6PhaserD2Ev
 176              		.syntax unified
 177              		.thumb
 178              		.thumb_func
 179              		.fpu fpv5-d16
 181              	_ZN7daisysp6PhaserD2Ev:
 182              	.LVL9:
 183              	.LFB4334:
 184              		.file 4 "../../DaisySP//Source/Effects/phaser.h"
   1:../../DaisySP//Source/Effects/phaser.h **** #pragma once
   2:../../DaisySP//Source/Effects/phaser.h **** #ifndef DSY_PHASER_H
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 6


   3:../../DaisySP//Source/Effects/phaser.h **** #define DSY_PHASER_H
   4:../../DaisySP//Source/Effects/phaser.h **** #ifdef __cplusplus
   5:../../DaisySP//Source/Effects/phaser.h **** 
   6:../../DaisySP//Source/Effects/phaser.h **** #include <stdint.h>
   7:../../DaisySP//Source/Effects/phaser.h **** #include "Utility/delayline.h"
   8:../../DaisySP//Source/Effects/phaser.h **** 
   9:../../DaisySP//Source/Effects/phaser.h **** /** @file phaser.h */
  10:../../DaisySP//Source/Effects/phaser.h **** 
  11:../../DaisySP//Source/Effects/phaser.h **** namespace daisysp
  12:../../DaisySP//Source/Effects/phaser.h **** {
  13:../../DaisySP//Source/Effects/phaser.h **** /**  
  14:../../DaisySP//Source/Effects/phaser.h ****     @brief Single Phaser engine. Used in Phaser.
  15:../../DaisySP//Source/Effects/phaser.h ****     @author Ben Sergentanis
  16:../../DaisySP//Source/Effects/phaser.h **** */
  17:../../DaisySP//Source/Effects/phaser.h **** class PhaserEngine
  18:../../DaisySP//Source/Effects/phaser.h **** {
  19:../../DaisySP//Source/Effects/phaser.h ****   public:
  20:../../DaisySP//Source/Effects/phaser.h ****     PhaserEngine() {}
  21:../../DaisySP//Source/Effects/phaser.h ****     ~PhaserEngine() {}
  22:../../DaisySP//Source/Effects/phaser.h **** 
  23:../../DaisySP//Source/Effects/phaser.h ****     /** Initialize the module
  24:../../DaisySP//Source/Effects/phaser.h ****         \param sample_rate Audio engine sample rate.
  25:../../DaisySP//Source/Effects/phaser.h ****     */
  26:../../DaisySP//Source/Effects/phaser.h ****     void Init(float sample_rate);
  27:../../DaisySP//Source/Effects/phaser.h **** 
  28:../../DaisySP//Source/Effects/phaser.h ****     /** Get the next sample
  29:../../DaisySP//Source/Effects/phaser.h ****         \param in Sample to process
  30:../../DaisySP//Source/Effects/phaser.h ****     */
  31:../../DaisySP//Source/Effects/phaser.h ****     float Process(float in);
  32:../../DaisySP//Source/Effects/phaser.h **** 
  33:../../DaisySP//Source/Effects/phaser.h ****     /** How much to modulate the allpass filter by.
  34:../../DaisySP//Source/Effects/phaser.h ****         \param depth Works 0-1.
  35:../../DaisySP//Source/Effects/phaser.h ****     */
  36:../../DaisySP//Source/Effects/phaser.h ****     void SetLfoDepth(float depth);
  37:../../DaisySP//Source/Effects/phaser.h **** 
  38:../../DaisySP//Source/Effects/phaser.h ****     /** Set lfo frequency.
  39:../../DaisySP//Source/Effects/phaser.h ****         \param lfo_freq Frequency in Hz
  40:../../DaisySP//Source/Effects/phaser.h ****     */
  41:../../DaisySP//Source/Effects/phaser.h ****     void SetLfoFreq(float lfo_freq);
  42:../../DaisySP//Source/Effects/phaser.h **** 
  43:../../DaisySP//Source/Effects/phaser.h ****     /** Set the allpass frequency
  44:../../DaisySP//Source/Effects/phaser.h ****         \param ap_freq Frequency in Hz.
  45:../../DaisySP//Source/Effects/phaser.h ****     */
  46:../../DaisySP//Source/Effects/phaser.h ****     void SetFreq(float ap_freq);
  47:../../DaisySP//Source/Effects/phaser.h **** 
  48:../../DaisySP//Source/Effects/phaser.h ****     /** Set the feedback amount.
  49:../../DaisySP//Source/Effects/phaser.h ****         \param feedback Amount from 0-1.
  50:../../DaisySP//Source/Effects/phaser.h ****     */
  51:../../DaisySP//Source/Effects/phaser.h ****     void SetFeedback(float feedback);
  52:../../DaisySP//Source/Effects/phaser.h **** 
  53:../../DaisySP//Source/Effects/phaser.h ****   private:
  54:../../DaisySP//Source/Effects/phaser.h ****     float                    sample_rate_;
  55:../../DaisySP//Source/Effects/phaser.h ****     static constexpr int32_t kDelayLength
  56:../../DaisySP//Source/Effects/phaser.h ****         = 2400; // 50 ms at 48kHz = .05 * 48000
  57:../../DaisySP//Source/Effects/phaser.h **** 
  58:../../DaisySP//Source/Effects/phaser.h ****     //triangle lfo
  59:../../DaisySP//Source/Effects/phaser.h ****     float lfo_phase_;
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 7


  60:../../DaisySP//Source/Effects/phaser.h ****     float lfo_freq_;
  61:../../DaisySP//Source/Effects/phaser.h ****     float lfo_amp_;
  62:../../DaisySP//Source/Effects/phaser.h **** 
  63:../../DaisySP//Source/Effects/phaser.h ****     float os_;
  64:../../DaisySP//Source/Effects/phaser.h **** 
  65:../../DaisySP//Source/Effects/phaser.h ****     float feedback_;
  66:../../DaisySP//Source/Effects/phaser.h ****     float ap_freq_;
  67:../../DaisySP//Source/Effects/phaser.h **** 
  68:../../DaisySP//Source/Effects/phaser.h ****     float deltime_;
  69:../../DaisySP//Source/Effects/phaser.h ****     float last_sample_;
  70:../../DaisySP//Source/Effects/phaser.h **** 
  71:../../DaisySP//Source/Effects/phaser.h ****     DelayLine<float, kDelayLength> del_;
  72:../../DaisySP//Source/Effects/phaser.h **** 
  73:../../DaisySP//Source/Effects/phaser.h ****     float ProcessLfo();
  74:../../DaisySP//Source/Effects/phaser.h **** };
  75:../../DaisySP//Source/Effects/phaser.h **** 
  76:../../DaisySP//Source/Effects/phaser.h **** //wraps up all of the phaser engines
  77:../../DaisySP//Source/Effects/phaser.h **** /**  
  78:../../DaisySP//Source/Effects/phaser.h ****     @brief Phaser Effect.
  79:../../DaisySP//Source/Effects/phaser.h ****     @author Ben Sergentanis
  80:../../DaisySP//Source/Effects/phaser.h ****     @date Jan 2021
  81:../../DaisySP//Source/Effects/phaser.h **** */
  82:../../DaisySP//Source/Effects/phaser.h **** class Phaser
  83:../../DaisySP//Source/Effects/phaser.h **** {
  84:../../DaisySP//Source/Effects/phaser.h ****   public:
  85:../../DaisySP//Source/Effects/phaser.h ****     Phaser() {}
  86:../../DaisySP//Source/Effects/phaser.h ****     ~Phaser() {}
 185              		.loc 4 86 5 is_stmt 1 view -0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 0
 188              		@ frame_needed = 0, uses_anonymous_args = 0
 189              		@ link register save eliminated.
 190              		.loc 4 86 16 is_stmt 0 view .LVU21
 191 0000 7047     		bx	lr
 192              		.cfi_endproc
 193              	.LFE4334:
 195              		.weak	_ZN7daisysp6PhaserD1Ev
 196              		.thumb_set _ZN7daisysp6PhaserD1Ev,_ZN7daisysp6PhaserD2Ev
 197              		.section	.text._ZN5daisy11TimerHandleD2Ev,"axG",%progbits,_ZN5daisy11TimerHandleD5Ev,comdat
 198              		.align	1
 199              		.p2align 2,,3
 200              		.weak	_ZN5daisy11TimerHandleD2Ev
 201              		.syntax unified
 202              		.thumb
 203              		.thumb_func
 204              		.fpu fpv5-d16
 206              	_ZN5daisy11TimerHandleD2Ev:
 207              	.LVL10:
 208              	.LFB4717:
 209              		.file 5 "../../libdaisy//src/per/tim.h"
   1:../../libdaisy//src/per/tim.h **** #pragma once
   2:../../libdaisy//src/per/tim.h **** #ifndef DSY_TIM_H
   3:../../libdaisy//src/per/tim.h **** #define DSY_TIM_H
   4:../../libdaisy//src/per/tim.h **** 
   5:../../libdaisy//src/per/tim.h **** #include <cstdint>
   6:../../libdaisy//src/per/tim.h **** 
   7:../../libdaisy//src/per/tim.h **** namespace daisy
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 8


   8:../../libdaisy//src/per/tim.h **** {
   9:../../libdaisy//src/per/tim.h **** /** Hardare timer peripheral support.
  10:../../libdaisy//src/per/tim.h ****  ** 
  11:../../libdaisy//src/per/tim.h ****  ** Supports general-function TIM peripherals:
  12:../../libdaisy//src/per/tim.h ****  ** - TIM2, TIM3, TIM4, TIM5
  13:../../libdaisy//src/per/tim.h ****  **
  14:../../libdaisy//src/per/tim.h ****  ** DaisySeed, and many internal peripherals utilize TIM2 for timing/delay purposes.
  15:../../libdaisy//src/per/tim.h ****  ** It is configured to be at the maximum frequency: typically 200MHz or 240MHz (boost) 
  16:../../libdaisy//src/per/tim.h ****  ** for measuring/delaying for very short periods. 
  17:../../libdaisy//src/per/tim.h ****  **
  18:../../libdaisy//src/per/tim.h ****  ** The GetUs/GetMs functions are available for convenience (and backwards compatibility),
  19:../../libdaisy//src/per/tim.h ****  ** but to avoid wrapping errors on math when doing time-delta calculations, using ticks is 
  20:../../libdaisy//src/per/tim.h ****  ** recommended. The data can be converted to the final time-base after getting the difference in t
  21:../../libdaisy//src/per/tim.h ****  ** (Using GetFreq() can be used for these time-base calculations).
  22:../../libdaisy//src/per/tim.h ****  **
  23:../../libdaisy//src/per/tim.h ****  ** TODO:
  24:../../libdaisy//src/per/tim.h ****  ** - Fix issues with realtime getters, and wrapping of the timer(s).
  25:../../libdaisy//src/per/tim.h ****  **     - This very noticeable with default settings for the 16-bit counters.
  26:../../libdaisy//src/per/tim.h ****  ** - Dispatch periodic callback(s)
  27:../../libdaisy//src/per/tim.h ****  ** - Other General purpose timers
  28:../../libdaisy//src/per/tim.h ****  ** - Non-internal clock sources
  29:../../libdaisy//src/per/tim.h ****  ** - Use of the four-tim channels per tim
  30:../../libdaisy//src/per/tim.h ****  **     - PWM, etc.
  31:../../libdaisy//src/per/tim.h ****  **     - InputCapture/OutputCompare, etc.
  32:../../libdaisy//src/per/tim.h ****  ** - HRTIM
  33:../../libdaisy//src/per/tim.h ****  ** - Advanced timers (TIM1/TIM8)
  34:../../libdaisy//src/per/tim.h ****  ** */
  35:../../libdaisy//src/per/tim.h **** class TimerHandle
  36:../../libdaisy//src/per/tim.h **** {
  37:../../libdaisy//src/per/tim.h ****   public:
  38:../../libdaisy//src/per/tim.h ****     struct Config
  39:../../libdaisy//src/per/tim.h ****     {
  40:../../libdaisy//src/per/tim.h ****         /** Hardwaare Timer to configure, and use. */
  41:../../libdaisy//src/per/tim.h ****         enum class Peripheral
  42:../../libdaisy//src/per/tim.h ****         {
  43:../../libdaisy//src/per/tim.h ****             TIM_2 = 0, /**< 32-bit counter */
  44:../../libdaisy//src/per/tim.h ****             TIM_3,     /**< 16-bit counter */
  45:../../libdaisy//src/per/tim.h ****             TIM_4,     /**< 16-bit counter */
  46:../../libdaisy//src/per/tim.h ****             TIM_5,     /**< 32-bit counter*/
  47:../../libdaisy//src/per/tim.h ****         };
  48:../../libdaisy//src/per/tim.h **** 
  49:../../libdaisy//src/per/tim.h ****         /** Direction of the auto-reload counter. 
  50:../../libdaisy//src/per/tim.h ****          ** TODO: Add support for the various  
  51:../../libdaisy//src/per/tim.h ****          ** versions of Up/Down counters.
  52:../../libdaisy//src/per/tim.h ****          ** */
  53:../../libdaisy//src/per/tim.h ****         enum class CounterDir
  54:../../libdaisy//src/per/tim.h ****         {
  55:../../libdaisy//src/per/tim.h ****             UP = 0,
  56:../../libdaisy//src/per/tim.h ****             DOWN,
  57:../../libdaisy//src/per/tim.h ****         };
  58:../../libdaisy//src/per/tim.h **** 
  59:../../libdaisy//src/per/tim.h ****         Peripheral periph;
  60:../../libdaisy//src/per/tim.h ****         CounterDir dir;
  61:../../libdaisy//src/per/tim.h ****     };
  62:../../libdaisy//src/per/tim.h **** 
  63:../../libdaisy//src/per/tim.h ****     /** Return values for TIM funcitons. */
  64:../../libdaisy//src/per/tim.h ****     enum class Result
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 9


  65:../../libdaisy//src/per/tim.h ****     {
  66:../../libdaisy//src/per/tim.h ****         OK,
  67:../../libdaisy//src/per/tim.h ****         ERR,
  68:../../libdaisy//src/per/tim.h ****     };
  69:../../libdaisy//src/per/tim.h **** 
  70:../../libdaisy//src/per/tim.h ****     TimerHandle() : pimpl_(nullptr) {}
  71:../../libdaisy//src/per/tim.h ****     TimerHandle(const TimerHandle& other) = default;
  72:../../libdaisy//src/per/tim.h ****     TimerHandle& operator=(const TimerHandle& other) = default;
  73:../../libdaisy//src/per/tim.h ****     ~TimerHandle() {}
 210              		.loc 5 73 5 is_stmt 1 view -0
 211              		.cfi_startproc
 212              		@ args = 0, pretend = 0, frame = 0
 213              		@ frame_needed = 0, uses_anonymous_args = 0
 214              		@ link register save eliminated.
 215              		.loc 5 73 21 is_stmt 0 view .LVU23
 216 0000 7047     		bx	lr
 217              		.cfi_endproc
 218              	.LFE4717:
 220              		.weak	_ZN5daisy11TimerHandleD1Ev
 221              		.thumb_set _ZN5daisy11TimerHandleD1Ev,_ZN5daisy11TimerHandleD2Ev
 222              		.section	.text._ZN5daisy9DaisySeedD2Ev,"axG",%progbits,_ZN5daisy9DaisySeedD5Ev,comdat
 223              		.align	1
 224              		.p2align 2,,3
 225              		.weak	_ZN5daisy9DaisySeedD2Ev
 226              		.syntax unified
 227              		.thumb
 228              		.thumb_func
 229              		.fpu fpv5-d16
 231              	_ZN5daisy9DaisySeedD2Ev:
 232              	.LVL11:
 233              	.LFB5468:
 234              		.file 6 "../../libdaisy//src/daisy_seed.h"
   1:../../libdaisy//src/daisy_seed.h **** #pragma once
   2:../../libdaisy//src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../../libdaisy//src/daisy_seed.h **** #define DSY_SEED_H
   4:../../libdaisy//src/daisy_seed.h **** 
   5:../../libdaisy//src/daisy_seed.h **** #include "daisy.h"
   6:../../libdaisy//src/daisy_seed.h **** 
   7:../../libdaisy//src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../../libdaisy//src/daisy_seed.h **** //#define SEED_REV2
   9:../../libdaisy//src/daisy_seed.h **** 
  10:../../libdaisy//src/daisy_seed.h **** namespace daisy
  11:../../libdaisy//src/daisy_seed.h **** {
  12:../../libdaisy//src/daisy_seed.h **** /**
  13:../../libdaisy//src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../../libdaisy//src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../../libdaisy//src/daisy_seed.h **** 
  16:../../libdaisy//src/daisy_seed.h ****    @ingroup boards
  17:../../libdaisy//src/daisy_seed.h **** */
  18:../../libdaisy//src/daisy_seed.h **** class DaisySeed
  19:../../libdaisy//src/daisy_seed.h **** {
  20:../../libdaisy//src/daisy_seed.h ****   public:
  21:../../libdaisy//src/daisy_seed.h ****     DaisySeed() {}
  22:../../libdaisy//src/daisy_seed.h ****     ~DaisySeed() {}
 235              		.loc 6 22 5 is_stmt 1 view -0
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 10


 238              		@ frame_needed = 0, uses_anonymous_args = 0
 239              		@ link register save eliminated.
 240              	.LBB2366:
 241              	.LBI2366:
 242              		.file 7 "../../libdaisy//src/sys/system.h"
   1:../../libdaisy//src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../../libdaisy//src/sys/system.h **** #define DSY_SYSTEM_H
   3:../../libdaisy//src/sys/system.h **** 
   4:../../libdaisy//src/sys/system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:../../libdaisy//src/sys/system.h **** 
   6:../../libdaisy//src/sys/system.h **** #include <cstdint>
   7:../../libdaisy//src/sys/system.h **** #include "per/tim.h"
   8:../../libdaisy//src/sys/system.h **** 
   9:../../libdaisy//src/sys/system.h **** namespace daisy
  10:../../libdaisy//src/sys/system.h **** {
  11:../../libdaisy//src/sys/system.h **** /** A handle for interacting with the Core System. 
  12:../../libdaisy//src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  13:../../libdaisy//src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  14:../../libdaisy//src/sys/system.h ****  **
  15:../../libdaisy//src/sys/system.h ****  ** @author shensley
  16:../../libdaisy//src/sys/system.h ****  ** @ingroup system
  17:../../libdaisy//src/sys/system.h ****  */
  18:../../libdaisy//src/sys/system.h **** class System
  19:../../libdaisy//src/sys/system.h **** {
  20:../../libdaisy//src/sys/system.h ****   public:
  21:../../libdaisy//src/sys/system.h ****     /** Contains settings for initializing the System */
  22:../../libdaisy//src/sys/system.h ****     struct Config
  23:../../libdaisy//src/sys/system.h ****     {
  24:../../libdaisy//src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:../../libdaisy//src/sys/system.h ****         enum class SysClkFreq
  26:../../libdaisy//src/sys/system.h ****         {
  27:../../libdaisy//src/sys/system.h ****             FREQ_400MHZ,
  28:../../libdaisy//src/sys/system.h ****             FREQ_480MHZ,
  29:../../libdaisy//src/sys/system.h ****         };
  30:../../libdaisy//src/sys/system.h **** 
  31:../../libdaisy//src/sys/system.h ****         /** Method to call on the struct to set to defaults
  32:../../libdaisy//src/sys/system.h ****          ** CPU Freq set to 400MHz
  33:../../libdaisy//src/sys/system.h ****          ** Cache Enabled 
  34:../../libdaisy//src/sys/system.h ****          ** */
  35:../../libdaisy//src/sys/system.h ****         void Defaults()
  36:../../libdaisy//src/sys/system.h ****         {
  37:../../libdaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_400MHZ;
  38:../../libdaisy//src/sys/system.h ****             use_dcache  = true;
  39:../../libdaisy//src/sys/system.h ****             use_icache  = true;
  40:../../libdaisy//src/sys/system.h ****             skip_clocks = false;
  41:../../libdaisy//src/sys/system.h ****         }
  42:../../libdaisy//src/sys/system.h **** 
  43:../../libdaisy//src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  44:../../libdaisy//src/sys/system.h ****          ** CPU Freq set to 480MHz
  45:../../libdaisy//src/sys/system.h ****          ** Cache Enabled 
  46:../../libdaisy//src/sys/system.h ****          ** */
  47:../../libdaisy//src/sys/system.h ****         void Boost()
  48:../../libdaisy//src/sys/system.h ****         {
  49:../../libdaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_480MHZ;
  50:../../libdaisy//src/sys/system.h ****             use_dcache  = true;
  51:../../libdaisy//src/sys/system.h ****             use_icache  = true;
  52:../../libdaisy//src/sys/system.h ****             skip_clocks = false;
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 11


  53:../../libdaisy//src/sys/system.h ****         }
  54:../../libdaisy//src/sys/system.h **** 
  55:../../libdaisy//src/sys/system.h ****         SysClkFreq cpu_freq;
  56:../../libdaisy//src/sys/system.h ****         bool       use_dcache;
  57:../../libdaisy//src/sys/system.h ****         bool       use_icache;
  58:../../libdaisy//src/sys/system.h ****         bool       skip_clocks;
  59:../../libdaisy//src/sys/system.h ****     };
  60:../../libdaisy//src/sys/system.h **** 
  61:../../libdaisy//src/sys/system.h ****     /** Describes the different regions of memory available to the Daisy
  62:../../libdaisy//src/sys/system.h ****      * 
  63:../../libdaisy//src/sys/system.h ****      */
  64:../../libdaisy//src/sys/system.h ****     enum MemoryRegion
  65:../../libdaisy//src/sys/system.h ****     {
  66:../../libdaisy//src/sys/system.h ****         INTERNAL_FLASH = 0,
  67:../../libdaisy//src/sys/system.h ****         ITCMRAM,
  68:../../libdaisy//src/sys/system.h ****         DTCMRAM,
  69:../../libdaisy//src/sys/system.h ****         SRAM_D1,
  70:../../libdaisy//src/sys/system.h ****         SRAM_D2,
  71:../../libdaisy//src/sys/system.h ****         SRAM_D3,
  72:../../libdaisy//src/sys/system.h ****         SDRAM,
  73:../../libdaisy//src/sys/system.h ****         QSPI,
  74:../../libdaisy//src/sys/system.h ****         INVALID_ADDRESS,
  75:../../libdaisy//src/sys/system.h ****     };
  76:../../libdaisy//src/sys/system.h **** 
  77:../../libdaisy//src/sys/system.h ****     System() {}
  78:../../libdaisy//src/sys/system.h ****     ~System() {}
 243              		.loc 7 78 5 view .LVU25
 244              		.loc 7 78 5 is_stmt 0 view .LVU26
 245              	.LBE2366:
 246              	.LBB2367:
 247              	.LBI2367:
 248              		.file 8 "../../libdaisy//src/hid/usb.h"
   1:../../libdaisy//src/hid/usb.h **** #pragma once
   2:../../libdaisy//src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../../libdaisy//src/hid/usb.h **** #define DSY_HID_USB_H
   4:../../libdaisy//src/hid/usb.h **** #include <stdint.h>
   5:../../libdaisy//src/hid/usb.h **** #include <stdlib.h>
   6:../../libdaisy//src/hid/usb.h **** 
   7:../../libdaisy//src/hid/usb.h **** namespace daisy
   8:../../libdaisy//src/hid/usb.h **** /** @addtogroup human_interface
   9:../../libdaisy//src/hid/usb.h ****     @{
  10:../../libdaisy//src/hid/usb.h **** */
  11:../../libdaisy//src/hid/usb.h **** 
  12:../../libdaisy//src/hid/usb.h **** {
  13:../../libdaisy//src/hid/usb.h **** /** 
  14:../../libdaisy//src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../../libdaisy//src/hid/usb.h ****     @author Stephen Hensley
  16:../../libdaisy//src/hid/usb.h ****     @date December 2019
  17:../../libdaisy//src/hid/usb.h **** */
  18:../../libdaisy//src/hid/usb.h **** class UsbHandle
  19:../../libdaisy//src/hid/usb.h **** {
  20:../../libdaisy//src/hid/usb.h ****   public:
  21:../../libdaisy//src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../../libdaisy//src/hid/usb.h ****     enum class Result
  23:../../libdaisy//src/hid/usb.h ****     {
  24:../../libdaisy//src/hid/usb.h ****         OK,
  25:../../libdaisy//src/hid/usb.h ****         ERR,
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 12


  26:../../libdaisy//src/hid/usb.h ****     };
  27:../../libdaisy//src/hid/usb.h **** 
  28:../../libdaisy//src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../../libdaisy//src/hid/usb.h ****     enum UsbPeriph
  30:../../libdaisy//src/hid/usb.h ****     {
  31:../../libdaisy//src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../../libdaisy//src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../../libdaisy//src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../../libdaisy//src/hid/usb.h ****     };
  35:../../libdaisy//src/hid/usb.h **** 
  36:../../libdaisy//src/hid/usb.h **** 
  37:../../libdaisy//src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../../libdaisy//src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../../libdaisy//src/hid/usb.h **** 
  40:../../libdaisy//src/hid/usb.h ****     UsbHandle() {}
  41:../../libdaisy//src/hid/usb.h **** 
  42:../../libdaisy//src/hid/usb.h ****     ~UsbHandle() {}
 249              		.loc 8 42 5 is_stmt 1 view .LVU27
 250              		.loc 8 42 5 is_stmt 0 view .LVU28
 251              	.LBE2367:
 252              	.LBB2368:
 253              	.LBI2368:
 254              		.file 9 "../../libdaisy//src/per/adc.h"
   1:../../libdaisy//src/per/adc.h **** #pragma once
   2:../../libdaisy//src/per/adc.h **** #ifndef DSY_ADC_H
   3:../../libdaisy//src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../../libdaisy//src/per/adc.h **** #include <stdint.h>
   5:../../libdaisy//src/per/adc.h **** #include <stdlib.h>
   6:../../libdaisy//src/per/adc.h **** #include "daisy_core.h"
   7:../../libdaisy//src/per/adc.h **** #include "per/gpio.h"
   8:../../libdaisy//src/per/adc.h **** 
   9:../../libdaisy//src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 16 /**< Maximum number of ADC channels */
  10:../../libdaisy//src/per/adc.h **** 
  11:../../libdaisy//src/per/adc.h **** namespace daisy
  12:../../libdaisy//src/per/adc.h **** {
  13:../../libdaisy//src/per/adc.h **** /** @addtogroup per_analog
  14:../../libdaisy//src/per/adc.h ****     @{
  15:../../libdaisy//src/per/adc.h **** */
  16:../../libdaisy//src/per/adc.h **** 
  17:../../libdaisy//src/per/adc.h **** /* While there may not be many configuration options here,
  18:../../libdaisy//src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../../libdaisy//src/per/adc.h **** later without breaking existing functionality.
  20:../../libdaisy//src/per/adc.h **** */
  21:../../libdaisy//src/per/adc.h **** 
  22:../../libdaisy//src/per/adc.h **** /** @brief   Configuration Structure for an ADC Channel 
  23:../../libdaisy//src/per/adc.h ****  *  @details This can be used to configure a a single input, 
  24:../../libdaisy//src/per/adc.h ****  *           or a multiplexed input, allowing up to 8 inputs on 
  25:../../libdaisy//src/per/adc.h ****  *           one channel.
  26:../../libdaisy//src/per/adc.h ****  *  @note    Sharing data lines to multiple muxes _is_ possible, but
  27:../../libdaisy//src/per/adc.h ****  *           each channel sharing data lines must be set to the maximum
  28:../../libdaisy//src/per/adc.h ****  *           number of channels, even if some multiplexers have fewer
  29:../../libdaisy//src/per/adc.h ****  *           inputs connected.
  30:../../libdaisy//src/per/adc.h **** */
  31:../../libdaisy//src/per/adc.h **** struct AdcChannelConfig
  32:../../libdaisy//src/per/adc.h **** {
  33:../../libdaisy//src/per/adc.h ****     /** Which pin to use for multiplexing */
  34:../../libdaisy//src/per/adc.h ****     enum MuxPin
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 13


  35:../../libdaisy//src/per/adc.h ****     {
  36:../../libdaisy//src/per/adc.h ****         MUX_SEL_0,    /**< & */
  37:../../libdaisy//src/per/adc.h ****         MUX_SEL_1,    /**< & */
  38:../../libdaisy//src/per/adc.h ****         MUX_SEL_2,    /**< & */
  39:../../libdaisy//src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  40:../../libdaisy//src/per/adc.h ****     };
  41:../../libdaisy//src/per/adc.h **** 
  42:../../libdaisy//src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  43:../../libdaisy//src/per/adc.h ****     \param pin Pin to init.
  44:../../libdaisy//src/per/adc.h ****      */
  45:../../libdaisy//src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin);
  46:../../libdaisy//src/per/adc.h **** 
  47:../../libdaisy//src/per/adc.h ****     /** 
  48:../../libdaisy//src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  49:../../libdaisy//src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  50:../../libdaisy//src/per/adc.h ****     You only need to supply the mux pins that are required,
  51:../../libdaisy//src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  52:../../libdaisy//src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  53:../../libdaisy//src/per/adc.h ****     \param mux_channels must be 1-8
  54:../../libdaisy//src/per/adc.h ****     \param mux_0 First mux pin
  55:../../libdaisy//src/per/adc.h ****     \param mux_1 Second mux pin
  56:../../libdaisy//src/per/adc.h ****     \param mux_2 Third mux pin
  57:../../libdaisy//src/per/adc.h ****     \param adc_pin &
  58:../../libdaisy//src/per/adc.h ****     */
  59:../../libdaisy//src/per/adc.h ****     void InitMux(dsy_gpio_pin adc_pin,
  60:../../libdaisy//src/per/adc.h ****                  size_t       mux_channels,
  61:../../libdaisy//src/per/adc.h ****                  dsy_gpio_pin mux_0,
  62:../../libdaisy//src/per/adc.h ****                  dsy_gpio_pin mux_1 = {DSY_GPIOX, 0},
  63:../../libdaisy//src/per/adc.h ****                  dsy_gpio_pin mux_2 = {DSY_GPIOX, 0});
  64:../../libdaisy//src/per/adc.h **** 
  65:../../libdaisy//src/per/adc.h ****     dsy_gpio pin_;                   /**< & */
  66:../../libdaisy//src/per/adc.h ****     dsy_gpio mux_pin_[MUX_SEL_LAST]; /**< & */
  67:../../libdaisy//src/per/adc.h ****     uint8_t  mux_channels_;          /**< & */
  68:../../libdaisy//src/per/adc.h **** };
  69:../../libdaisy//src/per/adc.h **** 
  70:../../libdaisy//src/per/adc.h **** /**
  71:../../libdaisy//src/per/adc.h ****    @brief Handler for analog to digital conversion
  72:../../libdaisy//src/per/adc.h **** */
  73:../../libdaisy//src/per/adc.h **** class AdcHandle
  74:../../libdaisy//src/per/adc.h **** {
  75:../../libdaisy//src/per/adc.h ****   public:
  76:../../libdaisy//src/per/adc.h ****     /** Supported oversampling amounts */
  77:../../libdaisy//src/per/adc.h ****     enum OverSampling
  78:../../libdaisy//src/per/adc.h ****     {
  79:../../libdaisy//src/per/adc.h ****         OVS_NONE, /**< & */
  80:../../libdaisy//src/per/adc.h ****         OVS_4,    /**< & */
  81:../../libdaisy//src/per/adc.h ****         OVS_8,    /**< & */
  82:../../libdaisy//src/per/adc.h ****         OVS_16,   /**< & */
  83:../../libdaisy//src/per/adc.h ****         OVS_32,   /**< & */
  84:../../libdaisy//src/per/adc.h ****         OVS_64,   /**< & */
  85:../../libdaisy//src/per/adc.h ****         OVS_128,  /**< & */
  86:../../libdaisy//src/per/adc.h ****         OVS_256,  /**< & */
  87:../../libdaisy//src/per/adc.h ****         OVS_512,  /**< & */
  88:../../libdaisy//src/per/adc.h ****         OVS_1024, /**< & */
  89:../../libdaisy//src/per/adc.h ****         OVS_LAST, /**< & */
  90:../../libdaisy//src/per/adc.h ****     };
  91:../../libdaisy//src/per/adc.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 14


  92:../../libdaisy//src/per/adc.h ****     AdcHandle() {}
  93:../../libdaisy//src/per/adc.h ****     ~AdcHandle() {}
 255              		.loc 9 93 5 is_stmt 1 view .LVU29
 256              		.loc 9 93 5 is_stmt 0 view .LVU30
 257              	.LBE2368:
 258              	.LBB2369:
 259              	.LBI2369:
 260              		.file 10 "../../libdaisy//src/hid/audio.h"
   1:../../libdaisy//src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../../libdaisy//src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../../libdaisy//src/hid/audio.h **** 
   4:../../libdaisy//src/hid/audio.h **** #include "per/sai.h"
   5:../../libdaisy//src/hid/audio.h **** 
   6:../../libdaisy//src/hid/audio.h **** namespace daisy
   7:../../libdaisy//src/hid/audio.h **** {
   8:../../libdaisy//src/hid/audio.h **** /** @brief Audio Engine Handle
   9:../../libdaisy//src/hid/audio.h ****  *  @ingroup audio 
  10:../../libdaisy//src/hid/audio.h ****  *  @details This class allows for higher level access to an audio engine.
  11:../../libdaisy//src/hid/audio.h ****  *           If you're using a SOM like the DaisySeed or DaisyPatchSM (or any 
  12:../../libdaisy//src/hid/audio.h ****  *            board that includes one of those objects) then the intialization
  13:../../libdaisy//src/hid/audio.h ****  *            is already taken  care of.
  14:../../libdaisy//src/hid/audio.h ****  *           If you're setting up your own custom hardware, or need to make changes
  15:../../libdaisy//src/hid/audio.h ****  *           you will have to take the following steps:
  16:../../libdaisy//src/hid/audio.h ****  *             1. Create and Initialize an SaiHandle or two depending on your requirements
  17:../../libdaisy//src/hid/audio.h ****  *             2. Initialize the Audio Handle with the desired settings and the Initialized SaiHand
  18:../../libdaisy//src/hid/audio.h ****  *             3. If the connected codec requires special configuration or initialization, do so
  19:../../libdaisy//src/hid/audio.h ****  *             4. Write a callback method using either the AudioCallback or the InterleavingAudioCa
  20:../../libdaisy//src/hid/audio.h ****  *             5. Start the Audio using one of the StartAudio function
  21:../../libdaisy//src/hid/audio.h ****  */
  22:../../libdaisy//src/hid/audio.h **** class AudioHandle
  23:../../libdaisy//src/hid/audio.h **** {
  24:../../libdaisy//src/hid/audio.h ****   public:
  25:../../libdaisy//src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  26:../../libdaisy//src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  27:../../libdaisy//src/hid/audio.h ****     struct Config
  28:../../libdaisy//src/hid/audio.h ****     {
  29:../../libdaisy//src/hid/audio.h ****         size_t                        blocksize;
  30:../../libdaisy//src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  31:../../libdaisy//src/hid/audio.h ****         float                         postgain;
  32:../../libdaisy//src/hid/audio.h ****     };
  33:../../libdaisy//src/hid/audio.h **** 
  34:../../libdaisy//src/hid/audio.h ****     enum class Result
  35:../../libdaisy//src/hid/audio.h ****     {
  36:../../libdaisy//src/hid/audio.h ****         OK,
  37:../../libdaisy//src/hid/audio.h ****         ERR,
  38:../../libdaisy//src/hid/audio.h ****     };
  39:../../libdaisy//src/hid/audio.h **** 
  40:../../libdaisy//src/hid/audio.h ****     /** Non-Interleaving input buffer
  41:../../libdaisy//src/hid/audio.h ****      * Buffer arranged by float[chn][sample] 
  42:../../libdaisy//src/hid/audio.h ****      * const so that the user can't modify the input
  43:../../libdaisy//src/hid/audio.h ****      */
  44:../../libdaisy//src/hid/audio.h ****     typedef const float* const* InputBuffer;
  45:../../libdaisy//src/hid/audio.h **** 
  46:../../libdaisy//src/hid/audio.h ****     /** Non-Interleaving output buffer
  47:../../libdaisy//src/hid/audio.h ****      * Arranged by float[chn][sample] 
  48:../../libdaisy//src/hid/audio.h ****      */
  49:../../libdaisy//src/hid/audio.h ****     typedef float** OutputBuffer;
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 15


  50:../../libdaisy//src/hid/audio.h **** 
  51:../../libdaisy//src/hid/audio.h ****     /** Type for a Non-Interleaving audio callback 
  52:../../libdaisy//src/hid/audio.h ****      * Non-Interleaving audio callbacks in daisy will be of this type
  53:../../libdaisy//src/hid/audio.h ****      */
  54:../../libdaisy//src/hid/audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
  55:../../libdaisy//src/hid/audio.h ****                                   OutputBuffer out,
  56:../../libdaisy//src/hid/audio.h ****                                   size_t       size);
  57:../../libdaisy//src/hid/audio.h **** 
  58:../../libdaisy//src/hid/audio.h ****     /** Interleaving Input buffer
  59:../../libdaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  60:../../libdaisy//src/hid/audio.h ****      ** this is const, as the user shouldn't modify it
  61:../../libdaisy//src/hid/audio.h ****     */
  62:../../libdaisy//src/hid/audio.h ****     typedef const float* InterleavingInputBuffer;
  63:../../libdaisy//src/hid/audio.h **** 
  64:../../libdaisy//src/hid/audio.h ****     /** Interleaving Output buffer 
  65:../../libdaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  66:../../libdaisy//src/hid/audio.h ****     */
  67:../../libdaisy//src/hid/audio.h ****     typedef float* InterleavingOutputBuffer;
  68:../../libdaisy//src/hid/audio.h **** 
  69:../../libdaisy//src/hid/audio.h ****     /** Interleaving Audio Callback 
  70:../../libdaisy//src/hid/audio.h ****      * Interleaving audio callbacks in daisy must be of this type
  71:../../libdaisy//src/hid/audio.h ****      */
  72:../../libdaisy//src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  73:../../libdaisy//src/hid/audio.h ****                                               InterleavingOutputBuffer out,
  74:../../libdaisy//src/hid/audio.h ****                                               size_t                   size);
  75:../../libdaisy//src/hid/audio.h **** 
  76:../../libdaisy//src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  77:../../libdaisy//src/hid/audio.h ****     ~AudioHandle() {}
 261              		.loc 10 77 5 is_stmt 1 view .LVU31
 262              		.loc 10 77 5 is_stmt 0 view .LVU32
 263              	.LBE2369:
 264              		.loc 6 22 19 view .LVU33
 265 0000 7047     		bx	lr
 266              		.cfi_endproc
 267              	.LFE5468:
 269              		.weak	_ZN5daisy9DaisySeedD1Ev
 270              		.thumb_set _ZN5daisy9DaisySeedD1Ev,_ZN5daisy9DaisySeedD2Ev
 271 0002 00BF     		.section	.text._ZN12StateManagerD2Ev,"axG",%progbits,_ZN12StateManagerD5Ev,comdat
 272              		.align	1
 273              		.p2align 2,,3
 274              		.weak	_ZN12StateManagerD2Ev
 275              		.syntax unified
 276              		.thumb
 277              		.thumb_func
 278              		.fpu fpv5-d16
 280              	_ZN12StateManagerD2Ev:
 281              	.LVL12:
 282              	.LFB3025:
 283              		.file 11 "src/statemanager.h"
   1:src/statemanager.h **** #ifndef _STATEMANAGER_H_
   2:src/statemanager.h **** #define _STATEMANAGER_H_
   3:src/statemanager.h **** 
   4:src/statemanager.h **** #include <unordered_map>
   5:src/statemanager.h **** #include "lmdsp.hpp"
   6:src/statemanager.h **** 
   7:src/statemanager.h **** // struct stateId {
   8:src/statemanager.h **** //     int state;
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 16


   9:src/statemanager.h **** //     int prev_state;
  10:src/statemanager.h **** 
  11:src/statemanager.h **** //     // stateId() {};
  12:src/statemanager.h **** 
  13:src/statemanager.h **** //     bool operator==(stateId &other) { 
  14:src/statemanager.h **** //         return (state == other.state
  15:src/statemanager.h **** //             &&prev_state == other.prev_state);
  16:src/statemanager.h **** //     }
  17:src/statemanager.h **** //     // bool operator==(stateId &other) { 
  18:src/statemanager.h **** //     //     return (state == other.state
  19:src/statemanager.h **** //     //         &&prev_state == other.prev_state);
  20:src/statemanager.h **** //     // }
  21:src/statemanager.h **** // };
  22:src/statemanager.h **** 
  23:src/statemanager.h **** // struct stateId_hasher {
  24:src/statemanager.h **** //     // stateId_hasher() {
  25:src/statemanager.h ****         
  26:src/statemanager.h **** //     // };
  27:src/statemanager.h **** 
  28:src/statemanager.h **** //   std::size_t operator()(stateId& s) {
  29:src/statemanager.h **** //     using std::size_t;
  30:src/statemanager.h **** //     using std::string;
  31:src/statemanager.h **** //     using std::hash;
  32:src/statemanager.h **** 
  33:src/statemanager.h **** //     return ((hash<int>()(s.state)
  34:src/statemanager.h **** //              ^ (hash<int>()(s.prev_state) << 1)) >> 1);
  35:src/statemanager.h **** //   }
  36:src/statemanager.h **** // };
  37:src/statemanager.h **** 
  38:src/statemanager.h **** class StateManager {
  39:src/statemanager.h **** private:
  40:src/statemanager.h ****     //stateId state_id;
  41:src/statemanager.h ****     //std::unordered_map<int, LMAudioSignalProcessor*, stateId_hasher> effect_bank;
  42:src/statemanager.h ****     int state;
  43:src/statemanager.h ****     std::unordered_map<int, LMAudioSignalProcessor*> effect_bank;
  44:src/statemanager.h **** 
  45:src/statemanager.h **** 
  46:src/statemanager.h **** public:
  47:src/statemanager.h ****     StateManager() {};
  48:src/statemanager.h ****     ~StateManager() {};
 284              		.loc 11 48 5 is_stmt 1 view -0
 285              		.cfi_startproc
 286              		@ args = 0, pretend = 0, frame = 0
 287              		@ frame_needed = 0, uses_anonymous_args = 0
 288              		.loc 11 48 5 is_stmt 0 view .LVU35
 289 0000 38B5     		push	{r3, r4, r5, lr}
 290              		.cfi_def_cfa_offset 16
 291              		.cfi_offset 3, -16
 292              		.cfi_offset 4, -12
 293              		.cfi_offset 5, -8
 294              		.cfi_offset 14, -4
 295              	.LBB2410:
 296              	.LBB2411:
 297              	.LBB2412:
 298              	.LBB2413:
 299              	.LBB2414:
 300              	.LBB2415:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 17


 301              		.file 12 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
   1:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // hashtable.h header -*- C++ -*-
   2:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
   3:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // Copyright (C) 2007-2020 Free Software Foundation, Inc.
   4:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** //
   5:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // software; you can redistribute it and/or modify it under the
   7:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // terms of the GNU General Public License as published by the
   8:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // any later version.
  10:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
  11:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // This library is distributed in the hope that it will be useful,
  12:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // GNU General Public License for more details.
  15:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
  16:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
  20:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // You should have received a copy of the GNU General Public License and
  21:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // <http://www.gnu.org/licenses/>.
  24:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
  25:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** /** @file bits/hashtable.h
  26:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****  *  This is an internal header file, included by other library headers.
  27:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****  *  Do not attempt to use it directly. @headername{unordered_map, unordered_set}
  28:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****  */
  29:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
  30:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** #ifndef _HASHTABLE_H
  31:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** #define _HASHTABLE_H 1
  32:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
  33:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** #pragma GCC system_header
  34:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
  35:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** #include <bits/hashtable_policy.h>
  36:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** #if __cplusplus > 201402L
  37:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** # include <bits/node_handle.h>
  38:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** #endif
  39:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
  40:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** namespace std _GLIBCXX_VISIBILITY(default)
  41:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** {
  42:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  43:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
  44:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Tp, typename _Hash>
  45:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     using __cache_default
  46:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       =  __not_<__and_<// Do not cache for fast hasher.
  47:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		       __is_fast_hash<_Hash>,
  48:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		       // Mandatory to have erase not throwing.
  49:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		       __is_nothrow_invocable<const _Hash&, const _Tp&>>>;
  50:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
  51:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   /**
  52:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  Primary class template _Hashtable.
  53:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
  54:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  @ingroup hashtable-detail
  55:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
  56:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  @tparam _Value  CopyConstructible type.
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 18


  57:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
  58:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  @tparam _Key    CopyConstructible type.
  59:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
  60:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  @tparam _Alloc  An allocator type
  61:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  ([lib.allocator.requirements]) whose _Alloc::value_type is
  62:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  _Value.  As a conforming extension, we allow for
  63:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  _Alloc::value_type != _Value.
  64:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
  65:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  @tparam _ExtractKey  Function object that takes an object of type
  66:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  _Value and returns a value of type _Key.
  67:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
  68:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  @tparam _Equal  Function object that takes two objects of type k
  69:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  and returns a bool-like value that is true if the two objects
  70:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  are considered equal.
  71:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
  72:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  @tparam _H1  The hash function. A unary function object with
  73:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  argument type _Key and result type size_t. Return values should
  74:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  be distributed over the entire range [0, numeric_limits<size_t>:::max()].
  75:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  @tparam _H2  The range-hashing function (in the terminology of
  77:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  Tavori and Dreizin).  A binary function object whose argument
  78:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  types and result type are all size_t.  Given arguments r and N,
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  the return value is in the range [0, N).
  80:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
  81:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  @tparam _Hash  The ranged hash function (Tavori and Dreizin). A
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  binary function whose argument types are _Key and size_t and
  83:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  whose result type is size_t.  Given arguments k and N, the
  84:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  return value is in the range [0, N).  Default: hash(k, N) =
  85:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  h2(h1(k), N).  If _Hash is anything other than the default, _H1
  86:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  and _H2 are ignored.
  87:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
  88:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  @tparam _RehashPolicy  Policy class with three members, all of
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  which govern the bucket count. _M_next_bkt(n) returns a bucket
  90:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  count no smaller than n.  _M_bkt_for_elements(n) returns a
  91:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  bucket count appropriate for an element count of n.
  92:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  _M_need_rehash(n_bkt, n_elt, n_ins) determines whether, if the
  93:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  current bucket count is n_bkt and the current element count is
  94:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  n_elt, we need to increase the bucket count.  If so, returns
  95:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  make_pair(true, n), where n is the new bucket count.  If not,
  96:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  returns make_pair(false, <anything>)
  97:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
  98:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  @tparam _Traits  Compile-time class with three boolean
  99:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  std::integral_constant members:  __cache_hash_code, __constant_iterators,
 100:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *   __unique_keys.
 101:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
 102:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  Each _Hashtable data structure has:
 103:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
 104:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  - _Bucket[]       _M_buckets
 105:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  - _Hash_node_base _M_before_begin
 106:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  - size_type       _M_bucket_count
 107:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  - size_type       _M_element_count
 108:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
 109:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  with _Bucket being _Hash_node* and _Hash_node containing:
 110:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
 111:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  - _Hash_node*   _M_next
 112:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  - Tp            _M_value
 113:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  - size_t        _M_hash_code if cache_hash_code is true
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 19


 114:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  In terms of Standard containers the hashtable is like the aggregation of:
 116:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
 117:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  - std::forward_list<_Node> containing the elements
 118:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  - std::vector<std::forward_list<_Node>::iterator> representing the buckets
 119:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  The non-empty buckets contain the node before the first node in the
 121:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  bucket. This design makes it possible to implement something like a
 122:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  std::forward_list::insert_after on container insertion and
 123:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  std::forward_list::erase_after on container erase
 124:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  calls. _M_before_begin is equivalent to
 125:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  std::forward_list::before_begin. Empty buckets contain
 126:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  nullptr.  Note that one of the non-empty buckets contains
 127:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  &_M_before_begin which is not a dereferenceable node so the
 128:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  node pointer in a bucket shall never be dereferenced, only its
 129:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  next node can be.
 130:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
 131:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  Walking through a bucket's nodes requires a check on the hash code to
 132:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  see if each node is still in the bucket. Such a design assumes a
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  quite efficient hash functor and is one of the reasons it is
 134:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  highly advisable to set __cache_hash_code to true.
 135:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
 136:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  The container iterators are simply built from nodes. This way
 137:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  incrementing the iterator is perfectly efficient independent of
 138:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  how many empty buckets there are in the container.
 139:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
 140:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  On insert we compute the element's hash code and use it to find the
 141:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  bucket index. If the element must be inserted in an empty bucket
 142:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  we add it at the beginning of the singly linked list and make the
 143:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  bucket point to _M_before_begin. The bucket that used to point to
 144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  _M_before_begin, if any, is updated to point to its new before
 145:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  begin node.
 146:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  On erase, the simple iterator design requires using the hash
 148:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  functor to get the index of the bucket to update. For this
 149:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  reason, when __cache_hash_code is set to false the hash functor must
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  not throw and this is enforced by a static assertion.
 151:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
 152:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  Functionality is implemented by decomposition into base classes,
 153:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  where the derived _Hashtable class is used in _Map_base,
 154:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  _Insert, _Rehash_base, and _Equality base classes to access the
 155:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  "this" pointer. _Hashtable_base is used in the base classes as a
 156:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  non-recursive, fully-completed-type so that detailed nested type
 157:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  information, such as iterator type and node type, can be
 158:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  used. This is similar to the "Curiously Recurring Template
 159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  Pattern" (CRTP) technique, but uses a reconstructed, not
 160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  explicitly passed, template pattern.
 161:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
 162:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  Base class templates are: 
 163:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *    - __detail::_Hashtable_base
 164:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *    - __detail::_Map_base
 165:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *    - __detail::_Insert
 166:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *    - __detail::_Rehash_base
 167:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *    - __detail::_Equality
 168:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    */
 169:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value, typename _Alloc,
 170:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _ExtractKey, typename _Equal,
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 20


 171:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash,
 172:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _RehashPolicy, typename _Traits>
 173:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     class _Hashtable
 174:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     : public __detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal,
 175:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 				       _H1, _H2, _Hash, _Traits>,
 176:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       public __detail::_Map_base<_Key, _Value, _Alloc, _ExtractKey, _Equal,
 177:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 				 _H1, _H2, _Hash, _RehashPolicy, _Traits>,
 178:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       public __detail::_Insert<_Key, _Value, _Alloc, _ExtractKey, _Equal,
 179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			       _H1, _H2, _Hash, _RehashPolicy, _Traits>,
 180:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       public __detail::_Rehash_base<_Key, _Value, _Alloc, _ExtractKey, _Equal,
 181:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 				    _H1, _H2, _Hash, _RehashPolicy, _Traits>,
 182:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       public __detail::_Equality<_Key, _Value, _Alloc, _ExtractKey, _Equal,
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 				 _H1, _H2, _Hash, _RehashPolicy, _Traits>,
 184:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       private __detail::_Hashtable_alloc<
 185:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__alloc_rebind<_Alloc,
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		       __detail::_Hash_node<_Value,
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 					    _Traits::__hash_cached::value>>>
 188:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
 189:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       static_assert(is_same<typename remove_cv<_Value>::type, _Value>::value,
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  "unordered container must have a non-const, non-volatile value_type");
 191:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** #if __cplusplus > 201703L || defined __STRICT_ANSI__
 192:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       static_assert(is_same<typename _Alloc::value_type, _Value>{},
 193:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  "unordered container must have the same value_type as its allocator");
 194:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** #endif
 195:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 196:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __traits_type = _Traits;
 197:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __hash_cached = typename __traits_type::__hash_cached;
 198:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __node_type = __detail::_Hash_node<_Value, __hash_cached::value>;
 199:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __node_alloc_type = __alloc_rebind<_Alloc, __node_type>;
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 201:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __hashtable_alloc = __detail::_Hashtable_alloc<__node_alloc_type>;
 202:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 203:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __value_alloc_traits =
 204:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	typename __hashtable_alloc::__value_alloc_traits;
 205:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __node_alloc_traits =
 206:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	typename __hashtable_alloc::__node_alloc_traits;
 207:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __node_base = typename __hashtable_alloc::__node_base;
 208:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __bucket_type = typename __hashtable_alloc::__bucket_type;
 209:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 210:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     public:
 211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       typedef _Key						key_type;
 212:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       typedef _Value						value_type;
 213:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       typedef _Alloc						allocator_type;
 214:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       typedef _Equal						key_equal;
 215:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 216:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // mapped_type, if present, comes from _Map_base.
 217:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // hasher, if present, comes from _Hash_code_base/_Hashtable_base.
 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       typedef typename __value_alloc_traits::pointer		pointer;
 219:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       typedef typename __value_alloc_traits::const_pointer	const_pointer;
 220:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       typedef value_type&					reference;
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       typedef const value_type&					const_reference;
 222:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 223:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     private:
 224:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __rehash_type = _RehashPolicy;
 225:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __rehash_state = typename __rehash_type::_State;
 226:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 227:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __constant_iterators = typename __traits_type::__constant_iterators;
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 21


 228:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __unique_keys = typename __traits_type::__unique_keys;
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 230:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __key_extract = typename std::conditional<
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 					     __constant_iterators::value,
 232:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 				       	     __detail::_Identity,
 233:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 					     __detail::_Select1st>::type;
 234:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 235:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __hashtable_base = __detail::
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			       _Hashtable_base<_Key, _Value, _ExtractKey,
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 					      _Equal, _H1, _H2, _Hash, _Traits>;
 238:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 239:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __hash_code_base =  typename __hashtable_base::__hash_code_base;
 240:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __hash_code =  typename __hashtable_base::__hash_code;
 241:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __ireturn_type = typename __hashtable_base::__ireturn_type;
 242:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 243:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __map_base = __detail::_Map_base<_Key, _Value, _Alloc, _ExtractKey,
 244:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 					     _Equal, _H1, _H2, _Hash,
 245:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 					     _RehashPolicy, _Traits>;
 246:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 247:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __rehash_base = __detail::_Rehash_base<_Key, _Value, _Alloc,
 248:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 						   _ExtractKey, _Equal,
 249:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 						   _H1, _H2, _Hash,
 250:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 						   _RehashPolicy, _Traits>;
 251:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 252:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __eq_base = __detail::_Equality<_Key, _Value, _Alloc, _ExtractKey,
 253:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 					    _Equal, _H1, _H2, _Hash,
 254:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 					    _RehashPolicy, _Traits>;
 255:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 256:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __reuse_or_alloc_node_gen_t =
 257:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__detail::_ReuseOrAllocNode<__node_alloc_type>;
 258:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __alloc_node_gen_t =
 259:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__detail::_AllocNode<__node_alloc_type>;
 260:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 261:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Simple RAII type for managing a node containing an element
 262:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       struct _Scoped_node
 263:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 264:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	// Take ownership of a node with a constructed element.
 265:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_Scoped_node(__node_type* __n, __hashtable_alloc* __h)
 266:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	: _M_h(__h), _M_node(__n) { }
 267:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 268:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	// Allocate a node and construct an element within it.
 269:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	template<typename... _Args>
 270:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _Scoped_node(__hashtable_alloc* __h, _Args&&... __args)
 271:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  : _M_h(__h),
 272:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_node(__h->_M_allocate_node(std::forward<_Args>(__args)...))
 273:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  { }
 274:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 275:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	// Destroy element and deallocate node.
 276:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	~_Scoped_node() { if (_M_node) _M_h->_M_deallocate_node(_M_node); };
 277:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 278:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_Scoped_node(const _Scoped_node&) = delete;
 279:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_Scoped_node& operator=(const _Scoped_node&) = delete;
 280:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 281:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__hashtable_alloc* _M_h;
 282:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__node_type* _M_node;
 283:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       };
 284:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 22


 285:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename _Ht>
 286:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	static constexpr
 287:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	typename conditional<std::is_lvalue_reference<_Ht>::value,
 288:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			     const value_type&, value_type&&>::type
 289:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__fwd_value_for(value_type& __val) noexcept
 290:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{ return std::move(__val); }
 291:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 292:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Metaprogramming for picking apart hash caching.
 293:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename _Cond>
 294:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	using __if_hash_cached = __or_<__not_<__hash_cached>, _Cond>;
 295:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 296:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename _Cond>
 297:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	using __if_hash_not_cached = __or_<__hash_cached, _Cond>;
 298:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 299:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Compile-time diagnostics.
 300:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 301:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // _Hash_code_base has everything protected, so use this derived type to
 302:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // access it.
 303:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       struct __hash_code_base_access : __hash_code_base
 304:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { using __hash_code_base::_M_bucket_index; };
 305:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 306:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Getting a bucket index from a node shall not throw because it is used
 307:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // in methods (erase, swap...) that shall not throw.
 308:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       static_assert(noexcept(declval<const __hash_code_base_access&>()
 309:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			     ._M_bucket_index((const __node_type*)nullptr,
 310:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 					      (std::size_t)0)),
 311:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		    "Cache the hash code or qualify your functors involved"
 312:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		    " in hash code and bucket index computation with noexcept");
 313:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 314:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // When hash codes are cached local iterator inherits from H2 functor
 315:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // which must then be default constructible.
 316:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       static_assert(__if_hash_cached<is_default_constructible<_H2>>::value,
 317:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		    "Functor used to map hash code to bucket index"
 318:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		    " must be default constructible");
 319:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 320:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename _Keya, typename _Valuea, typename _Alloca,
 321:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       typename _ExtractKeya, typename _Equala,
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       typename _H1a, typename _H2a, typename _Hasha,
 323:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       typename _RehashPolicya, typename _Traitsa,
 324:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       bool _Unique_keysa>
 325:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	friend struct __detail::_Map_base;
 326:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 327:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename _Keya, typename _Valuea, typename _Alloca,
 328:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       typename _ExtractKeya, typename _Equala,
 329:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       typename _H1a, typename _H2a, typename _Hasha,
 330:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       typename _RehashPolicya, typename _Traitsa>
 331:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	friend struct __detail::_Insert_base;
 332:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 333:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename _Keya, typename _Valuea, typename _Alloca,
 334:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       typename _ExtractKeya, typename _Equala,
 335:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       typename _H1a, typename _H2a, typename _Hasha,
 336:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       typename _RehashPolicya, typename _Traitsa,
 337:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       bool _Constant_iteratorsa>
 338:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	friend struct __detail::_Insert;
 339:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 340:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename _Keya, typename _Valuea, typename _Alloca,
 341:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       typename _ExtractKeya, typename _Equala,
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 23


 342:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       typename _H1a, typename _H2a, typename _Hasha,
 343:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       typename _RehashPolicya, typename _Traitsa,
 344:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       bool _Unique_keysa>
 345:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	friend struct __detail::_Equality;
 346:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 347:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     public:
 348:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using size_type = typename __hashtable_base::size_type;
 349:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using difference_type = typename __hashtable_base::difference_type;
 350:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 351:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using iterator = typename __hashtable_base::iterator;
 352:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using const_iterator = typename __hashtable_base::const_iterator;
 353:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 354:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using local_iterator = typename __hashtable_base::local_iterator;
 355:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using const_local_iterator = typename __hashtable_base::
 356:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 				   const_local_iterator;
 357:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 358:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** #if __cplusplus > 201402L
 359:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using node_type = _Node_handle<_Key, _Value, __node_alloc_type>;
 360:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using insert_return_type = _Node_insert_return<iterator, node_type>;
 361:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** #endif
 362:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 363:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     private:
 364:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __bucket_type*		_M_buckets		= &_M_single_bucket;
 365:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       size_type			_M_bucket_count		= 1;
 366:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_base		_M_before_begin;
 367:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       size_type			_M_element_count	= 0;
 368:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _RehashPolicy		_M_rehash_policy;
 369:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 370:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // A single bucket used when only need for 1 bucket. Especially
 371:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // interesting in move semantic to leave hashtable with only 1 bucket
 372:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // which is not allocated so that we can have those operations noexcept
 373:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // qualified.
 374:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Note that we can't leave hashtable with 0 bucket without adding
 375:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // numerous checks in the code to avoid 0 modulus.
 376:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __bucket_type		_M_single_bucket	= nullptr;
 377:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 378:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       bool
 379:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_uses_single_bucket(__bucket_type* __bkts) const
 380:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __builtin_expect(__bkts == &_M_single_bucket, false); }
 381:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 382:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       bool
 383:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_uses_single_bucket() const
 384:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return _M_uses_single_bucket(_M_buckets); }
 385:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 386:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __hashtable_alloc&
 387:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_base_alloc() { return *this; }
 388:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 389:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __bucket_type*
 390:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_allocate_buckets(size_type __bkt_count)
 391:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 392:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	if (__builtin_expect(__bkt_count == 1, false))
 393:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  {
 394:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_single_bucket = nullptr;
 395:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    return &_M_single_bucket;
 396:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  }
 397:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 398:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return __hashtable_alloc::_M_allocate_buckets(__bkt_count);
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 24


 399:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
 400:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 401:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       void
 402:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_deallocate_buckets(__bucket_type* __bkts, size_type __bkt_count)
 403:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 404:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	if (_M_uses_single_bucket(__bkts))
 405:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return;
 406:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 407:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__hashtable_alloc::_M_deallocate_buckets(__bkts, __bkt_count);
 408:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
 409:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 410:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       void
 411:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_deallocate_buckets()
 412:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { _M_deallocate_buckets(_M_buckets, _M_bucket_count); }
 413:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 414:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Gets bucket begin, deals with the fact that non-empty buckets contain
 415:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // their before begin node.
 416:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_type*
 417:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_bucket_begin(size_type __bkt) const;
 418:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 419:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_type*
 420:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_begin() const
 421:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return static_cast<__node_type*>(_M_before_begin._M_nxt); }
 302              		.loc 12 421 64 view .LVU36
 303 0002 C468     		ldr	r4, [r0, #12]
 304              	.LBE2415:
 305              	.LBE2414:
 306              	.LBE2413:
 307              	.LBE2412:
 308              	.LBE2411:
 309              	.LBE2410:
 310              		.loc 11 48 5 view .LVU37
 311 0004 0546     		mov	r5, r0
 312              	.LVL13:
 313              	.LBB2463:
 314              	.LBI2410:
 315              		.file 13 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
   1:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // unordered_map implementation -*- C++ -*-
   2:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
   3:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // Copyright (C) 2010-2020 Free Software Foundation, Inc.
   4:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** //
   5:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // software; you can redistribute it and/or modify it under the
   7:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // terms of the GNU General Public License as published by the
   8:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // any later version.
  10:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
  11:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // This library is distributed in the hope that it will be useful,
  12:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // GNU General Public License for more details.
  15:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
  16:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
  20:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // You should have received a copy of the GNU General Public License and
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 25


  21:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // <http://www.gnu.org/licenses/>.
  24:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
  25:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** /** @file bits/unordered_map.h
  26:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****  *  This is an internal header file, included by other library headers.
  27:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****  *  Do not attempt to use it directly. @headername{unordered_map}
  28:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****  */
  29:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
  30:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** #ifndef _UNORDERED_MAP_H
  31:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** #define _UNORDERED_MAP_H
  32:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
  33:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** namespace std _GLIBCXX_VISIBILITY(default)
  34:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** {
  35:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  36:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  37:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
  38:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****   /// Base types for unordered_map.
  39:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****   template<bool _Cache>
  40:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****     using __umap_traits = __detail::_Hashtable_traits<_Cache, false, true>;
  41:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
  42:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****   template<typename _Key,
  43:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	   typename _Tp,
  44:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	   typename _Hash = hash<_Key>,
  45:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	   typename _Pred = std::equal_to<_Key>,
  46:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	   typename _Alloc = std::allocator<std::pair<const _Key, _Tp> >,
  47:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	   typename _Tr = __umap_traits<__cache_default<_Key, _Hash>::value>>
  48:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****     using __umap_hashtable = _Hashtable<_Key, std::pair<const _Key, _Tp>,
  49:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                                         _Alloc, __detail::_Select1st,
  50:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 				        _Pred, _Hash,
  51:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 				        __detail::_Mod_range_hashing,
  52:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 				        __detail::_Default_ranged_hash,
  53:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 				        __detail::_Prime_rehash_policy, _Tr>;
  54:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
  55:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****   /// Base types for unordered_multimap.
  56:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****   template<bool _Cache>
  57:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****     using __ummap_traits = __detail::_Hashtable_traits<_Cache, false, false>;
  58:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
  59:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****   template<typename _Key,
  60:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	   typename _Tp,
  61:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	   typename _Hash = hash<_Key>,
  62:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	   typename _Pred = std::equal_to<_Key>,
  63:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	   typename _Alloc = std::allocator<std::pair<const _Key, _Tp> >,
  64:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	   typename _Tr = __ummap_traits<__cache_default<_Key, _Hash>::value>>
  65:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****     using __ummap_hashtable = _Hashtable<_Key, std::pair<const _Key, _Tp>,
  66:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 					 _Alloc, __detail::_Select1st,
  67:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 					 _Pred, _Hash,
  68:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 					 __detail::_Mod_range_hashing,
  69:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 					 __detail::_Default_ranged_hash,
  70:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 					 __detail::_Prime_rehash_policy, _Tr>;
  71:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
  72:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****   template<class _Key, class _Tp, class _Hash, class _Pred, class _Alloc>
  73:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****     class unordered_multimap;
  74:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
  75:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****   /**
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *  @brief A standard container composed of unique keys (containing
  77:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *  at most one of each key value) that associates values of another type
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 26


  78:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *  with the keys.
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *
  80:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *  @ingroup unordered_associative_containers
  81:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *  @tparam  _Key    Type of key objects.
  83:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *  @tparam  _Tp     Type of mapped objects.
  84:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *  @tparam  _Hash   Hashing function object type, defaults to hash<_Value>.
  85:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *  @tparam  _Pred   Predicate function object type, defaults
  86:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *                   to equal_to<_Value>.
  87:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *  @tparam  _Alloc  Allocator type, defaults to 
  88:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *                   std::allocator<std::pair<const _Key, _Tp>>.
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *
  90:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, and
  91:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *  <a href="tables.html#xx">unordered associative container</a>
  92:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *
  93:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    * The resulting value type of the container is std::pair<const _Key, _Tp>.
  94:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *
  95:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *  Base is _Hashtable, dispatched at compile time via template
  96:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *  alias __umap_hashtable.
  97:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    */
  98:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****   template<typename _Key, typename _Tp,
  99:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	   typename _Hash = hash<_Key>,
 100:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	   typename _Pred = equal_to<_Key>,
 101:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	   typename _Alloc = allocator<std::pair<const _Key, _Tp>>>
 102:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****     class unordered_map
 316              		.loc 13 102 11 is_stmt 1 view .LVU38
 317              	.LBB2462:
 318              	.LBI2411:
 422:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 423:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Assign *this using another _Hashtable instance. Whether elements
 424:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // are copied or moved depends on the _Ht reference.
 425:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename _Ht>
 426:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	void
 427:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_assign_elements(_Ht&&);
 428:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 429:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename _Ht, typename _NodeGenerator>
 430:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	void
 431:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_assign(_Ht&&, const _NodeGenerator&);
 432:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       void
 434:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_move_assign(_Hashtable&&, true_type);
 435:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 436:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       void
 437:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_move_assign(_Hashtable&&, false_type);
 438:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 439:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       void
 440:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_reset() noexcept;
 441:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 442:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(const _H1& __h1, const _H2& __h2, const _Hash& __h,
 443:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 const _Equal& __eq, const _ExtractKey& __exk,
 444:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 const allocator_type& __a)
 445:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       : __hashtable_base(__exk, __h1, __h2, __h, __eq),
 446:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__hashtable_alloc(__node_alloc_type(__a))
 447:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { }
 448:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 449:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     public:
 450:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Constructor, destructor, assignment, swap
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 27


 451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable() = default;
 452:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(size_type __bkt_count_hint,
 453:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 const _H1&, const _H2&, const _Hash&,
 454:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 const _Equal&, const _ExtractKey&,
 455:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 const allocator_type&);
 456:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 457:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename _InputIterator>
 458:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_Hashtable(_InputIterator __first, _InputIterator __last,
 459:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		   size_type __bkt_count_hint,
 460:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		   const _H1&, const _H2&, const _Hash&,
 461:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		   const _Equal&, const _ExtractKey&,
 462:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		   const allocator_type&);
 463:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 464:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(const _Hashtable&);
 465:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 466:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(_Hashtable&&) noexcept;
 467:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 468:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(const _Hashtable&, const allocator_type&);
 469:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 470:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(_Hashtable&&, const allocator_type&);
 471:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 472:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Use delegating constructors.
 473:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       explicit
 474:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(const allocator_type& __a)
 475:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       : __hashtable_alloc(__node_alloc_type(__a))
 476:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { }
 477:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 478:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       explicit
 479:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(size_type __bkt_count_hint,
 480:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 const _H1& __hf = _H1(),
 481:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 const key_equal& __eql = key_equal(),
 482:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 const allocator_type& __a = allocator_type())
 483:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       : _Hashtable(__bkt_count_hint, __hf, _H2(), _Hash(), __eql,
 484:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		   __key_extract(), __a)
 485:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { }
 486:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 487:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename _InputIterator>
 488:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_Hashtable(_InputIterator __f, _InputIterator __l,
 489:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		   size_type __bkt_count_hint = 0,
 490:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		   const _H1& __hf = _H1(),
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		   const key_equal& __eql = key_equal(),
 492:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		   const allocator_type& __a = allocator_type())
 493:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	: _Hashtable(__f, __l, __bkt_count_hint, __hf, _H2(), _Hash(), __eql,
 494:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		     __key_extract(), __a)
 495:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{ }
 496:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 497:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(initializer_list<value_type> __l,
 498:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 size_type __bkt_count_hint = 0,
 499:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 const _H1& __hf = _H1(),
 500:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 const key_equal& __eql = key_equal(),
 501:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 const allocator_type& __a = allocator_type())
 502:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       : _Hashtable(__l.begin(), __l.end(), __bkt_count_hint,
 503:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		   __hf, _H2(), _Hash(), __eql,
 504:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		   __key_extract(), __a)
 505:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { }
 506:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 507:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable&
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 28


 508:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       operator=(const _Hashtable& __ht);
 509:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 510:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable&
 511:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       operator=(_Hashtable&& __ht)
 512:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       noexcept(__node_alloc_traits::_S_nothrow_move()
 513:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       && is_nothrow_move_assignable<_H1>::value
 514:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       && is_nothrow_move_assignable<_Equal>::value)
 515:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 516:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****         constexpr bool __move_storage =
 517:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __node_alloc_traits::_S_propagate_on_move_assign()
 518:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  || __node_alloc_traits::_S_always_equal();
 519:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_move_assign(std::move(__ht), __bool_constant<__move_storage>());
 520:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return *this;
 521:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
 522:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 523:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable&
 524:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       operator=(initializer_list<value_type> __l)
 525:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 526:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__reuse_or_alloc_node_gen_t __roan(_M_begin(), *this);
 527:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_before_begin._M_nxt = nullptr;
 528:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	clear();
 529:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	this->_M_insert_range(__l.begin(), __l.end(), __roan, __unique_keys());
 530:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return *this;
 531:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
 532:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 533:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       ~_Hashtable() noexcept;
 534:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 535:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       void
 536:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       swap(_Hashtable&)
 537:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       noexcept(__and_<__is_nothrow_swappable<_H1>,
 538:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	                  __is_nothrow_swappable<_Equal>>::value);
 539:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 540:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Basic container operations
 541:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       iterator
 542:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       begin() noexcept
 543:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return iterator(_M_begin()); }
 544:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 545:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       const_iterator
 546:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       begin() const noexcept
 547:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return const_iterator(_M_begin()); }
 548:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 549:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       iterator
 550:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       end() noexcept
 551:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return iterator(nullptr); }
 552:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 553:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       const_iterator
 554:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       end() const noexcept
 555:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return const_iterator(nullptr); }
 556:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 557:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       const_iterator
 558:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       cbegin() const noexcept
 559:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return const_iterator(_M_begin()); }
 560:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 561:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       const_iterator
 562:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       cend() const noexcept
 563:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return const_iterator(nullptr); }
 564:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 29


 565:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       size_type
 566:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       size() const noexcept
 567:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return _M_element_count; }
 568:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 569:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _GLIBCXX_NODISCARD bool
 570:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       empty() const noexcept
 571:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return size() == 0; }
 572:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 573:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       allocator_type
 574:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       get_allocator() const noexcept
 575:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return allocator_type(this->_M_node_allocator()); }
 576:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 577:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       size_type
 578:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       max_size() const noexcept
 579:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __node_alloc_traits::max_size(this->_M_node_allocator()); }
 580:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 581:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Observers
 582:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       key_equal
 583:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       key_eq() const
 584:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return this->_M_eq(); }
 585:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 586:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // hash_function, if present, comes from _Hash_code_base.
 587:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 588:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Bucket operations
 589:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       size_type
 590:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       bucket_count() const noexcept
 591:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return _M_bucket_count; }
 592:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 593:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       size_type
 594:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       max_bucket_count() const noexcept
 595:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return max_size(); }
 596:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 597:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       size_type
 598:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       bucket_size(size_type __bkt) const
 599:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return std::distance(begin(__bkt), end(__bkt)); }
 600:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 601:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       size_type
 602:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       bucket(const key_type& __k) const
 603:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return _M_bucket_index(__k, this->_M_hash_code(__k)); }
 604:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 605:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       local_iterator
 606:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       begin(size_type __bkt)
 607:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 608:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return local_iterator(*this, _M_bucket_begin(__bkt),
 609:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			      __bkt, _M_bucket_count);
 610:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
 611:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 612:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       local_iterator
 613:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       end(size_type __bkt)
 614:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return local_iterator(*this, nullptr, __bkt, _M_bucket_count); }
 615:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 616:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       const_local_iterator
 617:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       begin(size_type __bkt) const
 618:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 619:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return const_local_iterator(*this, _M_bucket_begin(__bkt),
 620:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 				    __bkt, _M_bucket_count);
 621:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 30


 622:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 623:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       const_local_iterator
 624:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       end(size_type __bkt) const
 625:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return const_local_iterator(*this, nullptr, __bkt, _M_bucket_count); }
 626:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 627:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // DR 691.
 628:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       const_local_iterator
 629:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       cbegin(size_type __bkt) const
 630:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 631:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return const_local_iterator(*this, _M_bucket_begin(__bkt),
 632:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 				    __bkt, _M_bucket_count);
 633:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
 634:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 635:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       const_local_iterator
 636:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       cend(size_type __bkt) const
 637:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return const_local_iterator(*this, nullptr, __bkt, _M_bucket_count); }
 638:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 639:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       float
 640:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       load_factor() const noexcept
 641:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 642:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return static_cast<float>(size()) / static_cast<float>(bucket_count());
 643:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
 644:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 645:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // max_load_factor, if present, comes from _Rehash_base.
 646:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 647:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Generalization of max_load_factor.  Extension, not found in
 648:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // TR1.  Only useful if _RehashPolicy is something other than
 649:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // the default.
 650:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       const _RehashPolicy&
 651:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __rehash_policy() const
 652:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return _M_rehash_policy; }
 653:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 654:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       void
 655:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __rehash_policy(const _RehashPolicy& __pol)
 656:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { _M_rehash_policy = __pol; }
 657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 658:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Lookup.
 659:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       iterator
 660:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       find(const key_type& __k);
 661:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 662:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       const_iterator
 663:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       find(const key_type& __k) const;
 664:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 665:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       size_type
 666:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       count(const key_type& __k) const;
 667:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 668:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::pair<iterator, iterator>
 669:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       equal_range(const key_type& __k);
 670:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 671:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::pair<const_iterator, const_iterator>
 672:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       equal_range(const key_type& __k) const;
 673:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 674:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     protected:
 675:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Bucket index computation helpers.
 676:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       size_type
 677:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_bucket_index(__node_type* __n) const noexcept
 678:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __hash_code_base::_M_bucket_index(__n, _M_bucket_count); }
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 31


 679:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 680:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       size_type
 681:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_bucket_index(const key_type& __k, __hash_code __c) const
 682:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __hash_code_base::_M_bucket_index(__k, __c, _M_bucket_count); }
 683:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 684:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Find and insert helper functions and types
 685:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Find the node before the one matching the criteria.
 686:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_base*
 687:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_find_before_node(size_type, const key_type&, __hash_code) const;
 688:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 689:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_type*
 690:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_find_node(size_type __bkt, const key_type& __key,
 691:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		   __hash_code __c) const
 692:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 693:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__node_base* __before_n = _M_find_before_node(__bkt, __key, __c);
 694:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	if (__before_n)
 695:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return static_cast<__node_type*>(__before_n->_M_nxt);
 696:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return nullptr;
 697:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
 698:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 699:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Insert a node at the beginning of a bucket.
 700:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       void
 701:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_insert_bucket_begin(size_type, __node_type*);
 702:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 703:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Remove the bucket first node
 704:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       void
 705:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_remove_bucket_begin(size_type __bkt, __node_type* __next_n,
 706:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			     size_type __next_bkt);
 707:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 708:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Get the node before __n in the bucket __bkt
 709:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_base*
 710:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_get_previous_node(size_type __bkt, __node_base* __n);
 711:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 712:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Insert node __n with key __k and hash code __code, in bucket __bkt
 713:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // if no rehash (assumes no element with same key already present).
 714:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Takes ownership of __n if insertion succeeds, throws otherwise.
 715:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       iterator
 716:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_insert_unique_node(const key_type& __k, size_type __bkt,
 717:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			    __hash_code __code, __node_type* __n,
 718:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			    size_type __n_elt = 1);
 719:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 720:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Insert node __n with key __k and hash code __code.
 721:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Takes ownership of __n if insertion succeeds, throws otherwise.
 722:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       iterator
 723:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_insert_multi_node(__node_type* __hint, const key_type& __k,
 724:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			   __hash_code __code, __node_type* __n);
 725:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 726:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename... _Args>
 727:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	std::pair<iterator, bool>
 728:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_emplace(true_type, _Args&&... __args);
 729:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 730:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename... _Args>
 731:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	iterator
 732:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_emplace(false_type __uk, _Args&&... __args)
 733:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{ return _M_emplace(cend(), __uk, std::forward<_Args>(__args)...); }
 734:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 735:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Emplace with hint, useless when keys are unique.
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 32


 736:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename... _Args>
 737:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	iterator
 738:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_emplace(const_iterator, true_type __uk, _Args&&... __args)
 739:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{ return _M_emplace(__uk, std::forward<_Args>(__args)...).first; }
 740:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 741:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename... _Args>
 742:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	iterator
 743:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_emplace(const_iterator, false_type, _Args&&... __args);
 744:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 745:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename _Arg, typename _NodeGenerator>
 746:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	std::pair<iterator, bool>
 747:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_insert(_Arg&&, const _NodeGenerator&, true_type, size_type = 1);
 748:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 749:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename _Arg, typename _NodeGenerator>
 750:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	iterator
 751:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_insert(_Arg&& __arg, const _NodeGenerator& __node_gen,
 752:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		  false_type __uk)
 753:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
 754:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return _M_insert(cend(), std::forward<_Arg>(__arg), __node_gen,
 755:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			   __uk);
 756:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
 757:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 758:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Insert with hint, not used when keys are unique.
 759:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename _Arg, typename _NodeGenerator>
 760:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	iterator
 761:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_insert(const_iterator, _Arg&& __arg,
 762:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		  const _NodeGenerator& __node_gen, true_type __uk)
 763:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
 764:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return
 765:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_insert(std::forward<_Arg>(__arg), __node_gen, __uk).first;
 766:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
 767:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 768:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Insert with hint when keys are not unique.
 769:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename _Arg, typename _NodeGenerator>
 770:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	iterator
 771:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_insert(const_iterator, _Arg&&,
 772:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		  const _NodeGenerator&, false_type);
 773:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 774:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       size_type
 775:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_erase(true_type, const key_type&);
 776:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 777:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       size_type
 778:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_erase(false_type, const key_type&);
 779:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 780:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       iterator
 781:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_erase(size_type __bkt, __node_base* __prev_n, __node_type* __n);
 782:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 783:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     public:
 784:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Emplace
 785:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename... _Args>
 786:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__ireturn_type
 787:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	emplace(_Args&&... __args)
 788:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{ return _M_emplace(__unique_keys(), std::forward<_Args>(__args)...); }
 789:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 790:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename... _Args>
 791:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	iterator
 792:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	emplace_hint(const_iterator __hint, _Args&&... __args)
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 33


 793:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
 794:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return _M_emplace(__hint, __unique_keys(),
 795:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			    std::forward<_Args>(__args)...);
 796:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
 797:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 798:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Insert member functions via inheritance.
 799:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 800:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Erase
 801:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       iterator
 802:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       erase(const_iterator);
 803:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 804:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // LWG 2059.
 805:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       iterator
 806:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       erase(iterator __it)
 807:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return erase(const_iterator(__it)); }
 808:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 809:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       size_type
 810:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       erase(const key_type& __k)
 811:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return _M_erase(__unique_keys(), __k); }
 812:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 813:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       iterator
 814:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       erase(const_iterator, const_iterator);
 815:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 816:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       void
 817:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       clear() noexcept;
 818:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 819:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Set number of buckets keeping it appropriate for container's number
 820:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // of elements.
 821:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       void rehash(size_type __bkt_count);
 822:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 823:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // DR 1189.
 824:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // reserve, if present, comes from _Rehash_base.
 825:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 826:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** #if __cplusplus > 201402L
 827:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       /// Re-insert an extracted node into a container with unique keys.
 828:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       insert_return_type
 829:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_reinsert_node(node_type&& __nh)
 830:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 831:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	insert_return_type __ret;
 832:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	if (__nh.empty())
 833:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __ret.position = end();
 834:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	else
 835:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  {
 836:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    __glibcxx_assert(get_allocator() == __nh.get_allocator());
 837:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 838:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    const key_type& __k = __nh._M_key();
 839:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    __hash_code __code = this->_M_hash_code(__k);
 840:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    size_type __bkt = _M_bucket_index(__k, __code);
 841:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    if (__node_type* __n = _M_find_node(__bkt, __k, __code))
 842:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      {
 843:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		__ret.node = std::move(__nh);
 844:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		__ret.position = iterator(__n);
 845:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		__ret.inserted = false;
 846:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      }
 847:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    else
 848:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      {
 849:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		__ret.position
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 34


 850:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		  = _M_insert_unique_node(__k, __bkt, __code, __nh._M_ptr);
 851:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		__nh._M_ptr = nullptr;
 852:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		__ret.inserted = true;
 853:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      }
 854:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  }
 855:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return __ret;
 856:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
 857:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 858:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       /// Re-insert an extracted node into a container with equivalent keys.
 859:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       iterator
 860:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_reinsert_node_multi(const_iterator __hint, node_type&& __nh)
 861:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 862:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	if (__nh.empty())
 863:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return end();
 864:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 865:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__glibcxx_assert(get_allocator() == __nh.get_allocator());
 866:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 867:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	const key_type& __k = __nh._M_key();
 868:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	auto __code = this->_M_hash_code(__k);
 869:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	auto __ret
 870:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  = _M_insert_multi_node(__hint._M_cur, __k, __code, __nh._M_ptr);
 871:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__nh._M_ptr = nullptr;
 872:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return __ret;
 873:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
 874:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 875:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     private:
 876:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       node_type
 877:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_extract_node(size_t __bkt, __node_base* __prev_n)
 878:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 879:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__node_type* __n = static_cast<__node_type*>(__prev_n->_M_nxt);
 880:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	if (__prev_n == _M_buckets[__bkt])
 881:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_remove_bucket_begin(__bkt, __n->_M_next(),
 882:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	     __n->_M_nxt ? _M_bucket_index(__n->_M_next()) : 0);
 883:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	else if (__n->_M_nxt)
 884:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  {
 885:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    size_type __next_bkt = _M_bucket_index(__n->_M_next());
 886:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    if (__next_bkt != __bkt)
 887:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      _M_buckets[__next_bkt] = __prev_n;
 888:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  }
 889:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 890:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__prev_n->_M_nxt = __n->_M_nxt;
 891:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__n->_M_nxt = nullptr;
 892:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	--_M_element_count;
 893:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return { __n, this->_M_node_allocator() };
 894:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
 895:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 896:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     public:
 897:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Extract a node.
 898:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       node_type
 899:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       extract(const_iterator __pos)
 900:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 901:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	size_t __bkt = _M_bucket_index(__pos._M_cur);
 902:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return _M_extract_node(__bkt,
 903:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			       _M_get_previous_node(__bkt, __pos._M_cur));
 904:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
 905:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 906:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       /// Extract a node.
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 35


 907:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       node_type
 908:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       extract(const _Key& __k)
 909:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 910:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	node_type __nh;
 911:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__hash_code __code = this->_M_hash_code(__k);
 912:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	std::size_t __bkt = _M_bucket_index(__k, __code);
 913:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	if (__node_base* __prev_node = _M_find_before_node(__bkt, __k, __code))
 914:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __nh = _M_extract_node(__bkt, __prev_node);
 915:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return __nh;
 916:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
 917:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 918:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       /// Merge from a compatible container into one with unique keys.
 919:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename _Compatible_Hashtable>
 920:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	void
 921:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_merge_unique(_Compatible_Hashtable& __src) noexcept
 922:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
 923:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  static_assert(is_same_v<typename _Compatible_Hashtable::node_type,
 924:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      node_type>, "Node types are compatible");
 925:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __glibcxx_assert(get_allocator() == __src.get_allocator());
 926:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 927:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  auto __n_elt = __src.size();
 928:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  for (auto __i = __src.begin(), __end = __src.end(); __i != __end;)
 929:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    {
 930:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      auto __pos = __i++;
 931:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      const key_type& __k = this->_M_extract()(*__pos);
 932:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      __hash_code __code = this->_M_hash_code(__k);
 933:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      size_type __bkt = _M_bucket_index(__k, __code);
 934:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      if (_M_find_node(__bkt, __k, __code) == nullptr)
 935:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		{
 936:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		  auto __nh = __src.extract(__pos);
 937:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		  _M_insert_unique_node(__k, __bkt, __code, __nh._M_ptr,
 938:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 					__n_elt);
 939:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		  __nh._M_ptr = nullptr;
 940:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		  __n_elt = 1;
 941:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		}
 942:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      else if (__n_elt != 1)
 943:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		--__n_elt;
 944:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    }
 945:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
 946:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 947:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       /// Merge from a compatible container into one with equivalent keys.
 948:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename _Compatible_Hashtable>
 949:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	void
 950:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_merge_multi(_Compatible_Hashtable& __src) noexcept
 951:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
 952:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  static_assert(is_same_v<typename _Compatible_Hashtable::node_type,
 953:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      node_type>, "Node types are compatible");
 954:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __glibcxx_assert(get_allocator() == __src.get_allocator());
 955:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 956:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  this->reserve(size() + __src.size());
 957:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  for (auto __i = __src.begin(), __end = __src.end(); __i != __end;)
 958:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_reinsert_node_multi(cend(), __src.extract(__i++));
 959:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
 960:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** #endif // C++17
 961:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 962:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     private:
 963:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Helper rehash method used when keys are unique.
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 36


 964:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       void _M_rehash_aux(size_type __bkt_count, true_type);
 965:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 966:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Helper rehash method used when keys can be non-unique.
 967:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       void _M_rehash_aux(size_type __bkt_count, false_type);
 968:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 969:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Unconditionally change size of bucket array to n, restore
 970:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // hash policy state to __state on exception.
 971:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       void _M_rehash(size_type __bkt_count, const __rehash_state& __state);
 972:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     };
 973:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 974:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 975:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   // Definitions of class template _Hashtable's out-of-line member functions.
 976:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
 977:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
 978:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
 979:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
 980:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     auto
 981:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
 982:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 983:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _M_bucket_begin(size_type __bkt) const
 984:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     -> __node_type*
 985:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
 986:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_base* __n = _M_buckets[__bkt];
 987:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return __n ? static_cast<__node_type*>(__n->_M_nxt) : nullptr;
 988:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
 989:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 990:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
 991:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
 992:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
 993:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
 994:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
 995:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 996:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable(size_type __bkt_count_hint,
 997:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       const _H1& __h1, const _H2& __h2, const _Hash& __h,
 998:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       const _Equal& __eq, const _ExtractKey& __exk,
 999:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       const allocator_type& __a)
1000:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     : _Hashtable(__h1, __h2, __h, __eq, __exk, __a)
1001:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1002:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       auto __bkt_count = _M_rehash_policy._M_next_bkt(__bkt_count_hint);
1003:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (__bkt_count > _M_bucket_count)
1004:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1005:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_buckets = _M_allocate_buckets(__bkt_count);
1006:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_bucket_count = __bkt_count;
1007:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1008:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1009:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1010:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1011:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1012:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1013:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1014:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     template<typename _InputIterator>
1015:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1016:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1017:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(_InputIterator __f, _InputIterator __l,
1018:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 size_type __bkt_count_hint,
1019:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 const _H1& __h1, const _H2& __h2, const _Hash& __h,
1020:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 const _Equal& __eq, const _ExtractKey& __exk,
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 37


1021:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 const allocator_type& __a)
1022:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       : _Hashtable(__h1, __h2, __h, __eq, __exk, __a)
1023:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
1024:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	auto __nb_elems = __detail::__distance_fw(__f, __l);
1025:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	auto __bkt_count =
1026:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_rehash_policy._M_next_bkt(
1027:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    std::max(_M_rehash_policy._M_bkt_for_elements(__nb_elems),
1028:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		     __bkt_count_hint));
1029:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1030:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	if (__bkt_count > _M_bucket_count)
1031:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  {
1032:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_buckets = _M_allocate_buckets(__bkt_count);
1033:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_bucket_count = __bkt_count;
1034:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  }
1035:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1036:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	for (; __f != __l; ++__f)
1037:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  this->insert(*__f);
1038:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
1039:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1040:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1041:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1042:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1043:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1044:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     auto
1045:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1046:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1047:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     operator=(const _Hashtable& __ht)
1048:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     -> _Hashtable&
1049:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1050:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (&__ht == this)
1051:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return *this;
1052:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1053:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (__node_alloc_traits::_S_propagate_on_copy_assign())
1054:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1055:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  auto& __this_alloc = this->_M_node_allocator();
1056:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  auto& __that_alloc = __ht._M_node_allocator();
1057:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (!__node_alloc_traits::_S_always_equal()
1058:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      && __this_alloc != __that_alloc)
1059:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    {
1060:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      // Replacement allocator cannot free existing storage.
1061:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      this->_M_deallocate_nodes(_M_begin());
1062:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      _M_before_begin._M_nxt = nullptr;
1063:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      _M_deallocate_buckets();
1064:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      _M_buckets = nullptr;
1065:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      std::__alloc_on_copy(__this_alloc, __that_alloc);
1066:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      __hashtable_base::operator=(__ht);
1067:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      _M_bucket_count = __ht._M_bucket_count;
1068:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      _M_element_count = __ht._M_element_count;
1069:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      _M_rehash_policy = __ht._M_rehash_policy;
1070:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      __alloc_node_gen_t __alloc_node_gen(*this);
1071:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      __try
1072:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		{
1073:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		  _M_assign(__ht, __alloc_node_gen);
1074:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		}
1075:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      __catch(...)
1076:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		{
1077:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		  // _M_assign took care of deallocating all memory. Now we
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 38


1078:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		  // must make sure this instance remains in a usable state.
1079:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		  _M_reset();
1080:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		  __throw_exception_again;
1081:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		}
1082:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      return *this;
1083:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    }
1084:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  std::__alloc_on_copy(__this_alloc, __that_alloc);
1085:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1086:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1087:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Reuse allocated buckets and nodes.
1088:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_assign_elements(__ht);
1089:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return *this;
1090:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1091:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1092:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1093:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1094:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1095:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1096:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     template<typename _Ht>
1097:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       void
1098:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1099:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1100:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_assign_elements(_Ht&& __ht)
1101:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
1102:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__bucket_type* __former_buckets = nullptr;
1103:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	std::size_t __former_bucket_count = _M_bucket_count;
1104:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	const __rehash_state& __former_state = _M_rehash_policy._M_state();
1105:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1106:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	if (_M_bucket_count != __ht._M_bucket_count)
1107:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  {
1108:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    __former_buckets = _M_buckets;
1109:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_buckets = _M_allocate_buckets(__ht._M_bucket_count);
1110:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_bucket_count = __ht._M_bucket_count;
1111:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  }
1112:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	else
1113:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __builtin_memset(_M_buckets, 0,
1114:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			   _M_bucket_count * sizeof(__bucket_type));
1115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1116:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__try
1117:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  {
1118:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    __hashtable_base::operator=(std::forward<_Ht>(__ht));
1119:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_element_count = __ht._M_element_count;
1120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_rehash_policy = __ht._M_rehash_policy;
1121:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    __reuse_or_alloc_node_gen_t __roan(_M_begin(), *this);
1122:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_before_begin._M_nxt = nullptr;
1123:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_assign(std::forward<_Ht>(__ht), __roan);
1124:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    if (__former_buckets)
1125:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      _M_deallocate_buckets(__former_buckets, __former_bucket_count);
1126:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  }
1127:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__catch(...)
1128:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  {
1129:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    if (__former_buckets)
1130:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      {
1131:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		// Restore previous buckets.
1132:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		_M_deallocate_buckets();
1133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		_M_rehash_policy._M_reset(__former_state);
1134:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		_M_buckets = __former_buckets;
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 39


1135:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		_M_bucket_count = __former_bucket_count;
1136:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      }
1137:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    __builtin_memset(_M_buckets, 0,
1138:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			     _M_bucket_count * sizeof(__bucket_type));
1139:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    __throw_exception_again;
1140:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  }
1141:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
1142:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1143:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1145:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1146:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     template<typename _Ht, typename _NodeGenerator>
1148:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       void
1149:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1151:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_assign(_Ht&& __ht, const _NodeGenerator& __node_gen)
1152:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
1153:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__bucket_type* __buckets = nullptr;
1154:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	if (!_M_buckets)
1155:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_buckets = __buckets = _M_allocate_buckets(_M_bucket_count);
1156:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1157:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__try
1158:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  {
1159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    if (!__ht._M_before_begin._M_nxt)
1160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      return;
1161:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1162:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    // First deal with the special first node pointed to by
1163:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    // _M_before_begin.
1164:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    __node_type* __ht_n = __ht._M_begin();
1165:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    __node_type* __this_n
1166:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      = __node_gen(__fwd_value_for<_Ht>(__ht_n->_M_v()));
1167:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    this->_M_copy_code(__this_n, __ht_n);
1168:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_before_begin._M_nxt = __this_n;
1169:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_buckets[_M_bucket_index(__this_n)] = &_M_before_begin;
1170:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1171:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    // Then deal with other nodes.
1172:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    __node_base* __prev_n = __this_n;
1173:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    for (__ht_n = __ht_n->_M_next(); __ht_n; __ht_n = __ht_n->_M_next())
1174:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      {
1175:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		__this_n = __node_gen(__fwd_value_for<_Ht>(__ht_n->_M_v()));
1176:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		__prev_n->_M_nxt = __this_n;
1177:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		this->_M_copy_code(__this_n, __ht_n);
1178:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		size_type __bkt = _M_bucket_index(__this_n);
1179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		if (!_M_buckets[__bkt])
1180:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		  _M_buckets[__bkt] = __prev_n;
1181:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		__prev_n = __this_n;
1182:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      }
1183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  }
1184:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__catch(...)
1185:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  {
1186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    clear();
1187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    if (__buckets)
1188:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      _M_deallocate_buckets();
1189:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    __throw_exception_again;
1190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  }
1191:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 40


1192:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1193:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1194:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1195:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1196:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1197:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     void
1198:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1199:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _M_reset() noexcept
1201:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1202:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_rehash_policy._M_reset();
1203:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_bucket_count = 1;
1204:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_single_bucket = nullptr;
1205:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_buckets = &_M_single_bucket;
1206:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_before_begin._M_nxt = nullptr;
1207:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_element_count = 0;
1208:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1209:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1210:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1212:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1213:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1214:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     void
1215:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1216:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1217:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _M_move_assign(_Hashtable&& __ht, true_type)
1218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1219:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       this->_M_deallocate_nodes(_M_begin());
1220:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_deallocate_buckets();
1221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __hashtable_base::operator=(std::move(__ht));
1222:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_rehash_policy = __ht._M_rehash_policy;
1223:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (!__ht._M_uses_single_bucket())
1224:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_buckets = __ht._M_buckets;
1225:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       else
1226:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1227:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_buckets = &_M_single_bucket;
1228:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_single_bucket = __ht._M_single_bucket;
1229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1230:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_bucket_count = __ht._M_bucket_count;
1231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_before_begin._M_nxt = __ht._M_before_begin._M_nxt;
1232:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_element_count = __ht._M_element_count;
1233:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::__alloc_on_move(this->_M_node_allocator(), __ht._M_node_allocator());
1234:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1235:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Fix buckets containing the _M_before_begin pointers that can't be
1236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // moved.
1237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (_M_begin())
1238:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_buckets[_M_bucket_index(_M_begin())] = &_M_before_begin;
1239:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __ht._M_reset();
1240:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1241:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1242:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1243:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1244:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1245:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1246:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     void
1247:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1248:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 41


1249:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _M_move_assign(_Hashtable&& __ht, false_type)
1250:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1251:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (__ht._M_node_allocator() == this->_M_node_allocator())
1252:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_move_assign(std::move(__ht), true_type());
1253:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       else
1254:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1255:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  // Can't move memory, move elements then.
1256:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_assign_elements(std::move(__ht));
1257:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __ht.clear();
1258:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1259:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1260:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1261:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1262:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1263:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1264:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1265:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1266:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1267:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable(const _Hashtable& __ht)
1268:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     : __hashtable_base(__ht),
1269:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __map_base(__ht),
1270:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __rehash_base(__ht),
1271:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __hashtable_alloc(
1272:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__node_alloc_traits::_S_select_on_copy(__ht._M_node_allocator())),
1273:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_buckets(nullptr),
1274:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_bucket_count(__ht._M_bucket_count),
1275:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_element_count(__ht._M_element_count),
1276:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_rehash_policy(__ht._M_rehash_policy)
1277:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1278:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __alloc_node_gen_t __alloc_node_gen(*this);
1279:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_assign(__ht, __alloc_node_gen);
1280:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1281:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1282:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1283:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1284:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1285:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1286:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1287:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1288:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable(_Hashtable&& __ht) noexcept
1289:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     : __hashtable_base(__ht),
1290:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __map_base(__ht),
1291:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __rehash_base(__ht),
1292:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __hashtable_alloc(std::move(__ht._M_base_alloc())),
1293:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_buckets(__ht._M_buckets),
1294:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_bucket_count(__ht._M_bucket_count),
1295:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_before_begin(__ht._M_before_begin._M_nxt),
1296:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_element_count(__ht._M_element_count),
1297:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_rehash_policy(__ht._M_rehash_policy)
1298:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1299:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Update, if necessary, buckets if __ht is using its single bucket.
1300:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (__ht._M_uses_single_bucket())
1301:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1302:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_buckets = &_M_single_bucket;
1303:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_single_bucket = __ht._M_single_bucket;
1304:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1305:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 42


1306:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Update, if necessary, bucket pointing to before begin that hasn't
1307:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // moved.
1308:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (_M_begin())
1309:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_buckets[_M_bucket_index(_M_begin())] = &_M_before_begin;
1310:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1311:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __ht._M_reset();
1312:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1313:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1314:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1315:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1316:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1317:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1318:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1319:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1320:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable(const _Hashtable& __ht, const allocator_type& __a)
1321:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     : __hashtable_base(__ht),
1322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __map_base(__ht),
1323:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __rehash_base(__ht),
1324:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __hashtable_alloc(__node_alloc_type(__a)),
1325:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_buckets(),
1326:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_bucket_count(__ht._M_bucket_count),
1327:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_element_count(__ht._M_element_count),
1328:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_rehash_policy(__ht._M_rehash_policy)
1329:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1330:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __alloc_node_gen_t __alloc_node_gen(*this);
1331:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_assign(__ht, __alloc_node_gen);
1332:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1333:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1334:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1335:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1336:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1337:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1338:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1339:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1340:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable(_Hashtable&& __ht, const allocator_type& __a)
1341:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     : __hashtable_base(__ht),
1342:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __map_base(__ht),
1343:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __rehash_base(__ht),
1344:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __hashtable_alloc(__node_alloc_type(__a)),
1345:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_buckets(nullptr),
1346:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_bucket_count(__ht._M_bucket_count),
1347:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_element_count(__ht._M_element_count),
1348:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_rehash_policy(__ht._M_rehash_policy)
1349:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1350:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (__ht._M_node_allocator() == this->_M_node_allocator())
1351:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1352:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (__ht._M_uses_single_bucket())
1353:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    {
1354:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      _M_buckets = &_M_single_bucket;
1355:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      _M_single_bucket = __ht._M_single_bucket;
1356:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    }
1357:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  else
1358:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_buckets = __ht._M_buckets;
1359:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1360:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_before_begin._M_nxt = __ht._M_before_begin._M_nxt;
1361:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  // Update, if necessary, bucket pointing to before begin that hasn't
1362:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  // moved.
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 43


1363:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (_M_begin())
1364:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_buckets[_M_bucket_index(_M_begin())] = &_M_before_begin;
1365:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __ht._M_reset();
1366:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1367:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       else
1368:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1369:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __alloc_node_gen_t __alloc_gen(*this);
1370:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1371:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  using _Fwd_Ht = typename
1372:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    conditional<__move_if_noexcept_cond<value_type>::value,
1373:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			const _Hashtable&, _Hashtable&&>::type;
1374:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_assign(std::forward<_Fwd_Ht>(__ht), __alloc_gen);
1375:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __ht.clear();
1376:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1377:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1378:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1379:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1380:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1381:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1382:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1383:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
 319              		.loc 12 1383 5 view .LVU39
 320              	.LBB2431:
 321              	.LBI2412:
1384:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1385:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     ~_Hashtable() noexcept
1386:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1387:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       clear();
1388:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_deallocate_buckets();
1389:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1390:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1391:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1392:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1393:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1394:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1395:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     void
1396:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1397:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1398:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     swap(_Hashtable& __x)
1399:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     noexcept(__and_<__is_nothrow_swappable<_H1>,
1400:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	                __is_nothrow_swappable<_Equal>>::value)
1401:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1402:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // The only base class with member variables is hash_code_base.
1403:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // We define _Hash_code_base::_M_swap because different
1404:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // specializations have different members.
1405:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       this->_M_swap(__x);
1406:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1407:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::__alloc_on_swap(this->_M_node_allocator(), __x._M_node_allocator());
1408:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::swap(_M_rehash_policy, __x._M_rehash_policy);
1409:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1410:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Deal properly with potentially moved instances.
1411:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (this->_M_uses_single_bucket())
1412:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1413:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (!__x._M_uses_single_bucket())
1414:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    {
1415:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      _M_buckets = __x._M_buckets;
1416:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      __x._M_buckets = &__x._M_single_bucket;
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 44


1417:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    }
1418:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1419:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       else if (__x._M_uses_single_bucket())
1420:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1421:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __x._M_buckets = _M_buckets;
1422:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_buckets = &_M_single_bucket;
1423:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}	
1424:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       else
1425:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	std::swap(_M_buckets, __x._M_buckets);
1426:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1427:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::swap(_M_bucket_count, __x._M_bucket_count);
1428:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::swap(_M_before_begin._M_nxt, __x._M_before_begin._M_nxt);
1429:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::swap(_M_element_count, __x._M_element_count);
1430:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::swap(_M_single_bucket, __x._M_single_bucket);
1431:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1432:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Fix buckets containing the _M_before_begin pointers that can't be
1433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // swapped.
1434:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (_M_begin())
1435:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_buckets[_M_bucket_index(_M_begin())] = &_M_before_begin;
1436:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1437:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (__x._M_begin())
1438:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__x._M_buckets[__x._M_bucket_index(__x._M_begin())]
1439:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  = &__x._M_before_begin;
1440:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1441:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1442:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1443:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1444:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1445:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1446:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     auto
1447:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1448:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1449:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     find(const key_type& __k)
1450:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     -> iterator
1451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1452:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __hash_code __code = this->_M_hash_code(__k);
1453:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::size_t __bkt = _M_bucket_index(__k, __code);
1454:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_type* __p = _M_find_node(__bkt, __k, __code);
1455:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return __p ? iterator(__p) : end();
1456:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1457:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1458:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1459:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1460:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1461:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1462:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     auto
1463:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1464:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1465:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     find(const key_type& __k) const
1466:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     -> const_iterator
1467:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1468:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __hash_code __code = this->_M_hash_code(__k);
1469:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::size_t __bkt = _M_bucket_index(__k, __code);
1470:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_type* __p = _M_find_node(__bkt, __k, __code);
1471:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return __p ? const_iterator(__p) : end();
1472:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1473:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 45


1474:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1475:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1476:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1477:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1478:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     auto
1479:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1480:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1481:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     count(const key_type& __k) const
1482:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     -> size_type
1483:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1484:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __hash_code __code = this->_M_hash_code(__k);
1485:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::size_t __bkt = _M_bucket_index(__k, __code);
1486:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_type* __p = _M_bucket_begin(__bkt);
1487:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (!__p)
1488:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return 0;
1489:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1490:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::size_t __result = 0;
1491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       for (;; __p = __p->_M_next())
1492:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1493:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (this->_M_equals(__k, __code, __p))
1494:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    ++__result;
1495:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  else if (__result)
1496:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    // All equivalent values are next to each other, if we
1497:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    // found a non-equivalent value after an equivalent one it
1498:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    // means that we won't find any new equivalent value.
1499:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    break;
1500:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (!__p->_M_nxt || _M_bucket_index(__p->_M_next()) != __bkt)
1501:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    break;
1502:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1503:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return __result;
1504:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1505:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1506:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1507:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1508:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1509:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1510:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     auto
1511:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1512:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1513:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     equal_range(const key_type& __k)
1514:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     -> pair<iterator, iterator>
1515:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1516:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __hash_code __code = this->_M_hash_code(__k);
1517:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::size_t __bkt = _M_bucket_index(__k, __code);
1518:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_type* __p = _M_find_node(__bkt, __k, __code);
1519:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1520:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (__p)
1521:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1522:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __node_type* __p1 = __p->_M_next();
1523:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  while (__p1 && _M_bucket_index(__p1) == __bkt
1524:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 && this->_M_equals(__k, __code, __p1))
1525:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    __p1 = __p1->_M_next();
1526:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1527:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return std::make_pair(iterator(__p), iterator(__p1));
1528:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1529:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       else
1530:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return std::make_pair(end(), end());
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 46


1531:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1532:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1533:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1534:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1535:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1536:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1537:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     auto
1538:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1539:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1540:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     equal_range(const key_type& __k) const
1541:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     -> pair<const_iterator, const_iterator>
1542:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1543:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __hash_code __code = this->_M_hash_code(__k);
1544:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::size_t __bkt = _M_bucket_index(__k, __code);
1545:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_type* __p = _M_find_node(__bkt, __k, __code);
1546:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1547:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (__p)
1548:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1549:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __node_type* __p1 = __p->_M_next();
1550:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  while (__p1 && _M_bucket_index(__p1) == __bkt
1551:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 && this->_M_equals(__k, __code, __p1))
1552:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    __p1 = __p1->_M_next();
1553:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1554:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return std::make_pair(const_iterator(__p), const_iterator(__p1));
1555:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1556:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       else
1557:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return std::make_pair(end(), end());
1558:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1559:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1560:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   // Find the node whose key compares equal to k in the bucket bkt.
1561:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   // Return nullptr if no node is found.
1562:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1563:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1564:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1565:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1566:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     auto
1567:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1568:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1569:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _M_find_before_node(size_type __bkt, const key_type& __k,
1570:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			__hash_code __code) const
1571:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     -> __node_base*
1572:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1573:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_base* __prev_p = _M_buckets[__bkt];
1574:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (!__prev_p)
1575:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return nullptr;
1576:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1577:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       for (__node_type* __p = static_cast<__node_type*>(__prev_p->_M_nxt);;
1578:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   __p = __p->_M_next())
1579:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1580:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (this->_M_equals(__k, __code, __p))
1581:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    return __prev_p;
1582:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1583:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (!__p->_M_nxt || _M_bucket_index(__p->_M_next()) != __bkt)
1584:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    break;
1585:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __prev_p = __p;
1586:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1587:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return nullptr;
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 47


1588:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1589:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1590:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1591:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1592:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1593:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1594:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     void
1595:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1596:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1597:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _M_insert_bucket_begin(size_type __bkt, __node_type* __node)
1598:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1599:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (_M_buckets[__bkt])
1600:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1601:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  // Bucket is not empty, we just need to insert the new node
1602:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  // after the bucket before begin.
1603:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __node->_M_nxt = _M_buckets[__bkt]->_M_nxt;
1604:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_buckets[__bkt]->_M_nxt = __node;
1605:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1606:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       else
1607:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1608:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  // The bucket is empty, the new node is inserted at the
1609:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  // beginning of the singly-linked list and the bucket will
1610:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  // contain _M_before_begin pointer.
1611:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __node->_M_nxt = _M_before_begin._M_nxt;
1612:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_before_begin._M_nxt = __node;
1613:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (__node->_M_nxt)
1614:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    // We must update former begin bucket that is pointing to
1615:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    // _M_before_begin.
1616:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_buckets[_M_bucket_index(__node->_M_next())] = __node;
1617:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_buckets[__bkt] = &_M_before_begin;
1618:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1619:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1620:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1621:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1622:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1623:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1624:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1625:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     void
1626:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1627:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1628:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _M_remove_bucket_begin(size_type __bkt, __node_type* __next,
1629:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			   size_type __next_bkt)
1630:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1631:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (!__next || __next_bkt != __bkt)
1632:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1633:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  // Bucket is now empty
1634:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  // First update next bucket if any
1635:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (__next)
1636:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_buckets[__next_bkt] = _M_buckets[__bkt];
1637:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1638:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  // Second update before begin node if necessary
1639:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (&_M_before_begin == _M_buckets[__bkt])
1640:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_before_begin._M_nxt = __next;
1641:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_buckets[__bkt] = nullptr;
1642:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1643:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1644:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 48


1645:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1646:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1647:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1648:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1649:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     auto
1650:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1651:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1652:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _M_get_previous_node(size_type __bkt, __node_base* __n)
1653:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     -> __node_base*
1654:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1655:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_base* __prev_n = _M_buckets[__bkt];
1656:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       while (__prev_n->_M_nxt != __n)
1657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__prev_n = __prev_n->_M_nxt;
1658:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return __prev_n;
1659:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1660:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1661:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1662:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1663:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1664:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1665:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     template<typename... _Args>
1666:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       auto
1667:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1668:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1669:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_emplace(true_type, _Args&&... __args)
1670:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       -> pair<iterator, bool>
1671:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
1672:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	// First build the node to get access to the hash code
1673:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_Scoped_node __node { this, std::forward<_Args>(__args)...  };
1674:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	const key_type& __k = this->_M_extract()(__node._M_node->_M_v());
1675:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__hash_code __code = this->_M_hash_code(__k);
1676:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	size_type __bkt = _M_bucket_index(__k, __code);
1677:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	if (__node_type* __p = _M_find_node(__bkt, __k, __code))
1678:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  // There is already an equivalent node, no insertion
1679:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return std::make_pair(iterator(__p), false);
1680:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1681:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	// Insert the node
1682:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	auto __pos = _M_insert_unique_node(__k, __bkt, __code, __node._M_node);
1683:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__node._M_node = nullptr;
1684:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return { __pos, true };
1685:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
1686:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1687:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1688:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1689:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1690:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1691:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     template<typename... _Args>
1692:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       auto
1693:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1694:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1695:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_emplace(const_iterator __hint, false_type, _Args&&... __args)
1696:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       -> iterator
1697:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
1698:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	// First build the node to get its hash code.
1699:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_Scoped_node __node { this, std::forward<_Args>(__args)...  };
1700:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	const key_type& __k = this->_M_extract()(__node._M_node->_M_v());
1701:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 49


1702:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__hash_code __code = this->_M_hash_code(__k);
1703:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	auto __pos
1704:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  = _M_insert_multi_node(__hint._M_cur, __k, __code, __node._M_node);
1705:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__node._M_node = nullptr;
1706:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return __pos;
1707:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
1708:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1709:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1710:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1711:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1712:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1713:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     auto
1714:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1715:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1716:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _M_insert_unique_node(const key_type& __k, size_type __bkt,
1717:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			  __hash_code __code, __node_type* __node,
1718:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			  size_type __n_elt)
1719:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     -> iterator
1720:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1721:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       const __rehash_state& __saved_state = _M_rehash_policy._M_state();
1722:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::pair<bool, std::size_t> __do_rehash
1723:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	= _M_rehash_policy._M_need_rehash(_M_bucket_count, _M_element_count,
1724:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 					  __n_elt);
1725:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1726:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (__do_rehash.first)
1727:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1728:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_rehash(__do_rehash.second, __saved_state);
1729:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __bkt = _M_bucket_index(__k, __code);
1730:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1731:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1732:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       this->_M_store_code(__node, __code);
1733:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1734:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Always insert at the beginning of the bucket.
1735:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_insert_bucket_begin(__bkt, __node);
1736:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       ++_M_element_count;
1737:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return iterator(__node);
1738:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1739:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1740:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1741:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1742:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1743:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1744:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     auto
1745:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1746:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1747:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _M_insert_multi_node(__node_type* __hint, const key_type& __k,
1748:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			 __hash_code __code, __node_type* __node)
1749:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     -> iterator
1750:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1751:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       const __rehash_state& __saved_state = _M_rehash_policy._M_state();
1752:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::pair<bool, std::size_t> __do_rehash
1753:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	= _M_rehash_policy._M_need_rehash(_M_bucket_count, _M_element_count, 1);
1754:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1755:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (__do_rehash.first)
1756:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_rehash(__do_rehash.second, __saved_state);
1757:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1758:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       this->_M_store_code(__node, __code);
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 50


1759:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       size_type __bkt = _M_bucket_index(__k, __code);
1760:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1761:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Find the node before an equivalent one or use hint if it exists and
1762:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // if it is equivalent.
1763:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_base* __prev
1764:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	= __builtin_expect(__hint != nullptr, false)
1765:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  && this->_M_equals(__k, __code, __hint)
1766:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    ? __hint
1767:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    : _M_find_before_node(__bkt, __k, __code);
1768:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (__prev)
1769:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1770:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  // Insert after the node before the equivalent one.
1771:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __node->_M_nxt = __prev->_M_nxt;
1772:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __prev->_M_nxt = __node;
1773:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (__builtin_expect(__prev == __hint, false))
1774:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    // hint might be the last bucket node, in this case we need to
1775:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    // update next bucket.
1776:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    if (__node->_M_nxt
1777:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		&& !this->_M_equals(__k, __code, __node->_M_next()))
1778:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      {
1779:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		size_type __next_bkt = _M_bucket_index(__node->_M_next());
1780:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		if (__next_bkt != __bkt)
1781:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		  _M_buckets[__next_bkt] = __node;
1782:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      }
1783:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1784:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       else
1785:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	// The inserted node has no equivalent in the hashtable. We must
1786:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	// insert the new node at the beginning of the bucket to preserve
1787:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	// equivalent elements' relative positions.
1788:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_insert_bucket_begin(__bkt, __node);
1789:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       ++_M_element_count;
1790:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return iterator(__node);
1791:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1792:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1793:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   // Insert v if no element with its key is already present.
1794:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1795:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1796:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1797:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1798:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     template<typename _Arg, typename _NodeGenerator>
1799:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       auto
1800:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1801:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1802:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_insert(_Arg&& __v, const _NodeGenerator& __node_gen, true_type,
1803:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		size_type __n_elt)
1804:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       -> pair<iterator, bool>
1805:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
1806:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	const key_type& __k = this->_M_extract()(__v);
1807:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__hash_code __code = this->_M_hash_code(__k);
1808:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	size_type __bkt = _M_bucket_index(__k, __code);
1809:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1810:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	if (__node_type* __node = _M_find_node(__bkt, __k, __code))
1811:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return { iterator(__node), false };
1812:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1813:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_Scoped_node __node{ __node_gen(std::forward<_Arg>(__v)), this };
1814:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	auto __pos
1815:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  = _M_insert_unique_node(__k, __bkt, __code, __node._M_node, __n_elt);
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 51


1816:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__node._M_node = nullptr;
1817:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return { __pos, true };
1818:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
1819:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1820:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   // Insert v unconditionally.
1821:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1822:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1823:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1824:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1825:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     template<typename _Arg, typename _NodeGenerator>
1826:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       auto
1827:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1828:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1829:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_insert(const_iterator __hint, _Arg&& __v,
1830:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		const _NodeGenerator& __node_gen, false_type)
1831:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       -> iterator
1832:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
1833:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	// First compute the hash code so that we don't do anything if it
1834:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	// throws.
1835:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__hash_code __code = this->_M_hash_code(this->_M_extract()(__v));
1836:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1837:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	// Second allocate new node so that we don't rehash if it throws.
1838:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_Scoped_node __node{ __node_gen(std::forward<_Arg>(__v)), this };
1839:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	const key_type& __k = this->_M_extract()(__node._M_node->_M_v());
1840:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	auto __pos
1841:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  = _M_insert_multi_node(__hint._M_cur, __k, __code, __node._M_node);
1842:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__node._M_node = nullptr;
1843:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return __pos;
1844:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
1845:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1846:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1847:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1848:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1849:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1850:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     auto
1851:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1852:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1853:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     erase(const_iterator __it)
1854:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     -> iterator
1855:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1856:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_type* __n = __it._M_cur;
1857:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::size_t __bkt = _M_bucket_index(__n);
1858:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1859:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Look for previous node to unlink it from the erased one, this
1860:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // is why we need buckets to contain the before begin to make
1861:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // this search fast.
1862:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_base* __prev_n = _M_get_previous_node(__bkt, __n);
1863:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return _M_erase(__bkt, __prev_n, __n);
1864:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1865:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1866:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1867:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1868:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1869:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1870:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     auto
1871:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1872:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 52


1873:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _M_erase(size_type __bkt, __node_base* __prev_n, __node_type* __n)
1874:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     -> iterator
1875:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1876:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (__prev_n == _M_buckets[__bkt])
1877:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_remove_bucket_begin(__bkt, __n->_M_next(),
1878:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   __n->_M_nxt ? _M_bucket_index(__n->_M_next()) : 0);
1879:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       else if (__n->_M_nxt)
1880:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1881:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  size_type __next_bkt = _M_bucket_index(__n->_M_next());
1882:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (__next_bkt != __bkt)
1883:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_buckets[__next_bkt] = __prev_n;
1884:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1885:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1886:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __prev_n->_M_nxt = __n->_M_nxt;
1887:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       iterator __result(__n->_M_next());
1888:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       this->_M_deallocate_node(__n);
1889:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       --_M_element_count;
1890:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1891:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return __result;
1892:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1893:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1894:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1895:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1896:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1897:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1898:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     auto
1899:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1900:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1901:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _M_erase(true_type, const key_type& __k)
1902:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     -> size_type
1903:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1904:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __hash_code __code = this->_M_hash_code(__k);
1905:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::size_t __bkt = _M_bucket_index(__k, __code);
1906:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1907:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Look for the node before the first matching node.
1908:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_base* __prev_n = _M_find_before_node(__bkt, __k, __code);
1909:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (!__prev_n)
1910:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return 0;
1911:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1912:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // We found a matching node, erase it.
1913:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_type* __n = static_cast<__node_type*>(__prev_n->_M_nxt);
1914:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_erase(__bkt, __prev_n, __n);
1915:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return 1;
1916:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1917:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1918:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1919:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1920:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1921:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1922:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     auto
1923:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1924:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1925:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _M_erase(false_type, const key_type& __k)
1926:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     -> size_type
1927:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1928:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __hash_code __code = this->_M_hash_code(__k);
1929:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::size_t __bkt = _M_bucket_index(__k, __code);
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 53


1930:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1931:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Look for the node before the first matching node.
1932:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_base* __prev_n = _M_find_before_node(__bkt, __k, __code);
1933:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (!__prev_n)
1934:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return 0;
1935:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1936:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1937:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // 526. Is it undefined if a function in the standard changes
1938:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // in parameters?
1939:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // We use one loop to find all matching nodes and another to deallocate
1940:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // them so that the key stays valid during the first loop. It might be
1941:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // invalidated indirectly when destroying nodes.
1942:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_type* __n = static_cast<__node_type*>(__prev_n->_M_nxt);
1943:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_type* __n_last = __n;
1944:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::size_t __n_last_bkt = __bkt;
1945:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       do
1946:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1947:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __n_last = __n_last->_M_next();
1948:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (!__n_last)
1949:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    break;
1950:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __n_last_bkt = _M_bucket_index(__n_last);
1951:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1952:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       while (__n_last_bkt == __bkt && this->_M_equals(__k, __code, __n_last));
1953:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1954:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Deallocate nodes.
1955:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       size_type __result = 0;
1956:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       do
1957:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1958:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __node_type* __p = __n->_M_next();
1959:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  this->_M_deallocate_node(__n);
1960:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __n = __p;
1961:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  ++__result;
1962:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  --_M_element_count;
1963:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1964:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       while (__n != __n_last);
1965:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1966:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (__prev_n == _M_buckets[__bkt])
1967:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_remove_bucket_begin(__bkt, __n_last, __n_last_bkt);
1968:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       else if (__n_last && __n_last_bkt != __bkt)
1969:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_buckets[__n_last_bkt] = __prev_n;
1970:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __prev_n->_M_nxt = __n_last;
1971:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return __result;
1972:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1973:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1974:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1975:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1976:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1977:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1978:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     auto
1979:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1980:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1981:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     erase(const_iterator __first, const_iterator __last)
1982:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     -> iterator
1983:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1984:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_type* __n = __first._M_cur;
1985:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_type* __last_n = __last._M_cur;
1986:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (__n == __last_n)
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 54


1987:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return iterator(__n);
1988:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1989:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::size_t __bkt = _M_bucket_index(__n);
1990:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1991:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_base* __prev_n = _M_get_previous_node(__bkt, __n);
1992:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       bool __is_bucket_begin = __n == _M_bucket_begin(__bkt);
1993:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::size_t __n_bkt = __bkt;
1994:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       for (;;)
1995:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1996:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  do
1997:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    {
1998:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      __node_type* __tmp = __n;
1999:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      __n = __n->_M_next();
2000:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      this->_M_deallocate_node(__tmp);
2001:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      --_M_element_count;
2002:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      if (!__n)
2003:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		break;
2004:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      __n_bkt = _M_bucket_index(__n);
2005:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    }
2006:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  while (__n != __last_n && __n_bkt == __bkt);
2007:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (__is_bucket_begin)
2008:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_remove_bucket_begin(__bkt, __n, __n_bkt);
2009:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (__n == __last_n)
2010:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    break;
2011:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __is_bucket_begin = true;
2012:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __bkt = __n_bkt;
2013:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
2014:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
2015:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (__n && (__n_bkt != __bkt || __is_bucket_begin))
2016:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_buckets[__n_bkt] = __prev_n;
2017:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __prev_n->_M_nxt = __n;
2018:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return iterator(__n);
2019:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
2020:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
2021:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
2022:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
2023:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
2024:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
2025:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     void
2026:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
 322              		.loc 12 2026 5 view .LVU40
 323              	.LBB2428:
 324              	.LBB2416:
 325              	.LBI2414:
 420:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return static_cast<__node_type*>(_M_before_begin._M_nxt); }
 326              		.loc 12 420 7 view .LVU41
 420:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return static_cast<__node_type*>(_M_before_begin._M_nxt); }
 327              		.loc 12 420 7 is_stmt 0 view .LVU42
 328              	.LBE2416:
 329              	.LBB2417:
 330              	.LBI2417:
 331              		.file 14 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
   1:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // Internal policy header for unordered_set and unordered_map -*- C++ -*-
   2:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
   3:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // Copyright (C) 2010-2020 Free Software Foundation, Inc.
   4:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** //
   5:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // This file is part of the GNU ISO C++ Library.  This library is free
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 55


   6:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // software; you can redistribute it and/or modify it under the
   7:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // terms of the GNU General Public License as published by the
   8:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // any later version.
  10:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
  11:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // This library is distributed in the hope that it will be useful,
  12:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // GNU General Public License for more details.
  15:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
  16:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
  20:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // You should have received a copy of the GNU General Public License and
  21:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // <http://www.gnu.org/licenses/>.
  24:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
  25:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** /** @file bits/hashtable_policy.h
  26:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****  *  This is an internal header file, included by other library headers.
  27:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****  *  Do not attempt to use it directly.
  28:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****  *  @headername{unordered_map,unordered_set}
  29:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****  */
  30:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
  31:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** #ifndef _HASHTABLE_POLICY_H
  32:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** #define _HASHTABLE_POLICY_H 1
  33:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
  34:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** #include <tuple>		// for std::tuple, std::forward_as_tuple
  35:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** #include <limits>		// for std::numeric_limits
  36:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** #include <bits/stl_algobase.h>	// for std::min, std::is_permutation.
  37:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
  38:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** namespace std _GLIBCXX_VISIBILITY(default)
  39:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** {
  40:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  41:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
  42:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _Alloc,
  43:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
  44:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
  45:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
  46:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     class _Hashtable;
  47:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
  48:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** namespace __detail
  49:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** {
  50:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /**
  51:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  @defgroup hashtable-detail Base and Implementation Classes
  52:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  @ingroup unordered_associative_containers
  53:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  @{
  54:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    */
  55:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value,
  56:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
  57:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash, typename _Traits>
  58:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hashtable_base;
  59:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
  60:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // Helper function: return distance(first, last) for forward
  61:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // iterators, or 0/1 for input iterators.
  62:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<class _Iterator>
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 56


  63:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     inline typename std::iterator_traits<_Iterator>::difference_type
  64:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     __distance_fw(_Iterator __first, _Iterator __last,
  65:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		  std::input_iterator_tag)
  66:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { return __first != __last ? 1 : 0; }
  67:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
  68:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<class _Iterator>
  69:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     inline typename std::iterator_traits<_Iterator>::difference_type
  70:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     __distance_fw(_Iterator __first, _Iterator __last,
  71:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		  std::forward_iterator_tag)
  72:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { return std::distance(__first, __last); }
  73:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
  74:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<class _Iterator>
  75:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     inline typename std::iterator_traits<_Iterator>::difference_type
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     __distance_fw(_Iterator __first, _Iterator __last)
  77:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { return __distance_fw(__first, __last,
  78:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			   std::__iterator_category(__first)); }
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
  80:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   struct _Identity
  81:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   {
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     template<typename _Tp>
  83:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Tp&&
  84:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator()(_Tp&& __x) const
  85:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return std::forward<_Tp>(__x); }
  86:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
  87:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
  88:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   struct _Select1st
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   {
  90:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     template<typename _Tp>
  91:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       auto
  92:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator()(_Tp&& __x) const
  93:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       -> decltype(std::get<0>(std::forward<_Tp>(__x)))
  94:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return std::get<0>(std::forward<_Tp>(__x)); }
  95:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
  96:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
  97:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _NodeAlloc>
  98:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hashtable_alloc;
  99:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 100:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // Functor recycling a pool of nodes and using allocation once the pool is
 101:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // empty.
 102:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _NodeAlloc>
 103:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _ReuseOrAllocNode
 104:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 105:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     private:
 106:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_alloc_type = _NodeAlloc;
 107:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hashtable_alloc = _Hashtable_alloc<__node_alloc_type>;
 108:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_alloc_traits =
 109:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	typename __hashtable_alloc::__node_alloc_traits;
 110:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_type = typename __hashtable_alloc::__node_type;
 111:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 112:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     public:
 113:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _ReuseOrAllocNode(__node_type* __nodes, __hashtable_alloc& __h)
 114:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : _M_nodes(__nodes), _M_h(__h) { }
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _ReuseOrAllocNode(const _ReuseOrAllocNode&) = delete;
 116:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 117:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       ~_ReuseOrAllocNode()
 118:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { _M_h._M_deallocate_nodes(_M_nodes); }
 119:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 57


 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       template<typename _Arg>
 121:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__node_type*
 122:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	operator()(_Arg&& __arg) const
 123:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	{
 124:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  if (_M_nodes)
 125:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    {
 126:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      __node_type* __node = _M_nodes;
 127:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      _M_nodes = _M_nodes->_M_next();
 128:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      __node->_M_nxt = nullptr;
 129:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      auto& __a = _M_h._M_node_allocator();
 130:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      __node_alloc_traits::destroy(__a, __node->_M_valptr());
 131:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      __try
 132:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		{
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		  __node_alloc_traits::construct(__a, __node->_M_valptr(),
 134:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						 std::forward<_Arg>(__arg));
 135:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		}
 136:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      __catch(...)
 137:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		{
 138:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		  _M_h._M_deallocate_node_ptr(__node);
 139:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		  __throw_exception_again;
 140:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		}
 141:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      return __node;
 142:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    }
 143:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  return _M_h._M_allocate_node(std::forward<_Arg>(__arg));
 144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	}
 145:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 146:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     private:
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       mutable __node_type* _M_nodes;
 148:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __hashtable_alloc& _M_h;
 149:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 151:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // Functor similar to the previous one but without any pool of nodes to
 152:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // recycle.
 153:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _NodeAlloc>
 154:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _AllocNode
 155:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 156:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     private:
 157:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hashtable_alloc = _Hashtable_alloc<_NodeAlloc>;
 158:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_type = typename __hashtable_alloc::__node_type;
 159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     public:
 161:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _AllocNode(__hashtable_alloc& __h)
 162:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : _M_h(__h) { }
 163:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 164:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       template<typename _Arg>
 165:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__node_type*
 166:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	operator()(_Arg&& __arg) const
 167:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	{ return _M_h._M_allocate_node(std::forward<_Arg>(__arg)); }
 168:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 169:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     private:
 170:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __hashtable_alloc& _M_h;
 171:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 172:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 173:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // Auxiliary types used for all instantiations of _Hashtable nodes
 174:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // and iterators.
 175:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 176:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /**
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 58


 177:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  struct _Hashtable_traits
 178:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
 179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Important traits for hash tables.
 180:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
 181:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  @tparam _Cache_hash_code  Boolean value. True if the value of
 182:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  the hash function is stored along with the value. This is a
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  time-space tradeoff.  Storing it may improve lookup speed by
 184:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  reducing the number of times we need to call the _Hash or _Equal
 185:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  functors.
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  @tparam _Constant_iterators  Boolean value. True if iterator and
 188:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  const_iterator are both constant iterator types. This is true
 189:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  for unordered_set and unordered_multiset, false for
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  unordered_map and unordered_multimap.
 191:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
 192:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  @tparam _Unique_keys  Boolean value. True if the return value
 193:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  of _Hashtable::count(k) is always at most one, false if it may
 194:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  be an arbitrary number. This is true for unordered_set and
 195:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  unordered_map, false for unordered_multiset and
 196:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  unordered_multimap.
 197:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    */
 198:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<bool _Cache_hash_code, bool _Constant_iterators, bool _Unique_keys>
 199:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hashtable_traits
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 201:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hash_cached = __bool_constant<_Cache_hash_code>;
 202:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __constant_iterators = __bool_constant<_Constant_iterators>;
 203:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __unique_keys = __bool_constant<_Unique_keys>;
 204:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 205:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 206:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /**
 207:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  struct _Hash_node_base
 208:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
 209:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Nodes, used to wrap elements stored in the hash table.  A policy
 210:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  template parameter of class template _Hashtable controls whether
 211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  nodes also store a hash code. In some cases (e.g. strings) this
 212:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  may be a performance win.
 213:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    */
 214:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   struct _Hash_node_base
 215:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   {
 216:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Hash_node_base* _M_nxt;
 217:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Hash_node_base() noexcept : _M_nxt() { }
 219:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 220:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Hash_node_base(_Hash_node_base* __next) noexcept : _M_nxt(__next) { }
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 222:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 223:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /**
 224:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  struct _Hash_node_value_base
 225:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
 226:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Node type with the value to store.
 227:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    */
 228:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Value>
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hash_node_value_base : _Hash_node_base
 230:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef _Value value_type;
 232:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 233:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __gnu_cxx::__aligned_buffer<_Value> _M_storage;
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 59


 234:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 235:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Value*
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_valptr() noexcept
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return _M_storage._M_ptr(); }
 238:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 239:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const _Value*
 240:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_valptr() const noexcept
 241:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return _M_storage._M_ptr(); }
 242:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 243:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Value&
 244:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_v() noexcept
 245:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return *_M_valptr(); }
 246:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 247:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const _Value&
 248:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_v() const noexcept
 249:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return *_M_valptr(); }
 250:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 251:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 252:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /**
 253:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Primary template struct _Hash_node.
 254:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    */
 255:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Value, bool _Cache_hash_code>
 256:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hash_node;
 257:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 258:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /**
 259:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Specialization for nodes with caches, struct _Hash_node.
 260:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
 261:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Base class is __detail::_Hash_node_value_base.
 262:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    */
 263:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Value>
 264:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hash_node<_Value, true> : _Hash_node_value_base<_Value>
 265:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 266:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t  _M_hash_code;
 267:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 268:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Hash_node*
 269:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_next() const noexcept
 270:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return static_cast<_Hash_node*>(this->_M_nxt); }
 271:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 272:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 273:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /**
 274:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Specialization for nodes without caches, struct _Hash_node.
 275:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
 276:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Base class is __detail::_Hash_node_value_base.
 277:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    */
 278:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Value>
 279:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hash_node<_Value, false> : _Hash_node_value_base<_Value>
 280:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 281:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Hash_node*
 282:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_next() const noexcept
 283:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return static_cast<_Hash_node*>(this->_M_nxt); }
 284:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 285:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 286:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Base class for node iterators.
 287:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Value, bool _Cache_hash_code>
 288:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Node_iterator_base
 289:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 290:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_type = _Hash_node<_Value, _Cache_hash_code>;
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 60


 291:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 292:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __node_type*  _M_cur;
 293:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 294:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Node_iterator_base(__node_type* __p) noexcept
 295:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : _M_cur(__p) { }
 296:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 297:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
 298:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_incr() noexcept
 299:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { _M_cur = _M_cur->_M_next(); }
 300:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 301:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 302:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Value, bool _Cache_hash_code>
 303:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     inline bool
 304:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     operator==(const _Node_iterator_base<_Value, _Cache_hash_code>& __x,
 305:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	       const _Node_iterator_base<_Value, _Cache_hash_code >& __y)
 306:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     noexcept
 307:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { return __x._M_cur == __y._M_cur; }
 308:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 309:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Value, bool _Cache_hash_code>
 310:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     inline bool
 311:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     operator!=(const _Node_iterator_base<_Value, _Cache_hash_code>& __x,
 312:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	       const _Node_iterator_base<_Value, _Cache_hash_code>& __y)
 313:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     noexcept
 314:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { return __x._M_cur != __y._M_cur; }
 315:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 316:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Node iterators, used to iterate through all the hashtable.
 317:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Value, bool __constant_iterators, bool __cache>
 318:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Node_iterator
 319:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : public _Node_iterator_base<_Value, __cache>
 320:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 321:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     private:
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __base_type = _Node_iterator_base<_Value, __cache>;
 323:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_type = typename __base_type::__node_type;
 324:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 325:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     public:
 326:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef _Value					value_type;
 327:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef std::ptrdiff_t				difference_type;
 328:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef std::forward_iterator_tag			iterator_category;
 329:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 330:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using pointer = typename std::conditional<__constant_iterators,
 331:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						const _Value*, _Value*>::type;
 332:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 333:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using reference = typename std::conditional<__constant_iterators,
 334:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						  const _Value&, _Value&>::type;
 335:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 336:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Node_iterator() noexcept
 337:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : __base_type(0) { }
 338:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 339:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       explicit
 340:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Node_iterator(__node_type* __p) noexcept
 341:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : __base_type(__p) { }
 342:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 343:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       reference
 344:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator*() const noexcept
 345:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return this->_M_cur->_M_v(); }
 346:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 347:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       pointer
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 61


 348:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator->() const noexcept
 349:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return this->_M_cur->_M_valptr(); }
 350:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 351:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Node_iterator&
 352:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator++() noexcept
 353:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
 354:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	this->_M_incr();
 355:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return *this;
 356:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
 357:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 358:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Node_iterator
 359:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator++(int) noexcept
 360:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
 361:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_Node_iterator __tmp(*this);
 362:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	this->_M_incr();
 363:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return __tmp;
 364:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
 365:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 366:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 367:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Node const_iterators, used to iterate through all the hashtable.
 368:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Value, bool __constant_iterators, bool __cache>
 369:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Node_const_iterator
 370:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : public _Node_iterator_base<_Value, __cache>
 371:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 372:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     private:
 373:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __base_type = _Node_iterator_base<_Value, __cache>;
 374:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_type = typename __base_type::__node_type;
 375:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 376:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     public:
 377:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef _Value					value_type;
 378:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef std::ptrdiff_t				difference_type;
 379:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef std::forward_iterator_tag			iterator_category;
 380:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 381:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef const _Value*				pointer;
 382:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef const _Value&				reference;
 383:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 384:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Node_const_iterator() noexcept
 385:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : __base_type(0) { }
 386:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 387:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       explicit
 388:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Node_const_iterator(__node_type* __p) noexcept
 389:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : __base_type(__p) { }
 390:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 391:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Node_const_iterator(const _Node_iterator<_Value, __constant_iterators,
 392:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			   __cache>& __x) noexcept
 393:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : __base_type(__x._M_cur) { }
 394:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 395:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       reference
 396:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator*() const noexcept
 397:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return this->_M_cur->_M_v(); }
 398:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 399:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       pointer
 400:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator->() const noexcept
 401:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return this->_M_cur->_M_valptr(); }
 402:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 403:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Node_const_iterator&
 404:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator++() noexcept
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 62


 405:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
 406:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	this->_M_incr();
 407:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return *this;
 408:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
 409:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 410:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Node_const_iterator
 411:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator++(int) noexcept
 412:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
 413:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_Node_const_iterator __tmp(*this);
 414:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	this->_M_incr();
 415:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return __tmp;
 416:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
 417:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 418:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 419:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // Many of class template _Hashtable's template parameters are policy
 420:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // classes.  These are defaults for the policies.
 421:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 422:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Default range hashing function: use division to fold a large number
 423:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// into the range [0, N).
 424:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   struct _Mod_range_hashing
 425:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   {
 426:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     typedef std::size_t first_argument_type;
 427:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     typedef std::size_t second_argument_type;
 428:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     typedef std::size_t result_type;
 429:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 430:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     result_type
 431:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     operator()(first_argument_type __num,
 432:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	       second_argument_type __den) const noexcept
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { return __num % __den; }
 434:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 435:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 436:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Default ranged hash function H.  In principle it should be a
 437:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// function object composed from objects of type H1 and H2 such that
 438:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// h(k, N) = h2(h1(k), N), but that would mean making extra copies of
 439:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// h1 and h2.  So instead we'll just use a tag to tell class template
 440:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// hashtable to do that composition.
 441:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   struct _Default_ranged_hash { };
 442:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 443:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Default value for rehash policy.  Bucket size is (usually) the
 444:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// smallest prime that keeps the load factor small enough.
 445:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   struct _Prime_rehash_policy
 446:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   {
 447:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     using __has_load_factor = true_type;
 448:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 449:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Prime_rehash_policy(float __z = 1.0) noexcept
 450:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : _M_max_load_factor(__z), _M_next_resize(0) { }
 451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 452:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     float
 453:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     max_load_factor() const noexcept
 454:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { return _M_max_load_factor; }
 455:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 456:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     // Return a bucket size no smaller than n.
 457:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     std::size_t
 458:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _M_next_bkt(std::size_t __n) const;
 459:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 460:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     // Return a bucket count appropriate for n elements
 461:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     std::size_t
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 63


 462:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _M_bkt_for_elements(std::size_t __n) const
 463:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { return __builtin_ceill(__n / (long double)_M_max_load_factor); }
 464:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 465:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     // __n_bkt is current bucket count, __n_elt is current element count,
 466:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     // and __n_ins is number of elements to be inserted.  Do we need to
 467:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     // increase bucket count?  If so, return make_pair(true, n), where n
 468:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     // is the new bucket count.  If not, return make_pair(false, 0).
 469:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     std::pair<bool, std::size_t>
 470:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _M_need_rehash(std::size_t __n_bkt, std::size_t __n_elt,
 471:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		   std::size_t __n_ins) const;
 472:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 473:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     typedef std::size_t _State;
 474:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 475:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _State
 476:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _M_state() const
 477:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { return _M_next_resize; }
 478:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 479:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     void
 480:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _M_reset() noexcept
 481:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { _M_next_resize = 0; }
 482:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 483:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     void
 484:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _M_reset(_State __state)
 485:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { _M_next_resize = __state; }
 486:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 487:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     static const std::size_t _S_growth_factor = 2;
 488:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 489:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     float		_M_max_load_factor;
 490:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     mutable std::size_t	_M_next_resize;
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 492:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 493:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Range hashing function assuming that second arg is a power of 2.
 494:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   struct _Mask_range_hashing
 495:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   {
 496:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     typedef std::size_t first_argument_type;
 497:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     typedef std::size_t second_argument_type;
 498:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     typedef std::size_t result_type;
 499:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 500:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     result_type
 501:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     operator()(first_argument_type __num,
 502:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	       second_argument_type __den) const noexcept
 503:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { return __num & (__den - 1); }
 504:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 505:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 506:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Compute closest power of 2 not less than __n
 507:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   inline std::size_t
 508:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   __clp2(std::size_t __n) noexcept
 509:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   {
 510:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     // Equivalent to return __n ? std::bit_ceil(__n) : 0;
 511:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     if (__n < 2)
 512:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       return __n;
 513:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     const unsigned __lz = sizeof(size_t) > sizeof(long)
 514:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       ? __builtin_clzll(__n - 1ull)
 515:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : __builtin_clzl(__n - 1ul);
 516:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     // Doing two shifts avoids undefined behaviour when __lz == 0.
 517:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     return (size_t(1) << (numeric_limits<size_t>::digits - __lz - 1)) << 1;
 518:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   }
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 64


 519:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 520:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Rehash policy providing power of 2 bucket numbers. Avoids modulo
 521:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// operations.
 522:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   struct _Power2_rehash_policy
 523:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   {
 524:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     using __has_load_factor = true_type;
 525:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 526:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Power2_rehash_policy(float __z = 1.0) noexcept
 527:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : _M_max_load_factor(__z), _M_next_resize(0) { }
 528:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 529:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     float
 530:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     max_load_factor() const noexcept
 531:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { return _M_max_load_factor; }
 532:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 533:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     // Return a bucket size no smaller than n (as long as n is not above the
 534:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     // highest power of 2).
 535:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     std::size_t
 536:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _M_next_bkt(std::size_t __n) noexcept
 537:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 538:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       if (__n == 0)
 539:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	// Special case on container 1st initialization with 0 bucket count
 540:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	// hint. We keep _M_next_resize to 0 to make sure that next time we
 541:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	// want to add an element allocation will take place.
 542:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return 1;
 543:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 544:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const auto __max_width = std::min<size_t>(sizeof(size_t), 8);
 545:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const auto __max_bkt = size_t(1) << (__max_width * __CHAR_BIT__ - 1);
 546:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t __res = __clp2(__n);
 547:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 548:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       if (__res == 0)
 549:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__res = __max_bkt;
 550:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       else if (__res == 1)
 551:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	// If __res is 1 we force it to 2 to make sure there will be an
 552:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	// allocation so that nothing need to be stored in the initial
 553:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	// single bucket
 554:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__res = 2;
 555:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 556:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       if (__res == __max_bkt)
 557:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	// Set next resize to the max value so that we never try to rehash again
 558:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	// as we already reach the biggest possible bucket number.
 559:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	// Note that it might result in max_load_factor not being respected.
 560:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_M_next_resize = numeric_limits<size_t>::max();
 561:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       else
 562:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_M_next_resize
 563:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  = __builtin_floorl(__res * (long double)_M_max_load_factor);
 564:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 565:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       return __res;
 566:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
 567:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 568:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     // Return a bucket count appropriate for n elements
 569:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     std::size_t
 570:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _M_bkt_for_elements(std::size_t __n) const noexcept
 571:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { return __builtin_ceill(__n / (long double)_M_max_load_factor); }
 572:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 573:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     // __n_bkt is current bucket count, __n_elt is current element count,
 574:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     // and __n_ins is number of elements to be inserted.  Do we need to
 575:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     // increase bucket count?  If so, return make_pair(true, n), where n
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 65


 576:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     // is the new bucket count.  If not, return make_pair(false, 0).
 577:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     std::pair<bool, std::size_t>
 578:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _M_need_rehash(std::size_t __n_bkt, std::size_t __n_elt,
 579:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		   std::size_t __n_ins) noexcept
 580:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 581:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       if (__n_elt + __n_ins > _M_next_resize)
 582:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	{
 583:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  // If _M_next_resize is 0 it means that we have nothing allocated so
 584:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  // far and that we start inserting elements. In this case we start
 585:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  // with an initial bucket size of 11.
 586:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  long double __min_bkts
 587:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    = std::max<std::size_t>(__n_elt + __n_ins, _M_next_resize ? 0 : 11)
 588:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      / (long double)_M_max_load_factor;
 589:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  if (__min_bkts >= __n_bkt)
 590:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    return { true,
 591:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      _M_next_bkt(std::max<std::size_t>(__builtin_floorl(__min_bkts) + 1,
 592:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						__n_bkt * _S_growth_factor)) };
 593:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 594:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  _M_next_resize
 595:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    = __builtin_floorl(__n_bkt * (long double)_M_max_load_factor);
 596:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  return { false, 0 };
 597:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	}
 598:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       else
 599:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return { false, 0 };
 600:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
 601:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 602:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     typedef std::size_t _State;
 603:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 604:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _State
 605:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _M_state() const noexcept
 606:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { return _M_next_resize; }
 607:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 608:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     void
 609:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _M_reset() noexcept
 610:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { _M_next_resize = 0; }
 611:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 612:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     void
 613:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _M_reset(_State __state) noexcept
 614:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { _M_next_resize = __state; }
 615:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 616:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     static const std::size_t _S_growth_factor = 2;
 617:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 618:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     float	_M_max_load_factor;
 619:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     std::size_t	_M_next_resize;
 620:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 621:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 622:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // Base classes for std::_Hashtable.  We define these base classes
 623:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // because in some cases we want to do different things depending on
 624:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // the value of a policy class.  In some cases the policy class
 625:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // affects which member functions and nested typedefs are defined;
 626:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // we handle that by specializing base class templates.  Several of
 627:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // the base class templates need to access other members of class
 628:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // template _Hashtable, so we use a variant of the "Curiously
 629:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // Recurring Template Pattern" (CRTP) technique.
 630:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 631:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /**
 632:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Primary class template _Map_base.
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 66


 633:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
 634:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  If the hashtable has a value type of the form pair<T1, T2> and a
 635:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  key extraction policy (_ExtractKey) that returns the first part
 636:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  of the pair, the hashtable gets a mapped_type typedef.  If it
 637:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  satisfies those criteria and also has unique keys, then it also
 638:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  gets an operator[].
 639:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    */
 640:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _Alloc,
 641:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
 642:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
 643:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits,
 644:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   bool _Unique_keys = _Traits::__unique_keys::value>
 645:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Map_base { };
 646:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 647:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Partial specialization, __unique_keys set to false.
 648:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Pair, typename _Alloc, typename _Equal,
 649:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
 650:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
 651:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Map_base<_Key, _Pair, _Alloc, _Select1st, _Equal,
 652:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		     _H1, _H2, _Hash, _RehashPolicy, _Traits, false>
 653:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 654:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using mapped_type = typename std::tuple_element<1, _Pair>::type;
 655:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 656:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Partial specialization, __unique_keys set to true.
 658:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Pair, typename _Alloc, typename _Equal,
 659:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
 660:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
 661:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Map_base<_Key, _Pair, _Alloc, _Select1st, _Equal,
 662:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		     _H1, _H2, _Hash, _RehashPolicy, _Traits, true>
 663:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 664:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     private:
 665:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hashtable_base = __detail::_Hashtable_base<_Key, _Pair,
 666:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 							 _Select1st,
 667:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 							_Equal, _H1, _H2, _Hash,
 668:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 							  _Traits>;
 669:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 670:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hashtable = _Hashtable<_Key, _Pair, _Alloc,
 671:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 				     _Select1st, _Equal,
 672:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 				     _H1, _H2, _Hash, _RehashPolicy, _Traits>;
 673:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 674:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hash_code = typename __hashtable_base::__hash_code;
 675:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_type = typename __hashtable_base::__node_type;
 676:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 677:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     public:
 678:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using key_type = typename __hashtable_base::key_type;
 679:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using iterator = typename __hashtable_base::iterator;
 680:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using mapped_type = typename std::tuple_element<1, _Pair>::type;
 681:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 682:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       mapped_type&
 683:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator[](const key_type& __k);
 684:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 685:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       mapped_type&
 686:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator[](key_type&& __k);
 687:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 688:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 689:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       // DR 761. unordered_map needs an at() member function.
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 67


 690:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       mapped_type&
 691:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       at(const key_type& __k);
 692:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 693:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const mapped_type&
 694:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       at(const key_type& __k) const;
 695:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 696:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 697:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Pair, typename _Alloc, typename _Equal,
 698:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
 699:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
 700:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     auto
 701:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Map_base<_Key, _Pair, _Alloc, _Select1st, _Equal,
 702:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      _H1, _H2, _Hash, _RehashPolicy, _Traits, true>::
 703:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     operator[](const key_type& __k)
 704:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     -> mapped_type&
 705:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 706:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __hashtable* __h = static_cast<__hashtable*>(this);
 707:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __hash_code __code = __h->_M_hash_code(__k);
 708:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t __bkt = __h->_M_bucket_index(__k, __code);
 709:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       if (__node_type* __node = __h->_M_find_node(__bkt, __k, __code))
 710:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return __node->_M_v().second;
 711:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 712:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typename __hashtable::_Scoped_node __node {
 713:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__h,
 714:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	std::piecewise_construct,
 715:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	std::tuple<const key_type&>(__k),
 716:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	std::tuple<>()
 717:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       };
 718:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       auto __pos
 719:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	= __h->_M_insert_unique_node(__k, __bkt, __code, __node._M_node);
 720:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __node._M_node = nullptr;
 721:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       return __pos->second;
 722:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
 723:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 724:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Pair, typename _Alloc, typename _Equal,
 725:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
 726:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
 727:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     auto
 728:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Map_base<_Key, _Pair, _Alloc, _Select1st, _Equal,
 729:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      _H1, _H2, _Hash, _RehashPolicy, _Traits, true>::
 730:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     operator[](key_type&& __k)
 731:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     -> mapped_type&
 732:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 733:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __hashtable* __h = static_cast<__hashtable*>(this);
 734:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __hash_code __code = __h->_M_hash_code(__k);
 735:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t __bkt = __h->_M_bucket_index(__k, __code);
 736:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       if (__node_type* __node = __h->_M_find_node(__bkt, __k, __code))
 737:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return __node->_M_v().second;
 738:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 739:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typename __hashtable::_Scoped_node __node {
 740:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__h,
 741:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	std::piecewise_construct,
 742:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	std::forward_as_tuple(std::move(__k)),
 743:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	std::tuple<>()
 744:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       };
 745:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       auto __pos
 746:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	= __h->_M_insert_unique_node(__k, __bkt, __code, __node._M_node);
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 68


 747:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __node._M_node = nullptr;
 748:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       return __pos->second;
 749:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
 750:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 751:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Pair, typename _Alloc, typename _Equal,
 752:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
 753:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
 754:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     auto
 755:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Map_base<_Key, _Pair, _Alloc, _Select1st, _Equal,
 756:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      _H1, _H2, _Hash, _RehashPolicy, _Traits, true>::
 757:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     at(const key_type& __k)
 758:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     -> mapped_type&
 759:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 760:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __hashtable* __h = static_cast<__hashtable*>(this);
 761:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __hash_code __code = __h->_M_hash_code(__k);
 762:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t __bkt = __h->_M_bucket_index(__k, __code);
 763:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __node_type* __p = __h->_M_find_node(__bkt, __k, __code);
 764:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 765:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       if (!__p)
 766:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__throw_out_of_range(__N("_Map_base::at"));
 767:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       return __p->_M_v().second;
 768:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
 769:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 770:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Pair, typename _Alloc, typename _Equal,
 771:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
 772:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
 773:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     auto
 774:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Map_base<_Key, _Pair, _Alloc, _Select1st, _Equal,
 775:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      _H1, _H2, _Hash, _RehashPolicy, _Traits, true>::
 776:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     at(const key_type& __k) const
 777:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     -> const mapped_type&
 778:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 779:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const __hashtable* __h = static_cast<const __hashtable*>(this);
 780:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __hash_code __code = __h->_M_hash_code(__k);
 781:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t __bkt = __h->_M_bucket_index(__k, __code);
 782:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __node_type* __p = __h->_M_find_node(__bkt, __k, __code);
 783:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 784:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       if (!__p)
 785:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__throw_out_of_range(__N("_Map_base::at"));
 786:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       return __p->_M_v().second;
 787:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
 788:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 789:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /**
 790:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Primary class template _Insert_base.
 791:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
 792:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Defines @c insert member functions appropriate to all _Hashtables.
 793:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    */
 794:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _Alloc,
 795:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
 796:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
 797:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
 798:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Insert_base
 799:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 800:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     protected:
 801:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hashtable = _Hashtable<_Key, _Value, _Alloc, _ExtractKey,
 802:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 				     _Equal, _H1, _H2, _Hash,
 803:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 				     _RehashPolicy, _Traits>;
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 69


 804:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 805:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hashtable_base = _Hashtable_base<_Key, _Value, _ExtractKey,
 806:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					       _Equal, _H1, _H2, _Hash,
 807:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					       _Traits>;
 808:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 809:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using value_type = typename __hashtable_base::value_type;
 810:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using iterator = typename __hashtable_base::iterator;
 811:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using const_iterator =  typename __hashtable_base::const_iterator;
 812:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using size_type = typename __hashtable_base::size_type;
 813:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 814:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __unique_keys = typename __hashtable_base::__unique_keys;
 815:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __ireturn_type = typename __hashtable_base::__ireturn_type;
 816:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_type = _Hash_node<_Value, _Traits::__hash_cached::value>;
 817:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_alloc_type = __alloc_rebind<_Alloc, __node_type>;
 818:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_gen_type = _AllocNode<__node_alloc_type>;
 819:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 820:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __hashtable&
 821:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_conjure_hashtable()
 822:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return *(static_cast<__hashtable*>(this)); }
 823:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 824:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       template<typename _InputIterator, typename _NodeGetter>
 825:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	void
 826:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_M_insert_range(_InputIterator __first, _InputIterator __last,
 827:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			const _NodeGetter&, true_type);
 828:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 829:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       template<typename _InputIterator, typename _NodeGetter>
 830:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	void
 831:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_M_insert_range(_InputIterator __first, _InputIterator __last,
 832:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			const _NodeGetter&, false_type);
 833:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 834:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     public:
 835:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __ireturn_type
 836:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       insert(const value_type& __v)
 837:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
 838:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__hashtable& __h = _M_conjure_hashtable();
 839:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__node_gen_type __node_gen(__h);
 840:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return __h._M_insert(__v, __node_gen, __unique_keys());
 841:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
 842:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 843:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       iterator
 844:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       insert(const_iterator __hint, const value_type& __v)
 845:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
 846:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__hashtable& __h = _M_conjure_hashtable();
 847:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__node_gen_type __node_gen(__h);	
 848:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return __h._M_insert(__hint, __v, __node_gen, __unique_keys());
 849:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
 850:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 851:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
 852:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       insert(initializer_list<value_type> __l)
 853:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { this->insert(__l.begin(), __l.end()); }
 854:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 855:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       template<typename _InputIterator>
 856:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	void
 857:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	insert(_InputIterator __first, _InputIterator __last)
 858:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	{
 859:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  __hashtable& __h = _M_conjure_hashtable();
 860:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  __node_gen_type __node_gen(__h);
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 70


 861:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  return _M_insert_range(__first, __last, __node_gen, __unique_keys());
 862:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	}
 863:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 864:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 865:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _Alloc,
 866:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
 867:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
 868:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
 869:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     template<typename _InputIterator, typename _NodeGetter>
 870:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
 871:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash,
 872:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		    _RehashPolicy, _Traits>::
 873:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_insert_range(_InputIterator __first, _InputIterator __last,
 874:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		      const _NodeGetter& __node_gen, true_type)
 875:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
 876:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	size_type __n_elt = __detail::__distance_fw(__first, __last);
 877:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	if (__n_elt == 0)
 878:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  return;
 879:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 880:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__hashtable& __h = _M_conjure_hashtable();
 881:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	for (; __first != __last; ++__first)
 882:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  {
 883:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    if (__h._M_insert(*__first, __node_gen, __unique_keys(),
 884:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			      __n_elt).second)
 885:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      __n_elt = 1;
 886:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    else if (__n_elt != 1)
 887:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      --__n_elt;
 888:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  }
 889:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
 890:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 891:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _Alloc,
 892:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
 893:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
 894:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
 895:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     template<typename _InputIterator, typename _NodeGetter>
 896:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
 897:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash,
 898:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		    _RehashPolicy, _Traits>::
 899:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_insert_range(_InputIterator __first, _InputIterator __last,
 900:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		      const _NodeGetter& __node_gen, false_type)
 901:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
 902:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	using __rehash_type = typename __hashtable::__rehash_type;
 903:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	using __rehash_state = typename __hashtable::__rehash_state;
 904:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	using pair_type = std::pair<bool, std::size_t>;
 905:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 906:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	size_type __n_elt = __detail::__distance_fw(__first, __last);
 907:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	if (__n_elt == 0)
 908:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  return;
 909:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 910:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__hashtable& __h = _M_conjure_hashtable();
 911:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__rehash_type& __rehash = __h._M_rehash_policy;
 912:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	const __rehash_state& __saved_state = __rehash._M_state();
 913:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	pair_type __do_rehash = __rehash._M_need_rehash(__h._M_bucket_count,
 914:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 							__h._M_element_count,
 915:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 							__n_elt);
 916:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 917:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	if (__do_rehash.first)
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 71


 918:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  __h._M_rehash(__do_rehash.second, __saved_state);
 919:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 920:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	for (; __first != __last; ++__first)
 921:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  __h._M_insert(*__first, __node_gen, __unique_keys());
 922:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
 923:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 924:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /**
 925:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Primary class template _Insert.
 926:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
 927:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Defines @c insert member functions that depend on _Hashtable policies,
 928:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  via partial specializations.
 929:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    */
 930:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _Alloc,
 931:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
 932:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
 933:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits,
 934:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   bool _Constant_iterators = _Traits::__constant_iterators::value>
 935:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Insert;
 936:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 937:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Specialization.
 938:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _Alloc,
 939:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
 940:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
 941:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
 942:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Insert<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash,
 943:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		   _RehashPolicy, _Traits, true>
 944:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : public _Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal,
 945:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			   _H1, _H2, _Hash, _RehashPolicy, _Traits>
 946:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 947:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __base_type = _Insert_base<_Key, _Value, _Alloc, _ExtractKey,
 948:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					_Equal, _H1, _H2, _Hash,
 949:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					_RehashPolicy, _Traits>;
 950:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 951:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hashtable_base = _Hashtable_base<_Key, _Value, _ExtractKey,
 952:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					       _Equal, _H1, _H2, _Hash,
 953:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					       _Traits>;
 954:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 955:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using value_type = typename __base_type::value_type;
 956:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using iterator = typename __base_type::iterator;
 957:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using const_iterator =  typename __base_type::const_iterator;
 958:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 959:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __unique_keys = typename __base_type::__unique_keys;
 960:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __ireturn_type = typename __hashtable_base::__ireturn_type;
 961:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hashtable = typename __base_type::__hashtable;
 962:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_gen_type = typename __base_type::__node_gen_type;
 963:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 964:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __base_type::insert;
 965:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 966:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __ireturn_type
 967:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       insert(value_type&& __v)
 968:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
 969:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__hashtable& __h = this->_M_conjure_hashtable();
 970:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__node_gen_type __node_gen(__h);
 971:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return __h._M_insert(std::move(__v), __node_gen, __unique_keys());
 972:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
 973:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 974:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       iterator
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 72


 975:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       insert(const_iterator __hint, value_type&& __v)
 976:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
 977:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__hashtable& __h = this->_M_conjure_hashtable();
 978:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__node_gen_type __node_gen(__h);
 979:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return __h._M_insert(__hint, std::move(__v), __node_gen,
 980:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			     __unique_keys());
 981:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
 982:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 983:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 984:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Specialization.
 985:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _Alloc,
 986:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
 987:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
 988:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
 989:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Insert<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash,
 990:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		   _RehashPolicy, _Traits, false>
 991:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : public _Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal,
 992:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			   _H1, _H2, _Hash, _RehashPolicy, _Traits>
 993:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 994:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __base_type = _Insert_base<_Key, _Value, _Alloc, _ExtractKey,
 995:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 				       _Equal, _H1, _H2, _Hash,
 996:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 				       _RehashPolicy, _Traits>;
 997:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using value_type = typename __base_type::value_type;
 998:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using iterator = typename __base_type::iterator;
 999:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using const_iterator =  typename __base_type::const_iterator;
1000:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1001:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __unique_keys = typename __base_type::__unique_keys;
1002:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hashtable = typename __base_type::__hashtable;
1003:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __ireturn_type = typename __base_type::__ireturn_type;
1004:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1005:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __base_type::insert;
1006:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1007:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       template<typename _Pair>
1008:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	using __is_cons = std::is_constructible<value_type, _Pair&&>;
1009:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1010:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       template<typename _Pair>
1011:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	using _IFcons = std::enable_if<__is_cons<_Pair>::value>;
1012:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1013:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       template<typename _Pair>
1014:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	using _IFconsp = typename _IFcons<_Pair>::type;
1015:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1016:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       template<typename _Pair, typename = _IFconsp<_Pair>>
1017:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__ireturn_type
1018:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	insert(_Pair&& __v)
1019:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	{
1020:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  __hashtable& __h = this->_M_conjure_hashtable();
1021:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  return __h._M_emplace(__unique_keys(), std::forward<_Pair>(__v));
1022:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	}
1023:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1024:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       template<typename _Pair, typename = _IFconsp<_Pair>>
1025:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	iterator
1026:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	insert(const_iterator __hint, _Pair&& __v)
1027:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	{
1028:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  __hashtable& __h = this->_M_conjure_hashtable();
1029:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  return __h._M_emplace(__hint, __unique_keys(),
1030:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 				std::forward<_Pair>(__v));
1031:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	}
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 73


1032:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    };
1033:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1034:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Policy>
1035:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     using __has_load_factor = typename _Policy::__has_load_factor;
1036:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1037:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /**
1038:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Primary class template  _Rehash_base.
1039:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
1040:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Give hashtable the max_load_factor functions and reserve iff the
1041:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  rehash policy supports it.
1042:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   */
1043:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _Alloc,
1044:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
1045:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
1046:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits,
1047:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename =
1048:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	     __detected_or_t<false_type, __has_load_factor, _RehashPolicy>>
1049:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Rehash_base;
1050:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1051:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Specialization when rehash policy doesn't provide load factor management.
1052:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _Alloc,
1053:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
1054:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
1055:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
1056:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Rehash_base<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1057:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		      _H1, _H2, _Hash, _RehashPolicy, _Traits,
1058:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		      false_type>
1059:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1060:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
1061:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1062:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Specialization when rehash policy provide load factor management.
1063:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _Alloc,
1064:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
1065:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
1066:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
1067:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Rehash_base<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1068:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			_H1, _H2, _Hash, _RehashPolicy, _Traits,
1069:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			true_type>
1070:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1071:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hashtable = _Hashtable<_Key, _Value, _Alloc, _ExtractKey,
1072:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 				     _Equal, _H1, _H2, _Hash,
1073:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 				     _RehashPolicy, _Traits>;
1074:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1075:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       float
1076:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       max_load_factor() const noexcept
1077:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1078:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	const __hashtable* __this = static_cast<const __hashtable*>(this);
1079:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return __this->__rehash_policy().max_load_factor();
1080:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
1081:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1082:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
1083:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       max_load_factor(float __z)
1084:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1085:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__hashtable* __this = static_cast<__hashtable*>(this);
1086:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__this->__rehash_policy(_RehashPolicy(__z));
1087:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
1088:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 74


1089:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
1090:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       reserve(std::size_t __n)
1091:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1092:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__hashtable* __this = static_cast<__hashtable*>(this);
1093:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__this->rehash(__this->__rehash_policy()._M_bkt_for_elements(__n));
1094:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
1095:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
1096:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1097:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /**
1098:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Primary class template _Hashtable_ebo_helper.
1099:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
1100:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Helper class using EBO when it is not forbidden (the type is not
1101:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  final) and when it is worth it (the type is empty.)
1102:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    */
1103:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<int _Nm, typename _Tp,
1104:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   bool __use_ebo = !__is_final(_Tp) && __is_empty(_Tp)>
1105:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hashtable_ebo_helper;
1106:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1107:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Specialization using EBO.
1108:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<int _Nm, typename _Tp>
1109:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hashtable_ebo_helper<_Nm, _Tp, true>
1110:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : private _Tp
1111:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1112:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Hashtable_ebo_helper() = default;
1113:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1114:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       template<typename _OtherTp>
1115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_Hashtable_ebo_helper(_OtherTp&& __tp)
1116:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	: _Tp(std::forward<_OtherTp>(__tp))
1117:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	{ }
1118:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1119:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const _Tp& _M_cget() const { return static_cast<const _Tp&>(*this); }
1120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Tp& _M_get() { return static_cast<_Tp&>(*this); }
1121:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
1122:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1123:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Specialization not using EBO.
1124:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<int _Nm, typename _Tp>
1125:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hashtable_ebo_helper<_Nm, _Tp, false>
1126:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1127:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Hashtable_ebo_helper() = default;
1128:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1129:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       template<typename _OtherTp>
1130:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_Hashtable_ebo_helper(_OtherTp&& __tp)
1131:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	: _M_tp(std::forward<_OtherTp>(__tp))
1132:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	{ }
1133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1134:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const _Tp& _M_cget() const { return _M_tp; }
1135:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Tp& _M_get() { return _M_tp; }
1136:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1137:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     private:
1138:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Tp _M_tp;
1139:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
1140:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1141:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /**
1142:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Primary class template _Local_iterator_base.
1143:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
1144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Base class for local iterators, used to iterate within a bucket
1145:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  but not between buckets.
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 75


1146:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    */
1147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _ExtractKey,
1148:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
1149:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   bool __cache_hash_code>
1150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Local_iterator_base;
1151:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1152:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /**
1153:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Primary class template _Hash_code_base.
1154:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
1155:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Encapsulates two policy issues that aren't quite orthogonal.
1156:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *   (1) the difference between using a ranged hash function and using
1157:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *       the combination of a hash function and a range-hashing function.
1158:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *       In the former case we don't have such things as hash codes, so
1159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *       we have a dummy type as placeholder.
1160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *   (2) Whether or not we cache hash codes.  Caching hash codes is
1161:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *       meaningless if we have a ranged hash function.
1162:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
1163:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  We also put the key extraction objects here, for convenience.
1164:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Each specialization derives from one or more of the template
1165:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  parameters to benefit from Ebo. This is important as this type
1166:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  is inherited in some cases by the _Local_iterator_base type used
1167:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  to implement local_iterator and const_local_iterator. As with
1168:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  any iterator type we prefer to make it as small as possible.
1169:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
1170:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Primary template is unused except as a hook for specializations.
1171:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    */
1172:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _ExtractKey,
1173:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
1174:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   bool __cache_hash_code>
1175:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hash_code_base;
1176:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1177:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Specialization: ranged hash function, no caching hash codes.  H1
1178:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// and H2 are provided but ignored.  We define a dummy hash code type.
1179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _ExtractKey,
1180:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash>
1181:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, false>
1182:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : private _Hashtable_ebo_helper<0, _ExtractKey>,
1183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       private _Hashtable_ebo_helper<1, _Hash>
1184:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1185:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     private:
1186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __ebo_extract_key = _Hashtable_ebo_helper<0, _ExtractKey>;
1187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __ebo_hash = _Hashtable_ebo_helper<1, _Hash>;
1188:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1189:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     protected:
1190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef void* 					__hash_code;
1191:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef _Hash_node<_Value, false>			__node_type;
1192:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1193:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       // We need the default constructor for the local iterators and _Hashtable
1194:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       // default constructor.
1195:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Hash_code_base() = default;
1196:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1197:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Hash_code_base(const _ExtractKey& __ex, const _H1&, const _H2&,
1198:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		      const _Hash& __h)
1199:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : __ebo_extract_key(__ex), __ebo_hash(__h) { }
1200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1201:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __hash_code
1202:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_hash_code(const _Key& __key) const
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 76


1203:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return 0; }
1204:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1205:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t
1206:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_bucket_index(const _Key& __k, __hash_code,
1207:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		      std::size_t __bkt_count) const
1208:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return _M_ranged_hash()(__k, __bkt_count); }
1209:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1210:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t
1211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_bucket_index(const __node_type* __p, std::size_t __bkt_count) const
1212:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	noexcept( noexcept(declval<const _Hash&>()(declval<const _Key&>(),
1213:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						   (std::size_t)0)) )
1214:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return _M_ranged_hash()(_M_extract()(__p->_M_v()), __bkt_count); }
1215:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1216:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
1217:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_store_code(__node_type*, __hash_code) const
1218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { }
1219:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1220:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
1221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_copy_code(__node_type*, const __node_type*) const
1222:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { }
1223:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1224:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
1225:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_swap(_Hash_code_base& __x)
1226:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1227:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	std::swap(__ebo_extract_key::_M_get(),
1228:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		  __x.__ebo_extract_key::_M_get());
1229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	std::swap(__ebo_hash::_M_get(), __x.__ebo_hash::_M_get());
1230:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
1231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1232:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const _ExtractKey&
1233:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_extract() const { return __ebo_extract_key::_M_cget(); }
1234:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1235:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const _Hash&
1236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_ranged_hash() const { return __ebo_hash::_M_cget(); }
1237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
1238:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1239:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // No specialization for ranged hash function while caching hash codes.
1240:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // That combination is meaningless, and trying to do it is an error.
1241:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1242:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Specialization: ranged hash function, cache hash codes.  This
1243:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// combination is meaningless, so we provide only a declaration
1244:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// and no definition.
1245:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _ExtractKey,
1246:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash>
1247:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, true>;
1248:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1249:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Specialization: hash function and range-hashing function, no
1250:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// caching of hash codes.
1251:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Provides typedef and accessor required by C++ 11.
1252:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _ExtractKey,
1253:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2>
1254:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2,
1255:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			   _Default_ranged_hash, false>
1256:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : private _Hashtable_ebo_helper<0, _ExtractKey>,
1257:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       private _Hashtable_ebo_helper<1, _H1>,
1258:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       private _Hashtable_ebo_helper<2, _H2>
1259:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 77


1260:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     private:
1261:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __ebo_extract_key = _Hashtable_ebo_helper<0, _ExtractKey>;
1262:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __ebo_h1 = _Hashtable_ebo_helper<1, _H1>;
1263:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __ebo_h2 = _Hashtable_ebo_helper<2, _H2>;
1264:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1265:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       // Gives the local iterator implementation access to _M_bucket_index().
1266:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       friend struct _Local_iterator_base<_Key, _Value, _ExtractKey, _H1, _H2,
1267:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					 _Default_ranged_hash, false>;
1268:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1269:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     public:
1270:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef _H1 					hasher;
1271:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1272:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       hasher
1273:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       hash_function() const
1274:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return _M_h1(); }
1275:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1276:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     protected:
1277:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef std::size_t 				__hash_code;
1278:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef _Hash_node<_Value, false>			__node_type;
1279:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1280:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       // We need the default constructor for the local iterators and _Hashtable
1281:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       // default constructor.
1282:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Hash_code_base() = default;
1283:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1284:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Hash_code_base(const _ExtractKey& __ex,
1285:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		      const _H1& __h1, const _H2& __h2,
1286:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		      const _Default_ranged_hash&)
1287:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : __ebo_extract_key(__ex), __ebo_h1(__h1), __ebo_h2(__h2) { }
1288:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1289:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __hash_code
1290:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_hash_code(const _Key& __k) const
1291:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1292:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	static_assert(__is_invocable<const _H1&, const _Key&>{},
1293:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    "hash function must be invocable with an argument of key type");
1294:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return _M_h1()(__k);
1295:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
1296:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1297:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t
1298:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_bucket_index(const _Key&, __hash_code __c,
1299:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		      std::size_t __bkt_count) const
1300:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return _M_h2()(__c, __bkt_count); }
1301:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1302:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t
1303:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_bucket_index(const __node_type* __p, std::size_t __bkt_count) const
1304:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	noexcept( noexcept(declval<const _H1&>()(declval<const _Key&>()))
1305:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		  && noexcept(declval<const _H2&>()((__hash_code)0,
1306:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						    (std::size_t)0)) )
1307:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return _M_h2()(_M_h1()(_M_extract()(__p->_M_v())), __bkt_count); }
1308:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1309:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
1310:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_store_code(__node_type*, __hash_code) const
1311:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { }
1312:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1313:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
1314:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_copy_code(__node_type*, const __node_type*) const
1315:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { }
1316:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 78


1317:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
1318:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_swap(_Hash_code_base& __x)
1319:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1320:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	std::swap(__ebo_extract_key::_M_get(),
1321:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		  __x.__ebo_extract_key::_M_get());
1322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	std::swap(__ebo_h1::_M_get(), __x.__ebo_h1::_M_get());
1323:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	std::swap(__ebo_h2::_M_get(), __x.__ebo_h2::_M_get());
1324:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
1325:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1326:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const _ExtractKey&
1327:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_extract() const { return __ebo_extract_key::_M_cget(); }
1328:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1329:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const _H1&
1330:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_h1() const { return __ebo_h1::_M_cget(); }
1331:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1332:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const _H2&
1333:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_h2() const { return __ebo_h2::_M_cget(); }
1334:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
1335:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1336:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Specialization: hash function and range-hashing function,
1337:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// caching hash codes.  H is provided but ignored.  Provides
1338:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// typedef and accessor required by C++ 11.
1339:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _ExtractKey,
1340:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2>
1341:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2,
1342:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			   _Default_ranged_hash, true>
1343:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : private _Hashtable_ebo_helper<0, _ExtractKey>,
1344:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       private _Hashtable_ebo_helper<1, _H1>,
1345:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       private _Hashtable_ebo_helper<2, _H2>
1346:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1347:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     private:
1348:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       // Gives the local iterator implementation access to _M_h2().
1349:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       friend struct _Local_iterator_base<_Key, _Value, _ExtractKey, _H1, _H2,
1350:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					 _Default_ranged_hash, true>;
1351:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1352:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __ebo_extract_key = _Hashtable_ebo_helper<0, _ExtractKey>;
1353:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __ebo_h1 = _Hashtable_ebo_helper<1, _H1>;
1354:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __ebo_h2 = _Hashtable_ebo_helper<2, _H2>;
1355:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1356:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     public:
1357:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef _H1 					hasher;
1358:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1359:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       hasher
1360:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       hash_function() const
1361:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return _M_h1(); }
1362:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1363:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     protected:
1364:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef std::size_t 				__hash_code;
1365:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef _Hash_node<_Value, true>			__node_type;
1366:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1367:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       // We need the default constructor for _Hashtable default constructor.
1368:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Hash_code_base() = default;
1369:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Hash_code_base(const _ExtractKey& __ex,
1370:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		      const _H1& __h1, const _H2& __h2,
1371:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		      const _Default_ranged_hash&)
1372:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : __ebo_extract_key(__ex), __ebo_h1(__h1), __ebo_h2(__h2) { }
1373:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 79


1374:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __hash_code
1375:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_hash_code(const _Key& __k) const
1376:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1377:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	static_assert(__is_invocable<const _H1&, const _Key&>{},
1378:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    "hash function must be invocable with an argument of key type");
1379:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return _M_h1()(__k);
1380:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
1381:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1382:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t
1383:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_bucket_index(const _Key&, __hash_code __c,
1384:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		      std::size_t __bkt_count) const
1385:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return _M_h2()(__c, __bkt_count); }
1386:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1387:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t
1388:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_bucket_index(const __node_type* __p, std::size_t __bkt_count) const
1389:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	noexcept( noexcept(declval<const _H2&>()((__hash_code)0,
1390:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						 (std::size_t)0)) )
1391:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return _M_h2()(__p->_M_hash_code, __bkt_count); }
1392:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1393:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
1394:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_store_code(__node_type* __n, __hash_code __c) const
1395:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { __n->_M_hash_code = __c; }
1396:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1397:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
1398:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_copy_code(__node_type* __to, const __node_type* __from) const
1399:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { __to->_M_hash_code = __from->_M_hash_code; }
1400:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1401:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
1402:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_swap(_Hash_code_base& __x)
1403:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1404:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	std::swap(__ebo_extract_key::_M_get(),
1405:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		  __x.__ebo_extract_key::_M_get());
1406:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	std::swap(__ebo_h1::_M_get(), __x.__ebo_h1::_M_get());
1407:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	std::swap(__ebo_h2::_M_get(), __x.__ebo_h2::_M_get());
1408:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
1409:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1410:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const _ExtractKey&
1411:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_extract() const { return __ebo_extract_key::_M_cget(); }
1412:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1413:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const _H1&
1414:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_h1() const { return __ebo_h1::_M_cget(); }
1415:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1416:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const _H2&
1417:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_h2() const { return __ebo_h2::_M_cget(); }
1418:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
1419:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1420:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Partial specialization used when nodes contain a cached hash code.
1421:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _ExtractKey,
1422:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash>
1423:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Local_iterator_base<_Key, _Value, _ExtractKey,
1424:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 				_H1, _H2, _Hash, true>
1425:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : private _Hashtable_ebo_helper<0, _H2>
1426:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1427:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     protected:
1428:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __base_type = _Hashtable_ebo_helper<0, _H2>;
1429:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hash_code_base = _Hash_code_base<_Key, _Value, _ExtractKey,
1430:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					       _H1, _H2, _Hash, true>;
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 80


1431:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1432:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Local_iterator_base() = default;
1433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Local_iterator_base(const __hash_code_base& __base,
1434:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			   _Hash_node<_Value, true>* __p,
1435:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			   std::size_t __bkt, std::size_t __bkt_count)
1436:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : __base_type(__base._M_h2()),
1437:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_M_cur(__p), _M_bucket(__bkt), _M_bucket_count(__bkt_count) { }
1438:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1439:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
1440:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_incr()
1441:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1442:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_M_cur = _M_cur->_M_next();
1443:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	if (_M_cur)
1444:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  {
1445:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    std::size_t __bkt
1446:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      = __base_type::_M_get()(_M_cur->_M_hash_code,
1447:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					   _M_bucket_count);
1448:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    if (__bkt != _M_bucket)
1449:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      _M_cur = nullptr;
1450:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  }
1451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
1452:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1453:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Hash_node<_Value, true>*  _M_cur;
1454:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t _M_bucket;
1455:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t _M_bucket_count;
1456:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1457:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     public:
1458:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const void*
1459:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_curr() const { return _M_cur; }  // for equality ops
1460:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1461:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t
1462:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_get_bucket() const { return _M_bucket; }  // for debug mode
1463:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
1464:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1465:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // Uninitialized storage for a _Hash_code_base.
1466:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // This type is DefaultConstructible and Assignable even if the
1467:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // _Hash_code_base type isn't, so that _Local_iterator_base<..., false>
1468:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // can be DefaultConstructible and Assignable.
1469:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Tp, bool _IsEmpty = std::is_empty<_Tp>::value>
1470:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hash_code_storage
1471:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1472:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __gnu_cxx::__aligned_buffer<_Tp> _M_storage;
1473:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1474:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Tp*
1475:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_h() { return _M_storage._M_ptr(); }
1476:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1477:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const _Tp*
1478:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_h() const { return _M_storage._M_ptr(); }
1479:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
1480:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1481:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // Empty partial specialization for empty _Hash_code_base types.
1482:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Tp>
1483:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hash_code_storage<_Tp, true>
1484:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1485:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       static_assert( std::is_empty<_Tp>::value, "Type must be empty" );
1486:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1487:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       // As _Tp is an empty type there will be no bytes written/read through
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 81


1488:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       // the cast pointer, so no strict-aliasing violation.
1489:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Tp*
1490:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_h() { return reinterpret_cast<_Tp*>(this); }
1491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1492:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const _Tp*
1493:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_h() const { return reinterpret_cast<const _Tp*>(this); }
1494:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
1495:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1496:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _ExtractKey,
1497:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash>
1498:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     using __hash_code_for_local_iter
1499:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       = _Hash_code_storage<_Hash_code_base<_Key, _Value, _ExtractKey,
1500:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					   _H1, _H2, _Hash, false>>;
1501:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1502:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // Partial specialization used when hash codes are not cached
1503:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _ExtractKey,
1504:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash>
1505:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Local_iterator_base<_Key, _Value, _ExtractKey,
1506:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 				_H1, _H2, _Hash, false>
1507:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : __hash_code_for_local_iter<_Key, _Value, _ExtractKey, _H1, _H2, _Hash>
1508:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1509:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     protected:
1510:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hash_code_base = _Hash_code_base<_Key, _Value, _ExtractKey,
1511:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					       _H1, _H2, _Hash, false>;
1512:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1513:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Local_iterator_base() : _M_bucket_count(-1) { }
1514:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1515:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Local_iterator_base(const __hash_code_base& __base,
1516:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			   _Hash_node<_Value, false>* __p,
1517:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			   std::size_t __bkt, std::size_t __bkt_count)
1518:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : _M_cur(__p), _M_bucket(__bkt), _M_bucket_count(__bkt_count)
1519:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { _M_init(__base); }
1520:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1521:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       ~_Local_iterator_base()
1522:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1523:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	if (_M_bucket_count != -1)
1524:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  _M_destroy();
1525:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
1526:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1527:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Local_iterator_base(const _Local_iterator_base& __iter)
1528:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : _M_cur(__iter._M_cur), _M_bucket(__iter._M_bucket),
1529:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****         _M_bucket_count(__iter._M_bucket_count)
1530:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1531:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	if (_M_bucket_count != -1)
1532:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  _M_init(*__iter._M_h());
1533:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
1534:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1535:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Local_iterator_base&
1536:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator=(const _Local_iterator_base& __iter)
1537:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1538:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	if (_M_bucket_count != -1)
1539:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  _M_destroy();
1540:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_M_cur = __iter._M_cur;
1541:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_M_bucket = __iter._M_bucket;
1542:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_M_bucket_count = __iter._M_bucket_count;
1543:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	if (_M_bucket_count != -1)
1544:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  _M_init(*__iter._M_h());
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 82


1545:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return *this;
1546:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
1547:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1548:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
1549:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_incr()
1550:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1551:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_M_cur = _M_cur->_M_next();
1552:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	if (_M_cur)
1553:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  {
1554:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    std::size_t __bkt = this->_M_h()->_M_bucket_index(_M_cur,
1555:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 							      _M_bucket_count);
1556:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    if (__bkt != _M_bucket)
1557:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      _M_cur = nullptr;
1558:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  }
1559:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
1560:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1561:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Hash_node<_Value, false>*  _M_cur;
1562:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t _M_bucket;
1563:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t _M_bucket_count;
1564:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1565:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
1566:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_init(const __hash_code_base& __base)
1567:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { ::new(this->_M_h()) __hash_code_base(__base); }
1568:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1569:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
1570:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_destroy() { this->_M_h()->~__hash_code_base(); }
1571:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1572:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     public:
1573:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const void*
1574:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_curr() const { return _M_cur; }  // for equality ops and debug mode
1575:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1576:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t
1577:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_get_bucket() const { return _M_bucket; }  // for debug mode
1578:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
1579:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1580:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _ExtractKey,
1581:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash, bool __cache>
1582:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     inline bool
1583:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     operator==(const _Local_iterator_base<_Key, _Value, _ExtractKey,
1584:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					  _H1, _H2, _Hash, __cache>& __x,
1585:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	       const _Local_iterator_base<_Key, _Value, _ExtractKey,
1586:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					  _H1, _H2, _Hash, __cache>& __y)
1587:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { return __x._M_curr() == __y._M_curr(); }
1588:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1589:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _ExtractKey,
1590:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash, bool __cache>
1591:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     inline bool
1592:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     operator!=(const _Local_iterator_base<_Key, _Value, _ExtractKey,
1593:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					  _H1, _H2, _Hash, __cache>& __x,
1594:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	       const _Local_iterator_base<_Key, _Value, _ExtractKey,
1595:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					  _H1, _H2, _Hash, __cache>& __y)
1596:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { return __x._M_curr() != __y._M_curr(); }
1597:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1598:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// local iterators
1599:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _ExtractKey,
1600:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
1601:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   bool __constant_iterators, bool __cache>
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 83


1602:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Local_iterator
1603:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : public _Local_iterator_base<_Key, _Value, _ExtractKey,
1604:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 				  _H1, _H2, _Hash, __cache>
1605:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1606:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     private:
1607:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __base_type = _Local_iterator_base<_Key, _Value, _ExtractKey,
1608:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					       _H1, _H2, _Hash, __cache>;
1609:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hash_code_base = typename __base_type::__hash_code_base;
1610:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     public:
1611:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef _Value					value_type;
1612:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef typename std::conditional<__constant_iterators,
1613:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					const _Value*, _Value*>::type
1614:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						       pointer;
1615:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef typename std::conditional<__constant_iterators,
1616:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					const _Value&, _Value&>::type
1617:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						       reference;
1618:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef std::ptrdiff_t				difference_type;
1619:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef std::forward_iterator_tag			iterator_category;
1620:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1621:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Local_iterator() = default;
1622:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1623:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Local_iterator(const __hash_code_base& __base,
1624:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		      _Hash_node<_Value, __cache>* __n,
1625:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		      std::size_t __bkt, std::size_t __bkt_count)
1626:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : __base_type(__base, __n, __bkt, __bkt_count)
1627:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { }
1628:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1629:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       reference
1630:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator*() const
1631:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return this->_M_cur->_M_v(); }
1632:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1633:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       pointer
1634:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator->() const
1635:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return this->_M_cur->_M_valptr(); }
1636:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1637:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Local_iterator&
1638:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator++()
1639:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1640:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	this->_M_incr();
1641:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return *this;
1642:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
1643:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1644:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Local_iterator
1645:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator++(int)
1646:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1647:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_Local_iterator __tmp(*this);
1648:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	this->_M_incr();
1649:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return __tmp;
1650:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
1651:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
1652:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1653:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// local const_iterators
1654:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _ExtractKey,
1655:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
1656:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   bool __constant_iterators, bool __cache>
1657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Local_const_iterator
1658:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : public _Local_iterator_base<_Key, _Value, _ExtractKey,
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 84


1659:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 				  _H1, _H2, _Hash, __cache>
1660:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1661:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     private:
1662:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __base_type = _Local_iterator_base<_Key, _Value, _ExtractKey,
1663:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					       _H1, _H2, _Hash, __cache>;
1664:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hash_code_base = typename __base_type::__hash_code_base;
1665:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1666:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     public:
1667:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef _Value					value_type;
1668:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef const _Value*				pointer;
1669:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef const _Value&				reference;
1670:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef std::ptrdiff_t				difference_type;
1671:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef std::forward_iterator_tag			iterator_category;
1672:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1673:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Local_const_iterator() = default;
1674:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1675:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Local_const_iterator(const __hash_code_base& __base,
1676:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			    _Hash_node<_Value, __cache>* __n,
1677:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			    std::size_t __bkt, std::size_t __bkt_count)
1678:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : __base_type(__base, __n, __bkt, __bkt_count)
1679:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { }
1680:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1681:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Local_const_iterator(const _Local_iterator<_Key, _Value, _ExtractKey,
1682:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						  _H1, _H2, _Hash,
1683:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						  __constant_iterators,
1684:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						  __cache>& __x)
1685:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : __base_type(__x)
1686:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { }
1687:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1688:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       reference
1689:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator*() const
1690:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return this->_M_cur->_M_v(); }
1691:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1692:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       pointer
1693:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator->() const
1694:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return this->_M_cur->_M_valptr(); }
1695:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1696:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Local_const_iterator&
1697:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator++()
1698:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1699:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	this->_M_incr();
1700:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return *this;
1701:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
1702:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1703:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Local_const_iterator
1704:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator++(int)
1705:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1706:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_Local_const_iterator __tmp(*this);
1707:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	this->_M_incr();
1708:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return __tmp;
1709:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
1710:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
1711:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1712:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /**
1713:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Primary class template _Hashtable_base.
1714:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
1715:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Helper class adding management of _Equal functor to
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 85


1716:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  _Hash_code_base type.
1717:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
1718:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Base class templates are:
1719:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *    - __detail::_Hash_code_base
1720:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *    - __detail::_Hashtable_ebo_helper
1721:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    */
1722:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value,
1723:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
1724:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash, typename _Traits>
1725:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   struct _Hashtable_base
1726:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   : public _Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, _Hash,
1727:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			   _Traits::__hash_cached::value>,
1728:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     private _Hashtable_ebo_helper<0, _Equal>
1729:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   {
1730:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   public:
1731:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     typedef _Key					key_type;
1732:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     typedef _Value					value_type;
1733:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     typedef _Equal					key_equal;
1734:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     typedef std::size_t					size_type;
1735:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     typedef std::ptrdiff_t				difference_type;
1736:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1737:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     using __traits_type = _Traits;
1738:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     using __hash_cached = typename __traits_type::__hash_cached;
1739:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     using __constant_iterators = typename __traits_type::__constant_iterators;
1740:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     using __unique_keys = typename __traits_type::__unique_keys;
1741:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1742:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     using __hash_code_base = _Hash_code_base<_Key, _Value, _ExtractKey,
1743:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					     _H1, _H2, _Hash,
1744:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					     __hash_cached::value>;
1745:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1746:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     using __hash_code = typename __hash_code_base::__hash_code;
1747:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     using __node_type = typename __hash_code_base::__node_type;
1748:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1749:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     using iterator = __detail::_Node_iterator<value_type,
1750:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					      __constant_iterators::value,
1751:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					      __hash_cached::value>;
1752:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1753:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     using const_iterator = __detail::_Node_const_iterator<value_type,
1754:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						   __constant_iterators::value,
1755:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						   __hash_cached::value>;
1756:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1757:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     using local_iterator = __detail::_Local_iterator<key_type, value_type,
1758:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						  _ExtractKey, _H1, _H2, _Hash,
1759:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						  __constant_iterators::value,
1760:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						     __hash_cached::value>;
1761:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1762:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     using const_local_iterator = __detail::_Local_const_iterator<key_type,
1763:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 								 value_type,
1764:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					_ExtractKey, _H1, _H2, _Hash,
1765:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					__constant_iterators::value,
1766:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					__hash_cached::value>;
1767:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1768:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     using __ireturn_type = typename std::conditional<__unique_keys::value,
1769:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						     std::pair<iterator, bool>,
1770:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						     iterator>::type;
1771:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   private:
1772:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     using _EqualEBO = _Hashtable_ebo_helper<0, _Equal>;
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 86


1773:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1774:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     template<typename _NodeT>
1775:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       struct _Equal_hash_code
1776:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1777:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****        static bool
1778:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****        _S_equals(__hash_code, const _NodeT&)
1779:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****        { return true; }
1780:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       };
1781:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1782:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     template<typename _Ptr2>
1783:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       struct _Equal_hash_code<_Hash_node<_Ptr2, true>>
1784:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1785:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****        static bool
1786:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****        _S_equals(__hash_code __c, const _Hash_node<_Ptr2, true>& __n)
1787:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****        { return __c == __n._M_hash_code; }
1788:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       };
1789:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1790:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   protected:
1791:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Hashtable_base() = default;
1792:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Hashtable_base(const _ExtractKey& __ex, const _H1& __h1, const _H2& __h2,
1793:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		    const _Hash& __hash, const _Equal& __eq)
1794:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : __hash_code_base(__ex, __h1, __h2, __hash), _EqualEBO(__eq)
1795:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { }
1796:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1797:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     bool
1798:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _M_equals(const _Key& __k, __hash_code __c, __node_type* __n) const
1799:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1800:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       static_assert(__is_invocable<const _Equal&, const _Key&, const _Key&>{},
1801:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  "key equality predicate must be invocable with two arguments of "
1802:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  "key type");
1803:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       return _Equal_hash_code<__node_type>::_S_equals(__c, *__n)
1804:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	&& _M_eq()(__k, this->_M_extract()(__n->_M_v()));
1805:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
1806:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1807:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     void
1808:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _M_swap(_Hashtable_base& __x)
1809:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1810:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __hash_code_base::_M_swap(__x);
1811:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::swap(_EqualEBO::_M_get(), __x._EqualEBO::_M_get());
1812:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
1813:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1814:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     const _Equal&
1815:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _M_eq() const { return _EqualEBO::_M_cget(); }
1816:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
1817:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1818:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /**
1819:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Primary class template  _Equality.
1820:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
1821:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  This is for implementing equality comparison for unordered
1822:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  containers, per N3068, by John Lakos and Pablo Halpern.
1823:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Algorithmically, we follow closely the reference implementations
1824:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  therein.
1825:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    */
1826:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _Alloc,
1827:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
1828:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
1829:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits,
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 87


1830:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   bool _Unique_keys = _Traits::__unique_keys::value>
1831:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Equality;
1832:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1833:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// unordered_map and unordered_set specializations.
1834:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _Alloc,
1835:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
1836:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
1837:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
1838:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Equality<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1839:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		     _H1, _H2, _Hash, _RehashPolicy, _Traits, true>
1840:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1841:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hashtable = _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1842:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 				     _H1, _H2, _Hash, _RehashPolicy, _Traits>;
1843:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1844:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       bool
1845:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_equal(const __hashtable&) const;
1846:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
1847:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1848:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _Alloc,
1849:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
1850:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
1851:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
1852:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     bool
1853:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Equality<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1854:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      _H1, _H2, _Hash, _RehashPolicy, _Traits, true>::
1855:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _M_equal(const __hashtable& __other) const
1856:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1857:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_base = typename __hashtable::__node_base;
1858:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_type = typename __hashtable::__node_type;
1859:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const __hashtable* __this = static_cast<const __hashtable*>(this);
1860:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       if (__this->size() != __other.size())
1861:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return false;
1862:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1863:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       for (auto __itx = __this->begin(); __itx != __this->end(); ++__itx)
1864:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	{
1865:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  std::size_t __ybkt = __other._M_bucket_index(__itx._M_cur);
1866:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  __node_base* __prev_n = __other._M_buckets[__ybkt];
1867:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  if (!__prev_n)
1868:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    return false;
1869:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1870:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  for (__node_type* __n = static_cast<__node_type*>(__prev_n->_M_nxt);;
1871:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	       __n = __n->_M_next())
1872:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    {
1873:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      if (__n->_M_v() == *__itx)
1874:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		break;
1875:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1876:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      if (!__n->_M_nxt
1877:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		  || __other._M_bucket_index(__n->_M_next()) != __ybkt)
1878:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		return false;
1879:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    }
1880:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	}
1881:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1882:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       return true;
1883:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
1884:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1885:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// unordered_multiset and unordered_multimap specializations.
1886:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _Alloc,
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 88


1887:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
1888:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
1889:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
1890:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Equality<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1891:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		     _H1, _H2, _Hash, _RehashPolicy, _Traits, false>
1892:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1893:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hashtable = _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1894:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 				     _H1, _H2, _Hash, _RehashPolicy, _Traits>;
1895:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1896:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       bool
1897:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_equal(const __hashtable&) const;
1898:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
1899:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1900:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _Alloc,
1901:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
1902:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
1903:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
1904:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     bool
1905:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Equality<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1906:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      _H1, _H2, _Hash, _RehashPolicy, _Traits, false>::
1907:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _M_equal(const __hashtable& __other) const
1908:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1909:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_base = typename __hashtable::__node_base;
1910:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_type = typename __hashtable::__node_type;
1911:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const __hashtable* __this = static_cast<const __hashtable*>(this);
1912:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       if (__this->size() != __other.size())
1913:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return false;
1914:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1915:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       for (auto __itx = __this->begin(); __itx != __this->end();)
1916:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	{
1917:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  std::size_t __x_count = 1;
1918:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  auto __itx_end = __itx;
1919:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  for (++__itx_end; __itx_end != __this->end()
1920:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		 && __this->key_eq()(_ExtractKey()(*__itx),
1921:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 				     _ExtractKey()(*__itx_end));
1922:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	       ++__itx_end)
1923:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    ++__x_count;
1924:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1925:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  std::size_t __ybkt = __other._M_bucket_index(__itx._M_cur);
1926:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  __node_base* __y_prev_n = __other._M_buckets[__ybkt];
1927:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  if (!__y_prev_n)
1928:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    return false;
1929:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1930:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  __node_type* __y_n = static_cast<__node_type*>(__y_prev_n->_M_nxt);
1931:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  for (;; __y_n = __y_n->_M_next())
1932:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    {
1933:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      if (__this->key_eq()(_ExtractKey()(__y_n->_M_v()),
1934:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 				   _ExtractKey()(*__itx)))
1935:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		break;
1936:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1937:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      if (!__y_n->_M_nxt
1938:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		  || __other._M_bucket_index(__y_n->_M_next()) != __ybkt)
1939:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		return false;
1940:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    }
1941:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1942:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  typename __hashtable::const_iterator __ity(__y_n);
1943:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  for (auto __ity_end = __ity; __ity_end != __other.end(); ++__ity_end)
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 89


1944:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    if (--__x_count == 0)
1945:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      break;
1946:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1947:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  if (__x_count != 0)
1948:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    return false;
1949:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1950:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  if (!std::is_permutation(__itx, __itx_end, __ity))
1951:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    return false;
1952:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1953:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  __itx = __itx_end;
1954:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	}
1955:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       return true;
1956:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
1957:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1958:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /**
1959:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    * This type deals with all allocation and keeps an allocator instance
1960:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    * through inheritance to benefit from EBO when possible.
1961:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    */
1962:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _NodeAlloc>
1963:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hashtable_alloc : private _Hashtable_ebo_helper<0, _NodeAlloc>
1964:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1965:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     private:
1966:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __ebo_node_alloc = _Hashtable_ebo_helper<0, _NodeAlloc>;
1967:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     public:
1968:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_type = typename _NodeAlloc::value_type;
1969:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_alloc_type = _NodeAlloc;
1970:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       // Use __gnu_cxx to benefit from _S_always_equal and al.
1971:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_alloc_traits = __gnu_cxx::__alloc_traits<__node_alloc_type>;
1972:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1973:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __value_alloc_traits = typename __node_alloc_traits::template
1974:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	rebind_traits<typename __node_type::value_type>;
1975:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1976:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_base = __detail::_Hash_node_base;
1977:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __bucket_type = __node_base*;      
1978:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __bucket_alloc_type =
1979:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__alloc_rebind<__node_alloc_type, __bucket_type>;
1980:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __bucket_alloc_traits = std::allocator_traits<__bucket_alloc_type>;
1981:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1982:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Hashtable_alloc() = default;
1983:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Hashtable_alloc(const _Hashtable_alloc&) = default;
1984:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Hashtable_alloc(_Hashtable_alloc&&) = default;
1985:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1986:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       template<typename _Alloc>
1987:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_Hashtable_alloc(_Alloc&& __a)
1988:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	: __ebo_node_alloc(std::forward<_Alloc>(__a))
1989:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	{ }
1990:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1991:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __node_alloc_type&
1992:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_node_allocator()
1993:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return __ebo_node_alloc::_M_get(); }
1994:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1995:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const __node_alloc_type&
1996:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_node_allocator() const
1997:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return __ebo_node_alloc::_M_cget(); }
1998:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1999:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       // Allocate a node and construct an element within it.
2000:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       template<typename... _Args>
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 90


2001:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__node_type*
2002:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_M_allocate_node(_Args&&... __args);
2003:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
2004:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       // Destroy the element within a node and deallocate the node.
2005:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
2006:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_deallocate_node(__node_type* __n);
2007:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
2008:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       // Deallocate a node.
2009:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
2010:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_deallocate_node_ptr(__node_type* __n);
2011:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
2012:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       // Deallocate the linked list of nodes pointed to by __n.
2013:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       // The elements within the nodes are destroyed.
2014:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
2015:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_deallocate_nodes(__node_type* __n);
2016:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
2017:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __bucket_type*
2018:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_allocate_buckets(std::size_t __bkt_count);
2019:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
2020:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
2021:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_deallocate_buckets(__bucket_type*, std::size_t __bkt_count);
2022:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
2023:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
2024:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // Definitions of class template _Hashtable_alloc's out-of-line member
2025:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // functions.
2026:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _NodeAlloc>
2027:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     template<typename... _Args>
2028:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       auto
2029:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&&... __args)
2030:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       -> __node_type*
2031:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
2032:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	auto __nptr = __node_alloc_traits::allocate(_M_node_allocator(), 1);
2033:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__node_type* __n = std::__to_address(__nptr);
2034:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__try
2035:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  {
2036:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    ::new ((void*)__n) __node_type;
2037:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    __node_alloc_traits::construct(_M_node_allocator(),
2038:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					   __n->_M_valptr(),
2039:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					   std::forward<_Args>(__args)...);
2040:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    return __n;
2041:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  }
2042:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__catch(...)
2043:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  {
2044:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    __node_alloc_traits::deallocate(_M_node_allocator(), __nptr, 1);
2045:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    __throw_exception_again;
2046:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  }
2047:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
2048:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
2049:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _NodeAlloc>
2050:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     void
2051:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Hashtable_alloc<_NodeAlloc>::_M_deallocate_node(__node_type* __n)
2052:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
2053:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __node_alloc_traits::destroy(_M_node_allocator(), __n->_M_valptr());
2054:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_deallocate_node_ptr(__n);
2055:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
2056:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
2057:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _NodeAlloc>
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 91


2058:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     void
2059:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Hashtable_alloc<_NodeAlloc>::_M_deallocate_node_ptr(__node_type* __n)
2060:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
2061:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef typename __node_alloc_traits::pointer _Ptr;
2062:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       auto __ptr = std::pointer_traits<_Ptr>::pointer_to(*__n);
2063:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __n->~__node_type();
2064:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __node_alloc_traits::deallocate(_M_node_allocator(), __ptr, 1);
2065:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
2066:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
2067:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _NodeAlloc>
2068:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     void
2069:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Hashtable_alloc<_NodeAlloc>::_M_deallocate_nodes(__node_type* __n)
 332              		.loc 14 2069 5 is_stmt 1 view .LVU43
 333              	.LBB2418:
2070:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
2071:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       while (__n)
 334              		.loc 14 2071 14 view .LVU44
 335 0006 34B1     		cbz	r4, .L12
 336              	.LVL14:
 337              	.L13:
 338              	.LBB2419:
 339              	.LBB2420:
 340              	.LBI2420:
 282:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return static_cast<_Hash_node*>(this->_M_nxt); }
 341              		.loc 14 282 7 view .LVU45
 342 0008 2046     		mov	r0, r4
 343              	.LBB2421:
 283:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 344              		.loc 14 283 53 is_stmt 0 view .LVU46
 345 000a 2468     		ldr	r4, [r4]
 346              	.LVL15:
 283:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 347              		.loc 14 283 53 view .LVU47
 348              	.LBE2421:
 349              	.LBE2420:
 350              	.LBB2422:
 351              	.LBI2422:
2051:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 352              		.loc 14 2051 5 is_stmt 1 view .LVU48
 353              	.LBB2423:
 354              	.LBI2423:
2059:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 355              		.loc 14 2059 5 view .LVU49
 356              	.LBB2424:
 357              	.LBB2425:
 358              	.LBI2425:
 359              		.file 15 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
   1:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // Allocator traits -*- C++ -*-
   2:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
   3:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // Copyright (C) 2011-2020 Free Software Foundation, Inc.
   4:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** //
   5:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // software; you can redistribute it and/or modify it under the
   7:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // terms of the GNU General Public License as published by the
   8:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // any later version.
  10:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 92


  11:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // This library is distributed in the hope that it will be useful,
  12:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // GNU General Public License for more details.
  15:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  16:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  20:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // You should have received a copy of the GNU General Public License and
  21:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // <http://www.gnu.org/licenses/>.
  24:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  25:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** /** @file bits/alloc_traits.h
  26:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****  *  This is an internal header file, included by other library headers.
  27:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****  *  Do not attempt to use it directly. @headername{memory}
  28:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****  */
  29:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  30:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #ifndef _ALLOC_TRAITS_H
  31:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #define _ALLOC_TRAITS_H 1
  32:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  33:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #include <bits/stl_construct.h>
  34:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #include <bits/memoryfwd.h>
  35:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus >= 201103L
  36:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** # include <bits/allocator.h>
  37:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** # include <bits/ptr_traits.h>
  38:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** # include <ext/numeric_traits.h>
  39:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
  40:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  41:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** namespace std _GLIBCXX_VISIBILITY(default)
  42:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** {
  43:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  44:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  45:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus >= 201103L
  46:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #define __cpp_lib_allocator_traits_is_always_equal 201411
  47:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  48:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   struct __allocator_traits_base
  49:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   {
  50:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp, typename _Up, typename = void>
  51:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       struct __rebind : __replace_first_arg<_Tp, _Up> { };
  52:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  53:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp, typename _Up>
  54:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       struct __rebind<_Tp, _Up,
  55:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		      __void_t<typename _Tp::template rebind<_Up>::other>>
  56:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { using type = typename _Tp::template rebind<_Up>::other; };
  57:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  58:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   protected:
  59:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  60:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __pointer = typename _Tp::pointer;
  61:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  62:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __c_pointer = typename _Tp::const_pointer;
  63:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  64:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __v_pointer = typename _Tp::void_pointer;
  65:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  66:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __cv_pointer = typename _Tp::const_void_pointer;
  67:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 93


  68:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __pocca = typename _Tp::propagate_on_container_copy_assignment;
  69:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  70:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __pocma = typename _Tp::propagate_on_container_move_assignment;
  71:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  72:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __pocs = typename _Tp::propagate_on_container_swap;
  73:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  74:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __equal = typename _Tp::is_always_equal;
  75:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   };
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  77:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc, typename _Up>
  78:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     using __alloc_rebind
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       = typename __allocator_traits_base::template __rebind<_Alloc, _Up>::type;
  80:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  81:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   /**
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    * @brief  Uniform interface to all allocator types.
  83:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    * @ingroup allocators
  84:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   */
  85:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
  86:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct allocator_traits : __allocator_traits_base
  87:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
  88:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator type
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef _Alloc allocator_type;
  90:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocated type
  91:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef typename _Alloc::value_type value_type;
  92:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  93:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
  94:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's pointer type.
  95:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
  96:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::pointer if that type exists, otherwise @c value_type*
  97:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
  98:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using pointer = __detected_or_t<value_type*, __pointer, _Alloc>;
  99:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 100:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     private:
 101:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       // Select _Func<_Alloc> or pointer_traits<pointer>::rebind<_Tp>
 102:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<template<typename> class _Func, typename _Tp, typename = void>
 103:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Ptr
 104:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 105:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  using type = typename pointer_traits<pointer>::template rebind<_Tp>;
 106:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	};
 107:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 108:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<template<typename> class _Func, typename _Tp>
 109:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Ptr<_Func, _Tp, __void_t<_Func<_Alloc>>>
 110:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 111:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  using type = _Func<_Alloc>;
 112:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	};
 113:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 114:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       // Select _A2::difference_type or pointer_traits<_Ptr>::difference_type
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _A2, typename _PtrT, typename = void>
 116:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Diff
 117:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ using type = typename pointer_traits<_PtrT>::difference_type; };
 118:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 119:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _A2, typename _PtrT>
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Diff<_A2, _PtrT, __void_t<typename _A2::difference_type>>
 121:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ using type = typename _A2::difference_type; };
 122:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 123:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       // Select _A2::size_type or make_unsigned<_DiffT>::type
 124:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _A2, typename _DiffT, typename = void>
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 94


 125:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Size : make_unsigned<_DiffT> { };
 126:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 127:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _A2, typename _DiffT>
 128:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Size<_A2, _DiffT, __void_t<typename _A2::size_type>>
 129:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ using type = typename _A2::size_type; };
 130:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 131:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     public:
 132:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's const pointer type.
 134:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 135:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::const_pointer if that type exists, otherwise
 136:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<const value_type> </tt>
 137:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 138:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using const_pointer = typename _Ptr<__c_pointer, const value_type>::type;
 139:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 140:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 141:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's void pointer type.
 142:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 143:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::void_pointer if that type exists, otherwise
 144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<void> </tt>
 145:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 146:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using void_pointer = typename _Ptr<__v_pointer, void>::type;
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 148:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 149:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's const void pointer type.
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 151:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::const_void_pointer if that type exists, otherwise
 152:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<const void> </tt>
 153:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 154:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using const_void_pointer = typename _Ptr<__cv_pointer, const void>::type;
 155:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 156:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 157:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's difference type
 158:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::difference_type if that type exists, otherwise
 160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> pointer_traits<pointer>::difference_type </tt>
 161:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 162:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using difference_type = typename _Diff<_Alloc, pointer>::type;
 163:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 164:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 165:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's size type
 166:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 167:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::size_type if that type exists, otherwise
 168:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> make_unsigned<difference_type>::type </tt>
 169:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 170:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using size_type = typename _Size<_Alloc, difference_type>::type;
 171:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 172:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 173:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   How the allocator is propagated on copy assignment
 174:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 175:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::propagate_on_container_copy_assignment if that type exists,
 176:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * otherwise @c false_type
 177:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 178:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_copy_assignment
 179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	= __detected_or_t<false_type, __pocca, _Alloc>;
 180:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 181:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 95


 182:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   How the allocator is propagated on move assignment
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 184:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::propagate_on_container_move_assignment if that type exists,
 185:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * otherwise @c false_type
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_move_assignment
 188:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	= __detected_or_t<false_type, __pocma, _Alloc>;
 189:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 191:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   How the allocator is propagated on swap
 192:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 193:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::propagate_on_container_swap if that type exists,
 194:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * otherwise @c false_type
 195:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 196:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_swap
 197:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	= __detected_or_t<false_type, __pocs, _Alloc>;
 198:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 199:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   Whether all instances of the allocator type compare equal.
 201:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 202:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::is_always_equal if that type exists,
 203:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * otherwise @c is_empty<Alloc>::type
 204:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 205:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using is_always_equal
 206:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	= __detected_or_t<typename is_empty<_Alloc>::type, __equal, _Alloc>;
 207:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 208:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp>
 209:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using rebind_alloc = __alloc_rebind<_Alloc, _Tp>;
 210:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp>
 211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using rebind_traits = allocator_traits<rebind_alloc<_Tp>>;
 212:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 213:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     private:
 214:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 215:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr auto
 216:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_allocate(_Alloc2& __a, size_type __n, const_void_pointer __hint, int)
 217:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(__a.allocate(__n, __hint))
 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a.allocate(__n, __hint); }
 219:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 220:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr pointer
 222:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_allocate(_Alloc2& __a, size_type __n, const_void_pointer, ...)
 223:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a.allocate(__n); }
 224:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 225:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 226:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct __construct_helper
 227:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 228:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  template<typename _Alloc2,
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	    typename = decltype(std::declval<_Alloc2*>()->construct(
 230:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  std::declval<_Tp*>(), std::declval<_Args>()...))>
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	    static true_type __test(int);
 232:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 233:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  template<typename>
 234:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	    static false_type __test(...);
 235:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  using type = decltype(__test<_Alloc>(0));
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	};
 238:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 96


 239:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 240:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using __has_construct
 241:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  = typename __construct_helper<_Tp, _Args...>::type;
 242:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 243:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 244:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR _Require<__has_construct<_Tp, _Args...>>
 245:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_construct(_Alloc& __a, _Tp* __p, _Args&&... __args)
 246:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(noexcept(__a.construct(__p, std::forward<_Args>(__args)...)))
 247:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 248:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 249:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 250:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR
 251:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_Require<__and_<__not_<__has_construct<_Tp, _Args...>>,
 252:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 			       is_constructible<_Tp, _Args...>>>
 253:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_construct(_Alloc&, _Tp* __p, _Args&&... __args)
 254:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(std::is_nothrow_constructible<_Tp, _Args...>::value)
 255:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 256:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 257:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
 258:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 259:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  std::construct_at(__p, std::forward<_Args>(__args)...);
 260:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 261:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 262:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 263:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2, typename _Tp>
 264:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR auto
 265:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_destroy(_Alloc2& __a, _Tp* __p, int)
 266:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(noexcept(__a.destroy(__p)))
 267:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(__a.destroy(__p))
 268:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ __a.destroy(__p); }
 269:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 270:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2, typename _Tp>
 271:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR void
 272:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_destroy(_Alloc2&, _Tp* __p, ...)
 273:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(std::is_nothrow_destructible<_Tp>::value)
 274:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ std::_Destroy(__p); }
 275:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 276:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 277:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr auto
 278:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_max_size(_Alloc2& __a, int)
 279:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(__a.max_size())
 280:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a.max_size(); }
 281:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 282:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 283:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr size_type
 284:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_max_size(_Alloc2&, ...)
 285:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 286:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  // _GLIBCXX_RESOLVE_LIB_DEFECTS
 287:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  // 2466. allocator_traits::max_size() default behavior is incorrect
 288:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  return __gnu_cxx::__numeric_traits<size_type>::__max
 289:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	    / sizeof(value_type);
 290:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 291:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 292:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 293:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr auto
 294:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_select(_Alloc2& __a, int)
 295:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(__a.select_on_container_copy_construction())
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 97


 296:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a.select_on_container_copy_construction(); }
 297:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 298:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 299:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr _Alloc2
 300:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_select(_Alloc2& __a, ...)
 301:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a; }
 302:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 303:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     public:
 304:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 305:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 306:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Allocate memory.
 307:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 308:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 309:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 310:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls @c a.allocate(n)
 311:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 312:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 313:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       allocate(_Alloc& __a, size_type __n)
 314:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 315:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 316:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 317:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Allocate memory.
 318:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 319:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 320:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __hint Aid to locality.
 321:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return Memory of suitable size and alignment for @a n objects
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *          of type @c value_type
 323:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 324:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Returns <tt> a.allocate(n, hint) </tt> if that expression is
 325:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  well-formed, otherwise returns @c a.allocate(n)
 326:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 327:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 328:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       allocate(_Alloc& __a, size_type __n, const_void_pointer __hint)
 329:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return _S_allocate(__a, __n, __hint, 0); }
 330:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 331:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 332:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Deallocate memory.
 333:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 334:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to the memory to deallocate.
 335:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects space was allocated for.
 336:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 337:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls <tt> a.deallocate(p, n) </tt>
 338:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 339:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR void
 340:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       deallocate(_Alloc& __a, pointer __p, size_type __n)
 341:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 342:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 343:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 344:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Construct an object of type @a _Tp
 345:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 346:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to memory of suitable size and alignment for Tp
 347:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __args Constructor arguments.
 348:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 349:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls <tt> __a.construct(__p, std::forward<Args>(__args)...) </tt>
 350:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  if that expression is well-formed, otherwise uses placement-new
 351:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  to construct an object of type @a _Tp at location @a __p from the
 352:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  arguments @a __args...
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 98


 353:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 354:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 355:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR auto
 356:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	construct(_Alloc& __a, _Tp* __p, _Args&&... __args)
 357:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(noexcept(_S_construct(__a, __p,
 358:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 				       std::forward<_Args>(__args)...)))
 359:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(_S_construct(__a, __p, std::forward<_Args>(__args)...))
 360:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ _S_construct(__a, __p, std::forward<_Args>(__args)...); }
 361:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 362:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 363:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Destroy an object of type @a _Tp
 364:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 365:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to the object to destroy
 366:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 367:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls @c __a.destroy(__p) if that expression is well-formed,
 368:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  otherwise calls @c __p->~_Tp()
 369:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 370:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp>
 371:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR void
 372:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	destroy(_Alloc& __a, _Tp* __p)
 373:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(noexcept(_S_destroy(__a, __p, 0)))
 374:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ _S_destroy(__a, __p, 0); }
 375:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 376:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 377:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  The maximum supported allocation size
 378:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 379:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return @c __a.max_size() or @c numeric_limits<size_type>::max()
 380:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 381:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Returns @c __a.max_size() if that expression is well-formed,
 382:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  otherwise returns @c numeric_limits<size_type>::max()
 383:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 384:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR size_type
 385:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       max_size(const _Alloc& __a) noexcept
 386:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return _S_max_size(__a, 0); }
 387:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 388:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 389:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Obtain an allocator to use when copying a container.
 390:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __rhs  An allocator.
 391:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return @c __rhs.select_on_container_copy_construction() or @a __rhs
 392:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 393:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Returns @c __rhs.select_on_container_copy_construction() if that
 394:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  expression is well-formed, otherwise returns @a __rhs
 395:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 396:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR _Alloc
 397:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       select_on_container_copy_construction(const _Alloc& __rhs)
 398:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return _S_select(__rhs, 0); }
 399:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     };
 400:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 401:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus > 201703L
 402:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** # define __cpp_lib_constexpr_dynamic_alloc 201907L
 403:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 404:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 405:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   /// Partial specialization for std::allocator.
 406:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Tp>
 407:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct allocator_traits<allocator<_Tp>>
 408:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 409:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator type
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 99


 410:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using allocator_type = allocator<_Tp>;
 411:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 412:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocated type
 413:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using value_type = _Tp;
 414:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 415:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's pointer type.
 416:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using pointer = _Tp*;
 417:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 418:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's const pointer type.
 419:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using const_pointer = const _Tp*;
 420:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 421:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's void pointer type.
 422:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using void_pointer = void*;
 423:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 424:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's const void pointer type.
 425:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using const_void_pointer = const void*;
 426:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 427:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's difference type
 428:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using difference_type = std::ptrdiff_t;
 429:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 430:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's size type
 431:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using size_type = std::size_t;
 432:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// How the allocator is propagated on copy assignment
 434:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_copy_assignment = false_type;
 435:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 436:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// How the allocator is propagated on move assignment
 437:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_move_assignment = true_type;
 438:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 439:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// How the allocator is propagated on swap
 440:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_swap = false_type;
 441:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 442:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// Whether all instances of the allocator type compare equal.
 443:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using is_always_equal = true_type;
 444:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 445:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Up>
 446:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using rebind_alloc = allocator<_Up>;
 447:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 448:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Up>
 449:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using rebind_traits = allocator_traits<allocator<_Up>>;
 450:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 452:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Allocate memory.
 453:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 454:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 455:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 456:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls @c a.allocate(n)
 457:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 458:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 459:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       allocate(allocator_type& __a, size_type __n)
 460:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 461:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 462:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 463:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Allocate memory.
 464:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 465:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 466:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __hint Aid to locality.
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 100


 467:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return Memory of suitable size and alignment for @a n objects
 468:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *          of type @c value_type
 469:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 470:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Returns <tt> a.allocate(n, hint) </tt>
 471:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 472:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 473:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       allocate(allocator_type& __a, size_type __n, const_void_pointer __hint)
 474:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       {
 475:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 476:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	return __a.allocate(__n, __hint);
 477:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 478:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	return __a.allocate(__n);
 479:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 480:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       }
 481:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 482:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 483:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Deallocate memory.
 484:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 485:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to the memory to deallocate.
 486:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects space was allocated for.
 487:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 488:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls <tt> a.deallocate(p, n) </tt>
 489:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 490:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR void
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       deallocate(allocator_type& __a, pointer __p, size_type __n)
 360              		.loc 15 491 7 view .LVU50
 361              	.LBB2426:
 362              	.LBI2426:
 363              		.file 16 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
   1:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // Allocator that wraps operator new -*- C++ -*-
   2:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
   3:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** //
   5:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // software; you can redistribute it and/or modify it under the
   7:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // terms of the GNU General Public License as published by the
   8:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // any later version.
  10:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  11:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // This library is distributed in the hope that it will be useful,
  12:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // GNU General Public License for more details.
  15:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  16:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  20:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // You should have received a copy of the GNU General Public License and
  21:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // <http://www.gnu.org/licenses/>.
  24:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  25:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** /** @file ext/new_allocator.h
  26:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****  */
  28:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 101


  29:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #ifndef _NEW_ALLOCATOR_H
  30:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #define _NEW_ALLOCATOR_H 1
  31:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  32:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <bits/c++config.h>
  33:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <new>
  34:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <bits/functexcept.h>
  35:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <bits/move.h>
  36:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus >= 201103L
  37:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <type_traits>
  38:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
  39:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  40:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  41:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** {
  42:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  43:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  44:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****   /**
  45:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *  @brief  An allocator that uses global new, as per [20.4].
  46:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *  @ingroup allocators
  47:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *
  48:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *  This is precisely the allocator defined in the C++ Standard.
  49:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *    - all allocation calls operator new
  50:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *    - all deallocation calls operator delete
  51:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *
  52:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *  @tparam  _Tp  Type of allocated object.
  53:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    */
  54:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****   template<typename _Tp>
  55:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****     class new_allocator
  56:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****     {
  57:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****     public:
  58:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef _Tp        value_type;
  59:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef std::size_t     size_type;
  60:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef std::ptrdiff_t  difference_type;
  61:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus <= 201703L
  62:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef _Tp*       pointer;
  63:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef const _Tp* const_pointer;
  64:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef _Tp&       reference;
  65:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef const _Tp& const_reference;
  66:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  67:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       template<typename _Tp1>
  68:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	struct rebind
  69:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	{ typedef new_allocator<_Tp1> other; };
  70:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
  71:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  72:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus >= 201103L
  73:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  74:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // 2103. propagate_on_container_move_assignment
  75:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef std::true_type propagate_on_container_move_assignment;
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
  77:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  78:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       _GLIBCXX20_CONSTEXPR
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  80:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  81:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       _GLIBCXX20_CONSTEXPR
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
  83:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  84:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       template<typename _Tp1>
  85:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	_GLIBCXX20_CONSTEXPR
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 102


  86:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }
  87:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  88:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus <= 201703L
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  90:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  91:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       pointer
  92:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       address(reference __x) const _GLIBCXX_NOEXCEPT
  93:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       { return std::__addressof(__x); }
  94:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  95:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       const_pointer
  96:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       address(const_reference __x) const _GLIBCXX_NOEXCEPT
  97:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       { return std::__addressof(__x); }
  98:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
  99:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 100:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // NB: __n is permitted to be 0.  The C++ standard says nothing
 101:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // about what the return value is when __n == 0.
 102:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       _GLIBCXX_NODISCARD _Tp*
 103:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       allocate(size_type __n, const void* = static_cast<const void*>(0))
 104:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 105:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	if (__n > this->_M_max_size())
 106:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  std::__throw_bad_alloc();
 107:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 108:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_aligned_new
 109:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
 110:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  {
 111:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
 112:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
 113:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  }
 114:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 116:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 117:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 118:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // __p is not permitted to be a null pointer.
 119:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       void
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       deallocate(_Tp* __p, size_type __t)
 364              		.loc 16 120 7 view .LVU51
 365              	.LBB2427:
 121:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 122:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_aligned_new
 123:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
 124:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  {
 125:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	    ::operator delete(__p,
 126:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** # if __cpp_sized_deallocation
 127:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 			      __t * sizeof(_Tp),
 128:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** # endif
 129:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 			      std::align_val_t(alignof(_Tp)));
 130:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	    return;
 131:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  }
 132:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	::operator delete(__p
 366              		.loc 16 133 19 is_stmt 0 view .LVU52
 367 000c 0C21     		movs	r1, #12
 368 000e FFF7FEFF 		bl	_ZdlPvj
 369              	.LVL16:
 370              		.loc 16 133 19 view .LVU53
 371              	.LBE2427:
 372              	.LBE2426:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 103


 373              	.LBE2425:
 374              	.LBE2424:
 375              	.LBE2423:
 376              	.LBE2422:
 377              	.LBE2419:
 378              		.loc 14 2071 14 is_stmt 1 view .LVU54
 379 0012 002C     		cmp	r4, #0
 380 0014 F8D1     		bne	.L13
 381              	.L12:
 382              	.LVL17:
 383              		.loc 14 2071 14 is_stmt 0 view .LVU55
 384              	.LBE2418:
 385              	.LBE2417:
2027:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
2028:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     clear() noexcept
2029:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
2030:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       this->_M_deallocate_nodes(_M_begin());
2031:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __builtin_memset(_M_buckets, 0, _M_bucket_count * sizeof(__bucket_type));
 386              		.loc 12 2031 23 view .LVU56
 387 0016 AA68     		ldr	r2, [r5, #8]
 388 0018 0021     		movs	r1, #0
 389 001a 6868     		ldr	r0, [r5, #4]
 390 001c 9200     		lsls	r2, r2, #2
 391 001e FFF7FEFF 		bl	memset
 392              	.LVL18:
 393              	.LBE2428:
 394              	.LBE2431:
 395              	.LBB2432:
 396              	.LBB2433:
 412:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 397              		.loc 12 412 30 view .LVU57
 398 0022 6868     		ldr	r0, [r5, #4]
 399              	.LBB2434:
 400              	.LBB2435:
 401              	.LBB2436:
 402              	.LBB2437:
 380:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 403              		.loc 12 380 44 view .LVU58
 404 0024 05F11C03 		add	r3, r5, #28
 405              	.LBE2437:
 406              	.LBE2436:
 407              	.LBE2435:
 408              	.LBE2434:
 409              	.LBE2433:
 410              	.LBE2432:
 411              	.LBB2454:
 412              	.LBB2429:
2032:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_element_count = 0;
 413              		.loc 12 2032 24 view .LVU59
 414 0028 0022     		movs	r2, #0
 415              	.LBE2429:
 416              	.LBE2454:
 417              	.LBB2455:
 418              	.LBB2452:
 412:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 419              		.loc 12 412 30 view .LVU60
 420 002a A968     		ldr	r1, [r5, #8]
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 104


 421              	.LBB2450:
 422              	.LBB2448:
 404:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return;
 423              		.loc 12 404 2 view .LVU61
 424 002c 9842     		cmp	r0, r3
 425              	.LBE2448:
 426              	.LBE2450:
 427              	.LBE2452:
 428              	.LBE2455:
 429              	.LBB2456:
 430              	.LBB2430:
2033:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_before_begin._M_nxt = nullptr;
 431              		.loc 12 2033 30 view .LVU62
 432 002e C5E90322 		strd	r2, r2, [r5, #12]
 433              	.LVL19:
 434              		.loc 12 2033 30 view .LVU63
 435              	.LBE2430:
 436              	.LBE2456:
 437              	.LBB2457:
 438              	.LBI2432:
 411:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { _M_deallocate_buckets(_M_buckets, _M_bucket_count); }
 439              		.loc 12 411 7 is_stmt 1 view .LVU64
 440              	.LBB2453:
 441              	.LBB2451:
 442              	.LBI2434:
 402:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 443              		.loc 12 402 7 view .LVU65
 444              	.LBB2449:
 445              	.LBB2438:
 446              	.LBI2436:
 379:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __builtin_expect(__bkts == &_M_single_bucket, false); }
 447              		.loc 12 379 7 view .LVU66
 379:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __builtin_expect(__bkts == &_M_single_bucket, false); }
 448              		.loc 12 379 7 is_stmt 0 view .LVU67
 449              	.LBE2438:
 404:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return;
 450              		.loc 12 404 2 view .LVU68
 451 0032 02D0     		beq	.L14
 452              	.LVL20:
 453              	.LBB2439:
 454              	.LBI2439:
2072:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	{
2073:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  __node_type* __tmp = __n;
2074:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  __n = __n->_M_next();
2075:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  _M_deallocate_node(__tmp);
2076:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	}
2077:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
2078:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
2079:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _NodeAlloc>
2080:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     typename _Hashtable_alloc<_NodeAlloc>::__bucket_type*
2081:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Hashtable_alloc<_NodeAlloc>::_M_allocate_buckets(std::size_t __bkt_count)
2082:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
2083:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __bucket_alloc_type __alloc(_M_node_allocator());
2084:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
2085:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       auto __ptr = __bucket_alloc_traits::allocate(__alloc, __bkt_count);
2086:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __bucket_type* __p = std::__to_address(__ptr);
2087:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __builtin_memset(__p, 0, __bkt_count * sizeof(__bucket_type));
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 105


2088:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       return __p;
2089:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
2090:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
2091:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _NodeAlloc>
2092:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     void
2093:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Hashtable_alloc<_NodeAlloc>::_M_deallocate_buckets(__bucket_type* __bkts,
 455              		.loc 14 2093 5 is_stmt 1 view .LVU69
 456              	.LBB2440:
 457              	.LBB2441:
 458              	.LBI2441:
 459              		.file 17 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
   1:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // Allocators -*- C++ -*-
   2:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
   3:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** //
   5:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // software; you can redistribute it and/or modify it under the
   7:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // terms of the GNU General Public License as published by the
   8:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // any later version.
  10:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  11:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // This library is distributed in the hope that it will be useful,
  12:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // GNU General Public License for more details.
  15:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  16:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  20:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // You should have received a copy of the GNU General Public License and
  21:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // <http://www.gnu.org/licenses/>.
  24:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  25:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** /*
  26:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * Copyright (c) 1996-1997
  27:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * Silicon Graphics Computer Systems, Inc.
  28:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  *
  29:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * Permission to use, copy, modify, distribute and sell this software
  30:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * and its documentation for any purpose is hereby granted without fee,
  31:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * provided that the above copyright notice appear in all copies and
  32:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * that both that copyright notice and this permission notice appear
  33:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * in supporting documentation.  Silicon Graphics makes no
  34:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * representations about the suitability of this software for any
  35:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  36:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  */
  37:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  38:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** /** @file bits/allocator.h
  39:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  *  This is an internal header file, included by other library headers.
  40:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  *  Do not attempt to use it directly. @headername{memory}
  41:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  */
  42:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  43:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #ifndef _ALLOCATOR_H
  44:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #define _ALLOCATOR_H 1
  45:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  46:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #include <bits/c++allocator.h> // Define the base class to std::allocator.
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 106


  47:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #include <bits/memoryfwd.h>
  48:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus >= 201103L
  49:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #include <type_traits>
  50:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
  51:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  52:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #define __cpp_lib_incomplete_container_elements 201505
  53:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  54:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  55:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** {
  56:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  57:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  58:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   /**
  59:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  @addtogroup allocators
  60:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  @{
  61:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    */
  62:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  63:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   /// allocator<void> specialization.
  64:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   template<>
  65:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     class allocator<void>
  66:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     {
  67:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     public:
  68:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef void        value_type;
  69:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef size_t      size_type;
  70:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef ptrdiff_t   difference_type;
  71:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus <= 201703L
  72:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef void*       pointer;
  73:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef const void* const_pointer;
  74:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  75:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Tp1>
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	struct rebind
  77:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	{ typedef allocator<_Tp1> other; };
  78:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #else
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       allocator() = default;
  80:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  81:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Up>
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	constexpr
  83:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	allocator(const allocator<_Up>&) { }
  84:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif // ! C++20
  85:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  86:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus >= 201103L && __cplusplus <= 201703L
  87:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  88:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef true_type propagate_on_container_move_assignment;
  90:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  91:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef true_type is_always_equal;
  92:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  93:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Up, typename... _Args>
  94:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	void
  95:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	construct(_Up* __p, _Args&&... __args)
  96:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
  97:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
  98:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  99:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Up>
 100:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	void
 101:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	destroy(_Up* __p)
 102:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	noexcept(std::is_nothrow_destructible<_Up>::value)
 103:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	{ __p->~_Up(); }
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 107


 104:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif // C++11 to C++17
 105:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     };
 106:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 107:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   /**
 108:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    * @brief  The @a standard allocator, as per [20.4].
 109:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *
 110:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/memory.html#std.util.memory.allocator
 111:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  for further details.
 112:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *
 113:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  @tparam  _Tp  Type of allocated object.
 114:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    */
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   template<typename _Tp>
 116:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     class allocator : public __allocator_base<_Tp>
 117:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     {
 118:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     public:
 119:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef _Tp        value_type;
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef size_t     size_type;
 121:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef ptrdiff_t  difference_type;
 122:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus <= 201703L
 123:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef _Tp*       pointer;
 124:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef const _Tp* const_pointer;
 125:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef _Tp&       reference;
 126:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef const _Tp& const_reference;
 127:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 128:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Tp1>
 129:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	struct rebind
 130:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	{ typedef allocator<_Tp1> other; };
 131:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
 132:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus >= 201103L
 134:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 135:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
 136:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef true_type propagate_on_container_move_assignment;
 137:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 138:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef true_type is_always_equal;
 139:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
 140:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 141:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 142:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // 3035. std::allocator's constructors should be constexpr
 143:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       _GLIBCXX20_CONSTEXPR
 144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       allocator() _GLIBCXX_NOTHROW { }
 145:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 146:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       _GLIBCXX20_CONSTEXPR
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       allocator(const allocator& __a) _GLIBCXX_NOTHROW
 148:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 149:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus >= 201103L
 151:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // Avoid implicit deprecation.
 152:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       allocator& operator=(const allocator&) = default;
 153:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
 154:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 155:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Tp1>
 156:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	_GLIBCXX20_CONSTEXPR
 157:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }
 460              		.loc 17 157 2 view .LVU70
 461              	.LBB2442:
 462              	.LBI2442:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 108


  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 463              		.loc 16 79 7 view .LVU71
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 464              		.loc 16 79 7 is_stmt 0 view .LVU72
 465              	.LBE2442:
 466              	.LBE2441:
 467              	.LBB2443:
 468              	.LBI2443:
 469              		.loc 15 491 7 is_stmt 1 view .LVU73
 470              	.LBB2444:
 471              	.LBI2444:
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 472              		.loc 16 120 7 view .LVU74
 473              	.LBB2445:
 474              		.loc 16 133 19 is_stmt 0 view .LVU75
 475 0034 8900     		lsls	r1, r1, #2
 476              	.LVL21:
 477              		.loc 16 133 19 view .LVU76
 478 0036 FFF7FEFF 		bl	_ZdlPvj
 479              	.LVL22:
 480              		.loc 16 133 19 view .LVU77
 481              	.LBE2445:
 482              	.LBE2444:
 483              	.LBE2443:
 484              	.LBB2446:
 485              	.LBI2446:
 158:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cpp_constexpr_dynamic_alloc
 160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       constexpr
 161:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
 162:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       ~allocator() _GLIBCXX_NOTHROW { }
 486              		.loc 17 162 7 is_stmt 1 view .LVU78
 487              	.LBB2447:
 488              	.LBI2447:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 489              		.loc 16 89 7 view .LVU79
 490              	.L14:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 491              		.loc 16 89 7 is_stmt 0 view .LVU80
 492              	.LBE2447:
 493              	.LBE2446:
 494              	.LBE2440:
 495              	.LBE2439:
 496              	.LBE2449:
 497              	.LBE2451:
 498              	.LBE2453:
 499              	.LBE2457:
 500              	.LBB2458:
 501              	.LBI2458:
1963:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 502              		.loc 14 1963 12 is_stmt 1 view .LVU81
 503              	.LBB2459:
 504              	.LBI2459:
1109:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : private _Tp
 505              		.loc 14 1109 12 view .LVU82
 506              	.LBB2460:
 507              	.LBI2460:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 109


 508              		.loc 17 162 7 view .LVU83
 509              	.LBB2461:
 510              	.LBI2461:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 511              		.loc 16 89 7 view .LVU84
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 512              		.loc 16 89 7 is_stmt 0 view .LVU85
 513              	.LBE2461:
 514              	.LBE2460:
 515              	.LBE2459:
 516              	.LBE2458:
 517              	.LBE2462:
 518              	.LBE2463:
 519              		.loc 11 48 22 view .LVU86
 520 003a 2846     		mov	r0, r5
 521 003c 38BD     		pop	{r3, r4, r5, pc}
 522              		.loc 11 48 22 view .LVU87
 523              		.cfi_endproc
 524              	.LFE3025:
 526              		.weak	_ZN12StateManagerD1Ev
 527              		.thumb_set _ZN12StateManagerD1Ev,_ZN12StateManagerD2Ev
 528 003e 00BF     		.section	.text._Z13AudioCallbackPKPKfPPfj,"ax",%progbits
 529              		.align	1
 530              		.p2align 2,,3
 531              		.global	_Z13AudioCallbackPKPKfPPfj
 532              		.syntax unified
 533              		.thumb
 534              		.thumb_func
 535              		.fpu fpv5-d16
 537              	_Z13AudioCallbackPKPKfPPfj:
 538              	.LVL23:
 539              	.LFB5482:
 540              		.file 18 "src/main.cpp"
   1:src/main.cpp  **** #include "main.h"
   2:src/main.cpp  **** 
   3:src/main.cpp  **** #include "daisy.h"
   4:src/main.cpp  **** #include "daisy_seed.h"
   5:src/main.cpp  **** #include "daisysp.h"
   6:src/main.cpp  **** 
   7:src/main.cpp  **** #include "util.h"
   8:src/main.cpp  **** 
   9:src/main.cpp  **** //#include "libDaisy/Drivers/CMSIS/RTOS/Template/cmsis_os.h"
  10:src/main.cpp  **** //#include "CMSIS/RTOS2/Template/cmsis_os.h"
  11:src/main.cpp  **** 
  12:src/main.cpp  **** using namespace daisy;
  13:src/main.cpp  **** using namespace daisy::seed;
  14:src/main.cpp  **** 
  15:src/main.cpp  **** #define PARAM_BUFFER_SIZE	10
  16:src/main.cpp  **** #define AUDIO_BUFFER_SIZE	128
  17:src/main.cpp  **** #define HTIM1_MS	100
  18:src/main.cpp  **** 
  19:src/main.cpp  **** daisy::DaisySeed hw;
  20:src/main.cpp  **** 
  21:src/main.cpp  **** daisy::UartHandler usart1;
  22:src/main.cpp  **** daisy::TimerHandle htim1;
  23:src/main.cpp  **** daisy::GPIO gpio;
  24:src/main.cpp  **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 110


  25:src/main.cpp  **** //static uint32_t DSY_SDRAM_BSS audio_buffer[AUDIO_BUFFER_SIZE];
  26:src/main.cpp  **** //static uint16_t DSY_SDRAM_BSS param_buffer[PARAM_BUFFER_SIZE];
  27:src/main.cpp  **** 
  28:src/main.cpp  **** //AudioHandler audio;
  29:src/main.cpp  **** 
  30:src/main.cpp  **** // void AudioCallback(daisy::AudioHandle::InputBuffer in, daisy::AudioHandle::OutputBuffer out, siz
  31:src/main.cpp  **** // {
  32:src/main.cpp  **** // 	for (size_t i = 0; i < size; i++)
  33:src/main.cpp  **** // 	{
  34:src/main.cpp  **** // 		out[0][i] = in[0][i];
  35:src/main.cpp  **** // 		out[1][i] = in[1][i];
  36:src/main.cpp  **** // 	}
  37:src/main.cpp  **** // }
  38:src/main.cpp  **** 
  39:src/main.cpp  **** // void TIM1_Init(daisy::TimerHandle& tim) {
  40:src/main.cpp  **** // 	daisy::TimerHandle::Config conf;
  41:src/main.cpp  **** // 	conf.periph = daisy::TimerHandle::Config::Peripheral::TIM_2;
  42:src/main.cpp  **** // 	conf.dir = daisy::TimerHandle::Config::CounterDir::UP;
  43:src/main.cpp  **** // 	tim.Init(conf);
  44:src/main.cpp  **** // 	tim.DelayMs(HTIM1_MS);
  45:src/main.cpp  **** // 	tim.Start();
  46:src/main.cpp  **** // }
  47:src/main.cpp  **** 
  48:src/main.cpp  **** 
  49:src/main.cpp  **** void UART_Init(daisy::UartHandler &uart) {
  50:src/main.cpp  **** 	daisy::UartHandler::Config usart1_conf;
  51:src/main.cpp  **** 	usart1_conf.periph = UartHandler::Config::Peripheral::USART_1;
  52:src/main.cpp  **** 	usart1_conf.mode = UartHandler::Config::Mode::TX_RX;
  53:src/main.cpp  **** 	usart1_conf.wordlength = UartHandler::Config::WordLength::BITS_8;
  54:src/main.cpp  **** 	usart1_conf.parity = UartHandler::Config::Parity::NONE;
  55:src/main.cpp  **** 	usart1_conf.stopbits = UartHandler::Config::StopBits::BITS_1;
  56:src/main.cpp  **** 	usart1_conf.baudrate = (uint32_t)9600;
  57:src/main.cpp  **** 	usart1_conf.pin_config.rx = Pin(PORTB, 7); // (USART_1 RX) Daisy pin 15
  58:src/main.cpp  **** 	usart1_conf.pin_config.tx = Pin(PORTB, 6); // (USART_1 TX) Daisy pin 14
  59:src/main.cpp  **** 
  60:src/main.cpp  **** 	if (uart.Init(usart1_conf) == UartHandler::Result::ERR) {
  61:src/main.cpp  **** 		hw.PrintLine("Init error");
  62:src/main.cpp  **** 		//return daisy::UartHandler::CheckError	
  63:src/main.cpp  **** 	}
  64:src/main.cpp  **** 
  65:src/main.cpp  **** 	if (uart.StartRx() == UartHandler::Result::ERR) {
  66:src/main.cpp  **** 		hw.PrintLine("StartRx error");
  67:src/main.cpp  **** 	}
  68:src/main.cpp  **** }
  69:src/main.cpp  **** 
  70:src/main.cpp  **** float paramVal;
  71:src/main.cpp  **** 
  72:src/main.cpp  **** //osThreadId Task1Handle;
  73:src/main.cpp  **** 
  74:src/main.cpp  **** // void Task1(void *arg) {
  75:src/main.cpp  **** // 	while (true) {
  76:src/main.cpp  **** // 		hw.PrintLine("hello from task1");
  77:src/main.cpp  **** // 		//hw.DelayMs(10);
  78:src/main.cpp  **** // 		//osDelay(10);
  79:src/main.cpp  **** // 	}
  80:src/main.cpp  **** // }
  81:src/main.cpp  **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 111


  82:src/main.cpp  **** // osThreadDef(Task1, osPriorityNormal, 0, 128);
  83:src/main.cpp  **** 
  84:src/main.cpp  **** // osThreadId thread1_id;
  85:src/main.cpp  **** 
  86:src/main.cpp  **** // void thread1(void const *args) {
  87:src/main.cpp  **** //     while (true) {
  88:src/main.cpp  **** //         hw.PrintLine("hello from thread1");
  89:src/main.cpp  **** //     }
  90:src/main.cpp  **** // }
  91:src/main.cpp  **** 
  92:src/main.cpp  **** // osThreadDef(thread1, osPriorityNormal, 1, 128);
  93:src/main.cpp  **** 
  94:src/main.cpp  **** //static ParameterMap DSY_QSPI_BSS params;
  95:src/main.cpp  **** 
  96:src/main.cpp  **** //stateId state;
  97:src/main.cpp  **** ParameterConfig paramConf;
  98:src/main.cpp  **** 
  99:src/main.cpp  **** 
 100:src/main.cpp  **** constexpr const float clamp( const float v, const float lo, const float hi )
 101:src/main.cpp  **** {
 102:src/main.cpp  ****     int outputLimit = 256;
 103:src/main.cpp  ****     float range = (hi - lo);// - float.Epsilon;
 104:src/main.cpp  ****     float rangedValue = (v - lo) / range;
 105:src/main.cpp  ****     return lo + (int)(outputLimit * rangedValue);
 106:src/main.cpp  **** }
 107:src/main.cpp  **** 
 108:src/main.cpp  **** daisysp::Phaser phaser;
 109:src/main.cpp  **** //float gain = 0.0f;
 110:src/main.cpp  **** //ParameterRamper paramRamper(gain);
 111:src/main.cpp  **** //SmoothedValue<float> gain;
 112:src/main.cpp  **** //std::vector<void*> effect_bank;
 113:src/main.cpp  **** float params[10];
 114:src/main.cpp  **** ParameterMap parameterMap;
 115:src/main.cpp  **** static daisysp::Autowah _autowah;
 116:src/main.cpp  **** static daisysp::Overdrive _overdrive;
 117:src/main.cpp  **** 
 118:src/main.cpp  **** void AudioCallback(daisy::AudioHandle::InputBuffer in, daisy::AudioHandle::OutputBuffer out, size_t
 119:src/main.cpp  **** { 
 541              		.loc 18 119 1 is_stmt 1 view -0
 542              		.cfi_startproc
 543              		@ args = 0, pretend = 0, frame = 8
 544              		@ frame_needed = 0, uses_anonymous_args = 0
 120:src/main.cpp  **** 	// for (size_t i = 0; i < size; i++)
 121:src/main.cpp  ****     // {
 122:src/main.cpp  **** 	//  		out[0][i] = in[0][i];
 123:src/main.cpp  **** 	// 		out[1][i] = in[1][i];
 124:src/main.cpp  **** 	// }
 125:src/main.cpp  **** 	//void* effect;
 126:src/main.cpp  **** 	int state = 1;
 545              		.loc 18 126 2 view .LVU89
 127:src/main.cpp  **** 	float xnL, xnR, ynL, ynR;
 546              		.loc 18 127 2 view .LVU90
 128:src/main.cpp  **** 	//float params[10];
 129:src/main.cpp  **** 	//params[0] = parameterMap.getValue(0);
 130:src/main.cpp  **** 	//params[1] = parameterMap.getValue(1);
 131:src/main.cpp  **** 	//params[2] = parameterMap.getValue(2);	
 132:src/main.cpp  **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 112


 133:src/main.cpp  **** 
 134:src/main.cpp  ****     for (size_t i = 0; i < size; i++)
 547              		.loc 18 134 5 view .LVU91
 548              	.LBB2464:
 549              		.loc 18 134 26 view .LVU92
 550              	.LBE2464:
 119:src/main.cpp  **** 	// for (size_t i = 0; i < size; i++)
 551              		.loc 18 119 1 is_stmt 0 view .LVU93
 552 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 553              		.cfi_def_cfa_offset 28
 554              		.cfi_offset 4, -28
 555              		.cfi_offset 5, -24
 556              		.cfi_offset 6, -20
 557              		.cfi_offset 7, -16
 558              		.cfi_offset 8, -12
 559              		.cfi_offset 9, -8
 560              		.cfi_offset 14, -4
 561 0004 2DED028B 		vpush.64	{d8}
 562              		.cfi_def_cfa_offset 36
 563              		.cfi_offset 80, -36
 564              		.cfi_offset 81, -32
 565 0008 83B0     		sub	sp, sp, #12
 566              		.cfi_def_cfa_offset 48
 119:src/main.cpp  **** 	// for (size_t i = 0; i < size; i++)
 567              		.loc 18 119 1 view .LVU94
 568 000a 0191     		str	r1, [sp, #4]
 569              	.LBB2465:
 570              		.loc 18 134 26 view .LVU95
 571 000c 0AB3     		cbz	r2, .L20
 572 000e 0746     		mov	r7, r0
 573 0010 8846     		mov	r8, r1
 574 0012 1646     		mov	r6, r2
 575              		.loc 18 134 17 view .LVU96
 576 0014 0024     		movs	r4, #0
 577 0016 DFF84C90 		ldr	r9, .L28+8
 578              	.LVL24:
 579              	.L22:
 135:src/main.cpp  ****     {
 136:src/main.cpp  **** 		xnL = xnR = in[1][i];
 580              		.loc 18 136 3 is_stmt 1 view .LVU97
 581              		.loc 18 136 13 is_stmt 0 view .LVU98
 582 001a 7B68     		ldr	r3, [r7, #4]
 583 001c A500     		lsls	r5, r4, #2
 137:src/main.cpp  **** 		switch(state) {
 138:src/main.cpp  **** 			case 0:
 139:src/main.cpp  **** 				_autowah.SetWah(params[0]);
 140:src/main.cpp  **** 				_autowah.SetLevel(params[1]);
 141:src/main.cpp  **** 				_autowah.SetDryWet(params[2]);
 142:src/main.cpp  **** 				ynL = ynR = _autowah.Process(xnL);
 143:src/main.cpp  **** 			case 1:
 144:src/main.cpp  **** 				ynL = ynR = xnL;
 145:src/main.cpp  **** 			case 2:
 146:src/main.cpp  **** 				_overdrive.SetDrive(params[1]/50);
 584              		.loc 18 146 24 view .LVU99
 585 001e DFED0F7A 		vldr.32	s15, .L28
 136:src/main.cpp  **** 		switch(state) {
 586              		.loc 18 136 13 view .LVU100
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 113


 587 0022 03EB8403 		add	r3, r3, r4, lsl #2
 588              		.loc 18 146 24 view .LVU101
 589 0026 99ED010A 		vldr.32	s0, [r9, #4]
 590 002a 0D48     		ldr	r0, .L28+4
 134:src/main.cpp  ****     {
 591              		.loc 18 134 5 view .LVU102
 592 002c 0134     		adds	r4, r4, #1
 593              	.LVL25:
 136:src/main.cpp  **** 		switch(state) {
 594              		.loc 18 136 13 view .LVU103
 595 002e 93ED008A 		vldr.32	s16, [r3]
 596              	.LVL26:
 137:src/main.cpp  **** 		switch(state) {
 597              		.loc 18 137 3 is_stmt 1 view .LVU104
 143:src/main.cpp  **** 				ynL = ynR = xnL;
 598              		.loc 18 143 4 view .LVU105
 144:src/main.cpp  **** 			case 2:
 599              		.loc 18 144 5 view .LVU106
 145:src/main.cpp  **** 				_overdrive.SetDrive(params[1]/50);
 600              		.loc 18 145 4 view .LVU107
 601              		.loc 18 146 5 view .LVU108
 602              		.loc 18 146 24 is_stmt 0 view .LVU109
 603 0032 80EE270A 		vdiv.f32	s0, s0, s15
 604 0036 FFF7FEFF 		bl	_ZN7daisysp9Overdrive8SetDriveEf
 605              	.LVL27:
 147:src/main.cpp  **** 				ynL = ynR = _overdrive.Process(xnL);
 606              		.loc 18 147 5 is_stmt 1 view .LVU110
 607              		.loc 18 147 35 is_stmt 0 view .LVU111
 608 003a 0948     		ldr	r0, .L28+4
 609 003c B0EE480A 		vmov.f32	s0, s16
 610 0040 FFF7FEFF 		bl	_ZN7daisysp9Overdrive7ProcessEf
 611              	.LVL28:
 148:src/main.cpp  **** 
 149:src/main.cpp  **** 			//out[0][i] = ynL;//processAudio(in[0][i], &parameterMap);
 150:src/main.cpp  **** 			out[1][i] = ynR;//processAudio(in[1][i], &parameterMap);
 612              		.loc 18 150 4 is_stmt 1 view .LVU112
 613              		.loc 18 150 14 is_stmt 0 view .LVU113
 614 0044 D8F80430 		ldr	r3, [r8, #4]
 134:src/main.cpp  ****     {
 615              		.loc 18 134 26 view .LVU114
 616 0048 A642     		cmp	r6, r4
 617              		.loc 18 150 14 view .LVU115
 618 004a 2B44     		add	r3, r3, r5
 619 004c 83ED000A 		vstr.32	s0, [r3]
 134:src/main.cpp  ****     {
 620              		.loc 18 134 5 is_stmt 1 view .LVU116
 621              	.LVL29:
 134:src/main.cpp  ****     {
 622              		.loc 18 134 26 view .LVU117
 623 0050 E3D1     		bne	.L22
 624              	.LVL30:
 625              	.L20:
 134:src/main.cpp  ****     {
 626              		.loc 18 134 26 is_stmt 0 view .LVU118
 627              	.LBE2465:
 151:src/main.cpp  **** 		}
 152:src/main.cpp  ****     }
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 114


 153:src/main.cpp  **** } 
 628              		.loc 18 153 1 view .LVU119
 629 0052 03B0     		add	sp, sp, #12
 630              		.cfi_def_cfa_offset 36
 631              		@ sp needed
 632 0054 BDEC028B 		vldm	sp!, {d8}
 633              		.cfi_restore 80
 634              		.cfi_restore 81
 635              		.cfi_def_cfa_offset 28
 636 0058 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 637              	.LVL31:
 638              	.L29:
 639              		.loc 18 153 1 view .LVU120
 640              		.align	2
 641              	.L28:
 642 005c 00004842 		.word	1112014848
 643 0060 00000000 		.word	.LANCHOR1
 644 0064 00000000 		.word	.LANCHOR0
 645              		.cfi_endproc
 646              	.LFE5482:
 648              		.section	.rodata._ZN5paramC2ERKS_.str1.4,"aMS",%progbits,1
 649              		.align	2
 650              	.LC0:
 651 0000 62617369 		.ascii	"basic_string::_M_construct null not valid\000"
 651      635F7374 
 651      72696E67 
 651      3A3A5F4D 
 651      5F636F6E 
 652              		.section	.text._ZN5paramC2ERKS_,"axG",%progbits,_ZN5paramC5ERKS_,comdat
 653              		.align	1
 654              		.p2align 2,,3
 655              		.weak	_ZN5paramC2ERKS_
 656              		.syntax unified
 657              		.thumb
 658              		.thumb_func
 659              		.fpu fpv5-d16
 661              	_ZN5paramC2ERKS_:
 662              	.LVL32:
 663              	.LFB2962:
 664              		.file 19 "src/parameter_controller.h"
   1:src/parameter_controller.h **** #ifndef _PARAMETER_CONTROLER_H_
   2:src/parameter_controller.h **** #define _PARAMETER_CONTROLER_H_
   3:src/parameter_controller.h **** 
   4:src/parameter_controller.h **** #include <string>
   5:src/parameter_controller.h **** #include <unordered_map>
   6:src/parameter_controller.h **** #include <iterator>
   7:src/parameter_controller.h **** #include <math.h>
   8:src/parameter_controller.h **** #include <algorithm>
   9:src/parameter_controller.h **** #include "util.h"
  10:src/parameter_controller.h **** 
  11:src/parameter_controller.h **** // #include "daisy.h"
  12:src/parameter_controller.h **** // #include "daisysp.h"
  13:src/parameter_controller.h **** // #include "daisy_seed.h"
  14:src/parameter_controller.h **** 
  15:src/parameter_controller.h **** //#include "json.hpp"
  16:src/parameter_controller.h **** 
  17:src/parameter_controller.h **** //using json = nlohmann::json;
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 115


  18:src/parameter_controller.h **** 
  19:src/parameter_controller.h **** enum param_type {
  20:src/parameter_controller.h ****     kPot,
  21:src/parameter_controller.h ****     kSwitch,
  22:src/parameter_controller.h ****     kStatus
  23:src/parameter_controller.h **** };
  24:src/parameter_controller.h **** 
  25:src/parameter_controller.h **** enum param_scale {
  26:src/parameter_controller.h ****     kLin,
  27:src/parameter_controller.h ****     kLog,
  28:src/parameter_controller.h ****     kRlog
  29:src/parameter_controller.h **** };
  30:src/parameter_controller.h **** 
  31:src/parameter_controller.h **** struct param_config {
  32:src/parameter_controller.h ****     std::string label;
  33:src/parameter_controller.h ****     std::string type;
  34:src/parameter_controller.h ****     std::string scale;
  35:src/parameter_controller.h ****     float min, max;
  36:src/parameter_controller.h **** };
  37:src/parameter_controller.h **** 
  38:src/parameter_controller.h **** struct param {
 665              		.loc 19 38 8 is_stmt 1 view -0
 666              		.cfi_startproc
 667              		@ args = 0, pretend = 0, frame = 8
 668              		@ frame_needed = 0, uses_anonymous_args = 0
 669              		.loc 19 38 8 is_stmt 0 view .LVU122
 670 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 671              		.cfi_def_cfa_offset 20
 672              		.cfi_offset 4, -20
 673              		.cfi_offset 5, -16
 674              		.cfi_offset 6, -12
 675              		.cfi_offset 7, -8
 676              		.cfi_offset 14, -4
 677 0002 0446     		mov	r4, r0
 678              	.LBB2641:
 679              	.LBB2642:
 680              	.LBB2643:
 681              	.LBB2644:
 682              	.LBB2645:
 683              		.file 20 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
   1:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // Components for manipulating sequences of characters -*- C++ -*-
   2:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
   3:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** //
   5:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // software; you can redistribute it and/or modify it under the
   7:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // terms of the GNU General Public License as published by the
   8:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // any later version.
  10:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  11:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // This library is distributed in the hope that it will be useful,
  12:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // GNU General Public License for more details.
  15:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  16:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // permissions described in the GCC Runtime Library Exception, version
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 116


  18:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  20:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // You should have received a copy of the GNU General Public License and
  21:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // <http://www.gnu.org/licenses/>.
  24:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  25:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** /** @file bits/basic_string.h
  26:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****  *  This is an internal header file, included by other library headers.
  27:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****  *  Do not attempt to use it directly. @headername{string}
  28:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****  */
  29:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  30:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** //
  31:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // ISO C++ 14882: 21 Strings library
  32:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** //
  33:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  34:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #ifndef _BASIC_STRING_H
  35:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #define _BASIC_STRING_H 1
  36:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  37:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #pragma GCC system_header
  38:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  39:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #include <ext/atomicity.h>
  40:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #include <ext/alloc_traits.h>
  41:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #include <debug/debug.h>
  42:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  43:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
  44:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #include <initializer_list>
  45:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
  46:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  47:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
  48:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** # include <string_view>
  49:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
  50:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  51:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  52:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** namespace std _GLIBCXX_VISIBILITY(default)
  53:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** {
  54:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  55:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  56:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_USE_CXX11_ABI
  57:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_CXX11
  58:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
  59:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @class basic_string basic_string.h <string>
  60:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Managing sequences of characters and character-like objects.
  61:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
  62:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @ingroup strings
  63:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @ingroup sequences
  64:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
  65:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @tparam _CharT  Type of character
  66:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @tparam _Traits  Traits for character type, defaults to
  67:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *                   char_traits<_CharT>.
  68:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_CharT>.
  69:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
  70:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
  71:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  <a href="tables.html#66">reversible container</a>, and a
  72:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  <a href="tables.html#67">sequence</a>.  Of the
  73:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  <a href="tables.html#68">optional sequence requirements</a>, only
  74:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @c push_back, @c at, and @c %array access are supported.
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 117


  75:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
  77:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     class basic_string
  78:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     {
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  80:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	rebind<_CharT>::other _Char_alloc_type;
  81:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef __gnu_cxx::__alloc_traits<_Char_alloc_type> _Alloc_traits;
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  83:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Types:
  84:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
  85:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef _Traits					traits_type;
  86:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Traits::char_type		value_type;
  87:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef _Char_alloc_type				allocator_type;
  88:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Alloc_traits::size_type		size_type;
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Alloc_traits::difference_type	difference_type;
  90:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Alloc_traits::reference		reference;
  91:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Alloc_traits::const_reference	const_reference;
  92:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Alloc_traits::pointer		pointer;
  93:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Alloc_traits::const_pointer	const_pointer;
  94:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;
  95:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string>
  96:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 							const_iterator;
  97:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
  98:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef std::reverse_iterator<iterator>		reverse_iterator;
  99:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 100:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  Value returned by various member functions when they fail.
 101:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static const size_type	npos = static_cast<size_type>(-1);
 102:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 103:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     protected:
 104:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // type used for positions in insert, erase etc.
 105:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus < 201103L
 106:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef iterator __const_iterator;
 107:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 108:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef const_iterator __const_iterator;
 109:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 110:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 111:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     private:
 112:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
 113:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // A helper type for avoiding boiler-plate.
 114:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef basic_string_view<_CharT, _Traits> __sv_type;
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 116:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp, typename _Res>
 117:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	using _If_sv = enable_if_t<
 118:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __and_<is_convertible<const _Tp&, __sv_type>,
 119:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		 __not_<is_convertible<const _Tp*, const basic_string*>>,
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		 __not_<is_convertible<const _Tp&, const _CharT*>>>::value,
 121:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _Res>;
 122:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 123:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Allows an implicit conversion to __sv_type.
 124:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static __sv_type
 125:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_to_string_view(__sv_type __svt) noexcept
 126:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __svt; }
 127:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 128:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Wraps a string_view by explicit conversion and thus
 129:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // allows to add an internal constructor that does not
 130:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // participate in overload resolution when a string_view
 131:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // is provided.
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 118


 132:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       struct __sv_wrapper
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 134:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	explicit __sv_wrapper(__sv_type __sv) noexcept : _M_sv(__sv) { }
 135:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__sv_type _M_sv;
 136:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       };
 137:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 138:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 139:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Only internally used: Construct string from a string view
 140:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *          wrapper.
 141:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __svw  string view wrapper.
 142:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use.
 143:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       explicit
 145:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(__sv_wrapper __svw, const _Alloc& __a)
 146:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 148:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 149:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       struct _Alloc_hider : allocator_type // TODO check __is_final
 151:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 152:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus < 201103L
 153:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_Alloc_hider(pointer __dat, const _Alloc& __a = _Alloc())
 154:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 155:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 156:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_Alloc_hider(pointer __dat, const _Alloc& __a)
 157:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 158:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_Alloc_hider(pointer __dat, _Alloc&& __a = _Alloc())
 160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 161:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 162:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 163:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	pointer _M_p; // The actual data.
 164:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       };
 165:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 166:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _Alloc_hider	_M_dataplus;
 167:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type		_M_string_length;
 168:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 169:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       enum { _S_local_capacity = 15 / sizeof(_CharT) };
 170:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 171:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       union
 172:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 173:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_CharT           _M_local_buf[_S_local_capacity + 1];
 174:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	size_type        _M_allocated_capacity;
 175:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       };
 176:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 177:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 178:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_data(pointer __p)
 179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 180:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 181:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 182:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_length(size_type __length)
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 184:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 185:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       pointer
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_data() const
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 188:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 119


 189:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       pointer
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_local_data()
 191:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 192:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 193:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return std::pointer_traits<pointer>::pointer_to(*_M_local_buf);
 684              		.loc 20 193 51 view .LVU123
 685 0004 0830     		adds	r0, r0, #8
 686              	.LVL33:
 687              		.loc 20 193 51 view .LVU124
 688              	.LBE2645:
 689              	.LBE2644:
 690              	.LBB2646:
 691              	.LBB2647:
 194:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 195:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return pointer(_M_local_buf);
 196:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 197:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 198:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 199:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_pointer
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_local_data() const
 201:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 202:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 203:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
 204:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 205:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return const_pointer(_M_local_buf);
 206:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 207:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 208:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 209:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 210:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_capacity(size_type __capacity)
 211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 212:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 213:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 214:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_set_length(size_type __n)
 215:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 216:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_length(__n);
 217:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	traits_type::assign(_M_data()[__n], _CharT());
 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 219:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 220:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_is_local() const
 222:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 223:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 224:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Create & Destroy
 225:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       pointer
 226:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_create(size_type&, size_type);
 227:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 228:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_dispose()
 230:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (!_M_is_local())
 232:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 233:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 234:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 235:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_destroy(size_type __size) throw()
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 120


 238:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 239:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _M_construct_aux is used to implement the 21.3.1 para 15 which
 240:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // requires special behaviour if _InIterator is an integral type
 241:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _InIterator>
 242:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
 243:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _M_construct_aux(_InIterator __beg, _InIterator __end,
 244:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 245:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 246:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           typedef typename iterator_traits<_InIterator>::iterator_category _Tag;
 247:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           _M_construct(__beg, __end, _Tag());
 248:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
 249:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 250:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 251:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 438. Ambiguity in the "do the right thing" clause
 252:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Integer>
 253:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
 254:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _M_construct_aux(_Integer __beg, _Integer __end, std::__true_type)
 255:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{ _M_construct_aux_2(static_cast<size_type>(__beg), __end); }
 256:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 257:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 258:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_construct_aux_2(size_type __req, _CharT __c)
 259:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__req, __c); }
 260:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 261:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _InIterator>
 262:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
 263:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _M_construct(_InIterator __beg, _InIterator __end)
 264:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 265:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  typedef typename std::__is_integer<_InIterator>::__type _Integral;
 266:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_construct_aux(__beg, __end, _Integral());
 267:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         }
 268:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 269:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // For Input Iterators, used in istreambuf_iterators, etc.
 270:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _InIterator>
 271:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
 272:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _M_construct(_InIterator __beg, _InIterator __end,
 273:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     std::input_iterator_tag);
 274:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 275:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // For forward_iterators up to random_access_iterators, used for
 276:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // string::iterator, _CharT*, etc.
 277:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _FwdIterator>
 278:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
 279:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _M_construct(_FwdIterator __beg, _FwdIterator __end,
 280:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     std::forward_iterator_tag);
 281:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 282:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 283:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_construct(size_type __req, _CharT __c);
 284:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 285:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       allocator_type&
 286:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_get_allocator()
 287:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 288:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 289:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const allocator_type&
 290:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_get_allocator() const
 291:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 292:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 293:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     private:
 294:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 121


 295:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #ifdef _GLIBCXX_DISAMBIGUATE_REPLACE_INST
 296:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // The explicit instantiations in misc-inst.cc require this due to
 297:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // https://gcc.gnu.org/bugzilla/show_bug.cgi?id=64063
 298:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp, bool _Requires =
 299:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       !__are_same<_Tp, _CharT*>::__value
 300:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       && !__are_same<_Tp, const _CharT*>::__value
 301:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       && !__are_same<_Tp, iterator>::__value
 302:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       && !__are_same<_Tp, const_iterator>::__value>
 303:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	struct __enable_if_not_native_iterator
 304:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{ typedef basic_string& __type; };
 305:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
 306:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	struct __enable_if_not_native_iterator<_Tp, false> { };
 307:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 308:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 309:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
 310:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_check(size_type __pos, const char* __s) const
 311:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 312:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__pos > this->size())
 313:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
 314:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "this->size() (which is %zu)"),
 315:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   __s, __pos, this->size());
 316:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return __pos;
 317:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 318:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 319:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 320:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_check_length(size_type __n1, size_type __n2, const char* __s) const
 321:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (this->max_size() - (this->size() - __n1) < __n2)
 323:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __throw_length_error(__N(__s));
 324:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 325:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 326:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 327:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // NB: _M_limit doesn't check for a bad __pos value.
 328:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
 329:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_limit(size_type __pos, size_type __off) const _GLIBCXX_NOEXCEPT
 330:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 331:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const bool __testoff =  __off < this->size() - __pos;
 332:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return __testoff ? __off : this->size() - __pos;
 333:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 334:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 335:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // True if _Rep and source do not overlap.
 336:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
 337:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_disjunct(const _CharT* __s) const _GLIBCXX_NOEXCEPT
 338:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 339:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return (less<const _CharT*>()(__s, _M_data())
 340:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		|| less<const _CharT*>()(_M_data() + this->size(), __s));
 341:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 342:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 343:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // When __n = 1 way faster than the general multichar
 344:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // traits_type::copy/move/assign.
 345:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 346:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy(_CharT* __d, const _CharT* __s, size_type __n)
 347:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 348:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n == 1)
 349:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 350:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
 351:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::copy(__d, __s, __n);
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 122


 352:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 353:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 354:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 355:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_move(_CharT* __d, const _CharT* __s, size_type __n)
 356:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 357:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n == 1)
 358:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 359:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
 360:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::move(__d, __s, __n);
 361:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 362:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 363:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 364:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_assign(_CharT* __d, size_type __n, _CharT __c)
 365:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 366:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n == 1)
 367:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, __c);
 368:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
 369:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(__d, __n, __c);
 370:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 371:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 372:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _S_copy_chars is a separate template to permit specialization
 373:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // to optimize for the common case of pointers as iterators.
 374:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _Iterator>
 375:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         static void
 376:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _S_copy_chars(_CharT* __p, _Iterator __k1, _Iterator __k2)
 377:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         {
 378:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  for (; __k1 != __k2; ++__k1, (void)++__p)
 379:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    traits_type::assign(*__p, *__k1); // These types are off.
 380:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
 381:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 382:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 383:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, iterator __k1, iterator __k2) _GLIBCXX_NOEXCEPT
 384:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 385:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 386:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 387:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, const_iterator __k1, const_iterator __k2)
 388:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 389:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 390:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 391:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 392:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, _CharT* __k1, _CharT* __k2) _GLIBCXX_NOEXCEPT
 393:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 394:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 395:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 396:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)
 397:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 398:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 399:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 400:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static int
 401:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_compare(size_type __n1, size_type __n2) _GLIBCXX_NOEXCEPT
 402:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 403:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const difference_type __d = difference_type(__n1 - __n2);
 404:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 405:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
 406:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__max;
 407:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else if (__d < __gnu_cxx::__numeric_traits<int>::__min)
 408:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__min;
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 123


 409:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
 410:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return int(__d);
 411:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 412:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 413:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 414:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_assign(const basic_string&);
 415:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 416:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 417:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_mutate(size_type __pos, size_type __len1, const _CharT* __s,
 418:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		size_type __len2);
 419:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 420:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 421:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_erase(size_type __pos, size_type __n);
 422:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 423:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
 424:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Construct/copy/destroy:
 425:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // NB: We overload ctors in some cases instead of using default
 426:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // arguments, per 17.4.4.4 para. 2 item 2.
 427:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 428:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 429:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Default constructor creates an empty string.
 430:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 431:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string()
 432:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(is_nothrow_default_constructible<_Alloc>::value)
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data())
 434:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_set_length(0); }
 435:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 436:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 437:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct an empty string using allocator @a a.
 438:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 439:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       explicit
 440:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const _Alloc& __a) _GLIBCXX_NOEXCEPT
 441:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 442:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_set_length(0); }
 443:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 444:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 445:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string with copy of value of @a __str.
 446:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 447:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 448:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str)
 449:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(),
 450:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _Alloc_traits::_S_select_on_copy(__str._M_get_allocator()))
 451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__str._M_data(), __str._M_data() + __str.length()); }
 452:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 453:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 454:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 2583. no way to supply an allocator for basic_string(str, pos)
 455:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 456:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a substring.
 457:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 458:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 459:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use.
 460:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 461:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 462:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   const _Alloc& __a = _Alloc())
 463:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 464:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 465:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const _CharT* __start = __str._M_data()
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 124


 466:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  + __str._M_check(__pos, "basic_string::basic_string");
 467:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, npos));
 468:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 469:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 470:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 471:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a substring.
 472:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 473:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 474:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters to copy.
 475:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 476:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 477:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   size_type __n)
 478:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data())
 479:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 480:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const _CharT* __start = __str._M_data()
 481:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  + __str._M_check(__pos, "basic_string::basic_string");
 482:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, __n));
 483:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 484:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 485:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 486:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a substring.
 487:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 488:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 489:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters to copy.
 490:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use.
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 492:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 493:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   size_type __n, const _Alloc& __a)
 494:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 495:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 496:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const _CharT* __start
 497:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  = __str._M_data() + __str._M_check(__pos, "string::string");
 498:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, __n));
 499:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 500:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 501:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 502:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string initialized by a character %array.
 503:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __s  Source character %array.
 504:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters to copy.
 505:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 506:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 507:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  NB: @a __s must have at least @a __n characters, &apos;\\0&apos;
 508:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  has no special meaning.
 509:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 510:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const _CharT* __s, size_type __n,
 511:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   const _Alloc& __a = _Alloc())
 512:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 513:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__s, __s + __n); }
 514:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 515:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 516:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a C string.
 517:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __s  Source C string.
 518:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 519:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 520:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cpp_deduction_guides && ! defined _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
 521:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 522:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 3076. basic_string CTAD ambiguity
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 125


 523:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename = _RequireAllocator<_Alloc>>
 524:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 525:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
 526:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 527:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
 528:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 529:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 530:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as multiple characters.
 531:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters.
 532:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __c  Character to use.
 533:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 534:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 535:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cpp_deduction_guides && ! defined _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
 536:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 537:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 3076. basic_string CTAD ambiguity
 538:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename = _RequireAllocator<_Alloc>>
 539:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 540:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(size_type __n, _CharT __c, const _Alloc& __a = _Alloc())
 541:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 542:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__n, __c); }
 543:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 544:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 545:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 546:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Move construct string.
 547:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 548:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 549:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The newly-created string contains the exact contents of @a __str.
 550:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __str is a valid, but unspecified string.
 551:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        **/
 552:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(basic_string&& __str) noexcept
 553:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 554:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 555:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__str._M_is_local())
 556:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 557:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    traits_type::copy(_M_local_buf, __str._M_local_buf,
 558:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			      _S_local_capacity + 1);
 559:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 560:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
 561:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 562:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_data(__str._M_data());
 563:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 564:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 565:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 566:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// Must use _M_length() here not _M_set_length() because
 567:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// basic_stringbuf relies on writing into unallocated capacity so
 568:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// we mess up the contents if we put a '\0' in the string.
 569:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_length(__str.length());
 570:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__str._M_data(__str._M_local_data());
 571:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__str._M_set_length(0);
 572:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 573:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 574:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 575:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string from an initializer %list.
 576:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __l  std::initializer_list of characters.
 577:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 578:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 579:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(initializer_list<_CharT> __l, const _Alloc& __a = _Alloc())
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 126


 580:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 581:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__l.begin(), __l.end()); }
 582:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 583:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, const _Alloc& __a)
 584:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 585:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__str.begin(), __str.end()); }
 586:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 587:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(basic_string&& __str, const _Alloc& __a)
 588:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       noexcept(_Alloc_traits::_S_always_equal())
 589:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 590:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 591:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__str._M_is_local())
 592:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 593:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    traits_type::copy(_M_local_buf, __str._M_local_buf,
 594:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			      _S_local_capacity + 1);
 595:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_length(__str.length());
 596:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    __str._M_set_length(0);
 597:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 598:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else if (_Alloc_traits::_S_always_equal()
 599:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    || __str.get_allocator() == __a)
 600:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 601:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_data(__str._M_data());
 602:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_length(__str.length());
 603:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 604:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    __str._M_data(__str._M_local_buf);
 605:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    __str._M_set_length(0);
 606:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 607:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
 608:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_construct(__str.begin(), __str.end());
 609:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 610:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 611:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
 612:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 613:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 614:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a range.
 615:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __beg  Start of range.
 616:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __end  End of range.
 617:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 618:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 619:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 620:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _InputIterator,
 621:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 622:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 623:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _InputIterator>
 624:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 625:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         basic_string(_InputIterator __beg, _InputIterator __end,
 626:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     const _Alloc& __a = _Alloc())
 627:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: _M_dataplus(_M_local_data(), __a)
 628:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{ _M_construct(__beg, __end); }
 629:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 630:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
 631:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 632:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string from a substring of a string_view.
 633:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __t   Source object convertible to string view.
 634:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos The index of the first character to copy from __t.
 635:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n   The number of characters to copy from __t.
 636:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a   Allocator to use.
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 127


 637:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 638:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
 639:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	basic_string(const _Tp& __t, size_type __pos, size_type __n,
 640:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     const _Alloc& __a = _Alloc())
 641:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: basic_string(_S_to_string_view(__t).substr(__pos, __n), __a) { }
 642:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 643:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 644:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string from a string_view.
 645:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __t  Source object convertible to string view.
 646:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 647:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 648:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
 649:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	explicit
 650:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	basic_string(const _Tp& __t, const _Alloc& __a = _Alloc())
 651:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: basic_string(__sv_wrapper(_S_to_string_view(__t)), __a) { }
 652:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
 653:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 654:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 655:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Destroy the string instance.
 656:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ~basic_string()
 658:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 659:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 660:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 661:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Assign the value of @a str to this string.
 662:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 663:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 664:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
 665:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(const basic_string& __str)
 666:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 667:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->assign(__str);
 668:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 669:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 670:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 671:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Copy contents of @a s into this string.
 672:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __s  Source null-terminated string.
 673:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 674:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
 675:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(const _CharT* __s)
 676:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->assign(__s); }
 677:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 678:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 679:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to string of length 1.
 680:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __c  Source character.
 681:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 682:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Assigning to a character makes this string length 1 and
 683:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  (*this)[0] == @a c.
 684:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 685:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
 686:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(_CharT __c)
 687:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 688:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->assign(1, __c);
 689:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
 690:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 691:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 692:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 693:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 128


 694:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Move assign the value of @a str to this string.
 695:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 696:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 697:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The contents of @a str are moved into this string (without copying).
 698:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a str is a valid, but unspecified string.
 699:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        **/
 700:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 701:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 2063. Contradictory requirements for string move assignment
 702:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
 703:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(basic_string&& __str)
 704:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       noexcept(_Alloc_traits::_S_nothrow_move())
 705:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 706:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (!_M_is_local() && _Alloc_traits::_S_propagate_on_move_assign()
 707:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    && !_Alloc_traits::_S_always_equal()
 708:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    && _M_get_allocator() != __str._M_get_allocator())
 709:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 710:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    // Destroy existing storage before replacing allocator.
 711:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_destroy(_M_allocated_capacity);
 712:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_data(_M_local_data());
 713:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_set_length(0);
 714:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 715:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// Replace allocator if POCMA is true.
 716:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	std::__alloc_on_move(_M_get_allocator(), __str._M_get_allocator());
 717:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 718:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__str._M_is_local())
 719:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 720:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    // We've always got room for a short string, just copy it.
 721:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    if (__str.size())
 722:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      this->_S_copy(_M_data(), __str._M_data(), __str.size());
 723:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_set_length(__str.size());
 724:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 725:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else if (_Alloc_traits::_S_propagate_on_move_assign()
 726:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    || _Alloc_traits::_S_always_equal()
 727:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    || _M_get_allocator() == __str._M_get_allocator())
 728:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 729:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    // Just move the allocated pointer, our allocator can free it.
 730:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    pointer __data = nullptr;
 731:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    size_type __capacity;
 732:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    if (!_M_is_local())
 733:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      {
 734:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		if (_Alloc_traits::_S_always_equal())
 735:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  {
 736:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    // __str can reuse our existing storage.
 737:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    __data = _M_data();
 738:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    __capacity = _M_allocated_capacity;
 739:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  }
 740:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		else // __str can't use it, so free it.
 741:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  _M_destroy(_M_allocated_capacity);
 742:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      }
 743:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 744:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_data(__str._M_data());
 745:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_length(__str.length());
 746:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 747:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    if (__data)
 748:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      {
 749:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		__str._M_data(__data);
 750:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		__str._M_capacity(__capacity);
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 129


 751:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      }
 752:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    else
 753:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      __str._M_data(__str._M_local_buf);
 754:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 755:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else // Need to do a deep copy
 756:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  assign(__str);
 757:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__str.clear();
 758:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
 759:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 760:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 761:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 762:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to string constructed from initializer %list.
 763:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __l  std::initializer_list.
 764:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 765:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
 766:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(initializer_list<_CharT> __l)
 767:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 768:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->assign(__l.begin(), __l.size());
 769:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
 770:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 771:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
 772:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 773:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
 774:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 775:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to string constructed from a string_view.
 776:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __svt  An object convertible to string_view.
 777:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 778:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****      template<typename _Tp>
 779:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        _If_sv<_Tp, basic_string&>
 780:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        operator=(const _Tp& __svt)
 781:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        { return this->assign(__svt); }
 782:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 783:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 784:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Convert to a string_view.
 785:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return A string_view.
 786:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 787:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator __sv_type() const noexcept
 788:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(data(), size()); }
 789:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
 790:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 791:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Iterators:
 792:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 793:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write iterator that points to the first character in
 794:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the %string.
 795:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 796:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
 797:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       begin() _GLIBCXX_NOEXCEPT
 798:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return iterator(_M_data()); }
 799:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 800:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 801:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
 802:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character in the %string.
 803:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 804:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_iterator
 805:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       begin() const _GLIBCXX_NOEXCEPT
 806:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_iterator(_M_data()); }
 807:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 130


 808:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 809:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write iterator that points one past the last
 810:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character in the %string.
 811:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 812:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
 813:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       end() _GLIBCXX_NOEXCEPT
 814:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return iterator(_M_data() + this->size()); }
 815:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 816:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 817:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
 818:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  last character in the %string.
 819:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 820:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_iterator
 821:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       end() const _GLIBCXX_NOEXCEPT
 822:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_iterator(_M_data() + this->size()); }
 823:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 824:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 825:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write reverse iterator that points to the last
 826:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character in the %string.  Iteration is done in reverse element
 827:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  order.
 828:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 829:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reverse_iterator
 830:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rbegin() _GLIBCXX_NOEXCEPT
 831:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return reverse_iterator(this->end()); }
 832:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 833:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 834:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 835:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to the last character in the %string.  Iteration is done in
 836:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  reverse element order.
 837:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 838:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reverse_iterator
 839:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 840:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_reverse_iterator(this->end()); }
 841:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 842:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 843:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write reverse iterator that points to one before the
 844:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first character in the %string.  Iteration is done in reverse
 845:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  element order.
 846:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 847:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reverse_iterator
 848:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rend() _GLIBCXX_NOEXCEPT
 849:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return reverse_iterator(this->begin()); }
 850:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 851:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 852:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 853:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to one before the first character in the %string.  Iteration
 854:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is done in reverse element order.
 855:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 856:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reverse_iterator
 857:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rend() const _GLIBCXX_NOEXCEPT
 858:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_reverse_iterator(this->begin()); }
 859:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 860:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 861:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 862:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
 863:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character in the %string.
 864:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 131


 865:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_iterator
 866:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       cbegin() const noexcept
 867:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_iterator(this->_M_data()); }
 868:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 869:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 870:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
 871:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  last character in the %string.
 872:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 873:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_iterator
 874:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       cend() const noexcept
 875:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_iterator(this->_M_data() + this->size()); }
 876:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 877:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 878:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 879:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to the last character in the %string.  Iteration is done in
 880:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  reverse element order.
 881:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 882:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reverse_iterator
 883:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       crbegin() const noexcept
 884:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_reverse_iterator(this->end()); }
 885:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 886:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 887:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 888:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to one before the first character in the %string.  Iteration
 889:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is done in reverse element order.
 890:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 891:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reverse_iterator
 892:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       crend() const noexcept
 893:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_reverse_iterator(this->begin()); }
 894:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 895:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 896:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
 897:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Capacity:
 898:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  Returns the number of characters in the string, not including any
 899:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  null-termination.
 900:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
 901:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size() const _GLIBCXX_NOEXCEPT
 902:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 903:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 904:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  Returns the number of characters in the string, not including any
 905:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  null-termination.
 906:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
 907:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       length() const _GLIBCXX_NOEXCEPT
 908:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 692              		.loc 20 908 16 view .LVU125
 693 0006 4E68     		ldr	r6, [r1, #4]
 694              	.LBE2647:
 695              	.LBE2646:
 696              	.LBE2643:
 697              	.LBE2642:
 698              	.LBE2641:
 699              		.loc 19 38 8 view .LVU126
 700 0008 83B0     		sub	sp, sp, #12
 701              		.cfi_def_cfa_offset 32
 702              	.LBB2931:
 703              	.LBB2742:
 704              	.LBB2737:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 132


 705              	.LBB2648:
 706              	.LBB2649:
 160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 707              		.loc 20 160 46 view .LVU127
 708 000a 2060     		str	r0, [r4]
 709              	.LBE2649:
 710              	.LBE2648:
 711              	.LBE2737:
 712              	.LBE2742:
 713              	.LBE2931:
 714              		.loc 19 38 8 view .LVU128
 715 000c 0D46     		mov	r5, r1
 716              	.LVL34:
 717              	.LBB2932:
 718              	.LBB2743:
 719              	.LBI2642:
 448:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(),
 720              		.loc 20 448 7 is_stmt 1 view .LVU129
 721              	.LBB2738:
 722              	.LBB2654:
 723              	.LBI2644:
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 724              		.loc 20 190 7 view .LVU130
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 725              		.loc 20 190 7 is_stmt 0 view .LVU131
 726              	.LBE2654:
 727              	.LBB2655:
 728              	.LBI2655:
 290:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 729              		.loc 20 290 7 is_stmt 1 view .LVU132
 290:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 730              		.loc 20 290 7 is_stmt 0 view .LVU133
 731              	.LBE2655:
 732              	.LBB2656:
 733              	.LBI2656:
 734              		.file 21 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
   1:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // Allocator traits -*- C++ -*-
   2:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
   3:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // Copyright (C) 2011-2020 Free Software Foundation, Inc.
   4:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** //
   5:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // software; you can redistribute it and/or modify it under the
   7:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // terms of the GNU General Public License as published by the
   8:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // any later version.
  10:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  11:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // This library is distributed in the hope that it will be useful,
  12:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // GNU General Public License for more details.
  15:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  16:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  20:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // You should have received a copy of the GNU General Public License and
  21:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 133


  22:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // <http://www.gnu.org/licenses/>.
  24:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  25:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** /** @file ext/alloc_traits.h
  26:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****  */
  28:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  29:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #ifndef _EXT_ALLOC_TRAITS_H
  30:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #define _EXT_ALLOC_TRAITS_H 1
  31:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  32:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #pragma GCC system_header
  33:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  34:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** # include <bits/alloc_traits.h>
  35:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #if __cplusplus < 201103L
  36:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** # include <bits/allocator.h>  // for __alloc_swap
  37:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #endif
  38:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  39:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  40:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** {
  41:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  42:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  43:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** /**
  44:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****  * @brief  Uniform interface to C++98 and C++11 allocators.
  45:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****  * @ingroup allocators
  46:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** */
  47:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** template<typename _Alloc, typename = typename _Alloc::value_type>
  48:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****   struct __alloc_traits
  49:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #if __cplusplus >= 201103L
  50:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****   : std::allocator_traits<_Alloc>
  51:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #endif
  52:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****   {
  53:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef _Alloc allocator_type;
  54:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #if __cplusplus >= 201103L
  55:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef std::allocator_traits<_Alloc>           _Base_type;
  56:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef typename _Base_type::value_type         value_type;
  57:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef typename _Base_type::pointer            pointer;
  58:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef typename _Base_type::const_pointer      const_pointer;
  59:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef typename _Base_type::size_type          size_type;
  60:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef typename _Base_type::difference_type    difference_type;
  61:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     // C++11 allocators do not define reference or const_reference
  62:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef value_type&                             reference;
  63:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef const value_type&                       const_reference;
  64:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     using _Base_type::allocate;
  65:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     using _Base_type::deallocate;
  66:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     using _Base_type::construct;
  67:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     using _Base_type::destroy;
  68:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     using _Base_type::max_size;
  69:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  70:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****   private:
  71:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     template<typename _Ptr>
  72:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       using __is_custom_pointer
  73:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 	= std::__and_<std::is_same<pointer, _Ptr>,
  74:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 		      std::__not_<std::is_pointer<_Ptr>>>;
  75:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****   public:
  77:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     // overload construct for non-standard pointer types
  78:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     template<typename _Ptr, typename... _Args>
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 134


  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       static _GLIBCXX14_CONSTEXPR
  80:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       std::__enable_if_t<__is_custom_pointer<_Ptr>::value>
  81:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       construct(_Alloc& __a, _Ptr __p, _Args&&... __args)
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       noexcept(noexcept(_Base_type::construct(__a, std::__to_address(__p),
  83:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 					      std::forward<_Args>(__args)...)))
  84:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       {
  85:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 	_Base_type::construct(__a, std::__to_address(__p),
  86:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 			      std::forward<_Args>(__args)...);
  87:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       }
  88:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     // overload destroy for non-standard pointer types
  90:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     template<typename _Ptr>
  91:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       static _GLIBCXX14_CONSTEXPR
  92:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       std::__enable_if_t<__is_custom_pointer<_Ptr>::value>
  93:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       destroy(_Alloc& __a, _Ptr __p)
  94:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       noexcept(noexcept(_Base_type::destroy(__a, std::__to_address(__p))))
  95:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       { _Base_type::destroy(__a, std::__to_address(__p)); }
  96:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  97:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     static constexpr _Alloc _S_select_on_copy(const _Alloc& __a)
 735              		.loc 21 97 29 is_stmt 1 view .LVU134
 736              	.LBB2657:
 737              	.LBI2657:
 492:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 493:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 494:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 495:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Construct an object of type `_Up`
 496:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 497:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to memory of suitable size and alignment for
 498:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *	       an object of type `_Up`.
 499:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __args Constructor arguments.
 500:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 501:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls `__a.construct(__p, std::forward<_Args>(__args)...)`
 502:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  in C++11, C++14 and C++17. Changed in C++20 to call
 503:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  `std::construct_at(__p, std::forward<_Args>(__args)...)` instead.
 504:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 505:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Up, typename... _Args>
 506:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR void
 507:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
 508:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 509:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 510:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 511:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 512:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  __a.construct(__p, std::forward<_Args>(__args)...);
 513:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 514:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  std::construct_at(__p, std::forward<_Args>(__args)...);
 515:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 516:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 517:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 518:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 519:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Destroy an object of type @a _Up
 520:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 521:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to the object to destroy
 522:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 523:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls @c __a.destroy(__p).
 524:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 525:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Up>
 526:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR void
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 135


 527:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
 528:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(is_nothrow_destructible<_Up>::value)
 529:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 530:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 531:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  __a.destroy(__p);
 532:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 533:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  std::destroy_at(__p);
 534:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 535:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 536:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 537:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 538:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  The maximum supported allocation size
 539:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 540:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return @c __a.max_size()
 541:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 542:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR size_type
 543:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
 544:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       {
 545:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 546:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	return __a.max_size();
 547:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 548:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	return size_t(-1) / sizeof(value_type);
 549:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 550:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       }
 551:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 552:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 553:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Obtain an allocator to use when copying a container.
 554:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __rhs  An allocator.
 555:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return @c __rhs
 556:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 557:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR allocator_type
 558:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       select_on_container_copy_construction(const allocator_type& __rhs)
 738              		.loc 15 558 7 view .LVU135
 739              	.LBB2658:
 740              	.LBI2658:
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 741              		.loc 17 147 7 view .LVU136
 742              	.LBB2659:
 743              	.LBI2659:
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 744              		.loc 16 82 7 view .LVU137
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 745              		.loc 16 82 7 is_stmt 0 view .LVU138
 746              	.LBE2659:
 747              	.LBE2658:
 748              	.LBE2657:
 749              	.LBE2656:
 750              	.LBB2660:
 751              	.LBI2648:
 159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 752              		.loc 20 159 2 is_stmt 1 view .LVU139
 753              	.LBB2653:
 754              	.LBB2650:
 755              	.LBI2650:
 756              		.file 22 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
   1:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // Move, forward and identity for C++11 + swap -*- C++ -*-
   2:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 136


   3:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // Copyright (C) 2007-2020 Free Software Foundation, Inc.
   4:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** //
   5:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // software; you can redistribute it and/or modify it under the
   7:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // terms of the GNU General Public License as published by the
   8:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // any later version.
  10:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  11:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // This library is distributed in the hope that it will be useful,
  12:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // GNU General Public License for more details.
  15:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  16:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  20:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // You should have received a copy of the GNU General Public License and
  21:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // <http://www.gnu.org/licenses/>.
  24:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  25:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** /** @file bits/move.h
  26:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****  *  This is an internal header file, included by other library headers.
  27:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****  *  Do not attempt to use it directly. @headername{utility}
  28:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****  */
  29:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  30:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #ifndef _MOVE_H
  31:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #define _MOVE_H 1
  32:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  33:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #include <bits/c++config.h>
  34:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #if __cplusplus < 201103L
  35:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** # include <bits/concept_check.h>
  36:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #endif
  37:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  38:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** namespace std _GLIBCXX_VISIBILITY(default)
  39:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** {
  40:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  41:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  42:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   // Used, in C++03 mode too, by allocators, etc.
  43:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   /**
  44:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @brief Same as C++11 std::addressof
  45:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @ingroup utilities
  46:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    */
  47:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   template<typename _Tp>
  48:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     inline _GLIBCXX_CONSTEXPR _Tp*
  49:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
  50:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return __builtin_addressof(__r); }
  51:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  52:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #if __cplusplus >= 201103L
  53:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  54:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** _GLIBCXX_END_NAMESPACE_VERSION
  55:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** } // namespace
  56:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  57:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #include <type_traits> // Brings in std::declval too.
  58:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  59:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** namespace std _GLIBCXX_VISIBILITY(default)
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 137


  60:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** {
  61:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  62:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  63:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   /**
  64:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @addtogroup utilities
  65:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @{
  66:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    */
  67:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  68:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   /**
  69:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @brief  Forward an lvalue.
  70:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @return The parameter cast to the specified type.
  71:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *
  72:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  This function is used to implement "perfect forwarding".
  73:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    */
  74:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   template<typename _Tp>
  75:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     constexpr _Tp&&
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     forward(typename std::remove_reference<_Tp>::type& __t) noexcept
  77:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
  78:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   /**
  80:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @brief  Forward an rvalue.
  81:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @return The parameter cast to the specified type.
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *
  83:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  This function is used to implement "perfect forwarding".
  84:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    */
  85:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   template<typename _Tp>
  86:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     constexpr _Tp&&
  87:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     forward(typename std::remove_reference<_Tp>::type&& __t) noexcept
  88:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     {
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       static_assert(!std::is_lvalue_reference<_Tp>::value, "template argument"
  90:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 		    " substituting _Tp is an lvalue reference type");
  91:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       return static_cast<_Tp&&>(__t);
  92:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     }
  93:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  94:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   /**
  95:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @brief  Convert a value to an rvalue.
  96:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @param  __t  A thing of arbitrary type.
  97:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @return The parameter cast to an rvalue-reference to allow moving it.
  98:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   */
  99:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   template<typename _Tp>
 100:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     constexpr typename std::remove_reference<_Tp>::type&&
 101:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     move(_Tp&& __t) noexcept
 757              		.loc 22 101 5 view .LVU140
 758              		.loc 22 101 5 is_stmt 0 view .LVU141
 759              	.LBE2650:
 760              	.LBB2651:
 761              	.LBI2651:
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 762              		.loc 17 147 7 is_stmt 1 view .LVU142
 763              	.LBB2652:
 764              	.LBI2652:
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 765              		.loc 16 82 7 view .LVU143
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 766              		.loc 16 82 7 is_stmt 0 view .LVU144
 767              	.LBE2652:
 768              	.LBE2651:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 138


 769              	.LBE2653:
 770              	.LBE2660:
 771              	.LBB2661:
 772              	.LBI2661:
 773              		.loc 17 162 7 is_stmt 1 view .LVU145
 774              	.LBB2662:
 775              	.LBI2662:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 776              		.loc 16 89 7 view .LVU146
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 777              		.loc 16 89 7 is_stmt 0 view .LVU147
 778              	.LBE2662:
 779              	.LBE2661:
 780              	.LBB2663:
 781              	.LBI2663:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 782              		.loc 20 186 7 is_stmt 1 view .LVU148
 783              	.LBB2664:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 784              		.loc 20 187 28 is_stmt 0 view .LVU149
 785 000e 0F68     		ldr	r7, [r1]
 786              	.LVL35:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 787              		.loc 20 187 28 view .LVU150
 788              	.LBE2664:
 789              	.LBE2663:
 790              	.LBB2665:
 791              	.LBI2665:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 792              		.loc 20 186 7 is_stmt 1 view .LVU151
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 793              		.loc 20 186 7 is_stmt 0 view .LVU152
 794              	.LBE2665:
 795              	.LBB2666:
 796              	.LBI2646:
 907:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 797              		.loc 20 907 7 is_stmt 1 view .LVU153
 907:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 798              		.loc 20 907 7 is_stmt 0 view .LVU154
 799              	.LBE2666:
 800              	.LBB2667:
 801              	.LBI2667:
 263:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 802              		.loc 20 263 9 is_stmt 1 view .LVU155
 803              	.LBB2668:
 804              	.LBB2669:
 805              	.LBI2669:
 243:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 806              		.loc 20 243 9 view .LVU156
 807              	.LBB2670:
 808              	.LBB2671:
 809              	.LBI2671:
 810              		.file 23 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
   1:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // Components for manipulating sequences of characters -*- C++ -*-
   2:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
   3:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** //
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 139


   5:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // software; you can redistribute it and/or modify it under the
   7:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // terms of the GNU General Public License as published by the
   8:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // any later version.
  10:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  11:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // This library is distributed in the hope that it will be useful,
  12:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // GNU General Public License for more details.
  15:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  16:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // 3.1, as published by the Free Software Foundation.
  19:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  20:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // You should have received a copy of the GNU General Public License and
  21:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // <http://www.gnu.org/licenses/>.
  24:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  25:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** /** @file bits/basic_string.tcc
  26:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****  *  This is an internal header file, included by other library headers.
  27:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****  *  Do not attempt to use it directly. @headername{string}
  28:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****  */
  29:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  30:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** //
  31:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // ISO C++ 14882: 21  Strings library
  32:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** //
  33:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  34:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // Written by Jason Merrill based upon the specification by Takanori Adachi
  35:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // in ANSI X3J16/94-0013R2.  Rewritten by Nathan Myers to ISO-14882.
  36:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // Non-reference-counted implementation written by Paolo Carlini and
  37:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // updated by Jonathan Wakely for ISO-14882-2011.
  38:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  39:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** #ifndef _BASIC_STRING_TCC
  40:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** #define _BASIC_STRING_TCC 1
  41:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  42:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** #pragma GCC system_header
  43:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  44:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** #include <bits/cxxabi_forced.h>
  45:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  46:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** namespace std _GLIBCXX_VISIBILITY(default)
  47:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** {
  48:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  49:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  50:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** #if _GLIBCXX_USE_CXX11_ABI
  51:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  52:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
  53:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     const typename basic_string<_CharT, _Traits, _Alloc>::size_type
  54:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::npos;
  55:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  56:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
  57:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     void
  58:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
  59:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     swap(basic_string& __s) _GLIBCXX_NOEXCEPT
  60:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     {
  61:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       if (this == &__s)
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 140


  62:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	return;
  63:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  64:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _Alloc_traits::_S_on_swap(_M_get_allocator(), __s._M_get_allocator());
  65:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  66:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       if (_M_is_local())
  67:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	if (__s._M_is_local())
  68:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
  69:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    if (length() && __s.length())
  70:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      {
  71:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		_CharT __tmp_data[_S_local_capacity + 1];
  72:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		traits_type::copy(__tmp_data, __s._M_local_buf,
  73:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				  _S_local_capacity + 1);
  74:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		traits_type::copy(__s._M_local_buf, _M_local_buf,
  75:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				  _S_local_capacity + 1);
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		traits_type::copy(_M_local_buf, __tmp_data,
  77:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				  _S_local_capacity + 1);
  78:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      }
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    else if (__s.length())
  80:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      {
  81:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		traits_type::copy(_M_local_buf, __s._M_local_buf,
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				  _S_local_capacity + 1);
  83:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		_M_length(__s.length());
  84:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		__s._M_set_length(0);
  85:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		return;
  86:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      }
  87:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    else if (length())
  88:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      {
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		traits_type::copy(__s._M_local_buf, _M_local_buf,
  90:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				  _S_local_capacity + 1);
  91:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		__s._M_length(length());
  92:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		_M_set_length(0);
  93:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		return;
  94:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      }
  95:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  }
  96:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	else
  97:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
  98:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    const size_type __tmp_capacity = __s._M_allocated_capacity;
  99:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    traits_type::copy(__s._M_local_buf, _M_local_buf,
 100:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 			      _S_local_capacity + 1);
 101:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_data(__s._M_data());
 102:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    __s._M_data(__s._M_local_buf);
 103:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__tmp_capacity);
 104:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  }
 105:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       else
 106:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	{
 107:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  const size_type __tmp_capacity = _M_allocated_capacity;
 108:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  if (__s._M_is_local())
 109:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    {
 110:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      traits_type::copy(_M_local_buf, __s._M_local_buf,
 111:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				_S_local_capacity + 1);
 112:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      __s._M_data(_M_data());
 113:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      _M_data(_M_local_buf);
 114:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    }
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  else
 116:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    {
 117:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      pointer __tmp_ptr = _M_data();
 118:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      _M_data(__s._M_data());
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 141


 119:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      __s._M_data(__tmp_ptr);
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      _M_capacity(__s._M_allocated_capacity);
 121:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    }
 122:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  __s._M_capacity(__tmp_capacity);
 123:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	}
 124:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 125:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       const size_type __tmp_length = length();
 126:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_length(__s.length());
 127:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       __s._M_length(__tmp_length);
 128:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     }
 129:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 130:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 131:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     typename basic_string<_CharT, _Traits, _Alloc>::pointer
 132:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     _M_create(size_type& __capacity, size_type __old_capacity)
 134:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     {
 135:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 136:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       // 83.  String::npos vs. string::max_size()
 137:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       if (__capacity > max_size())
 138:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	std::__throw_length_error(__N("basic_string::_M_create"));
 139:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 140:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       // The below implements an exponential growth policy, necessary to
 141:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       // meet amortized linear time requirements of the library: see
 142:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       // http://gcc.gnu.org/ml/libstdc++/2001-07/msg00085.html.
 143:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       if (__capacity > __old_capacity && __capacity < 2 * __old_capacity)
 144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	{
 145:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  __capacity = 2 * __old_capacity;
 146:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  // Never allocate a string bigger than max_size.
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  if (__capacity > max_size())
 148:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    __capacity = max_size();
 149:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	}
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 151:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       // NB: Need an array of char_type[__capacity], plus a terminating
 152:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       // null char_type() element.
 153:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       return _Alloc_traits::allocate(_M_get_allocator(), __capacity + 1);
 154:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     }
 155:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 156:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   // NB: This is the special case for Input Iterators, used in
 157:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   // istreambuf_iterators, etc.
 158:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   // Input Iterators have a cost structure very different from
 159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   // pointers, calling for a different coding style.
 160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 161:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     template<typename _InIterator>
 162:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       void
 163:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       basic_string<_CharT, _Traits, _Alloc>::
 164:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 165:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		   std::input_iterator_tag)
 166:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       {
 167:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	size_type __len = 0;
 168:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	size_type __capacity = size_type(_S_local_capacity);
 169:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 170:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	while (__beg != __end && __len < __capacity)
 171:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 172:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_data()[__len++] = *__beg;
 173:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    ++__beg;
 174:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  }
 175:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 142


 176:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	__try
 177:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 178:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    while (__beg != __end)
 179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      {
 180:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		if (__len == __capacity)
 181:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		  {
 182:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		    // Allocate more space.
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		    __capacity = __len + 1;
 184:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		    pointer __another = _M_create(__capacity, __len);
 185:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		    this->_S_copy(__another, _M_data(), __len);
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		    _M_dispose();
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		    _M_data(__another);
 188:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		    _M_capacity(__capacity);
 189:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		  }
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		_M_data()[__len++] = *__beg;
 191:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		++__beg;
 192:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      }
 193:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  }
 194:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	__catch(...)
 195:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 196:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_dispose();
 197:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    __throw_exception_again;
 198:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  }
 199:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	_M_set_length(__len);
 201:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       }
 202:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 203:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 204:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     template<typename _InIterator>
 205:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       void
 206:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       basic_string<_CharT, _Traits, _Alloc>::
 811              		.loc 23 206 7 view .LVU157
 812              	.LBB2672:
 207:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 208:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		   std::forward_iterator_tag)
 209:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       {
 210:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	// NB: Not required, but considered best practice.
 211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	if (__gnu_cxx::__is_null_pointer(__beg) && __beg != __end)
 813              		.loc 23 211 42 is_stmt 0 view .LVU158
 814 0010 F742     		cmn	r7, r6
 815 0012 01D0     		beq	.L31
 816 0014 002F     		cmp	r7, #0
 817 0016 74D0     		beq	.L36
 818              	.L31:
 212:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 213:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 214:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 215:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
 216:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 217:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	if (__dnew > size_type(_S_local_capacity))
 819              		.loc 23 217 2 view .LVU159
 820 0018 0F2E     		cmp	r6, #15
 215:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 821              		.loc 23 215 12 view .LVU160
 822 001a 0196     		str	r6, [sp, #4]
 823              		.loc 23 217 2 view .LVU161
 824 001c 42D8     		bhi	.L71
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 143


 825              	.LVL36:
 826              	.LBB2673:
 827              	.LBI2673:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 828              		.loc 20 186 7 is_stmt 1 view .LVU162
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 829              		.loc 20 186 7 is_stmt 0 view .LVU163
 830              	.LBE2673:
 831              	.LBB2674:
 832              	.LBI2674:
 392:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 833              		.loc 20 392 7 is_stmt 1 view .LVU164
 834              	.LBB2675:
 835              	.LBI2675:
 346:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 836              		.loc 20 346 7 view .LVU165
 837              	.LBB2676:
 348:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 838              		.loc 20 348 2 is_stmt 0 view .LVU166
 839 001e 012E     		cmp	r6, #1
 840 0020 37D1     		bne	.L34
 841              	.LVL37:
 842              	.LBB2677:
 843              	.LBI2677:
 844              		.file 24 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
   1:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // Character Traits for use by standard string and iostream -*- C++ -*-
   2:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
   3:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** //
   5:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // software; you can redistribute it and/or modify it under the
   7:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // terms of the GNU General Public License as published by the
   8:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // any later version.
  10:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  11:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // This library is distributed in the hope that it will be useful,
  12:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // GNU General Public License for more details.
  15:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  16:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  20:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // You should have received a copy of the GNU General Public License and
  21:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // <http://www.gnu.org/licenses/>.
  24:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  25:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** /** @file bits/char_traits.h
  26:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****  *  This is an internal header file, included by other library headers.
  27:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****  *  Do not attempt to use it directly. @headername{string}
  28:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****  */
  29:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  30:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** //
  31:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // ISO C++ 14882: 21  Strings library
  32:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** //
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 144


  33:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  34:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifndef _CHAR_TRAITS_H
  35:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #define _CHAR_TRAITS_H 1
  36:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  37:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #pragma GCC system_header
  38:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  39:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #include <bits/stl_algobase.h>  // std::copy, std::fill_n
  40:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #include <bits/postypes.h>      // For streampos
  41:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #include <cwchar>               // For WEOF, wmemmove, wmemset, etc.
  42:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cplusplus > 201703L
  43:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** # include <compare>
  44:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
  45:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  46:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifndef _GLIBCXX_ALWAYS_INLINE
  47:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** # define _GLIBCXX_ALWAYS_INLINE inline __attribute__((__always_inline__))
  48:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
  49:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  50:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  51:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** {
  52:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  53:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  54:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   /**
  55:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @brief  Mapping from character type to associated types.
  56:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
  57:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @note This is an implementation class for the generic version
  58:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  of char_traits.  It defines int_type, off_type, pos_type, and
  59:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  state_type.  By default these are unsigned long, streamoff,
  60:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  streampos, and mbstate_t.  Users who need a different set of
  61:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  types, but who don't need to change the definitions of any function
  62:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  defined in char_traits, can specialize __gnu_cxx::_Char_types
  63:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  while leaving __gnu_cxx::char_traits alone. */
  64:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
  65:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     struct _Char_types
  66:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
  67:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef unsigned long   int_type;
  68:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef std::streampos  pos_type;
  69:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef std::streamoff  off_type;
  70:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef std::mbstate_t  state_type;
  71:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     };
  72:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  73:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  74:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   /**
  75:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @brief  Base class used to implement std::char_traits.
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
  77:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @note For any given actual character type, this definition is
  78:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  probably wrong.  (Most of the member functions are likely to be
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  right, but the int_type and state_type typedefs, and the eof()
  80:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  member function, are likely to be wrong.)  The reason this class
  81:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  exists is so users can specialize it.  Classes in namespace std
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  may not be specialized for fundamental types, but classes in
  83:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  namespace __gnu_cxx may be.
  84:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
  85:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/strings.html#strings.string.character_typ
  86:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  for advice on how to make use of this class for @a unusual character
  87:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  types. Also, check out include/ext/pod_char_traits.h.  
  88:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    */
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 145


  90:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     struct char_traits
  91:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
  92:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef _CharT                                    char_type;
  93:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef typename _Char_types<_CharT>::int_type    int_type;
  94:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef typename _Char_types<_CharT>::pos_type    pos_type;
  95:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef typename _Char_types<_CharT>::off_type    off_type;
  96:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef typename _Char_types<_CharT>::state_type  state_type;
  97:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cpp_lib_three_way_comparison
  98:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       using comparison_category = std::strong_ordering;
  99:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 100:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 101:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX14_CONSTEXPR void
 102:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       assign(char_type& __c1, const char_type& __c2)
 103:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 104:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 105:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 106:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       eq(const char_type& __c1, const char_type& __c2)
 107:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return __c1 == __c2; }
 108:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 109:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 110:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       lt(const char_type& __c1, const char_type& __c2)
 111:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return __c1 < __c2; }
 112:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 113:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX14_CONSTEXPR int
 114:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       compare(const char_type* __s1, const char_type* __s2, std::size_t __n);
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 116:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX14_CONSTEXPR std::size_t
 117:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       length(const char_type* __s);
 118:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 119:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX14_CONSTEXPR const char_type*
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       find(const char_type* __s, std::size_t __n, const char_type& __a);
 121:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 122:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX20_CONSTEXPR char_type*
 123:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       move(char_type* __s1, const char_type* __s2, std::size_t __n);
 124:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 125:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX20_CONSTEXPR char_type*
 126:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       copy(char_type* __s1, const char_type* __s2, std::size_t __n);
 127:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 128:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX20_CONSTEXPR char_type*
 129:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       assign(char_type* __s, std::size_t __n, char_type __a);
 130:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 131:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR char_type
 132:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       to_char_type(const int_type& __c)
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return static_cast<char_type>(__c); }
 134:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 135:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 136:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       to_int_type(const char_type& __c)
 137:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return static_cast<int_type>(__c); }
 138:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 139:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 140:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       eq_int_type(const int_type& __c1, const int_type& __c2)
 141:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return __c1 == __c2; }
 142:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 143:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       eof()
 145:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return static_cast<int_type>(_GLIBCXX_STDIO_EOF); }
 146:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 146


 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 148:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       not_eof(const int_type& __c)
 149:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return !eq_int_type(__c, eof()) ? __c : to_int_type(char_type()); }
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     };
 151:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 152:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 153:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     _GLIBCXX14_CONSTEXPR int
 154:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     char_traits<_CharT>::
 155:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     compare(const char_type* __s1, const char_type* __s2, std::size_t __n)
 156:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 157:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       for (std::size_t __i = 0; __i < __n; ++__i)
 158:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (lt(__s1[__i], __s2[__i]))
 159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return -1;
 160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	else if (lt(__s2[__i], __s1[__i]))
 161:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 1;
 162:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return 0;
 163:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 164:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 165:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 166:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     _GLIBCXX14_CONSTEXPR std::size_t
 167:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     char_traits<_CharT>::
 168:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     length(const char_type* __p)
 169:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 170:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       std::size_t __i = 0;
 171:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       while (!eq(__p[__i], char_type()))
 172:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****         ++__i;
 173:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __i;
 174:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 175:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 176:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 177:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     _GLIBCXX14_CONSTEXPR const typename char_traits<_CharT>::char_type*
 178:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     char_traits<_CharT>::
 179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     find(const char_type* __s, std::size_t __n, const char_type& __a)
 180:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 181:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       for (std::size_t __i = 0; __i < __n; ++__i)
 182:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****         if (eq(__s[__i], __a))
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****           return __s + __i;
 184:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return 0;
 185:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 188:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     _GLIBCXX20_CONSTEXPR
 189:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     typename char_traits<_CharT>::char_type*
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     char_traits<_CharT>::
 191:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     move(char_type* __s1, const char_type* __s2, std::size_t __n)
 192:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 193:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       if (__n == 0)
 194:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return __s1;
 195:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifdef __cpp_lib_is_constant_evaluated
 196:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       if (std::is_constant_evaluated())
 197:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	{
 198:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  if (__s1 > __s2 && __s1 < __s2 + __n)
 199:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	    std::copy_backward(__s2, __s2 + __n, __s1);
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  else
 201:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	    std::copy(__s2, __s2 + __n, __s1);
 202:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 203:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	}
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 147


 204:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 205:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return static_cast<_CharT*>(__builtin_memmove(__s1, __s2,
 206:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 						    __n * sizeof(char_type)));
 207:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 208:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 209:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 210:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     _GLIBCXX20_CONSTEXPR
 211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     typename char_traits<_CharT>::char_type*
 212:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     char_traits<_CharT>::
 213:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     copy(char_type* __s1, const char_type* __s2, std::size_t __n)
 214:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 215:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       // NB: Inline std::copy so no recursive dependencies.
 216:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       std::copy(__s2, __s2 + __n, __s1);
 217:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __s1;
 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 219:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 220:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     _GLIBCXX20_CONSTEXPR
 222:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     typename char_traits<_CharT>::char_type*
 223:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     char_traits<_CharT>::
 224:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     assign(char_type* __s, std::size_t __n, char_type __a)
 225:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 226:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       // NB: Inline std::fill_n so no recursive dependencies.
 227:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       std::fill_n(__s, __n, __a);
 228:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __s;
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 230:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** _GLIBCXX_END_NAMESPACE_VERSION
 232:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** } // namespace
 233:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 234:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** namespace std _GLIBCXX_VISIBILITY(default)
 235:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** {
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 238:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cplusplus >= 201703L
 239:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #define __cpp_lib_constexpr_char_traits 201611
 240:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 241:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   /**
 242:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @brief Determine whether the characters of a NULL-terminated
 243:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  string are known at compile time.
 244:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @param  __s  The string.
 245:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
 246:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  Assumes that _CharT is a built-in character type.
 247:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    */
 248:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 249:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     static _GLIBCXX_ALWAYS_INLINE constexpr bool
 250:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     __constant_string_p(const _CharT* __s)
 251:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 252:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifdef _GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED
 253:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       (void) __s;
 254:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       // In constexpr contexts all strings should be constant.
 255:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __builtin_is_constant_evaluated();
 256:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #else
 257:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       while (__builtin_constant_p(*__s) && *__s)
 258:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	__s++;
 259:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __builtin_constant_p(*__s);
 260:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 148


 261:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 262:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 263:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   /**
 264:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @brief Determine whether the characters of a character array are
 265:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  known at compile time.
 266:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @param  __a  The character array.
 267:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @param  __n  Number of characters.
 268:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
 269:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  Assumes that _CharT is a built-in character type.
 270:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    */
 271:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 272:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     static _GLIBCXX_ALWAYS_INLINE constexpr bool
 273:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     __constant_char_array_p(const _CharT* __a, size_t __n)
 274:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 275:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifdef _GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED
 276:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       (void) __a;
 277:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       (void) __n;
 278:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       // In constexpr contexts all character arrays should be constant.
 279:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __builtin_is_constant_evaluated();
 280:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #else
 281:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       size_t __i = 0;
 282:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       while (__i < __n && __builtin_constant_p(__a[__i]))
 283:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	__i++;
 284:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __i == __n;
 285:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 286:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 287:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 288:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 289:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   // 21.1
 290:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   /**
 291:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @brief  Basis for explicit traits specializations.
 292:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
 293:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @note  For any given actual character type, this definition is
 294:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  probably wrong.  Since this is just a thin wrapper around
 295:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  __gnu_cxx::char_traits, it is possible to achieve a more
 296:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  appropriate definition by specializing __gnu_cxx::char_traits.
 297:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
 298:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/strings.html#strings.string.character_typ
 299:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  for advice on how to make use of this class for @a unusual character
 300:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  types. Also, check out include/ext/pod_char_traits.h.
 301:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   */
 302:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<class _CharT>
 303:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     struct char_traits : public __gnu_cxx::char_traits<_CharT>
 304:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     { };
 305:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 306:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 307:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   /// 21.1.3.1  char_traits specializations
 308:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<>
 309:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     struct char_traits<char>
 310:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 311:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef char              char_type;
 312:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef int               int_type;
 313:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef streampos         pos_type;
 314:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef streamoff         off_type;
 315:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef mbstate_t         state_type;
 316:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cpp_lib_three_way_comparison
 317:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       using comparison_category = strong_ordering;
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 149


 318:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 319:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 320:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX17_CONSTEXPR void
 321:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       assign(char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 845              		.loc 24 321 7 is_stmt 1 view .LVU167
 846              	.LBB2678:
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 847              		.loc 24 322 9 view .LVU168
 848              		.loc 24 322 16 is_stmt 0 view .LVU169
 849 0022 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 850              		.loc 24 322 14 view .LVU170
 851 0024 2372     		strb	r3, [r4, #8]
 852              	.LVL38:
 853              	.L35:
 854              		.loc 24 322 14 view .LVU171
 855              	.LBE2678:
 856              	.LBE2677:
 857              	.LBE2676:
 858              	.LBE2675:
 859              	.LBE2674:
 860              	.LBB2694:
 861              	.LBI2694:
 214:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 862              		.loc 20 214 7 is_stmt 1 view .LVU172
 863              	.LBB2695:
 864              	.LBB2696:
 865              	.LBI2696:
 182:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 866              		.loc 20 182 7 view .LVU173
 867              	.LBE2696:
 868              	.LBB2698:
 869              	.LBB2699:
 870              		.loc 24 322 14 is_stmt 0 view .LVU174
 871 0026 0023     		movs	r3, #0
 872              	.LBE2699:
 873              	.LBE2698:
 874              	.LBB2701:
 875              	.LBB2697:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 876              		.loc 20 183 26 view .LVU175
 877 0028 6660     		str	r6, [r4, #4]
 878              	.LVL39:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 879              		.loc 20 183 26 view .LVU176
 880              	.LBE2697:
 881              	.LBE2701:
 882              	.LBB2702:
 883              	.LBI2702:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 884              		.loc 20 186 7 is_stmt 1 view .LVU177
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 885              		.loc 20 186 7 is_stmt 0 view .LVU178
 886              	.LBE2702:
 887              	.LBB2704:
 888              	.LBI2698:
 321:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 889              		.loc 24 321 7 is_stmt 1 view .LVU179
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 150


 890              	.LBB2700:
 891              		.loc 24 322 9 view .LVU180
 892              		.loc 24 322 14 is_stmt 0 view .LVU181
 893 002a 8355     		strb	r3, [r0, r6]
 894              	.LVL40:
 895              		.loc 24 322 14 view .LVU182
 896              	.LBE2700:
 897              	.LBE2704:
 898              	.LBE2695:
 899              	.LBE2694:
 900              	.LBE2672:
 901              	.LBE2671:
 902              	.LBE2670:
 903              	.LBE2669:
 904              	.LBE2668:
 905              	.LBE2667:
 906              	.LBE2738:
 907              	.LBE2743:
 908              	.LBB2744:
 909              	.LBI2744:
 448:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(),
 910              		.loc 20 448 7 is_stmt 1 view .LVU183
 911              	.LBB2745:
 912              	.LBB2746:
 913              	.LBI2746:
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 914              		.loc 20 190 7 view .LVU184
 915              	.LBB2747:
 193:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 916              		.loc 20 193 51 is_stmt 0 view .LVU185
 917 002c 04F12000 		add	r0, r4, #32
 918              	.LVL41:
 193:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 919              		.loc 20 193 51 view .LVU186
 920              	.LBE2747:
 921              	.LBE2746:
 922              	.LBB2748:
 923              	.LBI2748:
 290:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 924              		.loc 20 290 7 is_stmt 1 view .LVU187
 290:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 925              		.loc 20 290 7 is_stmt 0 view .LVU188
 926              	.LBE2748:
 927              	.LBB2749:
 928              	.LBI2749:
 929              		.loc 21 97 29 is_stmt 1 view .LVU189
 930              	.LBB2750:
 931              	.LBI2750:
 932              		.loc 15 558 7 view .LVU190
 933              	.LBB2751:
 934              	.LBI2751:
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 935              		.loc 17 147 7 view .LVU191
 936              	.LBB2752:
 937              	.LBI2752:
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 938              		.loc 16 82 7 view .LVU192
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 151


  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 939              		.loc 16 82 7 is_stmt 0 view .LVU193
 940              	.LBE2752:
 941              	.LBE2751:
 942              	.LBE2750:
 943              	.LBE2749:
 944              	.LBB2753:
 945              	.LBI2753:
 159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 946              		.loc 20 159 2 is_stmt 1 view .LVU194
 947              	.LBB2754:
 948              	.LBB2755:
 949              	.LBI2755:
 950              		.loc 22 101 5 view .LVU195
 951              		.loc 22 101 5 is_stmt 0 view .LVU196
 952              	.LBE2755:
 953              	.LBB2756:
 954              	.LBI2756:
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 955              		.loc 17 147 7 is_stmt 1 view .LVU197
 956              	.LBB2757:
 957              	.LBI2757:
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 958              		.loc 16 82 7 view .LVU198
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 959              		.loc 16 82 7 is_stmt 0 view .LVU199
 960              	.LBE2757:
 961              	.LBE2756:
 962              	.LBE2754:
 963              	.LBE2753:
 964              	.LBB2759:
 965              	.LBB2760:
 966              		.loc 20 908 16 view .LVU200
 967 0030 EE69     		ldr	r6, [r5, #28]
 968              	.LBE2760:
 969              	.LBE2759:
 970              	.LBB2761:
 971              	.LBB2758:
 160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 972              		.loc 20 160 46 view .LVU201
 973 0032 A061     		str	r0, [r4, #24]
 974              	.LVL42:
 160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 975              		.loc 20 160 46 view .LVU202
 976              	.LBE2758:
 977              	.LBE2761:
 978              	.LBB2762:
 979              	.LBI2762:
 980              		.loc 17 162 7 is_stmt 1 view .LVU203
 981              	.LBB2763:
 982              	.LBI2763:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 983              		.loc 16 89 7 view .LVU204
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 984              		.loc 16 89 7 is_stmt 0 view .LVU205
 985              	.LBE2763:
 986              	.LBE2762:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 152


 987              	.LBB2764:
 988              	.LBI2764:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 989              		.loc 20 186 7 is_stmt 1 view .LVU206
 990              	.LBB2765:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 991              		.loc 20 187 28 is_stmt 0 view .LVU207
 992 0034 AF69     		ldr	r7, [r5, #24]
 993              	.LVL43:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 994              		.loc 20 187 28 view .LVU208
 995              	.LBE2765:
 996              	.LBE2764:
 997              	.LBB2766:
 998              	.LBI2766:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 999              		.loc 20 186 7 is_stmt 1 view .LVU209
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1000              		.loc 20 186 7 is_stmt 0 view .LVU210
 1001              	.LBE2766:
 1002              	.LBB2767:
 1003              	.LBI2759:
 907:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 1004              		.loc 20 907 7 is_stmt 1 view .LVU211
 907:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 1005              		.loc 20 907 7 is_stmt 0 view .LVU212
 1006              	.LBE2767:
 1007              	.LBB2768:
 1008              	.LBI2768:
 263:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 1009              		.loc 20 263 9 is_stmt 1 view .LVU213
 1010              	.LBB2769:
 1011              	.LBB2770:
 1012              	.LBI2770:
 243:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 1013              		.loc 20 243 9 view .LVU214
 1014              	.LBB2771:
 1015              	.LBB2772:
 1016              	.LBI2772:
 206:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 1017              		.loc 23 206 7 view .LVU215
 1018              	.LBB2773:
 211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 1019              		.loc 23 211 42 is_stmt 0 view .LVU216
 1020 0036 F742     		cmn	r7, r6
 1021 0038 01D0     		beq	.L47
 1022 003a 002F     		cmp	r7, #0
 1023 003c 61D0     		beq	.L36
 1024              	.L47:
 1025              		.loc 23 217 2 view .LVU217
 1026 003e 0F2E     		cmp	r6, #15
 215:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 1027              		.loc 23 215 12 view .LVU218
 1028 0040 0196     		str	r6, [sp, #4]
 1029              		.loc 23 217 2 view .LVU219
 1030 0042 4ED8     		bhi	.L72
 1031              	.LVL44:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 153


 1032              	.LBB2774:
 1033              	.LBI2774:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1034              		.loc 20 186 7 is_stmt 1 view .LVU220
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1035              		.loc 20 186 7 is_stmt 0 view .LVU221
 1036              	.LBE2774:
 1037              	.LBB2775:
 1038              	.LBI2775:
 392:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 1039              		.loc 20 392 7 is_stmt 1 view .LVU222
 1040              	.LBB2776:
 1041              	.LBI2776:
 346:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1042              		.loc 20 346 7 view .LVU223
 1043              	.LBB2777:
 348:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 1044              		.loc 20 348 2 is_stmt 0 view .LVU224
 1045 0044 012E     		cmp	r6, #1
 1046 0046 27D1     		bne	.L40
 1047              	.LVL45:
 1048              	.LBB2778:
 1049              	.LBI2778:
 321:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 1050              		.loc 24 321 7 is_stmt 1 view .LVU225
 1051              	.LBB2779:
 1052              		.loc 24 322 9 view .LVU226
 1053              		.loc 24 322 16 is_stmt 0 view .LVU227
 1054 0048 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 1055              		.loc 24 322 14 view .LVU228
 1056 004a 84F82030 		strb	r3, [r4, #32]
 1057              	.LVL46:
 1058              	.L41:
 1059              		.loc 24 322 14 view .LVU229
 1060              	.LBE2779:
 1061              	.LBE2778:
 1062              	.LBE2777:
 1063              	.LBE2776:
 1064              	.LBE2775:
 1065              	.LBB2795:
 1066              	.LBI2795:
 214:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1067              		.loc 20 214 7 is_stmt 1 view .LVU230
 1068              	.LBB2796:
 1069              	.LBB2797:
 1070              	.LBI2797:
 182:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 1071              		.loc 20 182 7 view .LVU231
 1072              	.LBE2797:
 1073              	.LBB2799:
 1074              	.LBB2800:
 1075              		.loc 24 322 14 is_stmt 0 view .LVU232
 1076 004e 0023     		movs	r3, #0
 1077              	.LBE2800:
 1078              	.LBE2799:
 1079              	.LBB2802:
 1080              	.LBB2798:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 154


 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1081              		.loc 20 183 26 view .LVU233
 1082 0050 E661     		str	r6, [r4, #28]
 1083              	.LVL47:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1084              		.loc 20 183 26 view .LVU234
 1085              	.LBE2798:
 1086              	.LBE2802:
 1087              	.LBB2803:
 1088              	.LBI2803:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1089              		.loc 20 186 7 is_stmt 1 view .LVU235
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1090              		.loc 20 186 7 is_stmt 0 view .LVU236
 1091              	.LBE2803:
 1092              	.LBB2805:
 1093              	.LBI2799:
 321:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 1094              		.loc 24 321 7 is_stmt 1 view .LVU237
 1095              	.LBB2801:
 1096              		.loc 24 322 9 view .LVU238
 1097              		.loc 24 322 14 is_stmt 0 view .LVU239
 1098 0052 8355     		strb	r3, [r0, r6]
 1099              	.LVL48:
 1100              		.loc 24 322 14 view .LVU240
 1101              	.LBE2801:
 1102              	.LBE2805:
 1103              	.LBE2796:
 1104              	.LBE2795:
 1105              	.LBE2773:
 1106              	.LBE2772:
 1107              	.LBE2771:
 1108              	.LBE2770:
 1109              	.LBE2769:
 1110              	.LBE2768:
 1111              	.LBE2745:
 1112              	.LBE2744:
 1113              	.LBB2834:
 1114              	.LBI2834:
 448:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(),
 1115              		.loc 20 448 7 is_stmt 1 view .LVU241
 1116              	.LBB2835:
 1117              	.LBB2836:
 1118              	.LBI2836:
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1119              		.loc 20 190 7 view .LVU242
 1120              	.LBB2837:
 193:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 1121              		.loc 20 193 51 is_stmt 0 view .LVU243
 1122 0054 04F13800 		add	r0, r4, #56
 1123              	.LVL49:
 193:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 1124              		.loc 20 193 51 view .LVU244
 1125              	.LBE2837:
 1126              	.LBE2836:
 1127              	.LBB2838:
 1128              	.LBI2838:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 155


 290:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 1129              		.loc 20 290 7 is_stmt 1 view .LVU245
 290:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 1130              		.loc 20 290 7 is_stmt 0 view .LVU246
 1131              	.LBE2838:
 1132              	.LBB2839:
 1133              	.LBI2839:
 1134              		.loc 21 97 29 is_stmt 1 view .LVU247
 1135              	.LBB2840:
 1136              	.LBI2840:
 1137              		.loc 15 558 7 view .LVU248
 1138              	.LBB2841:
 1139              	.LBI2841:
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 1140              		.loc 17 147 7 view .LVU249
 1141              	.LBB2842:
 1142              	.LBI2842:
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1143              		.loc 16 82 7 view .LVU250
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1144              		.loc 16 82 7 is_stmt 0 view .LVU251
 1145              	.LBE2842:
 1146              	.LBE2841:
 1147              	.LBE2840:
 1148              	.LBE2839:
 1149              	.LBB2843:
 1150              	.LBI2843:
 159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 1151              		.loc 20 159 2 is_stmt 1 view .LVU252
 1152              	.LBB2844:
 1153              	.LBB2845:
 1154              	.LBI2845:
 1155              		.loc 22 101 5 view .LVU253
 1156              		.loc 22 101 5 is_stmt 0 view .LVU254
 1157              	.LBE2845:
 1158              	.LBB2846:
 1159              	.LBI2846:
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 1160              		.loc 17 147 7 is_stmt 1 view .LVU255
 1161              	.LBB2847:
 1162              	.LBI2847:
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1163              		.loc 16 82 7 view .LVU256
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1164              		.loc 16 82 7 is_stmt 0 view .LVU257
 1165              	.LBE2847:
 1166              	.LBE2846:
 1167              	.LBE2844:
 1168              	.LBE2843:
 1169              	.LBB2849:
 1170              	.LBB2850:
 1171              		.loc 20 908 16 view .LVU258
 1172 0058 6E6B     		ldr	r6, [r5, #52]
 1173              	.LBE2850:
 1174              	.LBE2849:
 1175              	.LBB2851:
 1176              	.LBB2848:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 156


 160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 1177              		.loc 20 160 46 view .LVU259
 1178 005a 2063     		str	r0, [r4, #48]
 1179              	.LVL50:
 160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 1180              		.loc 20 160 46 view .LVU260
 1181              	.LBE2848:
 1182              	.LBE2851:
 1183              	.LBB2852:
 1184              	.LBI2852:
 1185              		.loc 17 162 7 is_stmt 1 view .LVU261
 1186              	.LBB2853:
 1187              	.LBI2853:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1188              		.loc 16 89 7 view .LVU262
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1189              		.loc 16 89 7 is_stmt 0 view .LVU263
 1190              	.LBE2853:
 1191              	.LBE2852:
 1192              	.LBB2854:
 1193              	.LBI2854:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1194              		.loc 20 186 7 is_stmt 1 view .LVU264
 1195              	.LBB2855:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1196              		.loc 20 187 28 is_stmt 0 view .LVU265
 1197 005c 2F6B     		ldr	r7, [r5, #48]
 1198              	.LVL51:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1199              		.loc 20 187 28 view .LVU266
 1200              	.LBE2855:
 1201              	.LBE2854:
 1202              	.LBB2856:
 1203              	.LBI2856:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1204              		.loc 20 186 7 is_stmt 1 view .LVU267
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1205              		.loc 20 186 7 is_stmt 0 view .LVU268
 1206              	.LBE2856:
 1207              	.LBB2857:
 1208              	.LBI2849:
 907:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 1209              		.loc 20 907 7 is_stmt 1 view .LVU269
 907:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 1210              		.loc 20 907 7 is_stmt 0 view .LVU270
 1211              	.LBE2857:
 1212              	.LBB2858:
 1213              	.LBI2858:
 263:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 1214              		.loc 20 263 9 is_stmt 1 view .LVU271
 1215              	.LBB2859:
 1216              	.LBB2860:
 1217              	.LBI2860:
 243:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 1218              		.loc 20 243 9 view .LVU272
 1219              	.LBB2861:
 1220              	.LBB2862:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 157


 1221              	.LBI2862:
 206:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 1222              		.loc 23 206 7 view .LVU273
 1223              	.LBB2863:
 211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 1224              		.loc 23 211 42 is_stmt 0 view .LVU274
 1225 005e F742     		cmn	r7, r6
 1226 0060 01D0     		beq	.L48
 1227 0062 002F     		cmp	r7, #0
 1228 0064 4DD0     		beq	.L36
 1229              	.L48:
 1230              		.loc 23 217 2 view .LVU275
 1231 0066 0F2E     		cmp	r6, #15
 215:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 1232              		.loc 23 215 12 view .LVU276
 1233 0068 0196     		str	r6, [sp, #4]
 1234              		.loc 23 217 2 view .LVU277
 1235 006a 2AD8     		bhi	.L73
 1236              	.LVL52:
 1237              	.LBB2864:
 1238              	.LBI2864:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1239              		.loc 20 186 7 is_stmt 1 view .LVU278
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1240              		.loc 20 186 7 is_stmt 0 view .LVU279
 1241              	.LBE2864:
 1242              	.LBB2865:
 1243              	.LBI2865:
 392:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 1244              		.loc 20 392 7 is_stmt 1 view .LVU280
 1245              	.LBB2866:
 1246              	.LBI2866:
 346:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1247              		.loc 20 346 7 view .LVU281
 1248              	.LBB2867:
 348:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 1249              		.loc 20 348 2 is_stmt 0 view .LVU282
 1250 006c 012E     		cmp	r6, #1
 1251 006e 16D1     		bne	.L45
 1252              	.LVL53:
 1253              	.LBB2868:
 1254              	.LBI2868:
 321:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 1255              		.loc 24 321 7 is_stmt 1 view .LVU283
 1256              	.LBB2869:
 1257              		.loc 24 322 9 view .LVU284
 1258              		.loc 24 322 16 is_stmt 0 view .LVU285
 1259 0070 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 1260              		.loc 24 322 14 view .LVU286
 1261 0072 84F83830 		strb	r3, [r4, #56]
 1262              	.LVL54:
 1263              	.L46:
 1264              		.loc 24 322 14 view .LVU287
 1265              	.LBE2869:
 1266              	.LBE2868:
 1267              	.LBE2867:
 1268              	.LBE2866:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 158


 1269              	.LBE2865:
 1270              	.LBB2885:
 1271              	.LBI2885:
 214:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1272              		.loc 20 214 7 is_stmt 1 view .LVU288
 1273              	.LBB2886:
 1274              	.LBB2887:
 1275              	.LBI2887:
 182:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 1276              		.loc 20 182 7 view .LVU289
 1277              	.LBE2887:
 1278              	.LBB2889:
 1279              	.LBB2890:
 1280              		.loc 24 322 14 is_stmt 0 view .LVU290
 1281 0076 0023     		movs	r3, #0
 1282              	.LBE2890:
 1283              	.LBE2889:
 1284              	.LBB2892:
 1285              	.LBB2888:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1286              		.loc 20 183 26 view .LVU291
 1287 0078 6663     		str	r6, [r4, #52]
 1288              	.LVL55:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1289              		.loc 20 183 26 view .LVU292
 1290              	.LBE2888:
 1291              	.LBE2892:
 1292              	.LBB2893:
 1293              	.LBI2893:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1294              		.loc 20 186 7 is_stmt 1 view .LVU293
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1295              		.loc 20 186 7 is_stmt 0 view .LVU294
 1296              	.LBE2893:
 1297              	.LBB2895:
 1298              	.LBI2889:
 321:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 1299              		.loc 24 321 7 is_stmt 1 view .LVU295
 1300              	.LBB2891:
 1301              		.loc 24 322 9 view .LVU296
 1302              		.loc 24 322 14 is_stmt 0 view .LVU297
 1303 007a 8355     		strb	r3, [r0, r6]
 1304              	.LVL56:
 1305              		.loc 24 322 14 view .LVU298
 1306              	.LBE2891:
 1307              	.LBE2895:
 1308              	.LBE2886:
 1309              	.LBE2885:
 1310              	.LBE2863:
 1311              	.LBE2862:
 1312              	.LBE2861:
 1313              	.LBE2860:
 1314              	.LBE2859:
 1315              	.LBE2858:
 1316              	.LBE2835:
 1317              	.LBE2834:
 1318              		.loc 19 38 8 view .LVU299
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 159


 1319 007c A86C     		ldr	r0, [r5, #72]
 1320 007e E96C     		ldr	r1, [r5, #76]	@ float
 1321 0080 2A6D     		ldr	r2, [r5, #80]	@ float
 1322 0082 6B6D     		ldr	r3, [r5, #84]	@ float
 1323 0084 A064     		str	r0, [r4, #72]
 1324              	.LBE2932:
 1325 0086 2046     		mov	r0, r4
 1326              	.LBB2933:
 1327 0088 E164     		str	r1, [r4, #76]	@ float
 1328 008a 2265     		str	r2, [r4, #80]	@ float
 1329 008c 6365     		str	r3, [r4, #84]	@ float
 1330              	.LBE2933:
 1331 008e 03B0     		add	sp, sp, #12
 1332              		.cfi_remember_state
 1333              		.cfi_def_cfa_offset 20
 1334              		@ sp needed
 1335 0090 F0BD     		pop	{r4, r5, r6, r7, pc}
 1336              	.LVL57:
 1337              	.L34:
 1338              		.cfi_restore_state
 1339              	.LBB2934:
 1340              	.LBB2924:
 1341              	.LBB2739:
 1342              	.LBB2734:
 1343              	.LBB2731:
 1344              	.LBB2728:
 1345              	.LBB2725:
 1346              	.LBB2722:
 1347              	.LBB2719:
 1348              	.LBB2707:
 1349              	.LBB2691:
 1350              	.LBB2688:
 1351              	.LBB2679:
 1352              	.LBI2679:
 346:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1353              		.loc 20 346 7 is_stmt 1 view .LVU300
 1354              	.LBB2680:
 1355              	.LBI2680:
 323:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 324:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 325:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       eq(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 326:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return __c1 == __c2; }
 327:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 328:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 329:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       lt(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 330:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 331:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	// LWG 467.
 332:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return (static_cast<unsigned char>(__c1)
 333:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 		< static_cast<unsigned char>(__c2));
 334:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 335:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 336:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX17_CONSTEXPR int
 337:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       compare(const char_type* __s1, const char_type* __s2, size_t __n)
 338:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 339:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__n == 0)
 340:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 0;
 341:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cplusplus >= 201703L
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 160


 342:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__builtin_constant_p(__n)
 343:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	    && __constant_char_array_p(__s1, __n)
 344:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	    && __constant_char_array_p(__s2, __n))
 345:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::compare(__s1, __s2, __n);
 346:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 347:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return __builtin_memcmp(__s1, __s2, __n);
 348:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 349:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 350:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX17_CONSTEXPR size_t
 351:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       length(const char_type* __s)
 352:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 353:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cplusplus >= 201703L
 354:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__constant_string_p(__s))
 355:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 356:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 357:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return __builtin_strlen(__s);
 358:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 359:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 360:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX17_CONSTEXPR const char_type*
 361:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       find(const char_type* __s, size_t __n, const char_type& __a)
 362:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 363:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__n == 0)
 364:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 0;
 365:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cplusplus >= 201703L
 366:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__builtin_constant_p(__n)
 367:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	    && __builtin_constant_p(__a)
 368:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	    && __constant_char_array_p(__s, __n))
 369:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::find(__s, __n, __a);
 370:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 371:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return static_cast<const char_type*>(__builtin_memchr(__s, __a, __n));
 372:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 373:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 374:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX20_CONSTEXPR char_type*
 375:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       move(char_type* __s1, const char_type* __s2, size_t __n)
 376:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 377:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__n == 0)
 378:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 379:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifdef __cpp_lib_is_constant_evaluated
 380:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (std::is_constant_evaluated())
 381:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::move(__s1, __s2, __n);
 382:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 383:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return static_cast<char_type*>(__builtin_memmove(__s1, __s2, __n));
 384:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 385:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 386:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX20_CONSTEXPR char_type*
 387:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       copy(char_type* __s1, const char_type* __s2, size_t __n)
 1356              		.loc 24 387 7 view .LVU301
 1357              	.LBB2681:
 388:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 389:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__n == 0)
 1358              		.loc 24 389 2 view .LVU302
 1359 0092 002E     		cmp	r6, #0
 1360 0094 C7D0     		beq	.L35
 1361 0096 0DE0     		b	.L33
 1362              	.LVL58:
 1363              	.L40:
 1364              		.loc 24 389 2 is_stmt 0 view .LVU303
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 161


 1365              	.LBE2681:
 1366              	.LBE2680:
 1367              	.LBE2679:
 1368              	.LBE2688:
 1369              	.LBE2691:
 1370              	.LBE2707:
 1371              	.LBE2719:
 1372              	.LBE2722:
 1373              	.LBE2725:
 1374              	.LBE2728:
 1375              	.LBE2731:
 1376              	.LBE2734:
 1377              	.LBE2739:
 1378              	.LBE2924:
 1379              	.LBB2925:
 1380              	.LBB2832:
 1381              	.LBB2830:
 1382              	.LBB2828:
 1383              	.LBB2826:
 1384              	.LBB2824:
 1385              	.LBB2822:
 1386              	.LBB2820:
 1387              	.LBB2808:
 1388              	.LBB2792:
 1389              	.LBB2789:
 1390              	.LBB2780:
 1391              	.LBI2780:
 346:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1392              		.loc 20 346 7 is_stmt 1 view .LVU304
 1393              	.LBB2781:
 1394              	.LBI2781:
 387:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 1395              		.loc 24 387 7 view .LVU305
 1396              	.LBB2782:
 1397              		.loc 24 389 2 view .LVU306
 1398 0098 002E     		cmp	r6, #0
 1399 009a D8D0     		beq	.L41
 1400 009c 2AE0     		b	.L39
 1401              	.LVL59:
 1402              	.L45:
 1403              		.loc 24 389 2 is_stmt 0 view .LVU307
 1404              	.LBE2782:
 1405              	.LBE2781:
 1406              	.LBE2780:
 1407              	.LBE2789:
 1408              	.LBE2792:
 1409              	.LBE2808:
 1410              	.LBE2820:
 1411              	.LBE2822:
 1412              	.LBE2824:
 1413              	.LBE2826:
 1414              	.LBE2828:
 1415              	.LBE2830:
 1416              	.LBE2832:
 1417              	.LBE2925:
 1418              	.LBB2926:
 1419              	.LBB2922:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 162


 1420              	.LBB2920:
 1421              	.LBB2918:
 1422              	.LBB2916:
 1423              	.LBB2914:
 1424              	.LBB2912:
 1425              	.LBB2910:
 1426              	.LBB2898:
 1427              	.LBB2882:
 1428              	.LBB2879:
 1429              	.LBB2870:
 1430              	.LBI2870:
 346:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1431              		.loc 20 346 7 is_stmt 1 view .LVU308
 1432              	.LBB2871:
 1433              	.LBI2871:
 387:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 1434              		.loc 24 387 7 view .LVU309
 1435              	.LBB2872:
 1436              		.loc 24 389 2 view .LVU310
 1437 009e 002E     		cmp	r6, #0
 1438 00a0 E9D0     		beq	.L46
 1439 00a2 17E0     		b	.L44
 1440              	.LVL60:
 1441              	.L71:
 1442              		.loc 24 389 2 is_stmt 0 view .LVU311
 1443              	.LBE2872:
 1444              	.LBE2871:
 1445              	.LBE2870:
 1446              	.LBE2879:
 1447              	.LBE2882:
 1448              	.LBE2898:
 1449              	.LBE2910:
 1450              	.LBE2912:
 1451              	.LBE2914:
 1452              	.LBE2916:
 1453              	.LBE2918:
 1454              	.LBE2920:
 1455              	.LBE2922:
 1456              	.LBE2926:
 1457              	.LBB2927:
 1458              	.LBB2740:
 1459              	.LBB2735:
 1460              	.LBB2732:
 1461              	.LBB2729:
 1462              	.LBB2726:
 1463              	.LBB2723:
 1464              	.LBB2720:
 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 219:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_data(_M_create(__dnew, size_type(0)));
 1465              		.loc 23 219 13 view .LVU312
 1466 00a4 0022     		movs	r2, #0
 1467 00a6 01A9     		add	r1, sp, #4
 1468              	.LVL61:
 1469              		.loc 23 219 13 view .LVU313
 1470 00a8 2046     		mov	r0, r4
 1471 00aa FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
 1472              	.LVL62:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 163


 1473              	.LBB2708:
 1474              	.LBI2708:
 178:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 1475              		.loc 20 178 7 is_stmt 1 view .LVU314
 1476              	.LBE2708:
 1477              	.LBB2710:
 1478              	.LBB2711:
 211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1479              		.loc 20 211 31 is_stmt 0 view .LVU315
 1480 00ae 019B     		ldr	r3, [sp, #4]
 1481              	.LBE2711:
 1482              	.LBE2710:
 1483              	.LBB2713:
 1484              	.LBB2709:
 179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1485              		.loc 20 179 26 view .LVU316
 1486 00b0 2060     		str	r0, [r4]
 1487              	.LVL63:
 179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1488              		.loc 20 179 26 view .LVU317
 1489              	.LBE2709:
 1490              	.LBE2713:
 1491              	.LBB2714:
 1492              	.LBI2710:
 210:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 1493              		.loc 20 210 7 is_stmt 1 view .LVU318
 1494              	.LBB2712:
 211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1495              		.loc 20 211 31 is_stmt 0 view .LVU319
 1496 00b2 A360     		str	r3, [r4, #8]
 1497              	.LVL64:
 211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1498              		.loc 20 211 31 view .LVU320
 1499              	.LBE2712:
 1500              	.LBE2714:
 1501              	.LBB2715:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1502              		.loc 20 186 7 is_stmt 1 view .LVU321
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1503              		.loc 20 186 7 is_stmt 0 view .LVU322
 1504              	.LBE2715:
 1505              	.LBB2716:
 392:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 1506              		.loc 20 392 7 is_stmt 1 view .LVU323
 1507              	.LBB2692:
 346:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1508              		.loc 20 346 7 view .LVU324
 1509              	.LBB2689:
 1510              	.LBB2686:
 346:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1511              		.loc 20 346 7 view .LVU325
 1512              	.LBB2684:
 387:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 1513              		.loc 24 387 7 view .LVU326
 1514              	.LBB2682:
 1515              		.loc 24 389 2 view .LVU327
 1516              	.L33:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 164


 390:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 391:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifdef __cpp_lib_is_constant_evaluated
 392:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (std::is_constant_evaluated())
 393:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::copy(__s1, __s2, __n);
 394:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 395:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
 1517              		.loc 24 395 2 view .LVU328
 1518              		.loc 24 395 49 is_stmt 0 view .LVU329
 1519 00b4 3246     		mov	r2, r6
 1520 00b6 3946     		mov	r1, r7
 1521 00b8 FFF7FEFF 		bl	memcpy
 1522              	.LVL65:
 1523              		.loc 24 395 49 view .LVU330
 1524              	.LBE2682:
 1525              	.LBE2684:
 1526              	.LBE2686:
 1527              	.LBE2689:
 1528              	.LBE2692:
 1529              	.LBE2716:
 220:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  }
 222:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 223:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	// Check for out_of_range and length_error exceptions.
 224:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	__try
 225:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  { this->_S_copy_chars(_M_data(), __beg, __end); }
 226:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	__catch(...)
 227:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 228:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_dispose();
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    __throw_exception_again;
 230:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  }
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 232:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	_M_set_length(__dnew);
 1530              		.loc 23 232 15 view .LVU331
 1531 00bc 019E     		ldr	r6, [sp, #4]
 1532              	.LVL66:
 1533              	.LBB2717:
 1534              	.LBB2706:
 1535              	.LBB2705:
 1536              	.LBB2703:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1537              		.loc 20 187 28 view .LVU332
 1538 00be 2068     		ldr	r0, [r4]
 1539              	.LBE2703:
 1540              	.LBE2705:
 1541              	.LBE2706:
 1542              	.LBE2717:
 1543              	.LBB2718:
 1544              	.LBB2693:
 1545              	.LBB2690:
 1546              	.LBB2687:
 1547              	.LBB2685:
 1548              	.LBB2683:
 1549              		.loc 24 395 66 view .LVU333
 1550 00c0 B1E7     		b	.L35
 1551              	.LVL67:
 1552              	.L73:
 1553              		.loc 24 395 66 view .LVU334
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 165


 1554              	.LBE2683:
 1555              	.LBE2685:
 1556              	.LBE2687:
 1557              	.LBE2690:
 1558              	.LBE2693:
 1559              	.LBE2718:
 1560              	.LBE2720:
 1561              	.LBE2723:
 1562              	.LBE2726:
 1563              	.LBE2729:
 1564              	.LBE2732:
 1565              	.LBE2735:
 1566              	.LBE2740:
 1567              	.LBE2927:
 1568              	.LBB2928:
 1569              	.LBB2923:
 1570              	.LBB2921:
 1571              	.LBB2919:
 1572              	.LBB2917:
 1573              	.LBB2915:
 1574              	.LBB2913:
 1575              	.LBB2911:
 219:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 1576              		.loc 23 219 13 view .LVU335
 1577 00c2 0022     		movs	r2, #0
 1578 00c4 01A9     		add	r1, sp, #4
 1579 00c6 04F13000 		add	r0, r4, #48
 1580 00ca FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
 1581              	.LVL68:
 1582              	.LBB2899:
 1583              	.LBI2899:
 178:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 1584              		.loc 20 178 7 is_stmt 1 view .LVU336
 1585              	.LBE2899:
 1586              	.LBB2901:
 1587              	.LBB2902:
 211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1588              		.loc 20 211 31 is_stmt 0 view .LVU337
 1589 00ce 019B     		ldr	r3, [sp, #4]
 1590              	.LBE2902:
 1591              	.LBE2901:
 1592              	.LBB2904:
 1593              	.LBB2900:
 179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1594              		.loc 20 179 26 view .LVU338
 1595 00d0 2063     		str	r0, [r4, #48]
 1596              	.LVL69:
 179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1597              		.loc 20 179 26 view .LVU339
 1598              	.LBE2900:
 1599              	.LBE2904:
 1600              	.LBB2905:
 1601              	.LBI2901:
 210:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 1602              		.loc 20 210 7 is_stmt 1 view .LVU340
 1603              	.LBB2903:
 211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 166


 1604              		.loc 20 211 31 is_stmt 0 view .LVU341
 1605 00d2 A363     		str	r3, [r4, #56]
 1606              	.LVL70:
 211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1607              		.loc 20 211 31 view .LVU342
 1608              	.LBE2903:
 1609              	.LBE2905:
 1610              	.LBB2906:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1611              		.loc 20 186 7 is_stmt 1 view .LVU343
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1612              		.loc 20 186 7 is_stmt 0 view .LVU344
 1613              	.LBE2906:
 1614              	.LBB2907:
 392:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 1615              		.loc 20 392 7 is_stmt 1 view .LVU345
 1616              	.LBB2883:
 346:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1617              		.loc 20 346 7 view .LVU346
 1618              	.LBB2880:
 1619              	.LBB2877:
 346:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1620              		.loc 20 346 7 view .LVU347
 1621              	.LBB2875:
 387:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 1622              		.loc 24 387 7 view .LVU348
 1623              	.LBB2873:
 389:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 1624              		.loc 24 389 2 view .LVU349
 1625              	.L44:
 1626              		.loc 24 395 2 view .LVU350
 1627              		.loc 24 395 49 is_stmt 0 view .LVU351
 1628 00d4 3246     		mov	r2, r6
 1629 00d6 3946     		mov	r1, r7
 1630 00d8 FFF7FEFF 		bl	memcpy
 1631              	.LVL71:
 1632              		.loc 24 395 49 view .LVU352
 1633              	.LBE2873:
 1634              	.LBE2875:
 1635              	.LBE2877:
 1636              	.LBE2880:
 1637              	.LBE2883:
 1638              	.LBE2907:
 1639              		.loc 23 232 15 view .LVU353
 1640 00dc 019E     		ldr	r6, [sp, #4]
 1641              	.LVL72:
 1642              	.LBB2908:
 1643              	.LBB2897:
 1644              	.LBB2896:
 1645              	.LBB2894:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1646              		.loc 20 187 28 view .LVU354
 1647 00de 206B     		ldr	r0, [r4, #48]
 1648              	.LBE2894:
 1649              	.LBE2896:
 1650              	.LBE2897:
 1651              	.LBE2908:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 167


 1652              	.LBB2909:
 1653              	.LBB2884:
 1654              	.LBB2881:
 1655              	.LBB2878:
 1656              	.LBB2876:
 1657              	.LBB2874:
 1658              		.loc 24 395 66 view .LVU355
 1659 00e0 C9E7     		b	.L46
 1660              	.LVL73:
 1661              	.L72:
 1662              		.loc 24 395 66 view .LVU356
 1663              	.LBE2874:
 1664              	.LBE2876:
 1665              	.LBE2878:
 1666              	.LBE2881:
 1667              	.LBE2884:
 1668              	.LBE2909:
 1669              	.LBE2911:
 1670              	.LBE2913:
 1671              	.LBE2915:
 1672              	.LBE2917:
 1673              	.LBE2919:
 1674              	.LBE2921:
 1675              	.LBE2923:
 1676              	.LBE2928:
 1677              	.LBB2929:
 1678              	.LBB2833:
 1679              	.LBB2831:
 1680              	.LBB2829:
 1681              	.LBB2827:
 1682              	.LBB2825:
 1683              	.LBB2823:
 1684              	.LBB2821:
 219:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 1685              		.loc 23 219 13 view .LVU357
 1686 00e2 0022     		movs	r2, #0
 1687 00e4 01A9     		add	r1, sp, #4
 1688 00e6 04F11800 		add	r0, r4, #24
 1689 00ea FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
 1690              	.LVL74:
 1691              	.LBB2809:
 1692              	.LBI2809:
 178:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 1693              		.loc 20 178 7 is_stmt 1 view .LVU358
 1694              	.LBE2809:
 1695              	.LBB2811:
 1696              	.LBB2812:
 211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1697              		.loc 20 211 31 is_stmt 0 view .LVU359
 1698 00ee 019B     		ldr	r3, [sp, #4]
 1699              	.LBE2812:
 1700              	.LBE2811:
 1701              	.LBB2814:
 1702              	.LBB2810:
 179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1703              		.loc 20 179 26 view .LVU360
 1704 00f0 A061     		str	r0, [r4, #24]
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 168


 1705              	.LVL75:
 179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1706              		.loc 20 179 26 view .LVU361
 1707              	.LBE2810:
 1708              	.LBE2814:
 1709              	.LBB2815:
 1710              	.LBI2811:
 210:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 1711              		.loc 20 210 7 is_stmt 1 view .LVU362
 1712              	.LBB2813:
 211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1713              		.loc 20 211 31 is_stmt 0 view .LVU363
 1714 00f2 2362     		str	r3, [r4, #32]
 1715              	.LVL76:
 211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1716              		.loc 20 211 31 view .LVU364
 1717              	.LBE2813:
 1718              	.LBE2815:
 1719              	.LBB2816:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1720              		.loc 20 186 7 is_stmt 1 view .LVU365
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1721              		.loc 20 186 7 is_stmt 0 view .LVU366
 1722              	.LBE2816:
 1723              	.LBB2817:
 392:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 1724              		.loc 20 392 7 is_stmt 1 view .LVU367
 1725              	.LBB2793:
 346:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1726              		.loc 20 346 7 view .LVU368
 1727              	.LBB2790:
 1728              	.LBB2787:
 346:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1729              		.loc 20 346 7 view .LVU369
 1730              	.LBB2785:
 387:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 1731              		.loc 24 387 7 view .LVU370
 1732              	.LBB2783:
 389:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 1733              		.loc 24 389 2 view .LVU371
 1734              	.L39:
 1735              		.loc 24 395 2 view .LVU372
 1736              		.loc 24 395 49 is_stmt 0 view .LVU373
 1737 00f4 3246     		mov	r2, r6
 1738 00f6 3946     		mov	r1, r7
 1739 00f8 FFF7FEFF 		bl	memcpy
 1740              	.LVL77:
 1741              		.loc 24 395 49 view .LVU374
 1742              	.LBE2783:
 1743              	.LBE2785:
 1744              	.LBE2787:
 1745              	.LBE2790:
 1746              	.LBE2793:
 1747              	.LBE2817:
 1748              		.loc 23 232 15 view .LVU375
 1749 00fc 019E     		ldr	r6, [sp, #4]
 1750              	.LVL78:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 169


 1751              	.LBB2818:
 1752              	.LBB2807:
 1753              	.LBB2806:
 1754              	.LBB2804:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1755              		.loc 20 187 28 view .LVU376
 1756 00fe A069     		ldr	r0, [r4, #24]
 1757              	.LBE2804:
 1758              	.LBE2806:
 1759              	.LBE2807:
 1760              	.LBE2818:
 1761              	.LBB2819:
 1762              	.LBB2794:
 1763              	.LBB2791:
 1764              	.LBB2788:
 1765              	.LBB2786:
 1766              	.LBB2784:
 1767              		.loc 24 395 66 view .LVU377
 1768 0100 A5E7     		b	.L41
 1769              	.LVL79:
 1770              	.L36:
 1771              		.loc 24 395 66 view .LVU378
 1772              	.LBE2784:
 1773              	.LBE2786:
 1774              	.LBE2788:
 1775              	.LBE2791:
 1776              	.LBE2794:
 1777              	.LBE2819:
 1778              	.LBE2821:
 1779              	.LBE2823:
 1780              	.LBE2825:
 1781              	.LBE2827:
 1782              	.LBE2829:
 1783              	.LBE2831:
 1784              	.LBE2833:
 1785              	.LBE2929:
 1786              	.LBB2930:
 1787              	.LBB2741:
 1788              	.LBB2736:
 1789              	.LBB2733:
 1790              	.LBB2730:
 1791              	.LBB2727:
 1792              	.LBB2724:
 1793              	.LBB2721:
 212:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 1794              		.loc 23 212 28 view .LVU379
 1795 0102 0148     		ldr	r0, .L74
 1796 0104 FFF7FEFF 		bl	_ZSt19__throw_logic_errorPKc
 1797              	.LVL80:
 1798              	.L75:
 1799              		.align	2
 1800              	.L74:
 1801 0108 00000000 		.word	.LC0
 1802              	.LBE2721:
 1803              	.LBE2724:
 1804              	.LBE2727:
 1805              	.LBE2730:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 170


 1806              	.LBE2733:
 1807              	.LBE2736:
 1808              	.LBE2741:
 1809              	.LBE2930:
 1810              	.LBE2934:
 1811              		.cfi_endproc
 1812              	.LFE2962:
 1814              		.weak	_ZN5paramC1ERKS_
 1815              		.thumb_set _ZN5paramC1ERKS_,_ZN5paramC2ERKS_
 1816              		.section	.text._ZN15ParameterConfig14initParametersEP12param_config,"axG",%progbits,_ZN15Parameter
 1817              		.align	1
 1818              		.p2align 2,,3
 1819              		.weak	_ZN15ParameterConfig14initParametersEP12param_config
 1820              		.syntax unified
 1821              		.thumb
 1822              		.thumb_func
 1823              		.fpu fpv5-d16
 1825              	_ZN15ParameterConfig14initParametersEP12param_config:
 1826              	.LVL81:
 1827              	.LFB2965:
  39:src/parameter_controller.h **** 	std::string label;
  40:src/parameter_controller.h **** 	std::string type;
  41:src/parameter_controller.h ****     std::string scale;
  42:src/parameter_controller.h ****     int index;
  43:src/parameter_controller.h **** 	float val;
  44:src/parameter_controller.h ****     float min, max;
  45:src/parameter_controller.h **** 
  46:src/parameter_controller.h ****     bool operator<(const param& p) const
  47:src/parameter_controller.h ****     {
  48:src/parameter_controller.h ****         if (index < p.index)
  49:src/parameter_controller.h ****             return true;
  50:src/parameter_controller.h ****         else return false;
  51:src/parameter_controller.h ****     }
  52:src/parameter_controller.h ****     bool operator==(const param& p) const
  53:src/parameter_controller.h ****     {
  54:src/parameter_controller.h ****         if (label == p.label && type == p.type && val == p.val)
  55:src/parameter_controller.h ****             return true;
  56:src/parameter_controller.h ****         else return false;
  57:src/parameter_controller.h ****     }
  58:src/parameter_controller.h **** };
  59:src/parameter_controller.h **** 
  60:src/parameter_controller.h **** class ParameterMap {
  61:src/parameter_controller.h **** private:
  62:src/parameter_controller.h ****     std::unordered_map<int, param> map;
  63:src/parameter_controller.h ****     std::unordered_map<int, param>::iterator map_iter;
  64:src/parameter_controller.h **** 
  65:src/parameter_controller.h **** public: 
  66:src/parameter_controller.h ****     ParameterMap() {};
  67:src/parameter_controller.h ****     ~ParameterMap() {};
  68:src/parameter_controller.h **** 
  69:src/parameter_controller.h ****     void insert(param p) {
  70:src/parameter_controller.h ****         int index = p.index;
  71:src/parameter_controller.h **** 
  72:src/parameter_controller.h ****         map.insert(std::make_pair(index, p));
  73:src/parameter_controller.h ****     }
  74:src/parameter_controller.h **** 
  75:src/parameter_controller.h ****     void updateMap(param p) {
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 171


  76:src/parameter_controller.h ****         map[p.index] = p;
  77:src/parameter_controller.h ****     }                   
  78:src/parameter_controller.h **** 
  79:src/parameter_controller.h ****     void setValueAtIndex(uint16_t val, int index) {
  80:src/parameter_controller.h ****         param curr = map[index];
  81:src/parameter_controller.h ****         //curr.val = //(float)val;
  82:src/parameter_controller.h ****         curr.val = static_cast<float>(val);
  83:src/parameter_controller.h ****         map[index] = curr;
  84:src/parameter_controller.h ****     }
  85:src/parameter_controller.h **** 
  86:src/parameter_controller.h ****     float getValue(int index) {
  87:src/parameter_controller.h ****         float val = map.at(index).val;//map[idx];//map.at(idx).val;
  88:src/parameter_controller.h **** 		return val;
  89:src/parameter_controller.h ****     }  
  90:src/parameter_controller.h **** };
  91:src/parameter_controller.h **** 
  92:src/parameter_controller.h **** class ParameterConfig {
  93:src/parameter_controller.h **** 
  94:src/parameter_controller.h ****     protected:
  95:src/parameter_controller.h ****         // param_config pconf[10];
  96:src/parameter_controller.h ****         param params[10];
  97:src/parameter_controller.h ****         ParameterMap map;
  98:src/parameter_controller.h ****     public:
  99:src/parameter_controller.h **** 
 100:src/parameter_controller.h ****         virtual void initParameters(param_config pconf[]) {
 1828              		.loc 19 100 22 is_stmt 1 view -0
 1829              		.cfi_startproc
 1830              		@ args = 0, pretend = 0, frame = 200
 1831              		@ frame_needed = 0, uses_anonymous_args = 0
 101:src/parameter_controller.h **** 
 102:src/parameter_controller.h ****             // pconf[0].label = "Pot 1";
 103:src/parameter_controller.h ****             // pconf[0].type = param_type::kPot;
 104:src/parameter_controller.h ****             // pconf[0].min = 0;
 105:src/parameter_controller.h ****             // pconf[0].max = 1;
 106:src/parameter_controller.h ****             // pconf[0].scale = param_scale::kLin;
 107:src/parameter_controller.h **** 
 108:src/parameter_controller.h ****             int pconf_size = 10;//sizeof(pconf[])/sizeof(pconf[0]);
 1832              		.loc 19 108 13 view .LVU381
 109:src/parameter_controller.h **** 
 110:src/parameter_controller.h ****             for (int i = 0; i < 2; i++) {
 1833              		.loc 19 110 13 view .LVU382
 1834              	.LBB3378:
 1835              		.loc 19 110 31 view .LVU383
 1836              	.LBE3378:
 100:src/parameter_controller.h **** 
 1837              		.loc 19 100 22 is_stmt 0 view .LVU384
 1838 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1839              		.cfi_def_cfa_offset 36
 1840              		.cfi_offset 4, -36
 1841              		.cfi_offset 5, -32
 1842              		.cfi_offset 6, -28
 1843              		.cfi_offset 7, -24
 1844              		.cfi_offset 8, -20
 1845              		.cfi_offset 9, -16
 1846              		.cfi_offset 10, -12
 1847              		.cfi_offset 11, -8
 1848              		.cfi_offset 14, -4
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 172


 1849              	.LBB3994:
 1850              		.loc 19 110 22 view .LVU385
 1851 0004 0023     		movs	r3, #0
 1852              	.LBE3994:
 100:src/parameter_controller.h **** 
 1853              		.loc 19 100 22 view .LVU386
 1854 0006 B5B0     		sub	sp, sp, #212
 1855              		.cfi_def_cfa_offset 248
 100:src/parameter_controller.h **** 
 1856              		.loc 19 100 22 view .LVU387
 1857 0008 8246     		mov	r10, r0
 1858 000a 0E46     		mov	r6, r1
 1859 000c 051D     		adds	r5, r0, #4
 1860              	.LBB3995:
 1861              		.loc 19 110 22 view .LVU388
 1862 000e 0293     		str	r3, [sp, #8]
 1863              	.LVL82:
 1864              	.L110:
 111:src/parameter_controller.h ****                 params[i].label = pconf[i].label;
 1865              		.loc 19 111 17 is_stmt 1 discriminator 2 view .LVU389
 1866              	.LBB3379:
 1867              	.LBI3379:
 665:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1868              		.loc 20 665 7 discriminator 2 view .LVU390
 1869              	.LBB3380:
 1870              	.LBI3380:
 909:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 910:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  Returns the size() of the largest possible %string.
 911:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
 912:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       max_size() const _GLIBCXX_NOEXCEPT
 913:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return (_Alloc_traits::max_size(_M_get_allocator()) - 1) / 2; }
 914:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 915:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 916:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
 917:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
 918:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __c  Character to fill any new elements.
 919:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 920:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function will %resize the %string to the specified
 921:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  number of characters.  If the number is smaller than the
 922:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  %string's current size the %string is truncated, otherwise
 923:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the %string is extended and new elements are %set to @a __c.
 924:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 925:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 926:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       resize(size_type __n, _CharT __c);
 927:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 928:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 929:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
 930:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
 931:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 932:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function will resize the %string to the specified length.  If
 933:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the new size is smaller than the %string's current size the %string
 934:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is truncated, otherwise the %string is extended and new characters
 935:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  are default-constructed.  For basic types such as char, this means
 936:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  setting them to 0.
 937:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 938:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 939:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       resize(size_type __n)
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 173


 940:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { this->resize(__n, _CharT()); }
 941:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 942:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 943:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  A non-binding request to reduce capacity() to size().
 944:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 945:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       shrink_to_fit() noexcept
 946:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 947:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cpp_exceptions
 948:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (capacity() > size())
 949:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 950:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    try
 951:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      { reserve(0); }
 952:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    catch(...)
 953:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      { }
 954:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 955:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 956:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 957:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 958:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 959:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 960:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns the total number of characters that the %string can hold
 961:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  before needing to allocate more memory.
 962:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 963:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
 964:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       capacity() const _GLIBCXX_NOEXCEPT
 965:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 966:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_is_local() ? size_type(_S_local_capacity)
 967:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	                     : _M_allocated_capacity;
 968:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 969:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 970:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 971:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
 972:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *          characters.
 973:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __res_arg  Number of characters required.
 974:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If @a __res_arg exceeds @c max_size().
 975:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 976:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function attempts to reserve enough memory for the
 977:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  %string to hold the specified number of characters.  If the
 978:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  number requested is more than max_size(), length_error is
 979:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
 980:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 981:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The advantage of this function is that if optimal code is a
 982:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  necessity and the user can determine the string length that will be
 983:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  required, the user can reserve the memory in %advance, and thus
 984:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  prevent a possible reallocation of memory and copying of %string
 985:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  data.
 986:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 987:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 988:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reserve(size_type __res_arg = 0);
 989:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 990:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 991:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Erases the string, making it empty.
 992:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 993:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 994:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       clear() _GLIBCXX_NOEXCEPT
 995:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_set_length(0); }
 996:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 174


 997:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 998:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns true if the %string is empty.  Equivalent to 
 999:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  <code>*this == ""</code>.
1000:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1001:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NODISCARD bool
1002:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       empty() const _GLIBCXX_NOEXCEPT
1003:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->size() == 0; }
1004:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1005:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Element access:
1006:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1007:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
1008:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  The index of the character to access.
1009:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Read-only (constant) reference to the character.
1010:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1011:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This operator allows for easy, array-style, data access.
1012:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Note that data access with this operator is unchecked and
1013:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
1014:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  see at().)
1015:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1016:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reference
1017:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator[] (size_type __pos) const _GLIBCXX_NOEXCEPT
1018:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1019:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(__pos <= size());
1020:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data()[__pos];
1021:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1022:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1023:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1024:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
1025:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  The index of the character to access.
1026:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Read/write reference to the character.
1027:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1028:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This operator allows for easy, array-style, data access.
1029:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Note that data access with this operator is unchecked and
1030:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
1031:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  see at().)
1032:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1033:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reference
1034:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator[](size_type __pos)
1035:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1036:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         // Allow pos == size() both in C++98 mode, as v3 extension,
1037:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// and in C++11 mode.
1038:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(__pos <= size());
1039:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         // In pedantic mode be strict in C++98 mode.
1040:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__cplusplus >= 201103L || __pos < size());
1041:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data()[__pos];
1042:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1043:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1044:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1045:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
1046:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n The index of the character to access.
1047:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Read-only (const) reference to the character.
1048:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
1049:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1050:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function provides for safer data access.  The parameter is
1051:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first checked that it is in the range of the string.  The function
1052:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  throws out_of_range if the check fails.
1053:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 175


1054:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reference
1055:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       at(size_type __n) const
1056:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1057:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n >= this->size())
1058:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
1059:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "(which is %zu) >= this->size() "
1060:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "(which is %zu)"),
1061:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   __n, this->size());
1062:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data()[__n];
1063:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1064:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1065:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1066:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
1067:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n The index of the character to access.
1068:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Read/write reference to the character.
1069:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
1070:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1071:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function provides for safer data access.  The parameter is
1072:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first checked that it is in the range of the string.  The function
1073:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  throws out_of_range if the check fails.
1074:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1075:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reference
1076:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       at(size_type __n)
1077:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1078:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n >= size())
1079:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
1080:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "(which is %zu) >= this->size() "
1081:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "(which is %zu)"),
1082:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   __n, this->size());
1083:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data()[__n];
1084:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1085:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1086:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1087:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1088:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write reference to the data at the first
1089:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  element of the %string.
1090:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1091:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reference
1092:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       front() noexcept
1093:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1094:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
1095:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return operator[](0);
1096:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1097:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1098:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1099:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reference to the data at the first
1100:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  element of the %string.
1101:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1102:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reference
1103:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       front() const noexcept
1104:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1105:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
1106:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return operator[](0);
1107:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1108:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1109:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1110:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write reference to the data at the last
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 176


1111:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  element of the %string.
1112:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1113:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reference
1114:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       back() noexcept
1115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1116:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
1117:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return operator[](this->size() - 1);
1118:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1119:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1121:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reference to the data at the
1122:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  last element of the %string.
1123:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1124:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reference
1125:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       back() const noexcept
1126:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1127:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
1128:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return operator[](this->size() - 1);
1129:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1130:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
1131:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1132:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Modifiers:
1133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1134:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a string to this string.
1135:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to append.
1136:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1137:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1138:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1139:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator+=(const basic_string& __str)
1140:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->append(__str); }
1141:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1142:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1143:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a C string.
1144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to append.
1145:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1146:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1148:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator+=(const _CharT* __s)
1149:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->append(__s); }
1150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1151:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1152:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a character.
1153:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to append.
1154:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1155:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1156:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1157:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator+=(_CharT __c)
1158:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->push_back(__c);
1160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
1161:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1162:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1163:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1164:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1165:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append an initializer_list of characters.
1166:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to be appended.
1167:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 177


1168:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1169:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1170:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator+=(initializer_list<_CharT> __l)
1171:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
1172:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
1173:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1174:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
1175:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1176:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a string_view.
1177:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended.
1178:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1180:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
1181:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
1182:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	operator+=(const _Tp& __svt)
1183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{ return this->append(__svt); }
1184:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
1185:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a string to this string.
1188:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to append.
1189:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1191:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1192:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(const basic_string& __str)
1193:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_append(__str._M_data(), __str.size()); }
1194:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1195:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1196:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a substring.
1197:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to append.
1198:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of the first character of str to append.
1199:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to append.
1200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1201:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range if @a __pos is not a valid index.
1202:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1203:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function appends @a __n characters from @a __str
1204:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  starting at @a __pos to this string.  If @a __n is is larger
1205:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  than the number of available characters in @a __str, the
1206:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  remainder of @a __str is appended.
1207:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1208:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1209:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(const basic_string& __str, size_type __pos, size_type __n = npos)
1210:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_append(__str._M_data()
1211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 + __str._M_check(__pos, "basic_string::append"),
1212:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 __str._M_limit(__pos, __n)); }
1213:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1214:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1215:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a C substring.
1216:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to append.
1217:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to append.
1218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1219:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1220:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(const _CharT* __s, size_type __n)
1222:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1223:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string_len(__s, __n);
1224:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_check_length(size_type(0), __n, "basic_string::append");
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 178


1225:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_append(__s, __n);
1226:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1227:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1228:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a C string.
1230:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to append.
1231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1232:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1233:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1234:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(const _CharT* __s)
1235:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
1237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __n = traits_type::length(__s);
1238:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_check_length(size_type(0), __n, "basic_string::append");
1239:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_append(__s, __n);
1240:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1241:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1242:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1243:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append multiple characters.
1244:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to append.
1245:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to use.
1246:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1247:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1248:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Appends __n copies of __c to this string.
1249:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1250:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1251:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(size_type __n, _CharT __c)
1252:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_replace_aux(this->size(), size_type(0), __n, __c); }
1253:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1254:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1255:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1256:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append an initializer_list of characters.
1257:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to append.
1258:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1259:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1260:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1261:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(initializer_list<_CharT> __l)
1262:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
1263:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
1264:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1265:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1266:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a range of characters.
1267:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
1268:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __last  Iterator marking the end of the range.
1269:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1270:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1271:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Appends characters in the range [__first,__last) to this string.
1272:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1273:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1274:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator,
1275:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1276:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
1277:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
1278:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
1279:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         basic_string&
1280:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         append(_InputIterator __first, _InputIterator __last)
1281:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { return this->replace(end(), end(), __first, __last); }
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 179


1282:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1283:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
1284:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1285:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a string_view.
1286:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended.
1287:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1288:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1289:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
1290:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _If_sv<_Tp, basic_string&>
1291:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         append(const _Tp& __svt)
1292:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         {
1293:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           __sv_type __sv = __svt;
1294:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           return this->append(__sv.data(), __sv.size());
1295:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         }
1296:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1297:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1298:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a range of characters from a string_view.
1299:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended from.
1300:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos The position in the string_view to append from.
1301:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n   The number of characters to append from the string_view.
1302:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1303:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1304:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
1305:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _If_sv<_Tp, basic_string&>
1306:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	append(const _Tp& __svt, size_type __pos, size_type __n = npos)
1307:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
1308:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
1309:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return _M_append(__sv.data()
1310:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::append"),
1311:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
1312:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
1313:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
1314:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1315:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1316:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a single character.
1317:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to append.
1318:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1319:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
1320:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       push_back(_CharT __c)
1321:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __size = this->size();
1323:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__size + 1 > this->capacity())
1324:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  this->_M_mutate(__size, size_type(0), 0, size_type(1));
1325:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	traits_type::assign(this->_M_data()[__size], __c);
1326:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->_M_set_length(__size + 1);
1327:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1328:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1329:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1330:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to contents of another string.
1331:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string to use.
1332:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1333:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1334:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1335:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(const basic_string& __str)
 1871              		.loc 20 1335 7 discriminator 2 view .LVU391
 1872              	.LBB3381:
1336:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 180


1337:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1338:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (_Alloc_traits::_S_propagate_on_copy_assign())
1339:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
1340:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    if (!_Alloc_traits::_S_always_equal() && !_M_is_local()
1341:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		&& _M_get_allocator() != __str._M_get_allocator())
1342:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      {
1343:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		// Propagating allocator cannot free existing storage so must
1344:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		// deallocate it before replacing current allocator.
1345:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		if (__str.size() <= _S_local_capacity)
1346:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  {
1347:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _M_destroy(_M_allocated_capacity);
1348:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _M_data(_M_local_data());
1349:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _M_set_length(0);
1350:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  }
1351:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		else
1352:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  {
1353:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    const auto __len = __str.size();
1354:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    auto __alloc = __str._M_get_allocator();
1355:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    // If this allocation throws there are no effects:
1356:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    auto __ptr = _Alloc_traits::allocate(__alloc, __len + 1);
1357:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _M_destroy(_M_allocated_capacity);
1358:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _M_data(__ptr);
1359:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _M_capacity(__len);
1360:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _M_set_length(__len);
1361:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  }
1362:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      }
1363:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    std::__alloc_on_copy(_M_get_allocator(), __str._M_get_allocator());
1364:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
1365:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
1366:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->_M_assign(__str);
 1873              		.loc 20 1366 17 is_stmt 0 discriminator 2 view .LVU392
 1874 0010 3146     		mov	r1, r6
 1875 0012 2846     		mov	r0, r5
 1876 0014 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_
 1877              	.LVL83:
 1878              		.loc 20 1366 17 discriminator 2 view .LVU393
 1879              	.LBE3381:
 1880              	.LBE3380:
 1881              	.LBE3379:
 112:src/parameter_controller.h ****                 params[i].type = pconf[i].type;
 1882              		.loc 19 112 17 is_stmt 1 discriminator 2 view .LVU394
 1883              	.LBB3382:
 1884              	.LBI3382:
 665:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1885              		.loc 20 665 7 discriminator 2 view .LVU395
 1886              	.LBB3383:
 1887              	.LBI3383:
1335:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1888              		.loc 20 1335 7 discriminator 2 view .LVU396
 1889              	.LBB3384:
 1890              		.loc 20 1366 17 is_stmt 0 discriminator 2 view .LVU397
 1891 0018 06F11801 		add	r1, r6, #24
 1892              	.LVL84:
 1893              		.loc 20 1366 17 discriminator 2 view .LVU398
 1894 001c 05F11800 		add	r0, r5, #24
 1895              	.LVL85:
 1896              		.loc 20 1366 17 discriminator 2 view .LVU399
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 181


 1897 0020 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_
 1898              	.LVL86:
 1899              		.loc 20 1366 17 discriminator 2 view .LVU400
 1900              	.LBE3384:
 1901              	.LBE3383:
 1902              	.LBE3382:
 113:src/parameter_controller.h ****                 params[i].min = pconf[i].min;
 1903              		.loc 19 113 17 is_stmt 1 discriminator 2 view .LVU401
 1904              		.loc 19 113 42 is_stmt 0 discriminator 2 view .LVU402
 1905 0024 B36C     		ldr	r3, [r6, #72]	@ float
 1906              	.LBB3385:
 1907              	.LBB3386:
 1908              	.LBB3387:
 1909              		.loc 20 1366 17 discriminator 2 view .LVU403
 1910 0026 06F13001 		add	r1, r6, #48
 1911 002a 05F13000 		add	r0, r5, #48
 1912              	.LBE3387:
 1913              	.LBE3386:
 1914              	.LBE3385:
 1915              		.loc 19 113 31 discriminator 2 view .LVU404
 1916 002e 2B65     		str	r3, [r5, #80]	@ float
 114:src/parameter_controller.h ****                 params[i].max = pconf[i].max;
 1917              		.loc 19 114 17 is_stmt 1 discriminator 2 view .LVU405
 1918              		.loc 19 114 42 is_stmt 0 discriminator 2 view .LVU406
 1919 0030 F36C     		ldr	r3, [r6, #76]	@ float
 1920              		.loc 19 114 31 discriminator 2 view .LVU407
 1921 0032 6B65     		str	r3, [r5, #84]	@ float
 115:src/parameter_controller.h ****                 params[i].scale = pconf[i].scale;
 1922              		.loc 19 115 17 is_stmt 1 discriminator 2 view .LVU408
 1923              	.LVL87:
 1924              	.LBB3390:
 1925              	.LBI3385:
 665:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1926              		.loc 20 665 7 discriminator 2 view .LVU409
 1927              	.LBB3389:
 1928              	.LBI3386:
1335:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1929              		.loc 20 1335 7 discriminator 2 view .LVU410
 1930              	.LBB3388:
 1931              		.loc 20 1366 17 is_stmt 0 discriminator 2 view .LVU411
 1932 0034 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_
 1933              	.LVL88:
 1934              		.loc 20 1366 17 discriminator 2 view .LVU412
 1935              	.LBE3388:
 1936              	.LBE3389:
 1937              	.LBE3390:
 116:src/parameter_controller.h ****                 params[i].val = 0;
 1938              		.loc 19 116 17 is_stmt 1 discriminator 2 view .LVU413
 117:src/parameter_controller.h ****                 params[i].index = i;
 1939              		.loc 19 117 33 is_stmt 0 discriminator 2 view .LVU414
 1940 0038 029B     		ldr	r3, [sp, #8]
 118:src/parameter_controller.h ****                 map.insert(params[i]);
 1941              		.loc 19 118 37 discriminator 2 view .LVU415
 1942 003a 2946     		mov	r1, r5
 1943 003c 07A8     		add	r0, sp, #28
 117:src/parameter_controller.h ****                 params[i].index = i;
 1944              		.loc 19 117 33 discriminator 2 view .LVU416
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 182


 1945 003e AB64     		str	r3, [r5, #72]
 116:src/parameter_controller.h ****                 params[i].val = 0;
 1946              		.loc 19 116 31 discriminator 2 view .LVU417
 1947 0040 0023     		movs	r3, #0
 1948 0042 EB64     		str	r3, [r5, #76]	@ float
 117:src/parameter_controller.h ****                 params[i].index = i;
 1949              		.loc 19 117 17 is_stmt 1 discriminator 2 view .LVU418
 1950              		.loc 19 118 17 discriminator 2 view .LVU419
 1951              		.loc 19 118 37 is_stmt 0 discriminator 2 view .LVU420
 1952 0044 FFF7FEFF 		bl	_ZN5paramC1ERKS_
 1953              	.LVL89:
 1954              	.LBB3391:
 1955              	.LBI3391:
  69:src/parameter_controller.h ****         int index = p.index;
 1956              		.loc 19 69 10 is_stmt 1 discriminator 2 view .LVU421
 1957              	.LBB3392:
  70:src/parameter_controller.h **** 
 1958              		.loc 19 70 9 discriminator 2 view .LVU422
  72:src/parameter_controller.h ****     }
 1959              		.loc 19 72 9 discriminator 2 view .LVU423
 1960              	.LBB3393:
 1961              	.LBI3393:
 1962              		.file 25 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
   1:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // Pair implementation -*- C++ -*-
   2:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
   3:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** //
   5:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // software; you can redistribute it and/or modify it under the
   7:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // terms of the GNU General Public License as published by the
   8:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // any later version.
  10:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  11:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // This library is distributed in the hope that it will be useful,
  12:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // GNU General Public License for more details.
  15:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  16:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  20:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // You should have received a copy of the GNU General Public License and
  21:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // <http://www.gnu.org/licenses/>.
  24:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  25:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** /*
  26:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  *
  27:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * Copyright (c) 1994
  28:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * Hewlett-Packard Company
  29:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  *
  30:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * that both that copyright notice and this permission notice appear
  34:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 183


  35:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * representations about the suitability of this software for any
  36:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  *
  38:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  *
  39:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * Copyright (c) 1996,1997
  40:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  *
  42:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * that both that copyright notice and this permission notice appear
  46:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * representations about the suitability of this software for any
  48:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  */
  50:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  51:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** /** @file bits/stl_pair.h
  52:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  *  This is an internal header file, included by other library headers.
  53:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  *  Do not attempt to use it directly. @headername{utility}
  54:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  */
  55:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  56:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #ifndef _STL_PAIR_H
  57:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #define _STL_PAIR_H 1
  58:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  59:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #include <bits/move.h> // for std::move / std::forward, and std::swap
  60:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  61:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus >= 201103L
  62:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** # include <type_traits> // for std::__decay_and_strip, std::is_reference_v
  63:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif
  64:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus > 201703L
  65:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** # include <compare>
  66:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** # define __cpp_lib_constexpr_utility 201811L
  67:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif
  68:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  69:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** namespace std _GLIBCXX_VISIBILITY(default)
  70:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** {
  71:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  72:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  73:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   /**
  74:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *  @addtogroup utilities
  75:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *  @{
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    */
  77:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  78:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus >= 201103L
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   /// Tag type for piecewise construction of std::pair objects.
  80:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   struct piecewise_construct_t { explicit piecewise_construct_t() = default; };
  81:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   /// Tag for piecewise construction of std::pair objects.
  83:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   _GLIBCXX17_INLINE constexpr piecewise_construct_t piecewise_construct =
  84:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     piecewise_construct_t();
  85:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  86:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   /// @cond undocumented
  87:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  88:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   // Forward declarations.
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   template<typename...>
  90:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     class tuple;
  91:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 184


  92:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   template<std::size_t...>
  93:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     struct _Index_tuple;
  94:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  95:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   // Concept utility functions, reused in conditionally-explicit
  96:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   // constructors.
  97:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   // See PR 70437, don't look at is_constructible or
  98:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   // is_convertible if the types are the same to
  99:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   // avoid querying those properties for incomplete types.
 100:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   template <bool, typename _T1, typename _T2>
 101:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     struct _PCC
 102:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     {
 103:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 104:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _ConstructiblePair()
 105:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 106:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return __and_<is_constructible<_T1, const _U1&>,
 107:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      is_constructible<_T2, const _U2&>>::value;
 108:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 109:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 110:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 111:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _ImplicitlyConvertiblePair()
 112:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 113:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return __and_<is_convertible<const _U1&, _T1>,
 114:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      is_convertible<const _U2&, _T2>>::value;
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 116:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 117:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 118:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _MoveConstructiblePair()
 119:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return __and_<is_constructible<_T1, _U1&&>,
 121:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      is_constructible<_T2, _U2&&>>::value;
 122:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 123:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 124:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 125:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _ImplicitlyMoveConvertiblePair()
 126:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 127:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return __and_<is_convertible<_U1&&, _T1>,
 128:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      is_convertible<_U2&&, _T2>>::value;
 129:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 130:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 131:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <bool __implicit, typename _U1, typename _U2>
 132:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _CopyMovePair()
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 134:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	using __do_converts = __and_<is_convertible<const _U1&, _T1>,
 135:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 				  is_convertible<_U2&&, _T2>>;
 136:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	using __converts = typename conditional<__implicit,
 137:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 				       __do_converts,
 138:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 				       __not_<__do_converts>>::type;
 139:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return __and_<is_constructible<_T1, const _U1&>,
 140:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      is_constructible<_T2, _U2&&>,
 141:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      __converts
 142:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      >::value;
 143:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 145:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <bool __implicit, typename _U1, typename _U2>
 146:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _MoveCopyPair()
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 148:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	using __do_converts = __and_<is_convertible<_U1&&, _T1>,
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 185


 149:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 				  is_convertible<const _U2&, _T2>>;
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	using __converts = typename conditional<__implicit,
 151:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 				       __do_converts,
 152:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 				       __not_<__do_converts>>::type;
 153:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return __and_<is_constructible<_T1, _U1&&>,
 154:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      is_constructible<_T2, const _U2&&>,
 155:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      __converts
 156:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      >::value;
 157:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 158:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   };
 159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   template <typename _T1, typename _T2>
 161:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     struct _PCC<false, _T1, _T2>
 162:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     {
 163:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 164:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _ConstructiblePair()
 165:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 166:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return false;
 167:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 168:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 169:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 170:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _ImplicitlyConvertiblePair()
 171:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 172:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return false;
 173:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 174:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 175:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 176:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _MoveConstructiblePair()
 177:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 178:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return false;
 179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 180:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 181:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 182:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _ImplicitlyMoveConvertiblePair()
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 184:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return false;
 185:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   };
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif // C++11
 188:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 189:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   template<typename _U1, typename _U2> class __pair_base
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   {
 191:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus >= 201103L
 192:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     template<typename _T1, typename _T2> friend struct pair;
 193:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     __pair_base() = default;
 194:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     ~__pair_base() = default;
 195:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     __pair_base(const __pair_base&) = default;
 196:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     __pair_base& operator=(const __pair_base&) = delete;
 197:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif // C++11
 198:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   };
 199:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   /// @endcond
 201:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 202:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  /**
 203:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *  @brief Struct holding two objects of arbitrary type.
 204:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *
 205:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *  @tparam _T1  Type of first object.
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 186


 206:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *  @tparam _T2  Type of second object.
 207:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *
 208:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *  <https://gcc.gnu.org/onlinedocs/libstdc++/manual/utilities.html>
 209:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    */
 210:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   template<typename _T1, typename _T2>
 211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     struct pair
 212:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     : private __pair_base<_T1, _T2>
 213:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     {
 214:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       typedef _T1 first_type;    ///< The type of the `first` member
 215:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       typedef _T2 second_type;   ///< The type of the `second` member
 216:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 217:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       _T1 first;                 ///< The first member
 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       _T2 second;                ///< The second member
 219:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 220:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       // 265.  std::pair::pair() effects overly restrictive
 222:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /** The default constructor creates @c first and @c second using their
 223:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        *  respective default constructors.  */
 224:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus >= 201103L
 225:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1 = _T1,
 226:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                 typename _U2 = _T2,
 227:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                 typename enable_if<__and_<
 228:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                                      __is_implicitly_default_constructible<_U1>,
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                                      __is_implicitly_default_constructible<_U2>>
 230:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                                    ::value, bool>::type = true>
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif
 232:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       _GLIBCXX_CONSTEXPR pair()
 233:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       : first(), second() { }
 234:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 235:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus >= 201103L
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1 = _T1,
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                 typename _U2 = _T2,
 238:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                 typename enable_if<__and_<
 239:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                        is_default_constructible<_U1>,
 240:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                        is_default_constructible<_U2>,
 241:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                        __not_<
 242:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          __and_<__is_implicitly_default_constructible<_U1>,
 243:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                                 __is_implicitly_default_constructible<_U2>>>>
 244:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                                    ::value, bool>::type = false>
 245:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       explicit constexpr pair()
 246:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       : first(), second() { }
 247:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif
 248:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 249:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus < 201103L
 250:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /// Two objects may be passed to a @c pair constructor to be copied.
 251:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       pair(const _T1& __a, const _T2& __b)
 252:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       : first(__a), second(__b) { }
 253:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #else
 254:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       // Shortcut for constraining the templates that don't take pairs.
 255:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /// @cond undocumented
 256:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       using _PCCP = _PCC<true, _T1, _T2>;
 257:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /// @endcond
 258:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 259:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /// Construct from two const lvalues, allowing implicit conversions.
 260:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U1 = _T1, typename _U2=_T2, typename
 261:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	       enable_if<_PCCP::template
 262:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _ConstructiblePair<_U1, _U2>()
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 187


 263:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	                 && _PCCP::template
 264:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _ImplicitlyConvertiblePair<_U1, _U2>(),
 265:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          bool>::type=true>
 266:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       constexpr pair(const _T1& __a, const _T2& __b)
 267:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       : first(__a), second(__b) { }
 268:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 269:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /// Construct from two const lvalues, disallowing implicit conversions.
 270:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        template<typename _U1 = _T1, typename _U2=_T2, typename
 271:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		enable_if<_PCCP::template
 272:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			    _ConstructiblePair<_U1, _U2>()
 273:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	                  && !_PCCP::template
 274:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			    _ImplicitlyConvertiblePair<_U1, _U2>(),
 275:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          bool>::type=false>
 276:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       explicit constexpr pair(const _T1& __a, const _T2& __b)
 277:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       : first(__a), second(__b) { }
 278:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif
 279:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 280:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus < 201103L
 281:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /// There is also a templated constructor to convert from other pairs.
 282:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U1, typename _U2>
 283:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	pair(const pair<_U1, _U2>& __p)
 284:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(__p.first), second(__p.second) { }
 285:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #else
 286:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       // Shortcut for constraining the templates that take pairs.
 287:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /// @cond undocumented
 288:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 289:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****         using _PCCFP = _PCC<!is_same<_T1, _U1>::value
 290:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			    || !is_same<_T2, _U2>::value,
 291:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			    _T1, _T2>;
 292:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /// @endcond
 293:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 294:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U1, typename _U2, typename
 295:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	       enable_if<_PCCFP<_U1, _U2>::template
 296:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _ConstructiblePair<_U1, _U2>()
 297:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	                 && _PCCFP<_U1, _U2>::template
 298:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _ImplicitlyConvertiblePair<_U1, _U2>(),
 299:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			  bool>::type=true>
 300:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****         constexpr pair(const pair<_U1, _U2>& __p)
 301:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****         : first(__p.first), second(__p.second) { }
 302:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 303:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U1, typename _U2, typename
 304:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	       enable_if<_PCCFP<_U1, _U2>::template
 305:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _ConstructiblePair<_U1, _U2>()
 306:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			 && !_PCCFP<_U1, _U2>::template
 307:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _ImplicitlyConvertiblePair<_U1, _U2>(),
 308:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          bool>::type=false>
 309:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	explicit constexpr pair(const pair<_U1, _U2>& __p)
 310:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(__p.first), second(__p.second) { }
 311:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif
 312:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 313:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus >= 201103L
 314:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       constexpr pair(const pair&) = default;	///< Copy constructor
 315:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       constexpr pair(pair&&) = default;		///< Move constructor
 316:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 317:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       // DR 811.
 318:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U1, typename
 319:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	       enable_if<_PCCP::template
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 188


 320:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _MoveCopyPair<true, _U1, _T2>(),
 321:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          bool>::type=true>
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        constexpr pair(_U1&& __x, const _T2& __y)
 323:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        : first(std::forward<_U1>(__x)), second(__y) { }
 324:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 325:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U1, typename
 326:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	       enable_if<_PCCP::template
 327:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _MoveCopyPair<false, _U1, _T2>(),
 328:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          bool>::type=false>
 329:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        explicit constexpr pair(_U1&& __x, const _T2& __y)
 330:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        : first(std::forward<_U1>(__x)), second(__y) { }
 331:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 332:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U2, typename
 333:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	       enable_if<_PCCP::template
 334:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _CopyMovePair<true, _T1, _U2>(),
 335:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          bool>::type=true>
 336:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        constexpr pair(const _T1& __x, _U2&& __y)
 337:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        : first(__x), second(std::forward<_U2>(__y)) { }
 338:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 339:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U2, typename
 340:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	       enable_if<_PCCP::template
 341:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _CopyMovePair<false, _T1, _U2>(),
 342:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          bool>::type=false>
 343:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        explicit pair(const _T1& __x, _U2&& __y)
 344:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        : first(__x), second(std::forward<_U2>(__y)) { }
 345:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 346:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U1, typename _U2, typename
 347:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	       enable_if<_PCCP::template
 348:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _MoveConstructiblePair<_U1, _U2>()
 349:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			  && _PCCP::template
 350:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _ImplicitlyMoveConvertiblePair<_U1, _U2>(),
 351:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          bool>::type=true>
 352:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	constexpr pair(_U1&& __x, _U2&& __y)
 353:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 354:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 355:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U1, typename _U2, typename
 356:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	       enable_if<_PCCP::template
 357:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _MoveConstructiblePair<_U1, _U2>()
 358:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			  && !_PCCP::template
 359:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _ImplicitlyMoveConvertiblePair<_U1, _U2>(),
 360:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          bool>::type=false>
 361:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	explicit constexpr pair(_U1&& __x, _U2&& __y)
 362:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 363:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 364:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 365:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U1, typename _U2, typename
 366:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	       enable_if<_PCCFP<_U1, _U2>::template
 367:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _MoveConstructiblePair<_U1, _U2>()
 368:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			  && _PCCFP<_U1, _U2>::template
 369:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _ImplicitlyMoveConvertiblePair<_U1, _U2>(),
 370:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          bool>::type=true>
 371:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	constexpr pair(pair<_U1, _U2>&& __p)
 372:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__p.first)),
 373:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	  second(std::forward<_U2>(__p.second)) { }
 374:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 375:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U1, typename _U2, typename
 376:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	       enable_if<_PCCFP<_U1, _U2>::template
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 189


 377:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _MoveConstructiblePair<_U1, _U2>()
 378:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			  && !_PCCFP<_U1, _U2>::template
 379:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _ImplicitlyMoveConvertiblePair<_U1, _U2>(),
 380:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          bool>::type=false>
 381:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	explicit constexpr pair(pair<_U1, _U2>&& __p)
 382:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__p.first)),
 383:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	  second(std::forward<_U2>(__p.second)) { }
 384:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 385:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename... _Args1, typename... _Args2>
 386:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	_GLIBCXX20_CONSTEXPR
 387:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****         pair(piecewise_construct_t, tuple<_Args1...>, tuple<_Args2...>);
 388:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 389:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       _GLIBCXX20_CONSTEXPR pair&
 390:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       operator=(typename conditional<
 391:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		__and_<is_copy_assignable<_T1>,
 392:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		       is_copy_assignable<_T2>>::value,
 393:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		const pair&, const __nonesuch&>::type __p)
 394:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 395:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	first = __p.first;
 396:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	second = __p.second;
 397:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return *this;
 398:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 399:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 400:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       _GLIBCXX20_CONSTEXPR pair&
 401:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       operator=(typename conditional<
 402:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		__and_<is_move_assignable<_T1>,
 403:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		       is_move_assignable<_T2>>::value,
 404:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		pair&&, __nonesuch&&>::type __p)
 405:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       noexcept(__and_<is_nothrow_move_assignable<_T1>,
 406:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      is_nothrow_move_assignable<_T2>>::value)
 407:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 408:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	first = std::forward<first_type>(__p.first);
 409:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	second = std::forward<second_type>(__p.second);
 410:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return *this;
 411:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 412:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 413:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U1, typename _U2>
 414:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	_GLIBCXX20_CONSTEXPR
 415:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	typename enable_if<__and_<is_assignable<_T1&, const _U1&>,
 416:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 				  is_assignable<_T2&, const _U2&>>::value,
 417:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   pair&>::type
 418:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	operator=(const pair<_U1, _U2>& __p)
 419:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	{
 420:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	  first = __p.first;
 421:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	  second = __p.second;
 422:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	  return *this;
 423:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	}
 424:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 425:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U1, typename _U2>
 426:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	_GLIBCXX20_CONSTEXPR
 427:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	typename enable_if<__and_<is_assignable<_T1&, _U1&&>,
 428:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 				  is_assignable<_T2&, _U2&&>>::value,
 429:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   pair&>::type
 430:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	operator=(pair<_U1, _U2>&& __p)
 431:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	{
 432:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	  first = std::forward<_U1>(__p.first);
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	  second = std::forward<_U2>(__p.second);
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 190


 434:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	  return *this;
 435:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	}
 436:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 437:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /// Swap the first members and then the second members.
 438:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       _GLIBCXX20_CONSTEXPR void
 439:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       swap(pair& __p)
 440:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       noexcept(__and_<__is_nothrow_swappable<_T1>,
 441:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                       __is_nothrow_swappable<_T2>>::value)
 442:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 443:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	using std::swap;
 444:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	swap(first, __p.first);
 445:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	swap(second, __p.second);
 446:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 447:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 448:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     private:
 449:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename... _Args1, std::size_t... _Indexes1,
 450:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                typename... _Args2, std::size_t... _Indexes2>
 451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	_GLIBCXX20_CONSTEXPR
 452:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****         pair(tuple<_Args1...>&, tuple<_Args2...>&,
 453:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****              _Index_tuple<_Indexes1...>, _Index_tuple<_Indexes2...>);
 454:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif // C++11
 455:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     };
 456:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 457:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   /// @relates pair @{
 458:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 459:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cpp_deduction_guides >= 201606
 460:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   template<typename _T1, typename _T2> pair(_T1, _T2) -> pair<_T1, _T2>;
 461:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif
 462:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 463:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   /// Two pairs of the same type are equal iff their members are equal.
 464:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   template<typename _T1, typename _T2>
 465:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     inline _GLIBCXX_CONSTEXPR bool
 466:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     operator==(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
 467:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     { return __x.first == __y.first && __x.second == __y.second; }
 468:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 469:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cpp_lib_three_way_comparison && __cpp_lib_concepts
 470:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   template<typename _T1, typename _T2>
 471:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     constexpr common_comparison_category_t<__detail::__synth3way_t<_T1>,
 472:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 					   __detail::__synth3way_t<_T2>>
 473:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     operator<=>(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
 474:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     {
 475:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       if (auto __c = __detail::__synth3way(__x.first, __y.first); __c != 0)
 476:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return __c;
 477:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       return __detail::__synth3way(__x.second, __y.second);
 478:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     }
 479:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #else
 480:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   /** Defines a lexicographical order for pairs.
 481:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *
 482:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    * For two pairs of the same type, `P` is ordered before `Q` if
 483:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    * `P.first` is less than `Q.first`, or if `P.first` and `Q.first`
 484:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    * are equivalent (neither is less than the other) and `P.second` is less
 485:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    * than `Q.second`.
 486:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   */
 487:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   template<typename _T1, typename _T2>
 488:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     inline _GLIBCXX_CONSTEXPR bool
 489:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     operator<(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
 490:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     { return __x.first < __y.first
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 191


 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	     || (!(__y.first < __x.first) && __x.second < __y.second); }
 492:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 493:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   /// Uses @c operator== to find the result.
 494:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   template<typename _T1, typename _T2>
 495:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     inline _GLIBCXX_CONSTEXPR bool
 496:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     operator!=(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
 497:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     { return !(__x == __y); }
 498:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 499:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   /// Uses @c operator< to find the result.
 500:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   template<typename _T1, typename _T2>
 501:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     inline _GLIBCXX_CONSTEXPR bool
 502:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     operator>(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
 503:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     { return __y < __x; }
 504:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 505:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   /// Uses @c operator< to find the result.
 506:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   template<typename _T1, typename _T2>
 507:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     inline _GLIBCXX_CONSTEXPR bool
 508:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     operator<=(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
 509:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     { return !(__y < __x); }
 510:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 511:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   /// Uses @c operator< to find the result.
 512:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   template<typename _T1, typename _T2>
 513:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     inline _GLIBCXX_CONSTEXPR bool
 514:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     operator>=(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
 515:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     { return !(__x < __y); }
 516:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif // !(three_way_comparison && concepts)
 517:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 518:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus >= 201103L
 519:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   /** Swap overload for pairs. Calls std::pair::swap().
 520:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *
 521:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    * @note This std::swap overload is not declared in C++03 mode,
 522:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    * which has performance implications, e.g. see https://gcc.gnu.org/PR38466
 523:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   */
 524:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   template<typename _T1, typename _T2>
 525:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     _GLIBCXX20_CONSTEXPR inline
 526:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus > 201402L || !defined(__STRICT_ANSI__) // c++1z or gnu++11
 527:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     // Constrained free swap overload, see p0185r1
 528:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     typename enable_if<__and_<__is_swappable<_T1>,
 529:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                               __is_swappable<_T2>>::value>::type
 530:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #else
 531:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     void
 532:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif
 533:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     swap(pair<_T1, _T2>& __x, pair<_T1, _T2>& __y)
 534:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     noexcept(noexcept(__x.swap(__y)))
 535:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     { __x.swap(__y); }
 536:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 537:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus > 201402L || !defined(__STRICT_ANSI__) // c++1z or gnu++11
 538:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   template<typename _T1, typename _T2>
 539:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     typename enable_if<!__and_<__is_swappable<_T1>,
 540:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			       __is_swappable<_T2>>::value>::type
 541:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     swap(pair<_T1, _T2>&, pair<_T1, _T2>&) = delete;
 542:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif
 543:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif // __cplusplus >= 201103L
 544:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 545:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   // @} relates pair
 546:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 547:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   /**
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 192


 548:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *  @brief A convenience wrapper for creating a pair from two objects.
 549:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *  @param  __x  The first object.
 550:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *  @param  __y  The second object.
 551:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *  @return   A newly-constructed pair<> object of the appropriate type.
 552:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *
 553:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *  The C++98 standard says the objects are passed by reference-to-const,
 554:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *  but C++03 says they are passed by value (this was LWG issue #181).
 555:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *
 556:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *  Since C++11 they have been passed by forwarding reference and then
 557:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *  forwarded to the new members of the pair. To create a pair with a
 558:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *  member of reference type, pass a `reference_wrapper` to this function.
 559:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    */
 560:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 561:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   // 181.  make_pair() unintended behavior
 562:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus >= 201103L
 563:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   // NB: DR 706.
 564:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   template<typename _T1, typename _T2>
 565:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     constexpr pair<typename __decay_and_strip<_T1>::__type,
 566:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                    typename __decay_and_strip<_T2>::__type>
 567:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     make_pair(_T1&& __x, _T2&& __y)
 1963              		.loc 25 567 5 discriminator 2 view .LVU424
 1964              	.LBB3394:
 1965              	.LBB3395:
 1966              	.LBI3395:
 352:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 1967              		.loc 25 352 12 discriminator 2 view .LVU425
 1968              	.LBB3396:
 1969              	.LBB3397:
 1970              	.LBI3397:
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 1971              		.loc 22 76 5 discriminator 2 view .LVU426
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 1972              		.loc 22 76 5 is_stmt 0 discriminator 2 view .LVU427
 1973              	.LBE3397:
 353:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 1974              		.loc 25 353 64 discriminator 2 view .LVU428
 1975 0048 199B     		ldr	r3, [sp, #100]
 1976 004a 07A9     		add	r1, sp, #28
 1977              	.LVL90:
 353:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 1978              		.loc 25 353 64 discriminator 2 view .LVU429
 1979 004c 1EA8     		add	r0, sp, #120
 1980 004e 1D93     		str	r3, [sp, #116]
 1981              	.LVL91:
 1982              	.LBB3398:
 1983              	.LBI3398:
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 1984              		.loc 22 76 5 is_stmt 1 discriminator 2 view .LVU430
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 1985              		.loc 22 76 5 is_stmt 0 discriminator 2 view .LVU431
 1986              	.LBE3398:
 353:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 1987              		.loc 25 353 64 discriminator 2 view .LVU432
 1988 0050 FFF7FEFF 		bl	_ZN5paramC1ERKS_
 1989              	.LVL92:
 353:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 1990              		.loc 25 353 64 discriminator 2 view .LVU433
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 193


 1991              	.LBE3396:
 1992              	.LBE3395:
 1993              	.LBE3394:
 1994              	.LBE3393:
 1995              	.LBB3399:
 1996              	.LBI3399:
 103:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****     {
 104:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       typedef __umap_hashtable<_Key, _Tp, _Hash, _Pred, _Alloc>  _Hashtable;
 105:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       _Hashtable _M_h;
 106:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 107:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****     public:
 108:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       // typedefs:
 109:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@{
 110:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /// Public typedefs.
 111:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       typedef typename _Hashtable::key_type	key_type;
 112:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       typedef typename _Hashtable::value_type	value_type;
 113:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       typedef typename _Hashtable::mapped_type	mapped_type;
 114:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       typedef typename _Hashtable::hasher	hasher;
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       typedef typename _Hashtable::key_equal	key_equal;
 116:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       typedef typename _Hashtable::allocator_type allocator_type;
 117:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@}
 118:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 119:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@{
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       ///  Iterator-related typedefs.
 121:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       typedef typename _Hashtable::pointer		pointer;
 122:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       typedef typename _Hashtable::const_pointer	const_pointer;
 123:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       typedef typename _Hashtable::reference		reference;
 124:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       typedef typename _Hashtable::const_reference	const_reference;
 125:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       typedef typename _Hashtable::iterator		iterator;
 126:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       typedef typename _Hashtable::const_iterator	const_iterator;
 127:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       typedef typename _Hashtable::local_iterator	local_iterator;
 128:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       typedef typename _Hashtable::const_local_iterator	const_local_iterator;
 129:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       typedef typename _Hashtable::size_type		size_type;
 130:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       typedef typename _Hashtable::difference_type	difference_type;
 131:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@}
 132:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** #if __cplusplus > 201402L
 134:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       using node_type = typename _Hashtable::node_type;
 135:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       using insert_return_type = typename _Hashtable::insert_return_type;
 136:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** #endif
 137:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 138:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //construct/destroy/copy
 139:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 140:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /// Default constructor.
 141:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       unordered_map() = default;
 142:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 143:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief  Default constructor creates no elements.
 145:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __n  Minimal initial number of buckets.
 146:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __hf  A hash functor.
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __eql  A key equality functor.
 148:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __a  An allocator object.
 149:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       explicit
 151:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       unordered_map(size_type __n,
 152:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		    const hasher& __hf = hasher(),
 153:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		    const key_equal& __eql = key_equal(),
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 194


 154:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		    const allocator_type& __a = allocator_type())
 155:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       : _M_h(__n, __hf, __eql, __a)
 156:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { }
 157:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 158:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief  Builds an %unordered_map from a range.
 160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __first  An input iterator.
 161:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __last  An input iterator.
 162:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __n  Minimal initial number of buckets.
 163:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __hf  A hash functor.
 164:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __eql  A key equality functor.
 165:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __a  An allocator object.
 166:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 167:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Create an %unordered_map consisting of copies of the elements from
 168:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  [__first,__last).  This is linear in N (where N is
 169:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  distance(__first,__last)).
 170:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 171:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template<typename _InputIterator>
 172:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	unordered_map(_InputIterator __first, _InputIterator __last,
 173:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		      size_type __n = 0,
 174:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		      const hasher& __hf = hasher(),
 175:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		      const key_equal& __eql = key_equal(),
 176:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		      const allocator_type& __a = allocator_type())
 177:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	: _M_h(__first, __last, __n, __hf, __eql, __a)
 178:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	{ }
 179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 180:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /// Copy constructor.
 181:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       unordered_map(const unordered_map&) = default;
 182:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /// Move constructor.
 184:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       unordered_map(unordered_map&&) = default;
 185:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief Creates an %unordered_map with no elements.
 188:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __a An allocator object.
 189:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       explicit
 191:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       unordered_map(const allocator_type& __a)
 192:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	: _M_h(__a)
 193:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { }
 194:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 195:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /*
 196:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief Copy constructor with allocator argument.
 197:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        * @param  __uset  Input %unordered_map to copy.
 198:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        * @param  __a  An allocator object.
 199:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       unordered_map(const unordered_map& __umap,
 201:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		    const allocator_type& __a)
 202:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       : _M_h(__umap._M_h, __a)
 203:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { }
 204:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 205:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /*
 206:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief  Move constructor with allocator argument.
 207:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __uset Input %unordered_map to move.
 208:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __a    An allocator object.
 209:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 210:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       unordered_map(unordered_map&& __umap,
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 195


 211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		    const allocator_type& __a)
 212:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       : _M_h(std::move(__umap._M_h), __a)
 213:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { }
 214:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 215:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 216:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief  Builds an %unordered_map from an initializer_list.
 217:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __l  An initializer_list.
 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __n  Minimal initial number of buckets.
 219:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __hf  A hash functor.
 220:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __eql  A key equality functor.
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __a  An allocator object.
 222:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 223:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Create an %unordered_map consisting of copies of the elements in the
 224:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  list. This is linear in N (where N is @a __l.size()).
 225:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 226:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       unordered_map(initializer_list<value_type> __l,
 227:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		    size_type __n = 0,
 228:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		    const hasher& __hf = hasher(),
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		    const key_equal& __eql = key_equal(),
 230:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		    const allocator_type& __a = allocator_type())
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       : _M_h(__l, __n, __hf, __eql, __a)
 232:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { }
 233:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 234:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       unordered_map(size_type __n, const allocator_type& __a)
 235:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       : unordered_map(__n, hasher(), key_equal(), __a)
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { }
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 238:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       unordered_map(size_type __n, const hasher& __hf,
 239:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		    const allocator_type& __a)
 240:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       : unordered_map(__n, __hf, key_equal(), __a)
 241:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { }
 242:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 243:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template<typename _InputIterator>
 244:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	unordered_map(_InputIterator __first, _InputIterator __last,
 245:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		      size_type __n,
 246:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		      const allocator_type& __a)
 247:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	: unordered_map(__first, __last, __n, hasher(), key_equal(), __a)
 248:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	{ }
 249:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 250:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template<typename _InputIterator>
 251:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	unordered_map(_InputIterator __first, _InputIterator __last,
 252:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		      size_type __n, const hasher& __hf,
 253:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		      const allocator_type& __a)
 254:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	  : unordered_map(__first, __last, __n, __hf, key_equal(), __a)
 255:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	{ }
 256:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 257:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       unordered_map(initializer_list<value_type> __l,
 258:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		    size_type __n,
 259:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		    const allocator_type& __a)
 260:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       : unordered_map(__l, __n, hasher(), key_equal(), __a)
 261:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { }
 262:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 263:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       unordered_map(initializer_list<value_type> __l,
 264:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		    size_type __n, const hasher& __hf,
 265:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		    const allocator_type& __a)
 266:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       : unordered_map(__l, __n, __hf, key_equal(), __a)
 267:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { }
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 196


 268:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 269:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /// Copy assignment operator.
 270:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       unordered_map&
 271:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       operator=(const unordered_map&) = default;
 272:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 273:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /// Move assignment operator.
 274:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       unordered_map&
 275:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       operator=(unordered_map&&) = default;
 276:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 277:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 278:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief  %Unordered_map list assignment operator.
 279:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __l  An initializer_list.
 280:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 281:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  This function fills an %unordered_map with copies of the elements in
 282:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  the initializer list @a __l.
 283:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 284:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Note that the assignment completely changes the %unordered_map and
 285:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  that the resulting %unordered_map's size is the same as the number
 286:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  of elements assigned.
 287:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 288:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       unordered_map&
 289:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       operator=(initializer_list<value_type> __l)
 290:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       {
 291:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	_M_h = __l;
 292:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	return *this;
 293:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       }
 294:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 295:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       ///  Returns the allocator object used by the %unordered_map.
 296:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       allocator_type
 297:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       get_allocator() const noexcept
 298:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.get_allocator(); }
 299:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 300:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       // size and capacity:
 301:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 302:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       ///  Returns true if the %unordered_map is empty.
 303:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       _GLIBCXX_NODISCARD bool
 304:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       empty() const noexcept
 305:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.empty(); }
 306:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 307:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       ///  Returns the size of the %unordered_map.
 308:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       size_type
 309:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       size() const noexcept
 310:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.size(); }
 311:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 312:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       ///  Returns the maximum size of the %unordered_map.
 313:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       size_type
 314:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       max_size() const noexcept
 315:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.max_size(); }
 316:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 317:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       // iterators.
 318:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 319:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 320:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Returns a read/write iterator that points to the first element in the
 321:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  %unordered_map.
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 323:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       iterator
 324:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       begin() noexcept
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 197


 325:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.begin(); }
 326:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 327:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@{
 328:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 329:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Returns a read-only (constant) iterator that points to the first
 330:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  element in the %unordered_map.
 331:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 332:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       const_iterator
 333:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       begin() const noexcept
 334:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.begin(); }
 335:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 336:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       const_iterator
 337:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       cbegin() const noexcept
 338:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.begin(); }
 339:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@}
 340:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 341:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 342:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Returns a read/write iterator that points one past the last element in
 343:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  the %unordered_map.
 344:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 345:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       iterator
 346:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       end() noexcept
 347:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.end(); }
 348:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 349:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@{
 350:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 351:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Returns a read-only (constant) iterator that points one past the last
 352:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  element in the %unordered_map.
 353:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 354:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       const_iterator
 355:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       end() const noexcept
 356:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.end(); }
 357:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 358:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       const_iterator
 359:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       cend() const noexcept
 360:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.end(); }
 361:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@}
 362:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 363:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       // modifiers.
 364:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 365:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 366:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief Attempts to build and insert a std::pair into the
 367:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  %unordered_map.
 368:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 369:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __args  Arguments used to generate a new pair instance (see
 370:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *	        std::piecewise_contruct for passing arguments to each
 371:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *	        part of the pair constructor).
 372:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 373:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @return  A pair, of which the first element is an iterator that points
 374:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *           to the possibly inserted pair, and the second is a bool that
 375:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *           is true if the pair was actually inserted.
 376:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 377:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  This function attempts to build and insert a (key, value) %pair into
 378:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  the %unordered_map.
 379:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  An %unordered_map relies on unique keys and thus a %pair is only
 380:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  inserted if its first element (the key) is not already present in the
 381:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  %unordered_map.
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 198


 382:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 383:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Insertion requires amortized constant time.
 384:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 385:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template<typename... _Args>
 386:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	std::pair<iterator, bool>
 387:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	emplace(_Args&&... __args)
 388:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	{ return _M_h.emplace(std::forward<_Args>(__args)...); }
 389:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 390:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 391:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief Attempts to build and insert a std::pair into the
 392:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  %unordered_map.
 393:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 394:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __pos  An iterator that serves as a hint as to where the pair
 395:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *                should be inserted.
 396:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __args  Arguments used to generate a new pair instance (see
 397:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *	         std::piecewise_contruct for passing arguments to each
 398:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *	         part of the pair constructor).
 399:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @return An iterator that points to the element with key of the
 400:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *          std::pair built from @a __args (may or may not be that
 401:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *          std::pair).
 402:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 403:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  This function is not concerned about whether the insertion took place,
 404:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  and thus does not return a boolean like the single-argument emplace()
 405:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  does.
 406:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Note that the first parameter is only a hint and can potentially
 407:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  improve the performance of the insertion process. A bad hint would
 408:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  cause no gains in efficiency.
 409:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 410:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  See
 411:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  https://gcc.gnu.org/onlinedocs/libstdc++/manual/associative.html#containers.associative.i
 412:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  for more on @a hinting.
 413:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 414:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Insertion requires amortized constant time.
 415:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 416:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template<typename... _Args>
 417:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	iterator
 418:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	emplace_hint(const_iterator __pos, _Args&&... __args)
 419:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	{ return _M_h.emplace_hint(__pos, std::forward<_Args>(__args)...); }
 420:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 421:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** #if __cplusplus > 201402L
 422:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /// Extract a node.
 423:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       node_type
 424:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       extract(const_iterator __pos)
 425:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       {
 426:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	__glibcxx_assert(__pos != end());
 427:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	return _M_h.extract(__pos);
 428:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       }
 429:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 430:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /// Extract a node.
 431:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       node_type
 432:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       extract(const key_type& __key)
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.extract(__key); }
 434:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 435:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /// Re-insert an extracted node.
 436:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       insert_return_type
 437:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       insert(node_type&& __nh)
 438:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h._M_reinsert_node(std::move(__nh)); }
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 199


 439:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 440:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /// Re-insert an extracted node.
 441:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       iterator
 442:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       insert(const_iterator, node_type&& __nh)
 443:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h._M_reinsert_node(std::move(__nh)).position; }
 444:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 445:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** #define __cpp_lib_unordered_map_try_emplace 201411
 446:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 447:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief Attempts to build and insert a std::pair into the
 448:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  %unordered_map.
 449:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 450:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __k    Key to use for finding a possibly existing pair in
 451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *                the unordered_map.
 452:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __args  Arguments used to generate the .second for a 
 453:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *                new pair instance.
 454:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 455:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @return  A pair, of which the first element is an iterator that points
 456:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *           to the possibly inserted pair, and the second is a bool that
 457:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *           is true if the pair was actually inserted.
 458:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 459:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  This function attempts to build and insert a (key, value) %pair into
 460:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  the %unordered_map.
 461:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  An %unordered_map relies on unique keys and thus a %pair is only
 462:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  inserted if its first element (the key) is not already present in the
 463:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  %unordered_map.
 464:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  If a %pair is not inserted, this function has no effect.
 465:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 466:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Insertion requires amortized constant time.
 467:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 468:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template <typename... _Args>
 469:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         pair<iterator, bool>
 470:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         try_emplace(const key_type& __k, _Args&&... __args)
 471:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         {
 472:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           iterator __i = find(__k);
 473:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           if (__i == end())
 474:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****             {
 475:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****               __i = emplace(std::piecewise_construct,
 476:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                             std::forward_as_tuple(__k),
 477:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                             std::forward_as_tuple(
 478:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                               std::forward<_Args>(__args)...))
 479:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                 .first;
 480:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****               return {__i, true};
 481:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****             }
 482:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           return {__i, false};
 483:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         }
 484:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 485:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       // move-capable overload
 486:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template <typename... _Args>
 487:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         pair<iterator, bool>
 488:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         try_emplace(key_type&& __k, _Args&&... __args)
 489:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         {
 490:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           iterator __i = find(__k);
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           if (__i == end())
 492:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****             {
 493:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****               __i = emplace(std::piecewise_construct,
 494:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                             std::forward_as_tuple(std::move(__k)),
 495:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                             std::forward_as_tuple(
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 200


 496:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                               std::forward<_Args>(__args)...))
 497:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                 .first;
 498:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****               return {__i, true};
 499:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****             }
 500:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           return {__i, false};
 501:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         }
 502:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 503:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 504:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief Attempts to build and insert a std::pair into the
 505:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  %unordered_map.
 506:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 507:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __hint  An iterator that serves as a hint as to where the pair
 508:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *                should be inserted.
 509:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __k    Key to use for finding a possibly existing pair in
 510:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *                the unordered_map.
 511:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __args  Arguments used to generate the .second for a 
 512:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *                new pair instance.
 513:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @return An iterator that points to the element with key of the
 514:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *          std::pair built from @a __args (may or may not be that
 515:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *          std::pair).
 516:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 517:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  This function is not concerned about whether the insertion took place,
 518:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  and thus does not return a boolean like the single-argument emplace()
 519:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  does. However, if insertion did not take place,
 520:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  this function has no effect.
 521:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Note that the first parameter is only a hint and can potentially
 522:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  improve the performance of the insertion process. A bad hint would
 523:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  cause no gains in efficiency.
 524:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 525:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  See
 526:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  https://gcc.gnu.org/onlinedocs/libstdc++/manual/associative.html#containers.associative.i
 527:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  for more on @a hinting.
 528:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 529:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Insertion requires amortized constant time.
 530:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 531:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template <typename... _Args>
 532:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         iterator
 533:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         try_emplace(const_iterator __hint, const key_type& __k,
 534:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                     _Args&&... __args)
 535:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         {
 536:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           iterator __i = find(__k);
 537:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           if (__i == end())
 538:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****             __i = emplace_hint(__hint, std::piecewise_construct,
 539:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                                std::forward_as_tuple(__k),
 540:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                                std::forward_as_tuple(
 541:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                                  std::forward<_Args>(__args)...));
 542:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           return __i;
 543:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         }
 544:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 545:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       // move-capable overload
 546:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template <typename... _Args>
 547:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         iterator
 548:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         try_emplace(const_iterator __hint, key_type&& __k, _Args&&... __args)
 549:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         {
 550:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           iterator __i = find(__k);
 551:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           if (__i == end())
 552:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****             __i = emplace_hint(__hint, std::piecewise_construct,
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 201


 553:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                                std::forward_as_tuple(std::move(__k)),
 554:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                                std::forward_as_tuple(
 555:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                                  std::forward<_Args>(__args)...));
 556:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           return __i;
 557:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         }
 558:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** #endif // C++17
 559:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 560:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@{
 561:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 562:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief Attempts to insert a std::pair into the %unordered_map.
 563:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 564:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __x Pair to be inserted (see std::make_pair for easy
 565:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *	     creation of pairs).
 566:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 567:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @return  A pair, of which the first element is an iterator that 
 568:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *           points to the possibly inserted pair, and the second is 
 569:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *           a bool that is true if the pair was actually inserted.
 570:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 571:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  This function attempts to insert a (key, value) %pair into the
 572:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  %unordered_map. An %unordered_map relies on unique keys and thus a
 573:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  %pair is only inserted if its first element (the key) is not already
 574:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  present in the %unordered_map.
 575:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 576:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Insertion requires amortized constant time.
 577:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 578:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       std::pair<iterator, bool>
 579:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       insert(const value_type& __x)
 580:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.insert(__x); }
 581:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 582:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 583:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       // 2354. Unnecessary copying when inserting into maps with braced-init
 584:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       std::pair<iterator, bool>
 585:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       insert(value_type&& __x)
 586:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.insert(std::move(__x)); }
 587:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 588:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template<typename _Pair>
 589:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	__enable_if_t<is_constructible<value_type, _Pair&&>::value,
 590:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		      pair<iterator, bool>>
 591:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	insert(_Pair&& __x)
 1997              		.loc 13 591 2 is_stmt 1 discriminator 2 view .LVU434
 1998              	.LBB3400:
 1999              	.LBI3400:
 787:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{ return _M_emplace(__unique_keys(), std::forward<_Args>(__args)...); }
 2000              		.loc 12 787 2 discriminator 2 view .LVU435
 2001              	.LBB3401:
 2002              	.LBI3401:
1667:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 2003              		.loc 12 1667 7 discriminator 2 view .LVU436
 2004              	.LBB3402:
 2005              	.LBB3403:
 2006              	.LBI3403:
 270:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  : _M_h(__h),
 2007              		.loc 12 270 4 discriminator 2 view .LVU437
 2008              	.LBB3404:
 2009              	.LBI3404:
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 2010              		.loc 22 76 5 discriminator 2 view .LVU438
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 202


  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 2011              		.loc 22 76 5 is_stmt 0 discriminator 2 view .LVU439
 2012              	.LBE3404:
 2013              	.LBB3405:
 2014              	.LBI3405:
2029:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       -> __node_type*
 2015              		.loc 14 2029 7 is_stmt 1 discriminator 2 view .LVU440
 2016              	.LBB3406:
 2017              	.LBB3407:
 2018              	.LBI3407:
 459:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 2019              		.loc 15 459 7 discriminator 2 view .LVU441
 2020              	.LBB3408:
 2021              	.LBI3408:
 103:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 2022              		.loc 16 103 7 discriminator 2 view .LVU442
 2023              	.LBB3409:
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 2024              		.loc 16 115 41 is_stmt 0 discriminator 2 view .LVU443
 2025 0054 6020     		movs	r0, #96
 2026 0056 FFF7FEFF 		bl	_Znwj
 2027              	.LVL93:
 2028              	.LBE3409:
 2029              	.LBE3408:
 2030              	.LBE3407:
 2031              	.LBB3412:
 2032              	.LBB3413:
 2033              	.LBB3414:
 2034              	.LBB3415:
 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 2035              		.loc 14 218 41 discriminator 2 view .LVU444
 2036 005a 0023     		movs	r3, #0
 2037              	.LBE3415:
 2038              	.LBE3414:
 2039              	.LBE3413:
 2040              	.LBE3412:
 2041              	.LBB3421:
 2042              	.LBB3422:
 2043              	.LBB3423:
 2044              	.LBB3424:
 2045              	.LBB3425:
 2046              	.LBB3426:
 2047              	.LBB3427:
 2048              	.LBB3428:
 555:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 2049              		.loc 20 555 2 discriminator 2 view .LVU445
 2050 005c 20AA     		add	r2, sp, #128
 2051              	.LBE3428:
 2052              	.LBE3427:
 2053              	.LBE3426:
 2054              	.LBE3425:
 373:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 2055              		.loc 25 373 40 discriminator 2 view .LVU446
 2056 005e 1D9F     		ldr	r7, [sp, #116]
 2057              	.LBE3424:
 2058              	.LBE3423:
 2059              	.LBE3422:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 203


 2060              	.LBE3421:
 2061              	.LBB3625:
 2062              	.LBB3419:
 2063              	.LBB3417:
 2064              	.LBB3416:
 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 2065              		.loc 14 218 41 discriminator 2 view .LVU447
 2066 0060 0360     		str	r3, [r0]
 2067              	.LBE3416:
 2068              	.LBE3417:
 2069              	.LBE3419:
 2070              	.LBE3625:
 2071              	.LBB3626:
 2072              	.LBB3618:
 2073              	.LBB3612:
 2074              	.LBB3606:
 2075              	.LBB3598:
 2076              	.LBB3592:
 2077              	.LBB3473:
 2078              	.LBB3468:
 2079              	.LBB3429:
 2080              	.LBB3430:
 193:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 2081              		.loc 20 193 51 discriminator 2 view .LVU448
 2082 0062 00F11003 		add	r3, r0, #16
 2083              	.LBE3430:
 2084              	.LBE3429:
 2085              	.LBE3468:
 2086              	.LBE3473:
 2087              	.LBE3592:
 2088              	.LBE3598:
 2089              	.LBE3606:
 2090              	.LBE3612:
 2091              	.LBE3618:
 2092              	.LBE3626:
 2093              	.LBB3627:
 2094              	.LBB3411:
 2095              	.LBB3410:
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 2096              		.loc 16 115 41 discriminator 2 view .LVU449
 2097 0066 0446     		mov	r4, r0
 2098              	.LVL94:
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 2099              		.loc 16 115 41 discriminator 2 view .LVU450
 2100              	.LBE3410:
 2101              	.LBE3411:
 2102              	.LBE3627:
 2103              	.LBE3406:
 2104              	.LBE3405:
 2105              	.LBE3403:
 2106              	.LBE3402:
 2107              	.LBE3401:
 2108              	.LBE3400:
 2109              	.LBE3399:
 2110              	.LBE3392:
 2111              	.LBE3391:
 2112              	.LBE3995:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 204


 2113              		.file 26 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
   1:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // The -*- C++ -*- dynamic memory management header.
   2:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
   3:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // Copyright (C) 1994-2020 Free Software Foundation, Inc.
   4:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
   5:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // This file is part of GCC.
   6:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** //
   7:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // GCC is free software; you can redistribute it and/or modify
   8:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // it under the terms of the GNU General Public License as published by
   9:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // the Free Software Foundation; either version 3, or (at your option)
  10:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // any later version.
  11:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // 
  12:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // GCC is distributed in the hope that it will be useful,
  13:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // GNU General Public License for more details.
  16:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // 
  17:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // Under Section 7 of GPL version 3, you are granted additional
  18:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // permissions described in the GCC Runtime Library Exception, version
  19:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // 3.1, as published by the Free Software Foundation.
  20:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  21:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // You should have received a copy of the GNU General Public License and
  22:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // a copy of the GCC Runtime Library Exception along with this program;
  23:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  24:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // <http://www.gnu.org/licenses/>.
  25:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  26:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** /** @file new
  27:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *  This is a Standard C++ Library header.
  28:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *
  29:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *  The header @c new defines several functions to manage dynamic memory and
  30:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *  handling memory allocation errors; see
  31:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *  https://gcc.gnu.org/onlinedocs/libstdc++/manual/dynamic_memory.html
  32:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *  for more.
  33:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  */
  34:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  35:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #ifndef _NEW
  36:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #define _NEW
  37:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  38:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #pragma GCC system_header
  39:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  40:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #include <bits/c++config.h>
  41:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #include <exception>
  42:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  43:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #pragma GCC visibility push(default)
  44:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  45:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** extern "C++" {
  46:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  47:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** namespace std 
  48:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** {
  49:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   /**
  50:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****    *  @brief  Exception possibly thrown by @c new.
  51:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****    *  @ingroup exceptions
  52:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****    *
  53:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****    *  @c bad_alloc (or classes derived from it) is used to report allocation
  54:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****    *  errors from the throwing forms of @c new.  */
  55:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   class bad_alloc : public exception 
  56:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   {
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 205


  57:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   public:
  58:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     bad_alloc() throw() { }
  59:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  60:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #if __cplusplus >= 201103L
  61:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     bad_alloc(const bad_alloc&) = default;
  62:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     bad_alloc& operator=(const bad_alloc&) = default;
  63:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #endif
  64:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  65:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     // This declaration is not useless:
  66:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     // http://gcc.gnu.org/onlinedocs/gcc-3.0.2/gcc_6.html#SEC118
  67:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     virtual ~bad_alloc() throw();
  68:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  69:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     // See comment in eh_exception.cc.
  70:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     virtual const char* what() const throw();
  71:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   };
  72:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  73:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #if __cplusplus >= 201103L
  74:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   class bad_array_new_length : public bad_alloc
  75:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   {
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   public:
  77:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     bad_array_new_length() throw() { }
  78:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     // This declaration is not useless:
  80:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     // http://gcc.gnu.org/onlinedocs/gcc-3.0.2/gcc_6.html#SEC118
  81:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     virtual ~bad_array_new_length() throw();
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  83:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     // See comment in eh_exception.cc.
  84:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     virtual const char* what() const throw();
  85:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   };
  86:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #endif
  87:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  88:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #if __cpp_aligned_new
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   enum class align_val_t: size_t {};
  90:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #endif
  91:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  92:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   struct nothrow_t
  93:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   {
  94:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #if __cplusplus >= 201103L
  95:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     explicit nothrow_t() = default;
  96:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #endif
  97:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   };
  98:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  99:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   extern const nothrow_t nothrow;
 100:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
 101:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   /** If you write your own error handler to be called by @c new, it must
 102:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****    *  be of this type.  */
 103:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   typedef void (*new_handler)();
 104:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
 105:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   /// Takes a replacement handler as the argument, returns the
 106:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   /// previous handler.
 107:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   new_handler set_new_handler(new_handler) throw();
 108:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
 109:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #if __cplusplus >= 201103L
 110:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   /// Return the current new handler.
 111:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   new_handler get_new_handler() noexcept;
 112:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #endif
 113:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** } // namespace std
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 206


 114:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** //@{
 116:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** /** These are replaceable signatures:
 117:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *  - normal single new and delete (no arguments, throw @c bad_alloc on error)
 118:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *  - normal array new and delete (same)
 119:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *  - @c nothrow single new and delete (take a @c nothrow argument, return
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *    @c NULL on error)
 121:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *  - @c nothrow array new and delete (same)
 122:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *
 123:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *  Placement new and delete signatures (take a memory address argument,
 124:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *  does nothing) may not be replaced by a user's program.
 125:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** */
 126:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new(std::size_t) _GLIBCXX_THROW (std::bad_alloc)
 127:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 128:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new[](std::size_t) _GLIBCXX_THROW (std::bad_alloc)
 129:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 130:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*) _GLIBCXX_USE_NOEXCEPT
 131:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 132:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*) _GLIBCXX_USE_NOEXCEPT
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 134:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #if __cpp_sized_deallocation
 135:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*, std::size_t) _GLIBCXX_USE_NOEXCEPT
 136:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 137:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*, std::size_t) _GLIBCXX_USE_NOEXCEPT
 138:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 139:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #endif
 140:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new(std::size_t, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 141:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__, __malloc__));
 142:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new[](std::size_t, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 143:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__, __malloc__));
 144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 145:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 146:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 148:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #if __cpp_aligned_new
 149:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new(std::size_t, std::align_val_t)
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 151:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new(std::size_t, std::align_val_t, const std::nothrow_t&)
 152:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__, __malloc__));
 153:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*, std::align_val_t)
 154:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 155:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*, std::align_val_t, const std::nothrow_t&)
 156:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 157:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new[](std::size_t, std::align_val_t)
 158:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new[](std::size_t, std::align_val_t, const std::nothrow_t&)
 160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__, __malloc__));
 161:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*, std::align_val_t)
 162:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 163:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*, std::align_val_t, const std::nothrow_t&)
 164:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 165:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #if __cpp_sized_deallocation
 166:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*, std::size_t, std::align_val_t)
 167:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 168:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*, std::size_t, std::align_val_t)
 169:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 170:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #endif // __cpp_sized_deallocation
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 207


 171:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #endif // __cpp_aligned_new
 172:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
 173:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // Default placement versions of operator new.
 174:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
 175:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** { return __p; }
 2114              		.loc 26 175 3 is_stmt 1 discriminator 2 view .LVU451
 2115              	.LBB3996:
 2116              	.LBB3935:
 2117              	.LBB3931:
 2118              	.LBB3871:
 2119              	.LBB3867:
 2120              	.LBB3863:
 2121              	.LBB3859:
 2122              	.LBB3647:
 2123              	.LBB3641:
 2124              	.LBB3635:
 2125              	.LBB3628:
 2126              	.LBI3412:
 279:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 2127              		.loc 14 279 12 discriminator 2 view .LVU452
 2128              	.LBB3420:
 2129              	.LBI3413:
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 2130              		.loc 14 229 12 discriminator 2 view .LVU453
 2131              	.LBB3418:
 2132              	.LBI3414:
 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 2133              		.loc 14 218 5 discriminator 2 view .LVU454
 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 2134              		.loc 14 218 5 is_stmt 0 discriminator 2 view .LVU455
 2135              	.LBE3418:
 2136              	.LBE3420:
 2137              	.LBE3628:
 2138              	.LBB3629:
 2139              	.LBI3421:
 507:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 2140              		.loc 15 507 2 is_stmt 1 discriminator 2 view .LVU456
 2141              	.LBB3619:
 2142              	.LBI3422:
 134:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 135:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 			  , __t * sizeof(_Tp)
 136:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
 137:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 			 );
 138:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 139:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 140:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus <= 201703L
 141:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       size_type
 142:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       max_size() const _GLIBCXX_USE_NOEXCEPT
 143:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       { return _M_max_size(); }
 144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 145:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus >= 201103L
 146:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       template<typename _Up, typename... _Args>
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	void
 148:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	construct(_Up* __p, _Args&&... __args)
 2143              		.loc 16 148 2 discriminator 2 view .LVU457
 2144              		.loc 16 148 2 is_stmt 0 discriminator 2 view .LVU458
 2145              	.LBE3619:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 208


 2146              	.LBE3629:
 2147              	.LBE3635:
 2148              	.LBE3641:
 2149              	.LBE3647:
 2150              	.LBE3859:
 2151              	.LBE3863:
 2152              	.LBE3867:
 2153              	.LBE3871:
 2154              	.LBE3931:
 2155              	.LBE3935:
 2156              	.LBE3996:
 2157              		.loc 26 175 3 is_stmt 1 discriminator 2 view .LVU459
 2158              	.LBB3997:
 2159              	.LBB3936:
 2160              	.LBB3932:
 2161              	.LBB3872:
 2162              	.LBB3868:
 2163              	.LBB3864:
 2164              	.LBB3860:
 2165              	.LBB3648:
 2166              	.LBB3642:
 2167              	.LBB3636:
 2168              	.LBB3630:
 2169              	.LBB3620:
 2170              	.LBB3613:
 2171              	.LBI3423:
 371:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__p.first)),
 2172              		.loc 25 371 12 discriminator 2 view .LVU460
 2173              	.LBB3607:
 2174              	.LBB3599:
 2175              	.LBI3599:
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 2176              		.loc 22 76 5 discriminator 2 view .LVU461
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 2177              		.loc 22 76 5 is_stmt 0 discriminator 2 view .LVU462
 2178              	.LBE3599:
 373:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 2179              		.loc 25 373 40 discriminator 2 view .LVU463
 2180 0068 4760     		str	r7, [r0, #4]
 2181              	.LVL95:
 2182              	.LBB3600:
 2183              	.LBI3600:
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 2184              		.loc 22 76 5 is_stmt 1 discriminator 2 view .LVU464
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 2185              		.loc 22 76 5 is_stmt 0 discriminator 2 view .LVU465
 2186              	.LBE3600:
 2187              	.LBB3601:
 2188              	.LBI3425:
  38:src/parameter_controller.h **** 	std::string label;
 2189              		.loc 19 38 8 is_stmt 1 discriminator 2 view .LVU466
 2190              	.LBB3593:
 2191              	.LBB3474:
 2192              	.LBI3427:
 552:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 2193              		.loc 20 552 7 discriminator 2 view .LVU467
 2194              	.LBB3469:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 209


 2195              	.LBB3432:
 2196              	.LBI3429:
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2197              		.loc 20 190 7 discriminator 2 view .LVU468
 2198              	.LBB3431:
 193:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 2199              		.loc 20 193 51 is_stmt 0 discriminator 2 view .LVU469
 2200 006a 0393     		str	r3, [sp, #12]
 2201              	.LVL96:
 193:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 2202              		.loc 20 193 51 discriminator 2 view .LVU470
 2203              	.LBE3431:
 2204              	.LBE3432:
 2205              	.LBB3433:
 2206              	.LBI3433:
 286:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 2207              		.loc 20 286 7 is_stmt 1 discriminator 2 view .LVU471
 286:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 2208              		.loc 20 286 7 is_stmt 0 discriminator 2 view .LVU472
 2209              	.LBE3433:
 2210              	.LBB3434:
 2211              	.LBI3434:
 2212              		.loc 22 101 5 is_stmt 1 discriminator 2 view .LVU473
 2213              		.loc 22 101 5 is_stmt 0 discriminator 2 view .LVU474
 2214              	.LBE3434:
 2215              	.LBB3435:
 2216              	.LBI3435:
 159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 2217              		.loc 20 159 2 is_stmt 1 discriminator 2 view .LVU475
 2218              	.LBB3436:
 2219              	.LBB3437:
 2220              	.LBI3437:
 2221              		.loc 22 101 5 discriminator 2 view .LVU476
 2222              		.loc 22 101 5 is_stmt 0 discriminator 2 view .LVU477
 2223              	.LBE3437:
 2224              	.LBB3438:
 2225              	.LBI3438:
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 2226              		.loc 17 147 7 is_stmt 1 discriminator 2 view .LVU478
 2227              	.LBB3439:
 2228              	.LBI3439:
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2229              		.loc 16 82 7 discriminator 2 view .LVU479
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2230              		.loc 16 82 7 is_stmt 0 discriminator 2 view .LVU480
 2231              	.LBE3439:
 2232              	.LBE3438:
 160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 2233              		.loc 20 160 46 discriminator 2 view .LVU481
 2234 006c 8360     		str	r3, [r0, #8]
 2235              	.LVL97:
 160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 2236              		.loc 20 160 46 discriminator 2 view .LVU482
 2237              	.LBE3436:
 2238              	.LBE3435:
 2239              	.LBB3440:
 2240              	.LBI3440:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 210


 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 2241              		.loc 20 221 7 is_stmt 1 discriminator 2 view .LVU483
 2242              	.LBB3441:
 2243              	.LBI3441:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 2244              		.loc 20 186 7 discriminator 2 view .LVU484
 2245              	.LBB3442:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2246              		.loc 20 187 28 is_stmt 0 discriminator 2 view .LVU485
 2247 006e 1E9B     		ldr	r3, [sp, #120]
 2248              	.LVL98:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2249              		.loc 20 187 28 discriminator 2 view .LVU486
 2250              	.LBE3442:
 2251              	.LBE3441:
 2252              	.LBB3443:
 2253              	.LBI3443:
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2254              		.loc 20 200 7 is_stmt 1 discriminator 2 view .LVU487
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2255              		.loc 20 200 7 is_stmt 0 discriminator 2 view .LVU488
 2256              	.LBE3443:
 2257              	.LBE3440:
 555:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 2258              		.loc 20 555 2 discriminator 2 view .LVU489
 2259 0070 9342     		cmp	r3, r2
 2260 0072 00F0D580 		beq	.L134
 2261              	.LVL99:
 2262              	.LBB3444:
 2263              	.LBI3444:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 2264              		.loc 20 186 7 is_stmt 1 view .LVU490
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 2265              		.loc 20 186 7 is_stmt 0 view .LVU491
 2266              	.LBE3444:
 2267              	.LBB3445:
 2268              	.LBI3445:
 178:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 2269              		.loc 20 178 7 is_stmt 1 view .LVU492
 2270              	.LBB3446:
 179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2271              		.loc 20 179 26 is_stmt 0 view .LVU493
 2272 0076 8360     		str	r3, [r0, #8]
 2273              	.LVL100:
 179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2274              		.loc 20 179 26 view .LVU494
 2275              	.LBE3446:
 2276              	.LBE3445:
 2277              	.LBB3447:
 2278              	.LBI3447:
 210:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 2279              		.loc 20 210 7 is_stmt 1 view .LVU495
 2280              	.LBB3448:
 211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2281              		.loc 20 211 31 is_stmt 0 view .LVU496
 2282 0078 209B     		ldr	r3, [sp, #128]
 2283 007a 0361     		str	r3, [r0, #16]
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 211


 2284              	.LVL101:
 2285              	.L78:
 211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2286              		.loc 20 211 31 view .LVU497
 2287              	.LBE3448:
 2288              	.LBE3447:
 2289              	.LBB3449:
 2290              	.LBI3449:
 907:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 2291              		.loc 20 907 7 is_stmt 1 view .LVU498
 907:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 2292              		.loc 20 907 7 is_stmt 0 view .LVU499
 2293              	.LBE3449:
 2294              	.LBB3450:
 2295              	.LBI3450:
 182:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 2296              		.loc 20 182 7 is_stmt 1 view .LVU500
 2297              	.LBE3450:
 2298              	.LBB3453:
 2299              	.LBB3454:
 179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2300              		.loc 20 179 26 is_stmt 0 view .LVU501
 2301 007c 20AB     		add	r3, sp, #128
 2302              	.LBE3454:
 2303              	.LBE3453:
 2304              	.LBE3469:
 2305              	.LBE3474:
 2306              	.LBB3475:
 2307              	.LBB3476:
 555:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 2308              		.loc 20 555 2 view .LVU502
 2309 007e 26AA     		add	r2, sp, #152
 2310              	.LBB3477:
 2311              	.LBB3478:
 193:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 2312              		.loc 20 193 51 view .LVU503
 2313 0080 04F12809 		add	r9, r4, #40
 2314              	.LBE3478:
 2315              	.LBE3477:
 2316              	.LBE3476:
 2317              	.LBE3475:
 2318              	.LBB3522:
 2319              	.LBB3470:
 2320              	.LBB3456:
 2321              	.LBB3455:
 179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2322              		.loc 20 179 26 view .LVU504
 2323 0084 1E93     		str	r3, [sp, #120]
 2324              	.LBE3455:
 2325              	.LBE3456:
 2326              	.LBB3457:
 2327              	.LBB3451:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2328              		.loc 20 183 26 view .LVU505
 2329 0086 1F9B     		ldr	r3, [sp, #124]
 2330              	.LBE3451:
 2331              	.LBE3457:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 212


 2332              	.LBE3470:
 2333              	.LBE3522:
 2334              	.LBB3523:
 2335              	.LBB3517:
 2336              	.LBB3479:
 2337              	.LBB3480:
 160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 2338              		.loc 20 160 46 view .LVU506
 2339 0088 C4F82090 		str	r9, [r4, #32]
 2340              	.LBE3480:
 2341              	.LBE3479:
 2342              	.LBE3517:
 2343              	.LBE3523:
 2344              	.LBB3524:
 2345              	.LBB3471:
 2346              	.LBB3458:
 2347              	.LBB3452:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2348              		.loc 20 183 26 view .LVU507
 2349 008c E360     		str	r3, [r4, #12]
 2350              	.LVL102:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2351              		.loc 20 183 26 view .LVU508
 2352              	.LBE3452:
 2353              	.LBE3458:
 2354              	.LBB3459:
 2355              	.LBI3459:
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2356              		.loc 20 190 7 is_stmt 1 view .LVU509
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2357              		.loc 20 190 7 is_stmt 0 view .LVU510
 2358              	.LBE3459:
 2359              	.LBB3460:
 2360              	.LBI3453:
 178:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 2361              		.loc 20 178 7 is_stmt 1 view .LVU511
 178:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 2362              		.loc 20 178 7 is_stmt 0 view .LVU512
 2363              	.LBE3460:
 2364              	.LBB3461:
 2365              	.LBI3461:
 214:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2366              		.loc 20 214 7 is_stmt 1 view .LVU513
 2367              	.LBB3462:
 2368              	.LBI3462:
 182:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 2369              		.loc 20 182 7 view .LVU514
 2370              	.LBB3463:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2371              		.loc 20 183 26 is_stmt 0 view .LVU515
 2372 008e 0023     		movs	r3, #0
 2373 0090 1F93     		str	r3, [sp, #124]
 2374              	.LVL103:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2375              		.loc 20 183 26 view .LVU516
 2376              	.LBE3463:
 2377              	.LBE3462:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 213


 2378              	.LBB3464:
 2379              	.LBI3464:
 321:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 2380              		.loc 24 321 7 is_stmt 1 view .LVU517
 2381              	.LBB3465:
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 2382              		.loc 24 322 9 view .LVU518
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 2383              		.loc 24 322 14 is_stmt 0 view .LVU519
 2384 0092 8DF88030 		strb	r3, [sp, #128]
 2385              	.LVL104:
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 2386              		.loc 24 322 14 view .LVU520
 2387              	.LBE3465:
 2388              	.LBE3464:
 2389              	.LBE3461:
 2390              	.LBE3471:
 2391              	.LBE3524:
 2392              	.LBB3525:
 2393              	.LBI3475:
 552:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 2394              		.loc 20 552 7 is_stmt 1 view .LVU521
 2395              	.LBB3518:
 2396              	.LBB3485:
 2397              	.LBI3477:
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2398              		.loc 20 190 7 view .LVU522
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2399              		.loc 20 190 7 is_stmt 0 view .LVU523
 2400              	.LBE3485:
 2401              	.LBB3486:
 2402              	.LBI3486:
 286:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 2403              		.loc 20 286 7 is_stmt 1 view .LVU524
 286:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 2404              		.loc 20 286 7 is_stmt 0 view .LVU525
 2405              	.LBE3486:
 2406              	.LBB3487:
 2407              	.LBI3487:
 2408              		.loc 22 101 5 is_stmt 1 view .LVU526
 2409              		.loc 22 101 5 is_stmt 0 view .LVU527
 2410              	.LBE3487:
 2411              	.LBB3488:
 2412              	.LBI3479:
 159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 2413              		.loc 20 159 2 is_stmt 1 view .LVU528
 2414              	.LBB3484:
 2415              	.LBB3481:
 2416              	.LBI3481:
 2417              		.loc 22 101 5 view .LVU529
 2418              		.loc 22 101 5 is_stmt 0 view .LVU530
 2419              	.LBE3481:
 2420              	.LBB3482:
 2421              	.LBI3482:
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 2422              		.loc 17 147 7 is_stmt 1 view .LVU531
 2423              	.LBB3483:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 214


 2424              	.LBI3483:
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2425              		.loc 16 82 7 view .LVU532
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2426              		.loc 16 82 7 is_stmt 0 view .LVU533
 2427              	.LBE3483:
 2428              	.LBE3482:
 2429              	.LBE3484:
 2430              	.LBE3488:
 2431              	.LBB3489:
 2432              	.LBI3489:
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 2433              		.loc 20 221 7 is_stmt 1 view .LVU534
 2434              	.LBB3490:
 2435              	.LBI3490:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 2436              		.loc 20 186 7 view .LVU535
 2437              	.LBB3491:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2438              		.loc 20 187 28 is_stmt 0 view .LVU536
 2439 0096 249B     		ldr	r3, [sp, #144]
 2440              	.LVL105:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2441              		.loc 20 187 28 view .LVU537
 2442              	.LBE3491:
 2443              	.LBE3490:
 2444              	.LBB3492:
 2445              	.LBI3492:
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2446              		.loc 20 200 7 is_stmt 1 view .LVU538
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2447              		.loc 20 200 7 is_stmt 0 view .LVU539
 2448              	.LBE3492:
 2449              	.LBE3489:
 555:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 2450              		.loc 20 555 2 view .LVU540
 2451 0098 9342     		cmp	r3, r2
 2452 009a 00F0D480 		beq	.L135
 2453              	.LVL106:
 2454              	.LBB3493:
 2455              	.LBI3493:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 2456              		.loc 20 186 7 is_stmt 1 view .LVU541
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 2457              		.loc 20 186 7 is_stmt 0 view .LVU542
 2458              	.LBE3493:
 2459              	.LBB3494:
 2460              	.LBI3494:
 178:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 2461              		.loc 20 178 7 is_stmt 1 view .LVU543
 2462              	.LBB3495:
 179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2463              		.loc 20 179 26 is_stmt 0 view .LVU544
 2464 009e 2362     		str	r3, [r4, #32]
 2465              	.LVL107:
 179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2466              		.loc 20 179 26 view .LVU545
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 215


 2467              	.LBE3495:
 2468              	.LBE3494:
 2469              	.LBB3496:
 2470              	.LBI3496:
 210:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 2471              		.loc 20 210 7 is_stmt 1 view .LVU546
 2472              	.LBB3497:
 211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2473              		.loc 20 211 31 is_stmt 0 view .LVU547
 2474 00a0 269B     		ldr	r3, [sp, #152]
 2475 00a2 A362     		str	r3, [r4, #40]
 2476              	.LVL108:
 2477              	.L80:
 211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2478              		.loc 20 211 31 view .LVU548
 2479              	.LBE3497:
 2480              	.LBE3496:
 2481              	.LBB3498:
 2482              	.LBI3498:
 907:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 2483              		.loc 20 907 7 is_stmt 1 view .LVU549
 907:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 2484              		.loc 20 907 7 is_stmt 0 view .LVU550
 2485              	.LBE3498:
 2486              	.LBB3499:
 2487              	.LBI3499:
 182:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 2488              		.loc 20 182 7 is_stmt 1 view .LVU551
 2489              	.LBE3499:
 2490              	.LBB3502:
 2491              	.LBB3503:
 179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2492              		.loc 20 179 26 is_stmt 0 view .LVU552
 2493 00a4 26AB     		add	r3, sp, #152
 2494              	.LBE3503:
 2495              	.LBE3502:
 2496              	.LBE3518:
 2497              	.LBE3525:
 2498              	.LBB3526:
 2499              	.LBB3527:
 555:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 2500              		.loc 20 555 2 view .LVU553
 2501 00a6 2CAA     		add	r2, sp, #176
 2502              	.LBB3528:
 2503              	.LBB3529:
 193:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 2504              		.loc 20 193 51 view .LVU554
 2505 00a8 04F1400C 		add	ip, r4, #64
 2506              	.LBE3529:
 2507              	.LBE3528:
 2508              	.LBE3527:
 2509              	.LBE3526:
 2510              	.LBB3582:
 2511              	.LBB3519:
 2512              	.LBB3505:
 2513              	.LBB3504:
 179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 216


 2514              		.loc 20 179 26 view .LVU555
 2515 00ac 2493     		str	r3, [sp, #144]
 2516              	.LBE3504:
 2517              	.LBE3505:
 2518              	.LBB3506:
 2519              	.LBB3500:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2520              		.loc 20 183 26 view .LVU556
 2521 00ae 259B     		ldr	r3, [sp, #148]
 2522              	.LBE3500:
 2523              	.LBE3506:
 2524              	.LBE3519:
 2525              	.LBE3582:
 2526              	.LBB3583:
 2527              	.LBB3576:
 2528              	.LBB3530:
 2529              	.LBB3531:
 160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 2530              		.loc 20 160 46 view .LVU557
 2531 00b0 C4F838C0 		str	ip, [r4, #56]
 2532              	.LBE3531:
 2533              	.LBE3530:
 2534              	.LBE3576:
 2535              	.LBE3583:
 2536              	.LBB3584:
 2537              	.LBB3520:
 2538              	.LBB3507:
 2539              	.LBB3501:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2540              		.loc 20 183 26 view .LVU558
 2541 00b4 6362     		str	r3, [r4, #36]
 2542              	.LVL109:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2543              		.loc 20 183 26 view .LVU559
 2544              	.LBE3501:
 2545              	.LBE3507:
 2546              	.LBB3508:
 2547              	.LBI3508:
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2548              		.loc 20 190 7 is_stmt 1 view .LVU560
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2549              		.loc 20 190 7 is_stmt 0 view .LVU561
 2550              	.LBE3508:
 2551              	.LBB3509:
 2552              	.LBI3502:
 178:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 2553              		.loc 20 178 7 is_stmt 1 view .LVU562
 178:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 2554              		.loc 20 178 7 is_stmt 0 view .LVU563
 2555              	.LBE3509:
 2556              	.LBB3510:
 2557              	.LBI3510:
 214:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2558              		.loc 20 214 7 is_stmt 1 view .LVU564
 2559              	.LBB3511:
 2560              	.LBI3511:
 182:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 217


 2561              		.loc 20 182 7 view .LVU565
 2562              	.LBB3512:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2563              		.loc 20 183 26 is_stmt 0 view .LVU566
 2564 00b6 0023     		movs	r3, #0
 2565 00b8 2593     		str	r3, [sp, #148]
 2566              	.LVL110:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2567              		.loc 20 183 26 view .LVU567
 2568              	.LBE3512:
 2569              	.LBE3511:
 2570              	.LBB3513:
 2571              	.LBI3513:
 321:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 2572              		.loc 24 321 7 is_stmt 1 view .LVU568
 2573              	.LBB3514:
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 2574              		.loc 24 322 9 view .LVU569
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 2575              		.loc 24 322 14 is_stmt 0 view .LVU570
 2576 00ba 8DF89830 		strb	r3, [sp, #152]
 2577              	.LVL111:
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 2578              		.loc 24 322 14 view .LVU571
 2579              	.LBE3514:
 2580              	.LBE3513:
 2581              	.LBE3510:
 2582              	.LBE3520:
 2583              	.LBE3584:
 2584              	.LBB3585:
 2585              	.LBI3526:
 552:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 2586              		.loc 20 552 7 is_stmt 1 view .LVU572
 2587              	.LBB3577:
 2588              	.LBB3536:
 2589              	.LBI3528:
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2590              		.loc 20 190 7 view .LVU573
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2591              		.loc 20 190 7 is_stmt 0 view .LVU574
 2592              	.LBE3536:
 2593              	.LBB3537:
 2594              	.LBI3537:
 286:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 2595              		.loc 20 286 7 is_stmt 1 view .LVU575
 286:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 2596              		.loc 20 286 7 is_stmt 0 view .LVU576
 2597              	.LBE3537:
 2598              	.LBB3538:
 2599              	.LBI3538:
 2600              		.loc 22 101 5 is_stmt 1 view .LVU577
 2601              		.loc 22 101 5 is_stmt 0 view .LVU578
 2602              	.LBE3538:
 2603              	.LBB3539:
 2604              	.LBI3530:
 159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 2605              		.loc 20 159 2 is_stmt 1 view .LVU579
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 218


 2606              	.LBB3535:
 2607              	.LBB3532:
 2608              	.LBI3532:
 2609              		.loc 22 101 5 view .LVU580
 2610              		.loc 22 101 5 is_stmt 0 view .LVU581
 2611              	.LBE3532:
 2612              	.LBB3533:
 2613              	.LBI3533:
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 2614              		.loc 17 147 7 is_stmt 1 view .LVU582
 2615              	.LBB3534:
 2616              	.LBI3534:
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2617              		.loc 16 82 7 view .LVU583
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2618              		.loc 16 82 7 is_stmt 0 view .LVU584
 2619              	.LBE3534:
 2620              	.LBE3533:
 2621              	.LBE3535:
 2622              	.LBE3539:
 2623              	.LBB3540:
 2624              	.LBI3540:
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 2625              		.loc 20 221 7 is_stmt 1 view .LVU585
 2626              	.LBB3541:
 2627              	.LBI3541:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 2628              		.loc 20 186 7 view .LVU586
 2629              	.LBB3542:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2630              		.loc 20 187 28 is_stmt 0 view .LVU587
 2631 00be 2A9B     		ldr	r3, [sp, #168]
 2632              	.LVL112:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2633              		.loc 20 187 28 view .LVU588
 2634              	.LBE3542:
 2635              	.LBE3541:
 2636              	.LBB3543:
 2637              	.LBI3543:
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2638              		.loc 20 200 7 is_stmt 1 view .LVU589
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2639              		.loc 20 200 7 is_stmt 0 view .LVU590
 2640              	.LBE3543:
 2641              	.LBE3540:
 555:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 2642              		.loc 20 555 2 view .LVU591
 2643 00c0 9342     		cmp	r3, r2
 2644 00c2 00F0B580 		beq	.L136
 2645              	.LVL113:
 2646              	.LBB3544:
 2647              	.LBI3544:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 2648              		.loc 20 186 7 is_stmt 1 view .LVU592
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 2649              		.loc 20 186 7 is_stmt 0 view .LVU593
 2650              	.LBE3544:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 219


 2651              	.LBB3545:
 2652              	.LBI3545:
 178:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 2653              		.loc 20 178 7 is_stmt 1 view .LVU594
 2654              	.LBB3546:
 179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2655              		.loc 20 179 26 is_stmt 0 view .LVU595
 2656 00c6 A363     		str	r3, [r4, #56]
 2657              	.LVL114:
 179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2658              		.loc 20 179 26 view .LVU596
 2659              	.LBE3546:
 2660              	.LBE3545:
 2661              	.LBB3547:
 2662              	.LBI3547:
 210:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 2663              		.loc 20 210 7 is_stmt 1 view .LVU597
 2664              	.LBB3548:
 211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2665              		.loc 20 211 31 is_stmt 0 view .LVU598
 2666 00c8 2C9B     		ldr	r3, [sp, #176]
 2667 00ca 2364     		str	r3, [r4, #64]
 2668              	.LVL115:
 2669              	.L82:
 211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2670              		.loc 20 211 31 view .LVU599
 2671              	.LBE3548:
 2672              	.LBE3547:
 2673              	.LBB3549:
 2674              	.LBI3549:
 907:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 2675              		.loc 20 907 7 is_stmt 1 view .LVU600
 907:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 2676              		.loc 20 907 7 is_stmt 0 view .LVU601
 2677              	.LBE3549:
 2678              	.LBB3550:
 2679              	.LBI3550:
 182:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 2680              		.loc 20 182 7 is_stmt 1 view .LVU602
 2681              	.LBE3550:
 2682              	.LBE3577:
 2683              	.LBE3585:
 2684              	.LBE3593:
 2685              	.LBE3601:
 2686              	.LBE3607:
 2687              	.LBE3613:
 2688              	.LBE3620:
 2689              	.LBE3630:
 2690              	.LBE3636:
 2691              	.LBE3642:
 2692              	.LBE3648:
 2693              	.LBB3649:
 2694              	.LBB3650:
 682:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 2695              		.loc 12 682 60 is_stmt 0 view .LVU603
 2696 00cc DAF87823 		ldr	r2, [r10, #888]
 2697              	.LBE3650:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 220


 2698              	.LBE3649:
 2699              	.LBB3659:
 2700              	.LBB3643:
 2701              	.LBB3637:
 2702              	.LBB3631:
 2703              	.LBB3621:
 2704              	.LBB3614:
 2705              	.LBB3608:
 2706              	.LBB3602:
 2707              	.LBB3594:
 2708              	.LBB3586:
 2709              	.LBB3578:
 2710              	.LBB3553:
 2711              	.LBB3554:
 179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2712              		.loc 20 179 26 view .LVU604
 2713 00d0 2CAB     		add	r3, sp, #176
 2714              	.LBE3554:
 2715              	.LBE3553:
 2716              	.LBB3556:
 2717              	.LBB3557:
 2718              	.LBB3558:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2719              		.loc 20 183 26 view .LVU605
 2720 00d2 0020     		movs	r0, #0
 2721              	.LBE3558:
 2722              	.LBE3557:
 2723              	.LBE3556:
 2724              	.LBB3566:
 2725              	.LBB3555:
 179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2726              		.loc 20 179 26 view .LVU606
 2727 00d4 2A93     		str	r3, [sp, #168]
 2728              	.LBE3555:
 2729              	.LBE3566:
 2730              	.LBE3578:
 2731              	.LBE3586:
 2732              	.LBE3594:
 2733              	.LBE3602:
 2734              	.LBE3608:
 2735              	.LBE3614:
 2736              	.LBE3621:
 2737              	.LBE3631:
 2738              	.LBE3637:
 2739              	.LBE3643:
 2740              	.LBE3659:
 2741              	.LBB3660:
 2742              	.LBB3661:
 2743              	.LBB3662:
 2744              	.LBB3663:
 2745              	.LBB3664:
1573:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (!__prev_p)
 2746              		.loc 12 1573 20 view .LVU607
 2747 00d6 DAF87433 		ldr	r3, [r10, #884]
 2748              	.LBE3664:
 2749              	.LBE3663:
 2750              	.LBE3662:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 221


 2751              	.LBE3661:
 2752              	.LBE3660:
 2753              	.LBB3700:
 2754              	.LBB3644:
 2755              	.LBB3638:
 2756              	.LBB3632:
 2757              	.LBB3622:
 2758              	.LBB3615:
 2759              	.LBB3609:
 2760              	.LBB3603:
 2761              	.LBB3595:
 2762              	.LBB3587:
 2763              	.LBB3579:
 2764              	.LBB3567:
 2765              	.LBB3560:
 2766              	.LBB3561:
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 2767              		.loc 24 322 14 view .LVU608
 2768 00da 8DF8B000 		strb	r0, [sp, #176]
 2769              	.LBE3561:
 2770              	.LBE3560:
 2771              	.LBE3567:
 2772              	.LBE3579:
 2773              	.LBE3587:
 2774              	.LBE3595:
 2775              	.LBE3603:
 2776              	.LBE3609:
 2777              	.LBE3615:
 2778              	.LBE3622:
 2779              	.LBE3632:
 2780              	.LBE3638:
 2781              	.LBE3644:
 2782              	.LBE3700:
 2783              	.LBB3701:
 2784              	.LBB3657:
 2785              	.LBB3651:
 2786              	.LBB3652:
 2787              	.LBB3653:
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 2788              		.loc 14 433 22 view .LVU609
 2789 00de B7FBF2F1 		udiv	r1, r7, r2
 2790 00e2 02FB1171 		mls	r1, r2, r1, r7
 2791              	.LBE3653:
 2792              	.LBE3652:
 2793              	.LBE3651:
 2794              	.LBE3657:
 2795              	.LBE3701:
 2796              	.LBB3702:
 2797              	.LBB3691:
 2798              	.LBB3689:
 2799              	.LBB3687:
 2800              	.LBB3685:
1573:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (!__prev_p)
 2801              		.loc 12 1573 20 view .LVU610
 2802 00e6 53F821B0 		ldr	fp, [r3, r1, lsl #2]
1573:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (!__prev_p)
 2803              		.loc 12 1573 41 view .LVU611
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 222


 2804 00ea 4FEA8108 		lsl	r8, r1, #2
 2805              	.LBE3685:
 2806              	.LBE3687:
 2807              	.LBE3689:
 2808              	.LBE3691:
 2809              	.LBE3702:
 2810              	.LBB3703:
 2811              	.LBB3645:
 2812              	.LBB3639:
 2813              	.LBB3633:
 2814              	.LBB3623:
 2815              	.LBB3616:
 2816              	.LBB3610:
 2817              	.LBB3604:
 2818              	.LBB3596:
 2819              	.LBB3588:
 2820              	.LBB3580:
 2821              	.LBB3568:
 2822              	.LBB3551:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2823              		.loc 20 183 26 view .LVU612
 2824 00ee 2B9B     		ldr	r3, [sp, #172]
 2825              	.LBE3551:
 2826              	.LBE3568:
 2827              	.LBB3569:
 2828              	.LBB3563:
 2829              	.LBB3559:
 2830 00f0 2B90     		str	r0, [sp, #172]
 2831              	.LVL116:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2832              		.loc 20 183 26 view .LVU613
 2833              	.LBE3559:
 2834              	.LBE3563:
 2835              	.LBE3569:
 2836              	.LBB3570:
 2837              	.LBB3552:
 2838 00f2 E363     		str	r3, [r4, #60]
 2839              	.LVL117:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2840              		.loc 20 183 26 view .LVU614
 2841              	.LBE3552:
 2842              	.LBE3570:
 2843              	.LBB3571:
 2844              	.LBI3571:
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2845              		.loc 20 190 7 is_stmt 1 view .LVU615
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2846              		.loc 20 190 7 is_stmt 0 view .LVU616
 2847              	.LBE3571:
 2848              	.LBB3572:
 2849              	.LBI3553:
 178:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 2850              		.loc 20 178 7 is_stmt 1 view .LVU617
 178:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 2851              		.loc 20 178 7 is_stmt 0 view .LVU618
 2852              	.LBE3572:
 2853              	.LBB3573:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 223


 2854              	.LBI3556:
 214:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2855              		.loc 20 214 7 is_stmt 1 view .LVU619
 2856              	.LBB3564:
 2857              	.LBI3557:
 182:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 2858              		.loc 20 182 7 view .LVU620
 182:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 2859              		.loc 20 182 7 is_stmt 0 view .LVU621
 2860              	.LBE3564:
 2861              	.LBB3565:
 2862              	.LBI3560:
 321:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 2863              		.loc 24 321 7 is_stmt 1 view .LVU622
 2864              	.LBB3562:
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 2865              		.loc 24 322 9 view .LVU623
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 2866              		.loc 24 322 9 is_stmt 0 view .LVU624
 2867              	.LBE3562:
 2868              	.LBE3565:
 2869              	.LBE3573:
 2870              	.LBE3580:
 2871              	.LBE3588:
  38:src/parameter_controller.h **** 	std::string label;
 2872              		.loc 19 38 8 view .LVU625
 2873 00f4 309B     		ldr	r3, [sp, #192]
 2874 00f6 2365     		str	r3, [r4, #80]
 2875 00f8 319B     		ldr	r3, [sp, #196]	@ float
 2876 00fa 6365     		str	r3, [r4, #84]	@ float
 2877 00fc 329B     		ldr	r3, [sp, #200]	@ float
 2878 00fe A365     		str	r3, [r4, #88]	@ float
 2879 0100 339B     		ldr	r3, [sp, #204]	@ float
 2880 0102 E365     		str	r3, [r4, #92]	@ float
 2881              	.LVL118:
  38:src/parameter_controller.h **** 	std::string label;
 2882              		.loc 19 38 8 view .LVU626
 2883              	.LBE3596:
 2884              	.LBE3604:
 2885              	.LBE3610:
 2886              	.LBE3616:
 2887              	.LBE3623:
 2888              	.LBE3633:
 2889              	.LBE3639:
 2890              	.LBE3645:
 2891              	.LBE3703:
 2892              	.LBB3704:
 2893              	.LBI3704:
1290:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
 2894              		.loc 14 1290 7 is_stmt 1 view .LVU627
 2895              	.LBB3705:
 2896              	.LBI3705:
 2897              		.file 27 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
   1:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // functional_hash.h header -*- C++ -*-
   2:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
   3:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // Copyright (C) 2007-2020 Free Software Foundation, Inc.
   4:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** //
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 224


   5:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // software; you can redistribute it and/or modify it under the
   7:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // terms of the GNU General Public License as published by the
   8:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // any later version.
  10:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
  11:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // This library is distributed in the hope that it will be useful,
  12:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // GNU General Public License for more details.
  15:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
  16:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
  20:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // You should have received a copy of the GNU General Public License and
  21:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // <http://www.gnu.org/licenses/>.
  24:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
  25:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** /** @file bits/functional_hash.h
  26:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****  *  This is an internal header file, included by other library headers.
  27:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****  *  Do not attempt to use it directly. @headername{functional}
  28:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****  */
  29:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
  30:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** #ifndef _FUNCTIONAL_HASH_H
  31:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** #define _FUNCTIONAL_HASH_H 1
  32:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
  33:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** #pragma GCC system_header
  34:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
  35:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** #include <bits/hash_bytes.h>
  36:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
  37:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** namespace std _GLIBCXX_VISIBILITY(default)
  38:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** {
  39:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  40:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
  41:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   /** @defgroup hashes Hashes
  42:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****    *  @ingroup functors
  43:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****    *
  44:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****    *   Hashing functors taking a variable type and returning a @c std::size_t.
  45:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****    *
  46:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****    *  @{
  47:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****    */
  48:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
  49:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   template<typename _Result, typename _Arg>
  50:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     struct __hash_base
  51:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     {
  52:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       typedef _Result     result_type _GLIBCXX17_DEPRECATED;
  53:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       typedef _Arg      argument_type _GLIBCXX17_DEPRECATED;
  54:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     };
  55:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
  56:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   /// Primary class template hash.
  57:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   template<typename _Tp>
  58:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     struct hash;
  59:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
  60:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   template<typename _Tp, typename = void>
  61:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     struct __poison_hash
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 225


  62:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     {
  63:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       static constexpr bool __enable_hash_call = false;
  64:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     private:
  65:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       // Private rather than deleted to be non-trivially-copyable.
  66:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       __poison_hash(__poison_hash&&);
  67:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       ~__poison_hash();
  68:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     };
  69:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
  70:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   template<typename _Tp>
  71:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     struct __poison_hash<_Tp, __void_t<decltype(hash<_Tp>()(declval<_Tp>()))>>
  72:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     {
  73:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       static constexpr bool __enable_hash_call = true;
  74:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     };
  75:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   // Helper struct for SFINAE-poisoning non-enum types.
  77:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   template<typename _Tp, bool = is_enum<_Tp>::value>
  78:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     struct __hash_enum
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     {
  80:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     private:
  81:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       // Private rather than deleted to be non-trivially-copyable.
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       __hash_enum(__hash_enum&&);
  83:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       ~__hash_enum();
  84:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     };
  85:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
  86:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   // Helper struct for hash with enum types.
  87:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   template<typename _Tp>
  88:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     struct __hash_enum<_Tp, true> : public __hash_base<size_t, _Tp>
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     {
  90:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       size_t
  91:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       operator()(_Tp __val) const noexcept
  92:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       {
  93:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****        using __type = typename underlying_type<_Tp>::type;
  94:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****        return hash<__type>{}(static_cast<__type>(__val));
  95:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       }
  96:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     };
  97:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
  98:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   /// Primary class template hash, usable for enum types only.
  99:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   // Use with non-enum types still SFINAES.
 100:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   template<typename _Tp>
 101:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     struct hash : __hash_enum<_Tp>
 102:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     { };
 103:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
 104:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   /// Partial specializations for pointer types.
 105:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   template<typename _Tp>
 106:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     struct hash<_Tp*> : public __hash_base<size_t, _Tp*>
 107:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     {
 108:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       size_t
 109:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       operator()(_Tp* __p) const noexcept
 110:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       { return reinterpret_cast<size_t>(__p); }
 111:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     };
 112:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
 113:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   // Explicit specializations for integer types.
 114:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** #define _Cxx_hashtable_define_trivial_hash(_Tp) 	\
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   template<>						\
 116:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     struct hash<_Tp> : public __hash_base<size_t, _Tp>  \
 117:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     {                                                   \
 118:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       size_t                                            \
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 226


 119:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       operator()(_Tp __val) const noexcept              \
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       { return static_cast<size_t>(__val); }            \
 121:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     };
 122:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
 123:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   /// Explicit specialization for bool.
 124:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   _Cxx_hashtable_define_trivial_hash(bool)
 125:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
 126:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   /// Explicit specialization for char.
 127:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   _Cxx_hashtable_define_trivial_hash(char)
 128:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
 129:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   /// Explicit specialization for signed char.
 130:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   _Cxx_hashtable_define_trivial_hash(signed char)
 131:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
 132:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   /// Explicit specialization for unsigned char.
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   _Cxx_hashtable_define_trivial_hash(unsigned char)
 134:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
 135:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   /// Explicit specialization for wchar_t.
 136:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   _Cxx_hashtable_define_trivial_hash(wchar_t)
 137:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
 138:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** #ifdef _GLIBCXX_USE_CHAR8_T
 139:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   /// Explicit specialization for char8_t.
 140:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   _Cxx_hashtable_define_trivial_hash(char8_t)
 141:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** #endif
 142:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
 143:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   /// Explicit specialization for char16_t.
 144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   _Cxx_hashtable_define_trivial_hash(char16_t)
 145:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
 146:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   /// Explicit specialization for char32_t.
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   _Cxx_hashtable_define_trivial_hash(char32_t)
 148:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
 149:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   /// Explicit specialization for short.
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   _Cxx_hashtable_define_trivial_hash(short)
 151:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
 152:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   /// Explicit specialization for int.
 153:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   _Cxx_hashtable_define_trivial_hash(int)
 2898              		.loc 27 153 3 view .LVU628
 2899              	.LBB3706:
 2900              		.loc 27 153 3 view .LVU629
 2901              		.loc 27 153 3 is_stmt 0 view .LVU630
 2902              	.LBE3706:
 2903              	.LBE3705:
 2904              	.LBE3704:
 2905              	.LBB3707:
 2906              	.LBI3649:
 681:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __hash_code_base::_M_bucket_index(__k, __c, _M_bucket_count); }
 2907              		.loc 12 681 7 is_stmt 1 view .LVU631
 2908              	.LBB3658:
 2909              	.LBB3656:
 2910              	.LBI3651:
1298:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		      std::size_t __bkt_count) const
 2911              		.loc 14 1298 7 view .LVU632
 2912              	.LBB3655:
 2913              	.LBI3652:
 431:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	       second_argument_type __den) const noexcept
 2914              		.loc 14 431 5 view .LVU633
 2915              	.LBB3654:
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 227


 2916              		.loc 14 433 7 view .LVU634
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 2917              		.loc 14 433 7 is_stmt 0 view .LVU635
 2918              	.LBE3654:
 2919              	.LBE3655:
 2920              	.LBE3656:
 2921              	.LBE3658:
 2922              	.LBE3707:
 2923              	.LBB3708:
 2924              	.LBB3692:
 2925              	.LBI3661:
 690:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		   __hash_code __c) const
 2926              		.loc 12 690 7 is_stmt 1 view .LVU636
 2927              	.LBB3690:
 2928              	.LBB3688:
 2929              	.LBI3663:
1567:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 2930              		.loc 12 1567 5 view .LVU637
 2931              	.LBB3686:
1574:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return nullptr;
 2932              		.loc 12 1574 7 is_stmt 0 view .LVU638
 2933 0104 BBF1000F 		cmp	fp, #0
 2934 0108 6BD0     		beq	.L83
 2935              	.LBB3665:
1577:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   __p = __p->_M_next())
 2936              		.loc 12 1577 25 view .LVU639
 2937 010a DBF80000 		ldr	r0, [fp]
 2938              	.LVL119:
 2939              	.LBB3666:
 2940              	.LBB3667:
 2941              	.LBB3668:
 2942              	.LBB3669:
 2943              		.file 28 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
   1:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // Functor implementations -*- C++ -*-
   2:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
   3:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** //
   5:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // software; you can redistribute it and/or modify it under the
   7:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // terms of the GNU General Public License as published by the
   8:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // any later version.
  10:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
  11:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // This library is distributed in the hope that it will be useful,
  12:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // GNU General Public License for more details.
  15:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
  16:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
  20:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // You should have received a copy of the GNU General Public License and
  21:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // <http://www.gnu.org/licenses/>.
  24:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 228


  25:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** /*
  26:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  *
  27:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * Copyright (c) 1994
  28:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * Hewlett-Packard Company
  29:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  *
  30:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * that both that copyright notice and this permission notice appear
  34:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * representations about the suitability of this software for any
  36:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  *
  38:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  *
  39:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * Copyright (c) 1996-1998
  40:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  *
  42:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * that both that copyright notice and this permission notice appear
  46:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * representations about the suitability of this software for any
  48:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  */
  50:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
  51:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** /** @file bits/stl_function.h
  52:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  *  This is an internal header file, included by other library headers.
  53:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  *  Do not attempt to use it directly. @headername{functional}
  54:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  */
  55:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
  56:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #ifndef _STL_FUNCTION_H
  57:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #define _STL_FUNCTION_H 1
  58:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
  59:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #if __cplusplus > 201103L
  60:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #include <bits/move.h>
  61:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #endif
  62:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
  63:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** namespace std _GLIBCXX_VISIBILITY(default)
  64:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** {
  65:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  66:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
  67:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   // 20.3.1 base classes
  68:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /** @defgroup functors Function Objects
  69:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    * @ingroup utilities
  70:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
  71:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  Function objects, or @e functors, are objects with an @c operator()
  72:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  defined and accessible.  They can be passed as arguments to algorithm
  73:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  templates and used in place of a function pointer.  Not only is the
  74:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  resulting expressiveness of the library increased, but the generated
  75:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  code can be more efficient than what you might write by hand.  When we
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  refer to @a functors, then, generally we include function pointers in
  77:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  the description as well.
  78:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  Often, functors are only created as temporaries passed to algorithm
  80:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  calls, rather than being created as named variables.
  81:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 229


  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  Two examples taken from the standard itself follow.  To perform a
  83:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  by-element addition of two vectors @c a and @c b containing @c double,
  84:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  and put the result in @c a, use
  85:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  \code
  86:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  transform (a.begin(), a.end(), b.begin(), a.begin(), plus<double>());
  87:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  \endcode
  88:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  To negate every element in @c a, use
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  \code
  90:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  transform(a.begin(), a.end(), a.begin(), negate<double>());
  91:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  \endcode
  92:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  The addition and negation functions will be inlined directly.
  93:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
  94:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  The standard functors are derived from structs named @c unary_function
  95:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  and @c binary_function.  These two classes contain nothing but typedefs,
  96:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  to aid in generic (template) programming.  If you write your own
  97:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  functors, you might consider doing the same.
  98:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
  99:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  @{
 100:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    */
 101:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /**
 102:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  This is one of the @link functors functor base classes@endlink.
 103:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    */
 104:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Arg, typename _Result>
 105:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct unary_function
 106:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 107:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       /// @c argument_type is the type of the argument
 108:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef _Arg 	argument_type;   
 109:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 110:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       /// @c result_type is the return type
 111:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef _Result 	result_type;  
 112:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 113:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 114:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /**
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  This is one of the @link functors functor base classes@endlink.
 116:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    */
 117:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Arg1, typename _Arg2, typename _Result>
 118:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct binary_function
 119:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       /// @c first_argument_type is the type of the first argument
 121:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef _Arg1 	first_argument_type; 
 122:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 123:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       /// @c second_argument_type is the type of the second argument
 124:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef _Arg2 	second_argument_type;
 125:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 126:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       /// @c result_type is the return type
 127:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef _Result 	result_type;
 128:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 129:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /** @}  */
 130:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 131:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   // 20.3.2 arithmetic
 132:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /** @defgroup arithmetic_functors Arithmetic Classes
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    * @ingroup functors
 134:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
 135:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  Because basic math often needs to be done during an algorithm,
 136:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  the library provides functors for those operations.  See the
 137:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  documentation for @link functors the base classes@endlink
 138:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  for examples of their use.
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 230


 139:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
 140:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  @{
 141:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    */
 142:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 143:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #if __cplusplus > 201103L
 144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   struct __is_transparent;  // undefined
 145:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 146:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct plus;
 148:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 149:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct minus;
 151:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 152:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 153:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct multiplies;
 154:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 155:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 156:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct divides;
 157:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 158:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct modulus;
 160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 161:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 162:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct negate;
 163:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #endif
 164:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 165:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 166:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp>
 167:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct plus : public binary_function<_Tp, _Tp, _Tp>
 168:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 169:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _GLIBCXX14_CONSTEXPR
 170:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _Tp
 171:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 172:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return __x + __y; }
 173:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 174:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 175:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 176:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp>
 177:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct minus : public binary_function<_Tp, _Tp, _Tp>
 178:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _GLIBCXX14_CONSTEXPR
 180:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _Tp
 181:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 182:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return __x - __y; }
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 184:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 185:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp>
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct multiplies : public binary_function<_Tp, _Tp, _Tp>
 188:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 189:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _GLIBCXX14_CONSTEXPR
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _Tp
 191:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 192:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return __x * __y; }
 193:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 194:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 195:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 231


 196:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp>
 197:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct divides : public binary_function<_Tp, _Tp, _Tp>
 198:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 199:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _GLIBCXX14_CONSTEXPR
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _Tp
 201:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 202:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return __x / __y; }
 203:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 204:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 205:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 206:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp>
 207:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct modulus : public binary_function<_Tp, _Tp, _Tp>
 208:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 209:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _GLIBCXX14_CONSTEXPR
 210:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _Tp
 211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 212:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return __x % __y; }
 213:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 214:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 215:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 216:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp>
 217:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct negate : public unary_function<_Tp, _Tp>
 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 219:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _GLIBCXX14_CONSTEXPR
 220:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _Tp
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       operator()(const _Tp& __x) const
 222:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return -__x; }
 223:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 224:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 225:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #if __cplusplus > 201103L
 226:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 227:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #define __cpp_lib_transparent_operators 201510
 228:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<>
 230:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct plus<void>
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 232:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       template <typename _Tp, typename _Up>
 233:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 234:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	auto
 235:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) + std::forward<_Up>(__u)))
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) + std::forward<_Up>(__u))
 238:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	{ return std::forward<_Tp>(__t) + std::forward<_Up>(__u); }
 239:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 240:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef __is_transparent is_transparent;
 241:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 242:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 243:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 244:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<>
 245:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct minus<void>
 246:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 247:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       template <typename _Tp, typename _Up>
 248:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 249:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	auto
 250:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 251:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) - std::forward<_Up>(__u)))
 252:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) - std::forward<_Up>(__u))
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 232


 253:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	{ return std::forward<_Tp>(__t) - std::forward<_Up>(__u); }
 254:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 255:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef __is_transparent is_transparent;
 256:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 257:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 258:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 259:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<>
 260:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct multiplies<void>
 261:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 262:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       template <typename _Tp, typename _Up>
 263:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 264:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	auto
 265:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 266:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) * std::forward<_Up>(__u)))
 267:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) * std::forward<_Up>(__u))
 268:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	{ return std::forward<_Tp>(__t) * std::forward<_Up>(__u); }
 269:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 270:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef __is_transparent is_transparent;
 271:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 272:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 273:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 274:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<>
 275:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct divides<void>
 276:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 277:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       template <typename _Tp, typename _Up>
 278:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 279:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	auto
 280:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 281:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) / std::forward<_Up>(__u)))
 282:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) / std::forward<_Up>(__u))
 283:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	{ return std::forward<_Tp>(__t) / std::forward<_Up>(__u); }
 284:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 285:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef __is_transparent is_transparent;
 286:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 287:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 288:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 289:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<>
 290:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct modulus<void>
 291:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 292:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       template <typename _Tp, typename _Up>
 293:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 294:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	auto
 295:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 296:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) % std::forward<_Up>(__u)))
 297:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) % std::forward<_Up>(__u))
 298:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	{ return std::forward<_Tp>(__t) % std::forward<_Up>(__u); }
 299:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 300:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef __is_transparent is_transparent;
 301:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 302:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 303:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 304:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<>
 305:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct negate<void>
 306:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 307:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       template <typename _Tp>
 308:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 309:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	auto
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 233


 310:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	operator()(_Tp&& __t) const
 311:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	noexcept(noexcept(-std::forward<_Tp>(__t)))
 312:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	-> decltype(-std::forward<_Tp>(__t))
 313:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	{ return -std::forward<_Tp>(__t); }
 314:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 315:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef __is_transparent is_transparent;
 316:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 317:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #endif
 318:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /** @}  */
 319:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 320:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   // 20.3.3 comparisons
 321:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /** @defgroup comparison_functors Comparison Classes
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    * @ingroup functors
 323:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
 324:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  The library provides six wrapper functors for all the basic comparisons
 325:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  in C++, like @c <.
 326:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
 327:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  @{
 328:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    */
 329:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #if __cplusplus > 201103L
 330:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 331:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct equal_to;
 332:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 333:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 334:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct not_equal_to;
 335:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 336:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 337:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct greater;
 338:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 339:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 340:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct less;
 341:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 342:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 343:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct greater_equal;
 344:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 345:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 346:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct less_equal;
 347:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #endif
 348:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 349:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link comparison_functors comparison functors@endlink.
 350:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp>
 351:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct equal_to : public binary_function<_Tp, _Tp, bool>
 352:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 353:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _GLIBCXX14_CONSTEXPR
 354:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       bool
 355:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 356:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return __x == __y; }
 2944              		.loc 28 356 20 view .LVU640
 2945 010e 8E46     		mov	lr, r1
 2946              	.LVL120:
 2947              		.loc 28 356 20 view .LVU641
 2948              	.LBE3669:
 2949              	.LBE3668:
 2950              	.LBE3667:
 2951              	.LBI3666:
1798:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 2952              		.loc 14 1798 5 is_stmt 1 view .LVU642
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 234


 2953              	.LBB3673:
 2954              	.LBB3671:
 2955              	.LBI3668:
 355:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return __x == __y; }
 2956              		.loc 28 355 7 view .LVU643
 2957              	.LBB3670:
 2958              		.loc 28 356 20 is_stmt 0 view .LVU644
 2959 0110 4368     		ldr	r3, [r0, #4]
 2960              	.LBE3670:
 2961              	.LBE3671:
1804:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
 2962              		.loc 14 1804 2 view .LVU645
 2963 0112 9F42     		cmp	r7, r3
 2964 0114 0DD0     		beq	.L84
 2965              	.LVL121:
 2966              	.L137:
1804:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
 2967              		.loc 14 1804 2 view .LVU646
 2968              	.LBE3673:
 2969              	.LBE3666:
1583:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    break;
 2970              		.loc 12 1583 14 view .LVU647
 2971 0116 0168     		ldr	r1, [r0]
1583:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    break;
 2972              		.loc 12 1583 21 view .LVU648
 2973 0118 0029     		cmp	r1, #0
 2974 011a 62D0     		beq	.L83
 2975              	.LVL122:
 2976              	.LBB3676:
 2977              	.LBI3676:
 677:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __hash_code_base::_M_bucket_index(__n, _M_bucket_count); }
 2978              		.loc 12 677 7 is_stmt 1 view .LVU649
 2979              	.LBB3677:
 2980              	.LBI3677:
1303:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	noexcept( noexcept(declval<const _H1&>()(declval<const _Key&>()))
 2981              		.loc 14 1303 7 view .LVU650
 2982              	.LBB3678:
1307:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 2983              		.loc 14 1307 23 is_stmt 0 view .LVU651
 2984 011c 4B68     		ldr	r3, [r1, #4]
 2985              	.LVL123:
 2986              	.LBB3679:
 2987              	.LBI3679:
 2988              		.loc 27 153 3 is_stmt 1 view .LVU652
 2989              	.LBB3680:
 2990              		.loc 27 153 3 view .LVU653
 2991              		.loc 27 153 3 is_stmt 0 view .LVU654
 2992              	.LBE3680:
 2993              	.LBE3679:
 2994              	.LBB3681:
 2995              	.LBI3681:
 431:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	       second_argument_type __den) const noexcept
 2996              		.loc 14 431 5 is_stmt 1 view .LVU655
 2997              	.LBB3682:
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 2998              		.loc 14 433 7 view .LVU656
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 235


 2999              		.loc 14 433 7 is_stmt 0 view .LVU657
 3000 011e 8346     		mov	fp, r0
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 3001              		.loc 14 433 22 view .LVU658
 3002 0120 B3FBF2F0 		udiv	r0, r3, r2
 3003              	.LVL124:
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 3004              		.loc 14 433 22 view .LVU659
 3005 0124 02FB1030 		mls	r0, r2, r0, r3
 3006              	.LBE3682:
 3007              	.LBE3681:
 3008              	.LBE3678:
 3009              	.LBE3677:
 3010              	.LBE3676:
1583:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    break;
 3011              		.loc 12 1583 21 view .LVU660
 3012 0128 8645     		cmp	lr, r0
 3013 012a 5AD1     		bne	.L83
 3014              	.LBB3683:
 3015              	.LBB3674:
1804:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
 3016              		.loc 14 1804 2 view .LVU661
 3017 012c 9F42     		cmp	r7, r3
 3018              	.LBE3674:
 3019              	.LBE3683:
 3020 012e 0846     		mov	r0, r1
 3021              	.LVL125:
 3022              	.LBB3684:
1798:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 3023              		.loc 14 1798 5 is_stmt 1 view .LVU662
 3024              	.LBB3675:
 3025              	.LBB3672:
 355:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return __x == __y; }
 3026              		.loc 28 355 7 view .LVU663
 355:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return __x == __y; }
 3027              		.loc 28 355 7 is_stmt 0 view .LVU664
 3028              	.LBE3672:
1804:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
 3029              		.loc 14 1804 2 view .LVU665
 3030 0130 F1D1     		bne	.L137
 3031              	.LVL126:
 3032              	.L84:
1804:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
 3033              		.loc 14 1804 2 view .LVU666
 3034              	.LBE3675:
 3035              	.LBE3684:
 3036              	.LBE3665:
 3037              	.LBE3686:
 3038              	.LBE3688:
 3039              	.LBE3690:
 3040              	.LBE3692:
1677:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  // There is already an equivalent node, no insertion
 3041              		.loc 12 1677 2 view .LVU667
 3042 0132 DBF80030 		ldr	r3, [fp]
 3043 0136 002B     		cmp	r3, #0
 3044 0138 53D0     		beq	.L83
 3045              	.LVL127:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 236


 3046              	.LBB3693:
 3047              	.LBI3693:
 340:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : __base_type(__p) { }
 3048              		.loc 14 340 7 is_stmt 1 view .LVU668
 3049              	.LBB3694:
 3050              	.LBI3694:
 294:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : _M_cur(__p) { }
 3051              		.loc 14 294 7 view .LVU669
 294:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : _M_cur(__p) { }
 3052              		.loc 14 294 7 is_stmt 0 view .LVU670
 3053              	.LBE3694:
 3054              	.LBE3693:
 3055              	.LBB3695:
 3056              	.LBI3695:
 3057              		.loc 25 567 5 is_stmt 1 view .LVU671
 3058              	.LBB3696:
 3059              	.LBB3697:
 3060              	.LBI3697:
 352:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 3061              		.loc 25 352 12 view .LVU672
 3062              	.LBB3698:
 3063              	.LBI3698:
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 3064              		.loc 22 76 5 view .LVU673
 3065              	.LBE3698:
 3066              	.LBB3699:
 3067              	.LBI3699:
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 3068              		.loc 22 76 5 view .LVU674
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 3069              		.loc 22 76 5 is_stmt 0 view .LVU675
 3070              	.LBE3699:
 3071              	.LBE3697:
 3072              	.LBE3696:
 3073              	.LBE3695:
 3074              	.LBE3708:
 3075              	.LBB3709:
 3076              	.LBI3709:
 276:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 3077              		.loc 12 276 2 is_stmt 1 view .LVU676
 3078              	.LBB3710:
 3079              	.LBI3710:
2051:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 3080              		.loc 14 2051 5 view .LVU677
 3081              	.LBB3711:
 3082              	.LBB3712:
 3083              	.LBI3712:
 527:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(is_nothrow_destructible<_Up>::value)
 3084              		.loc 15 527 2 view .LVU678
 3085              	.LBB3713:
 3086              	.LBI3713:
 149:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 151:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 152:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       template<typename _Up>
 153:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	void
 154:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	destroy(_Up* __p)
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 237


 3087              		.loc 16 154 2 view .LVU679
 3088              	.LBB3714:
 3089              	.LBI3714:
 211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     : private __pair_base<_T1, _T2>
 3090              		.loc 25 211 12 view .LVU680
 3091              	.LBB3715:
 3092              	.LBI3715:
  38:src/parameter_controller.h **** 	std::string label;
 3093              		.loc 19 38 8 view .LVU681
 3094              	.LBB3716:
 3095              	.LBI3716:
 657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 3096              		.loc 20 657 7 view .LVU682
 3097              	.LBB3717:
 3098              	.LBI3717:
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3099              		.loc 20 229 7 view .LVU683
 3100              	.LBB3718:
 3101              	.LBB3719:
 3102              	.LBI3719:
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 3103              		.loc 20 221 7 view .LVU684
 3104              	.LBB3720:
 3105              	.LBI3720:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 3106              		.loc 20 186 7 view .LVU685
 3107              	.LBB3721:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3108              		.loc 20 187 28 is_stmt 0 view .LVU686
 3109 013a A06B     		ldr	r0, [r4, #56]
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3110              		.loc 20 187 28 view .LVU687
 3111              	.LBE3721:
 3112              	.LBE3720:
 3113              	.LBE3719:
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 3114              		.loc 20 231 2 view .LVU688
 3115 013c 8445     		cmp	ip, r0
 3116 013e 03D0     		beq	.L87
 3117              	.LVL128:
 3118              	.LBB3722:
 3119              	.LBI3722:
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 3120              		.loc 20 236 7 is_stmt 1 view .LVU689
 3121              	.LBB3723:
 3122              	.LBB3724:
 3123              	.LBI3724:
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 3124              		.loc 15 491 7 view .LVU690
 3125              	.LBB3725:
 3126              	.LBI3725:
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 3127              		.loc 16 120 7 view .LVU691
 3128              	.LBE3725:
 3129              	.LBE3724:
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3130              		.loc 20 237 34 is_stmt 0 view .LVU692
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 238


 3131 0140 216C     		ldr	r1, [r4, #64]
 3132              	.LBB3728:
 3133              	.LBB3727:
 3134              	.LBB3726:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 3135              		.loc 16 133 19 view .LVU693
 3136 0142 0131     		adds	r1, r1, #1
 3137 0144 FFF7FEFF 		bl	_ZdlPvj
 3138              	.LVL129:
 3139              	.L87:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 3140              		.loc 16 133 19 view .LVU694
 3141              	.LBE3726:
 3142              	.LBE3727:
 3143              	.LBE3728:
 3144              	.LBE3723:
 3145              	.LBE3722:
 3146              	.LBE3718:
 3147              	.LBE3717:
 3148              	.LBB3729:
 3149              	.LBI3729:
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3150              		.loc 20 150 14 is_stmt 1 view .LVU695
 3151              	.LBB3730:
 3152              	.LBI3730:
 3153              		.loc 17 162 7 view .LVU696
 3154              	.LBB3731:
 3155              	.LBI3731:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3156              		.loc 16 89 7 view .LVU697
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3157              		.loc 16 89 7 is_stmt 0 view .LVU698
 3158              	.LBE3731:
 3159              	.LBE3730:
 3160              	.LBE3729:
 3161              	.LBE3716:
 3162              	.LBB3732:
 3163              	.LBI3732:
 657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 3164              		.loc 20 657 7 is_stmt 1 view .LVU699
 3165              	.LBB3733:
 3166              	.LBI3733:
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3167              		.loc 20 229 7 view .LVU700
 3168              	.LBB3734:
 3169              	.LBB3735:
 3170              	.LBI3735:
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 3171              		.loc 20 221 7 view .LVU701
 3172              	.LBB3736:
 3173              	.LBI3736:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 3174              		.loc 20 186 7 view .LVU702
 3175              	.LBB3737:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3176              		.loc 20 187 28 is_stmt 0 view .LVU703
 3177 0148 206A     		ldr	r0, [r4, #32]
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 239


 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3178              		.loc 20 187 28 view .LVU704
 3179              	.LBE3737:
 3180              	.LBE3736:
 3181              	.LBE3735:
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 3182              		.loc 20 231 2 view .LVU705
 3183 014a 8145     		cmp	r9, r0
 3184 014c 03D0     		beq	.L102
 3185              	.LVL130:
 3186              	.LBB3738:
 3187              	.LBI3738:
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 3188              		.loc 20 236 7 is_stmt 1 view .LVU706
 3189              	.LBB3739:
 3190              	.LBB3740:
 3191              	.LBI3740:
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 3192              		.loc 15 491 7 view .LVU707
 3193              	.LBB3741:
 3194              	.LBI3741:
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 3195              		.loc 16 120 7 view .LVU708
 3196              	.LBE3741:
 3197              	.LBE3740:
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3198              		.loc 20 237 34 is_stmt 0 view .LVU709
 3199 014e A16A     		ldr	r1, [r4, #40]
 3200              	.LBB3744:
 3201              	.LBB3743:
 3202              	.LBB3742:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 3203              		.loc 16 133 19 view .LVU710
 3204 0150 0131     		adds	r1, r1, #1
 3205 0152 FFF7FEFF 		bl	_ZdlPvj
 3206              	.LVL131:
 3207              	.L102:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 3208              		.loc 16 133 19 view .LVU711
 3209              	.LBE3742:
 3210              	.LBE3743:
 3211              	.LBE3744:
 3212              	.LBE3739:
 3213              	.LBE3738:
 3214              	.LBE3734:
 3215              	.LBE3733:
 3216              	.LBB3745:
 3217              	.LBI3745:
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3218              		.loc 20 150 14 is_stmt 1 view .LVU712
 3219              	.LBB3746:
 3220              	.LBI3746:
 3221              		.loc 17 162 7 view .LVU713
 3222              	.LBB3747:
 3223              	.LBI3747:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3224              		.loc 16 89 7 view .LVU714
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 240


  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3225              		.loc 16 89 7 is_stmt 0 view .LVU715
 3226              	.LBE3747:
 3227              	.LBE3746:
 3228              	.LBE3745:
 3229              	.LBE3732:
 3230              	.LBB3748:
 3231              	.LBI3748:
 657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 3232              		.loc 20 657 7 is_stmt 1 view .LVU716
 3233              	.LBB3749:
 3234              	.LBI3749:
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3235              		.loc 20 229 7 view .LVU717
 3236              	.LBB3750:
 3237              	.LBB3751:
 3238              	.LBI3751:
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 3239              		.loc 20 221 7 view .LVU718
 3240              	.LBB3752:
 3241              	.LBI3752:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 3242              		.loc 20 186 7 view .LVU719
 3243              	.LBB3753:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3244              		.loc 20 187 28 is_stmt 0 view .LVU720
 3245 0156 A068     		ldr	r0, [r4, #8]
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3246              		.loc 20 187 28 view .LVU721
 3247              	.LBE3753:
 3248              	.LBE3752:
 3249              	.LBE3751:
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 3250              		.loc 20 231 2 view .LVU722
 3251 0158 039B     		ldr	r3, [sp, #12]
 3252 015a 8342     		cmp	r3, r0
 3253 015c 03D0     		beq	.L103
 3254              	.LVL132:
 3255              	.LBB3754:
 3256              	.LBI3754:
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 3257              		.loc 20 236 7 is_stmt 1 view .LVU723
 3258              	.LBB3755:
 3259              	.LBB3756:
 3260              	.LBI3756:
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 3261              		.loc 15 491 7 view .LVU724
 3262              	.LBB3757:
 3263              	.LBI3757:
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 3264              		.loc 16 120 7 view .LVU725
 3265              	.LBE3757:
 3266              	.LBE3756:
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3267              		.loc 20 237 34 is_stmt 0 view .LVU726
 3268 015e 2169     		ldr	r1, [r4, #16]
 3269              	.LBB3760:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 241


 3270              	.LBB3759:
 3271              	.LBB3758:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 3272              		.loc 16 133 19 view .LVU727
 3273 0160 0131     		adds	r1, r1, #1
 3274 0162 FFF7FEFF 		bl	_ZdlPvj
 3275              	.LVL133:
 3276              	.L103:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 3277              		.loc 16 133 19 view .LVU728
 3278              	.LBE3758:
 3279              	.LBE3759:
 3280              	.LBE3760:
 3281              	.LBE3755:
 3282              	.LBE3754:
 3283              	.LBE3750:
 3284              	.LBE3749:
 3285              	.LBB3761:
 3286              	.LBI3761:
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3287              		.loc 20 150 14 is_stmt 1 view .LVU729
 3288              	.LBB3762:
 3289              	.LBI3762:
 3290              		.loc 17 162 7 view .LVU730
 3291              	.LBB3763:
 3292              	.LBI3763:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3293              		.loc 16 89 7 view .LVU731
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3294              		.loc 16 89 7 is_stmt 0 view .LVU732
 3295              	.LBE3763:
 3296              	.LBE3762:
 3297              	.LBE3761:
 3298              	.LBE3748:
 3299              	.LBE3715:
 3300              	.LBE3714:
 3301              	.LBE3713:
 3302              	.LBE3712:
 3303              	.LBB3764:
 3304              	.LBI3764:
2059:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 3305              		.loc 14 2059 5 is_stmt 1 view .LVU733
 3306              	.LBB3765:
 3307              	.LBB3766:
 3308              	.LBI3766:
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 3309              		.loc 15 491 7 view .LVU734
 3310              	.LBB3767:
 3311              	.LBI3767:
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 3312              		.loc 16 120 7 view .LVU735
 3313              	.LBB3768:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 3314              		.loc 16 133 19 is_stmt 0 view .LVU736
 3315 0166 2046     		mov	r0, r4
 3316 0168 6021     		movs	r1, #96
 3317 016a FFF7FEFF 		bl	_ZdlPvj
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 242


 3318              	.LVL134:
 3319              	.L101:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 3320              		.loc 16 133 19 view .LVU737
 3321              	.LBE3768:
 3322              	.LBE3767:
 3323              	.LBE3766:
 3324              	.LBE3765:
 3325              	.LBE3764:
 3326              	.LBE3711:
 3327              	.LBE3710:
 3328              	.LBE3709:
 3329              	.LBE3860:
 3330              	.LBE3864:
 3331              	.LBE3868:
 3332              	.LBE3872:
 3333              	.LBB3873:
 3334              	.LBI3873:
 211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     : private __pair_base<_T1, _T2>
 3335              		.loc 25 211 12 is_stmt 1 view .LVU738
 3336              	.LBB3874:
 3337              	.LBB3875:
 3338              	.LBI3875:
  38:src/parameter_controller.h **** 	std::string label;
 3339              		.loc 19 38 8 view .LVU739
 3340              	.LBB3876:
 3341              	.LBI3876:
 657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 3342              		.loc 20 657 7 view .LVU740
 3343              	.LBB3877:
 3344              	.LBB3878:
 3345              	.LBI3878:
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3346              		.loc 20 229 7 view .LVU741
 3347              	.LBB3879:
 3348              	.LBB3880:
 3349              	.LBI3880:
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 3350              		.loc 20 221 7 view .LVU742
 3351              	.LBB3881:
 3352              	.LBI3881:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 3353              		.loc 20 186 7 view .LVU743
 3354              	.LBB3882:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3355              		.loc 20 187 28 is_stmt 0 view .LVU744
 3356 016e 2A98     		ldr	r0, [sp, #168]
 3357              	.LVL135:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3358              		.loc 20 187 28 view .LVU745
 3359              	.LBE3882:
 3360              	.LBE3881:
 3361              	.LBB3883:
 3362              	.LBI3883:
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3363              		.loc 20 200 7 is_stmt 1 view .LVU746
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 243


 3364              		.loc 20 200 7 is_stmt 0 view .LVU747
 3365              	.LBE3883:
 3366              	.LBE3880:
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 3367              		.loc 20 231 2 view .LVU748
 3368 0170 2CAB     		add	r3, sp, #176
 3369 0172 9842     		cmp	r0, r3
 3370 0174 03D0     		beq	.L104
 3371              	.LVL136:
 3372              	.LBB3884:
 3373              	.LBI3884:
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 3374              		.loc 20 236 7 is_stmt 1 view .LVU749
 3375              	.LBB3885:
 3376              	.LBB3886:
 3377              	.LBI3886:
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 3378              		.loc 15 491 7 view .LVU750
 3379              	.LBB3887:
 3380              	.LBI3887:
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 3381              		.loc 16 120 7 view .LVU751
 3382              	.LBE3887:
 3383              	.LBE3886:
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3384              		.loc 20 237 34 is_stmt 0 view .LVU752
 3385 0176 2C99     		ldr	r1, [sp, #176]
 3386              	.LBB3890:
 3387              	.LBB3889:
 3388              	.LBB3888:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 3389              		.loc 16 133 19 view .LVU753
 3390 0178 0131     		adds	r1, r1, #1
 3391              	.LVL137:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 3392              		.loc 16 133 19 view .LVU754
 3393 017a FFF7FEFF 		bl	_ZdlPvj
 3394              	.LVL138:
 3395              	.L104:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 3396              		.loc 16 133 19 view .LVU755
 3397              	.LBE3888:
 3398              	.LBE3889:
 3399              	.LBE3890:
 3400              	.LBE3885:
 3401              	.LBE3884:
 3402              	.LBE3879:
 3403              	.LBE3878:
 3404              	.LBB3891:
 3405              	.LBI3891:
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3406              		.loc 20 150 14 is_stmt 1 view .LVU756
 3407              	.LBB3892:
 3408              	.LBI3892:
 3409              		.loc 17 162 7 view .LVU757
 3410              	.LBB3893:
 3411              	.LBI3893:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 244


  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3412              		.loc 16 89 7 view .LVU758
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3413              		.loc 16 89 7 is_stmt 0 view .LVU759
 3414              	.LBE3893:
 3415              	.LBE3892:
 3416              	.LBE3891:
 3417              	.LBE3877:
 3418              	.LBE3876:
 3419              	.LBB3894:
 3420              	.LBI3894:
 657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 3421              		.loc 20 657 7 is_stmt 1 view .LVU760
 3422              	.LBB3895:
 3423              	.LBB3896:
 3424              	.LBI3896:
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3425              		.loc 20 229 7 view .LVU761
 3426              	.LBB3897:
 3427              	.LBB3898:
 3428              	.LBI3898:
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 3429              		.loc 20 221 7 view .LVU762
 3430              	.LBB3899:
 3431              	.LBI3899:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 3432              		.loc 20 186 7 view .LVU763
 3433              	.LBB3900:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3434              		.loc 20 187 28 is_stmt 0 view .LVU764
 3435 017e 2498     		ldr	r0, [sp, #144]
 3436              	.LVL139:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3437              		.loc 20 187 28 view .LVU765
 3438              	.LBE3900:
 3439              	.LBE3899:
 3440              	.LBB3901:
 3441              	.LBI3901:
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3442              		.loc 20 200 7 is_stmt 1 view .LVU766
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3443              		.loc 20 200 7 is_stmt 0 view .LVU767
 3444              	.LBE3901:
 3445              	.LBE3898:
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 3446              		.loc 20 231 2 view .LVU768
 3447 0180 26AB     		add	r3, sp, #152
 3448 0182 9842     		cmp	r0, r3
 3449 0184 03D0     		beq	.L105
 3450              	.LVL140:
 3451              	.LBB3902:
 3452              	.LBI3902:
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 3453              		.loc 20 236 7 is_stmt 1 view .LVU769
 3454              	.LBB3903:
 3455              	.LBB3904:
 3456              	.LBI3904:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 245


 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 3457              		.loc 15 491 7 view .LVU770
 3458              	.LBB3905:
 3459              	.LBI3905:
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 3460              		.loc 16 120 7 view .LVU771
 3461              	.LBE3905:
 3462              	.LBE3904:
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3463              		.loc 20 237 34 is_stmt 0 view .LVU772
 3464 0186 2699     		ldr	r1, [sp, #152]
 3465              	.LBB3908:
 3466              	.LBB3907:
 3467              	.LBB3906:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 3468              		.loc 16 133 19 view .LVU773
 3469 0188 0131     		adds	r1, r1, #1
 3470              	.LVL141:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 3471              		.loc 16 133 19 view .LVU774
 3472 018a FFF7FEFF 		bl	_ZdlPvj
 3473              	.LVL142:
 3474              	.L105:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 3475              		.loc 16 133 19 view .LVU775
 3476              	.LBE3906:
 3477              	.LBE3907:
 3478              	.LBE3908:
 3479              	.LBE3903:
 3480              	.LBE3902:
 3481              	.LBE3897:
 3482              	.LBE3896:
 3483              	.LBB3909:
 3484              	.LBI3909:
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3485              		.loc 20 150 14 is_stmt 1 view .LVU776
 3486              	.LBB3910:
 3487              	.LBI3910:
 3488              		.loc 17 162 7 view .LVU777
 3489              	.LBB3911:
 3490              	.LBI3911:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3491              		.loc 16 89 7 view .LVU778
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3492              		.loc 16 89 7 is_stmt 0 view .LVU779
 3493              	.LBE3911:
 3494              	.LBE3910:
 3495              	.LBE3909:
 3496              	.LBE3895:
 3497              	.LBE3894:
 3498              	.LBB3912:
 3499              	.LBI3912:
 657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 3500              		.loc 20 657 7 is_stmt 1 view .LVU780
 3501              	.LBB3913:
 3502              	.LBI3913:
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 246


 3503              		.loc 20 229 7 view .LVU781
 3504              	.LBB3914:
 3505              	.LBB3915:
 3506              	.LBI3915:
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 3507              		.loc 20 221 7 view .LVU782
 3508              	.LBB3916:
 3509              	.LBI3916:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 3510              		.loc 20 186 7 view .LVU783
 3511              	.LBB3917:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3512              		.loc 20 187 28 is_stmt 0 view .LVU784
 3513 018e 1E98     		ldr	r0, [sp, #120]
 3514              	.LVL143:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3515              		.loc 20 187 28 view .LVU785
 3516              	.LBE3917:
 3517              	.LBE3916:
 3518              	.LBB3918:
 3519              	.LBI3918:
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3520              		.loc 20 200 7 is_stmt 1 view .LVU786
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3521              		.loc 20 200 7 is_stmt 0 view .LVU787
 3522              	.LBE3918:
 3523              	.LBE3915:
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 3524              		.loc 20 231 2 view .LVU788
 3525 0190 20AB     		add	r3, sp, #128
 3526 0192 9842     		cmp	r0, r3
 3527 0194 03D0     		beq	.L106
 3528              	.LVL144:
 3529              	.LBB3919:
 3530              	.LBI3919:
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 3531              		.loc 20 236 7 is_stmt 1 view .LVU789
 3532              	.LBB3920:
 3533              	.LBB3921:
 3534              	.LBI3921:
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 3535              		.loc 15 491 7 view .LVU790
 3536              	.LBB3922:
 3537              	.LBI3922:
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 3538              		.loc 16 120 7 view .LVU791
 3539              	.LBE3922:
 3540              	.LBE3921:
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3541              		.loc 20 237 34 is_stmt 0 view .LVU792
 3542 0196 2099     		ldr	r1, [sp, #128]
 3543              	.LBB3925:
 3544              	.LBB3924:
 3545              	.LBB3923:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 3546              		.loc 16 133 19 view .LVU793
 3547 0198 0131     		adds	r1, r1, #1
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 247


 3548              	.LVL145:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 3549              		.loc 16 133 19 view .LVU794
 3550 019a FFF7FEFF 		bl	_ZdlPvj
 3551              	.LVL146:
 3552              	.L106:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 3553              		.loc 16 133 19 view .LVU795
 3554              	.LBE3923:
 3555              	.LBE3924:
 3556              	.LBE3925:
 3557              	.LBE3920:
 3558              	.LBE3919:
 3559              	.LBE3914:
 3560              	.LBE3913:
 3561              	.LBB3926:
 3562              	.LBI3926:
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3563              		.loc 20 150 14 is_stmt 1 view .LVU796
 3564              	.LBB3927:
 3565              	.LBI3927:
 3566              		.loc 17 162 7 view .LVU797
 3567              	.LBB3928:
 3568              	.LBI3928:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3569              		.loc 16 89 7 view .LVU798
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3570              		.loc 16 89 7 is_stmt 0 view .LVU799
 3571              	.LBE3928:
 3572              	.LBE3927:
 3573              	.LBE3926:
 3574              	.LBE3912:
 3575              	.LBE3875:
 3576              	.LBE3874:
 3577              	.LBE3873:
 3578              	.LBE3932:
 3579              	.LBE3936:
 3580              	.LBB3937:
 3581              	.LBI3937:
  38:src/parameter_controller.h **** 	std::string label;
 3582              		.loc 19 38 8 is_stmt 1 view .LVU800
 3583              	.LBB3938:
 3584              	.LBB3939:
 3585              	.LBI3939:
 657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 3586              		.loc 20 657 7 view .LVU801
 3587              	.LBB3940:
 3588              	.LBB3941:
 3589              	.LBI3941:
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3590              		.loc 20 229 7 view .LVU802
 3591              	.LBB3942:
 3592              	.LBB3943:
 3593              	.LBI3943:
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 3594              		.loc 20 221 7 view .LVU803
 3595              	.LBB3944:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 248


 3596              	.LBI3944:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 3597              		.loc 20 186 7 view .LVU804
 3598              	.LBB3945:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3599              		.loc 20 187 28 is_stmt 0 view .LVU805
 3600 019e 1398     		ldr	r0, [sp, #76]
 3601              	.LVL147:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3602              		.loc 20 187 28 view .LVU806
 3603              	.LBE3945:
 3604              	.LBE3944:
 3605              	.LBB3946:
 3606              	.LBI3946:
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3607              		.loc 20 200 7 is_stmt 1 view .LVU807
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3608              		.loc 20 200 7 is_stmt 0 view .LVU808
 3609              	.LBE3946:
 3610              	.LBE3943:
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 3611              		.loc 20 231 2 view .LVU809
 3612 01a0 15AB     		add	r3, sp, #84
 3613 01a2 9842     		cmp	r0, r3
 3614 01a4 03D0     		beq	.L107
 3615              	.LVL148:
 3616              	.LBB3947:
 3617              	.LBI3947:
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 3618              		.loc 20 236 7 is_stmt 1 view .LVU810
 3619              	.LBB3948:
 3620              	.LBB3949:
 3621              	.LBI3949:
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 3622              		.loc 15 491 7 view .LVU811
 3623              	.LBB3950:
 3624              	.LBI3950:
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 3625              		.loc 16 120 7 view .LVU812
 3626              	.LBE3950:
 3627              	.LBE3949:
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3628              		.loc 20 237 34 is_stmt 0 view .LVU813
 3629 01a6 1599     		ldr	r1, [sp, #84]
 3630              	.LBB3953:
 3631              	.LBB3952:
 3632              	.LBB3951:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 3633              		.loc 16 133 19 view .LVU814
 3634 01a8 0131     		adds	r1, r1, #1
 3635              	.LVL149:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 3636              		.loc 16 133 19 view .LVU815
 3637 01aa FFF7FEFF 		bl	_ZdlPvj
 3638              	.LVL150:
 3639              	.L107:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 249


 3640              		.loc 16 133 19 view .LVU816
 3641              	.LBE3951:
 3642              	.LBE3952:
 3643              	.LBE3953:
 3644              	.LBE3948:
 3645              	.LBE3947:
 3646              	.LBE3942:
 3647              	.LBE3941:
 3648              	.LBB3954:
 3649              	.LBI3954:
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3650              		.loc 20 150 14 is_stmt 1 view .LVU817
 3651              	.LBB3955:
 3652              	.LBI3955:
 3653              		.loc 17 162 7 view .LVU818
 3654              	.LBB3956:
 3655              	.LBI3956:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3656              		.loc 16 89 7 view .LVU819
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3657              		.loc 16 89 7 is_stmt 0 view .LVU820
 3658              	.LBE3956:
 3659              	.LBE3955:
 3660              	.LBE3954:
 3661              	.LBE3940:
 3662              	.LBE3939:
 3663              	.LBB3957:
 3664              	.LBI3957:
 657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 3665              		.loc 20 657 7 is_stmt 1 view .LVU821
 3666              	.LBB3958:
 3667              	.LBB3959:
 3668              	.LBI3959:
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3669              		.loc 20 229 7 view .LVU822
 3670              	.LBB3960:
 3671              	.LBB3961:
 3672              	.LBI3961:
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 3673              		.loc 20 221 7 view .LVU823
 3674              	.LBB3962:
 3675              	.LBI3962:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 3676              		.loc 20 186 7 view .LVU824
 3677              	.LBB3963:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3678              		.loc 20 187 28 is_stmt 0 view .LVU825
 3679 01ae 0D98     		ldr	r0, [sp, #52]
 3680              	.LVL151:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3681              		.loc 20 187 28 view .LVU826
 3682              	.LBE3963:
 3683              	.LBE3962:
 3684              	.LBB3964:
 3685              	.LBI3964:
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3686              		.loc 20 200 7 is_stmt 1 view .LVU827
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 250


 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3687              		.loc 20 200 7 is_stmt 0 view .LVU828
 3688              	.LBE3964:
 3689              	.LBE3961:
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 3690              		.loc 20 231 2 view .LVU829
 3691 01b0 0FAB     		add	r3, sp, #60
 3692 01b2 9842     		cmp	r0, r3
 3693 01b4 03D0     		beq	.L108
 3694              	.LVL152:
 3695              	.LBB3965:
 3696              	.LBI3965:
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 3697              		.loc 20 236 7 is_stmt 1 view .LVU830
 3698              	.LBB3966:
 3699              	.LBB3967:
 3700              	.LBI3967:
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 3701              		.loc 15 491 7 view .LVU831
 3702              	.LBB3968:
 3703              	.LBI3968:
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 3704              		.loc 16 120 7 view .LVU832
 3705              	.LBE3968:
 3706              	.LBE3967:
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3707              		.loc 20 237 34 is_stmt 0 view .LVU833
 3708 01b6 0F99     		ldr	r1, [sp, #60]
 3709              	.LBB3971:
 3710              	.LBB3970:
 3711              	.LBB3969:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 3712              		.loc 16 133 19 view .LVU834
 3713 01b8 0131     		adds	r1, r1, #1
 3714              	.LVL153:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 3715              		.loc 16 133 19 view .LVU835
 3716 01ba FFF7FEFF 		bl	_ZdlPvj
 3717              	.LVL154:
 3718              	.L108:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 3719              		.loc 16 133 19 view .LVU836
 3720              	.LBE3969:
 3721              	.LBE3970:
 3722              	.LBE3971:
 3723              	.LBE3966:
 3724              	.LBE3965:
 3725              	.LBE3960:
 3726              	.LBE3959:
 3727              	.LBB3972:
 3728              	.LBI3972:
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3729              		.loc 20 150 14 is_stmt 1 view .LVU837
 3730              	.LBB3973:
 3731              	.LBI3973:
 3732              		.loc 17 162 7 view .LVU838
 3733              	.LBB3974:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 251


 3734              	.LBI3974:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3735              		.loc 16 89 7 view .LVU839
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3736              		.loc 16 89 7 is_stmt 0 view .LVU840
 3737              	.LBE3974:
 3738              	.LBE3973:
 3739              	.LBE3972:
 3740              	.LBE3958:
 3741              	.LBE3957:
 3742              	.LBB3975:
 3743              	.LBI3975:
 657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 3744              		.loc 20 657 7 is_stmt 1 view .LVU841
 3745              	.LBB3976:
 3746              	.LBI3976:
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3747              		.loc 20 229 7 view .LVU842
 3748              	.LBB3977:
 3749              	.LBB3978:
 3750              	.LBI3978:
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 3751              		.loc 20 221 7 view .LVU843
 3752              	.LBB3979:
 3753              	.LBI3979:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 3754              		.loc 20 186 7 view .LVU844
 3755              	.LBB3980:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3756              		.loc 20 187 28 is_stmt 0 view .LVU845
 3757 01be 0798     		ldr	r0, [sp, #28]
 3758              	.LVL155:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3759              		.loc 20 187 28 view .LVU846
 3760              	.LBE3980:
 3761              	.LBE3979:
 3762              	.LBB3981:
 3763              	.LBI3981:
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3764              		.loc 20 200 7 is_stmt 1 view .LVU847
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3765              		.loc 20 200 7 is_stmt 0 view .LVU848
 3766              	.LBE3981:
 3767              	.LBE3978:
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 3768              		.loc 20 231 2 view .LVU849
 3769 01c0 09AB     		add	r3, sp, #36
 3770 01c2 9842     		cmp	r0, r3
 3771 01c4 03D0     		beq	.L109
 3772              	.LVL156:
 3773              	.LBB3982:
 3774              	.LBI3982:
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 3775              		.loc 20 236 7 is_stmt 1 view .LVU850
 3776              	.LBB3983:
 3777              	.LBB3984:
 3778              	.LBI3984:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 252


 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 3779              		.loc 15 491 7 view .LVU851
 3780              	.LBB3985:
 3781              	.LBI3985:
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 3782              		.loc 16 120 7 view .LVU852
 3783              	.LBE3985:
 3784              	.LBE3984:
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3785              		.loc 20 237 34 is_stmt 0 view .LVU853
 3786 01c6 0999     		ldr	r1, [sp, #36]
 3787              	.LBB3988:
 3788              	.LBB3987:
 3789              	.LBB3986:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 3790              		.loc 16 133 19 view .LVU854
 3791 01c8 0131     		adds	r1, r1, #1
 3792              	.LVL157:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 3793              		.loc 16 133 19 view .LVU855
 3794 01ca FFF7FEFF 		bl	_ZdlPvj
 3795              	.LVL158:
 3796              	.L109:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 3797              		.loc 16 133 19 view .LVU856
 3798              	.LBE3986:
 3799              	.LBE3987:
 3800              	.LBE3988:
 3801              	.LBE3983:
 3802              	.LBE3982:
 3803              	.LBE3977:
 3804              	.LBE3976:
 3805              	.LBB3989:
 3806              	.LBI3989:
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3807              		.loc 20 150 14 is_stmt 1 view .LVU857
 3808              	.LBB3990:
 3809              	.LBI3990:
 3810              		.loc 17 162 7 view .LVU858
 3811              	.LBB3991:
 3812              	.LBI3991:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3813              		.loc 16 89 7 view .LVU859
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3814              		.loc 16 89 7 is_stmt 0 view .LVU860
 3815              	.LBE3991:
 3816              	.LBE3990:
 3817              	.LBE3989:
 3818              	.LBE3975:
 3819              	.LBE3938:
 3820              	.LBE3937:
 110:src/parameter_controller.h ****                 params[i].label = pconf[i].label;
 3821              		.loc 19 110 13 is_stmt 1 view .LVU861
 110:src/parameter_controller.h ****                 params[i].label = pconf[i].label;
 3822              		.loc 19 110 31 view .LVU862
 3823 01ce 029B     		ldr	r3, [sp, #8]
 3824 01d0 5835     		adds	r5, r5, #88
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 253


 3825 01d2 5036     		adds	r6, r6, #80
 3826 01d4 13B1     		cbz	r3, .L113
 3827              	.LBE3997:
 119:src/parameter_controller.h ****             }
 120:src/parameter_controller.h **** 
 121:src/parameter_controller.h ****         }
 3828              		.loc 19 121 9 is_stmt 0 view .LVU863
 3829 01d6 35B0     		add	sp, sp, #212
 3830              		.cfi_remember_state
 3831              		.cfi_def_cfa_offset 36
 3832              		@ sp needed
 3833 01d8 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3834              	.LVL159:
 3835              	.L113:
 3836              		.cfi_restore_state
 3837              	.LBB3998:
 3838              		.loc 19 121 9 view .LVU864
 3839 01dc 0123     		movs	r3, #1
 3840              	.LVL160:
 3841              		.loc 19 121 9 view .LVU865
 3842 01de 0293     		str	r3, [sp, #8]
 3843              	.LVL161:
 3844              		.loc 19 121 9 view .LVU866
 3845 01e0 16E7     		b	.L110
 3846              	.LVL162:
 3847              	.L83:
 3848              	.LBB3992:
 3849              	.LBB3933:
 3850              	.LBB3929:
 3851              	.LBB3869:
 3852              	.LBB3865:
 3853              	.LBB3861:
 3854              	.LBB3769:
 3855              	.LBI3769:
1714:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 3856              		.loc 12 1714 5 is_stmt 1 view .LVU867
1714:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 3857              		.loc 12 1714 5 is_stmt 0 view .LVU868
 3858              	.LBE3769:
 3859              	.LBE3861:
 3860              	.LBE3865:
 3861              	.LBE3869:
 3862              	.LBE3929:
 3863              	.LBE3933:
 3864              	.LBE3992:
 3865              	.LBE3998:
 477:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 3866              		.loc 14 477 7 is_stmt 1 view .LVU869
 3867              	.LBB3999:
 3868              	.LBB3993:
 3869              	.LBB3934:
 3870              	.LBB3930:
 3871              	.LBB3870:
 3872              	.LBB3866:
 3873              	.LBB3862:
 3874              	.LBB3852:
 3875              	.LBB3770:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 254


1723:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 					  __n_elt);
 3876              		.loc 12 1723 35 is_stmt 0 view .LVU870
 3877 01e2 0123     		movs	r3, #1
 3878 01e4 0AF56171 		add	r1, r10, #900
 3879 01e8 05A8     		add	r0, sp, #20
 3880 01ea 0093     		str	r3, [sp]
 3881 01ec DAF88033 		ldr	r3, [r10, #896]
 3882 01f0 FFF7FEFF 		bl	_ZNKSt8__detail20_Prime_rehash_policy14_M_need_rehashEjjj
 3883              	.LVL163:
1726:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
 3884              		.loc 12 1726 7 view .LVU871
 3885 01f4 9DF81430 		ldrb	r3, [sp, #20]	@ zero_extendqisi2
 3886 01f8 83BB     		cbnz	r3, .L88
 3887              	.LVL164:
 3888              	.LBB3771:
 3889              	.LBI3771:
1595:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 3890              		.loc 12 1595 5 is_stmt 1 view .LVU872
 3891              	.LBB3772:
1599:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
 3892              		.loc 12 1599 11 is_stmt 0 view .LVU873
 3893 01fa DAF87493 		ldr	r9, [r10, #884]
1599:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
 3894              		.loc 12 1599 21 view .LVU874
 3895 01fe 59F80830 		ldr	r3, [r9, r8]
 3896 0202 09EB0802 		add	r2, r9, r8
1599:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
 3897              		.loc 12 1599 7 view .LVU875
 3898 0206 002B     		cmp	r3, #0
 3899 0208 6AD0     		beq	.L98
 3900              	.L141:
1603:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_buckets[__bkt]->_M_nxt = __node;
 3901              		.loc 12 1603 40 view .LVU876
 3902 020a 1B68     		ldr	r3, [r3]
1603:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_buckets[__bkt]->_M_nxt = __node;
 3903              		.loc 12 1603 19 view .LVU877
 3904 020c 2360     		str	r3, [r4]
1604:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
 3905              		.loc 12 1604 14 view .LVU878
 3906 020e 59F80830 		ldr	r3, [r9, r8]
1604:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
 3907              		.loc 12 1604 30 view .LVU879
 3908 0212 1C60     		str	r4, [r3]
 3909              	.L99:
1604:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
 3910              		.loc 12 1604 30 view .LVU880
 3911              	.LBE3772:
 3912              	.LBE3771:
1736:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return iterator(__node);
 3913              		.loc 12 1736 7 view .LVU881
 3914 0214 DAF88033 		ldr	r3, [r10, #896]
 3915 0218 0133     		adds	r3, r3, #1
 3916 021a CAF88033 		str	r3, [r10, #896]
 3917              	.LVL165:
 3918              	.LBB3783:
 3919              	.LBI3783:
 340:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : __base_type(__p) { }
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 255


 3920              		.loc 14 340 7 is_stmt 1 view .LVU882
 3921              	.LBB3784:
 3922              	.LBI3784:
 294:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : _M_cur(__p) { }
 3923              		.loc 14 294 7 view .LVU883
 294:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : _M_cur(__p) { }
 3924              		.loc 14 294 7 is_stmt 0 view .LVU884
 3925              	.LBE3784:
 3926              	.LBE3783:
 3927              	.LBE3770:
 3928              	.LBE3852:
 3929              	.LBB3853:
 3930              	.LBI3853:
 352:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 3931              		.loc 25 352 12 is_stmt 1 view .LVU885
 3932              	.LBB3854:
 3933              	.LBI3854:
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 3934              		.loc 22 76 5 view .LVU886
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 3935              		.loc 22 76 5 is_stmt 0 view .LVU887
 3936              	.LBE3854:
 3937              	.LBB3855:
 3938              	.LBI3855:
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 3939              		.loc 22 76 5 is_stmt 1 view .LVU888
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 3940              		.loc 22 76 5 is_stmt 0 view .LVU889
 3941              	.LBE3855:
 3942              	.LBE3853:
 3943              	.LBB3856:
 276:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 3944              		.loc 12 276 2 is_stmt 1 view .LVU890
 3945 021e A6E7     		b	.L101
 3946              	.LVL166:
 3947              	.L134:
 276:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 3948              		.loc 12 276 2 is_stmt 0 view .LVU891
 3949              	.LBE3856:
 3950              	.LBB3857:
 3951              	.LBB3646:
 3952              	.LBB3640:
 3953              	.LBB3634:
 3954              	.LBB3624:
 3955              	.LBB3617:
 3956              	.LBB3611:
 3957              	.LBB3605:
 3958              	.LBB3597:
 3959              	.LBB3589:
 3960              	.LBB3472:
 3961              	.LBB3466:
 3962              	.LBI3466:
 387:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 3963              		.loc 24 387 7 is_stmt 1 view .LVU892
 3964              	.LBB3467:
 389:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 3965              		.loc 24 389 2 view .LVU893
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 256


 3966              		.loc 24 395 2 view .LVU894
 3967              		.loc 24 395 49 is_stmt 0 view .LVU895
 3968 0220 9446     		mov	ip, r2
 3969 0222 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 3970              	.LVL167:
 3971              		.loc 24 395 49 view .LVU896
 3972 0226 2061     		str	r0, [r4, #16]	@ unaligned
 3973 0228 6161     		str	r1, [r4, #20]	@ unaligned
 3974 022a A261     		str	r2, [r4, #24]	@ unaligned
 3975 022c E361     		str	r3, [r4, #28]	@ unaligned
 3976 022e 25E7     		b	.L78
 3977              	.LVL168:
 3978              	.L136:
 3979              		.loc 24 395 49 view .LVU897
 3980              	.LBE3467:
 3981              	.LBE3466:
 3982              	.LBE3472:
 3983              	.LBE3589:
 3984              	.LBB3590:
 3985              	.LBB3581:
 3986              	.LBB3574:
 3987              	.LBI3574:
 387:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 3988              		.loc 24 387 7 is_stmt 1 view .LVU898
 3989              	.LBB3575:
 389:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 3990              		.loc 24 389 2 view .LVU899
 3991              		.loc 24 395 2 view .LVU900
 3992              		.loc 24 395 49 is_stmt 0 view .LVU901
 3993 0230 9646     		mov	lr, r2
 3994 0232 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 3995              	.LVL169:
 3996              		.loc 24 395 49 view .LVU902
 3997 0236 2064     		str	r0, [r4, #64]	@ unaligned
 3998 0238 CCF80410 		str	r1, [ip, #4]	@ unaligned
 3999 023c CCF80820 		str	r2, [ip, #8]	@ unaligned
 4000 0240 CCF80C30 		str	r3, [ip, #12]	@ unaligned
 4001 0244 42E7     		b	.L82
 4002              	.LVL170:
 4003              	.L135:
 4004              		.loc 24 395 49 view .LVU903
 4005              	.LBE3575:
 4006              	.LBE3574:
 4007              	.LBE3581:
 4008              	.LBE3590:
 4009              	.LBB3591:
 4010              	.LBB3521:
 4011              	.LBB3515:
 4012              	.LBI3515:
 387:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 4013              		.loc 24 387 7 is_stmt 1 view .LVU904
 4014              	.LBB3516:
 389:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 4015              		.loc 24 389 2 view .LVU905
 4016              		.loc 24 395 2 view .LVU906
 4017              		.loc 24 395 49 is_stmt 0 view .LVU907
 4018 0246 9446     		mov	ip, r2
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 257


 4019 0248 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 4020              	.LVL171:
 4021              		.loc 24 395 49 view .LVU908
 4022 024c A062     		str	r0, [r4, #40]	@ unaligned
 4023 024e C9F80410 		str	r1, [r9, #4]	@ unaligned
 4024 0252 C9F80820 		str	r2, [r9, #8]	@ unaligned
 4025 0256 C9F80C30 		str	r3, [r9, #12]	@ unaligned
 4026 025a 23E7     		b	.L80
 4027              	.LVL172:
 4028              	.L88:
 4029              		.loc 24 395 49 view .LVU909
 4030              	.LBE3516:
 4031              	.LBE3515:
 4032              	.LBE3521:
 4033              	.LBE3591:
 4034              	.LBE3597:
 4035              	.LBE3605:
 4036              	.LBE3611:
 4037              	.LBE3617:
 4038              	.LBE3624:
 4039              	.LBE3634:
 4040              	.LBE3640:
 4041              	.LBE3646:
 4042              	.LBE3857:
 4043              	.LBB3858:
 4044              	.LBB3851:
1728:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __bkt = _M_bucket_index(__k, __code);
 4045              		.loc 12 1728 13 view .LVU910
 4046 025c DDF81880 		ldr	r8, [sp, #24]
 4047              	.LVL173:
 4048              	.LBB3785:
 4049              	.LBI3785:
2034:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
2035:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
2036:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
2037:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
2038:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
2039:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
2040:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     void
2041:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
2042:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
2043:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     rehash(size_type __bkt_count)
2044:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
2045:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       const __rehash_state& __saved_state = _M_rehash_policy._M_state();
2046:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __bkt_count
2047:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	= std::max(_M_rehash_policy._M_bkt_for_elements(_M_element_count + 1),
2048:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		   __bkt_count);
2049:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __bkt_count = _M_rehash_policy._M_next_bkt(__bkt_count);
2050:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
2051:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (__bkt_count != _M_bucket_count)
2052:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_rehash(__bkt_count, __saved_state);
2053:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       else
2054:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	// No rehash, restore previous state to keep it consistent with
2055:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	// container state.
2056:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_rehash_policy._M_reset(__saved_state);
2057:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
2058:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 258


2059:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
2060:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
2061:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
2062:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
2063:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     void
2064:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
 4050              		.loc 12 2064 5 is_stmt 1 view .LVU911
 4051              	.LBB3786:
 4052              	.LBI3786:
2065:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
2066:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _M_rehash(size_type __bkt_count, const __rehash_state& __state)
2067:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
2068:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __try
2069:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
2070:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_rehash_aux(__bkt_count, __unique_keys());
2071:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
2072:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __catch(...)
2073:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
2074:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  // A failure here means that buckets allocation failed.  We only
2075:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  // have to restore hash policy previous state.
2076:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_rehash_policy._M_reset(__state);
2077:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __throw_exception_again;
2078:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
2079:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
2080:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
2081:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   // Rehash when there is no equivalent elements.
2082:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
2083:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
2084:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
2085:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
2086:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     void
2087:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
 4053              		.loc 12 2087 5 view .LVU912
 4054              	.LBB3787:
 4055              	.LBB3788:
 4056              	.LBI3788:
 390:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 4057              		.loc 12 390 7 view .LVU913
 4058              	.LBB3789:
 392:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  {
 4059              		.loc 12 392 2 is_stmt 0 view .LVU914
 4060 0260 B8F1010F 		cmp	r8, #1
 4061 0264 64D0     		beq	.L138
 4062              	.LVL174:
 4063              	.LBB3790:
 4064              	.LBI3790:
2081:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 4065              		.loc 14 2081 5 is_stmt 1 view .LVU915
 4066              	.LBB3791:
 4067              	.LBB3792:
 4068              	.LBI3792:
 157:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 4069              		.loc 17 157 2 view .LVU916
 4070              	.LBB3793:
 4071              	.LBI3793:
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4072              		.loc 16 79 7 view .LVU917
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 259


  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4073              		.loc 16 79 7 is_stmt 0 view .LVU918
 4074              	.LBE3793:
 4075              	.LBE3792:
 4076              	.LBB3794:
 4077              	.LBI3794:
 459:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 4078              		.loc 15 459 7 is_stmt 1 view .LVU919
 4079              	.LBB3795:
 4080              	.LBI3795:
 103:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 4081              		.loc 16 103 7 view .LVU920
 4082              	.LBB3796:
 105:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  std::__throw_bad_alloc();
 4083              		.loc 16 105 2 is_stmt 0 view .LVU921
 4084 0266 B8F1005F 		cmp	r8, #536870912
 4085 026a 68D2     		bcs	.L139
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 4086              		.loc 16 115 41 view .LVU922
 4087 026c 4FEA8802 		lsl	r2, r8, #2
 4088 0270 1046     		mov	r0, r2
 4089 0272 0392     		str	r2, [sp, #12]
 4090 0274 FFF7FEFF 		bl	_Znwj
 4091              	.LVL175:
 4092              	.LBE3796:
 4093              	.LBE3795:
 4094              	.LBE3794:
2087:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       return __p;
 4095              		.loc 14 2087 23 view .LVU923
 4096 0278 039A     		ldr	r2, [sp, #12]
 4097 027a 0021     		movs	r1, #0
 4098              	.LBB3801:
 4099              	.LBB3799:
 4100              	.LBB3797:
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 4101              		.loc 16 115 41 view .LVU924
 4102 027c 8146     		mov	r9, r0
 4103              	.LVL176:
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 4104              		.loc 16 115 41 view .LVU925
 4105              	.LBE3797:
 4106              	.LBE3799:
 4107              	.LBE3801:
2087:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       return __p;
 4108              		.loc 14 2087 23 view .LVU926
 4109 027e FFF7FEFF 		bl	memset
 4110              	.LVL177:
 4111              	.LBB3802:
 4112              	.LBI3802:
 4113              		.loc 17 162 7 is_stmt 1 view .LVU927
 4114              	.LBB3803:
 4115              	.LBI3803:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4116              		.loc 16 89 7 view .LVU928
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4117              		.loc 16 89 7 is_stmt 0 view .LVU929
 4118              	.LBE3803:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 260


 4119              	.LBE3802:
 4120              	.LBE3791:
 4121              	.LBE3790:
 395:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  }
 4122              		.loc 12 395 14 view .LVU930
 4123 0282 0AF5637E 		add	lr, r10, #908
 4124              	.LVL178:
 4125              	.L91:
 395:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  }
 4126              		.loc 12 395 14 view .LVU931
 4127              	.LBE3789:
 4128              	.LBE3788:
 4129              	.LBB3808:
 4130              	.LBI3808:
 420:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return static_cast<__node_type*>(_M_before_begin._M_nxt); }
 4131              		.loc 12 420 7 is_stmt 1 view .LVU932
 4132              	.LBB3809:
 421:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 4133              		.loc 12 421 64 is_stmt 0 view .LVU933
 4134 0286 DAF87C03 		ldr	r0, [r10, #892]
 4135              	.LVL179:
 421:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 4136              		.loc 12 421 64 view .LVU934
 4137              	.LBE3809:
 4138              	.LBE3808:
2088:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
2089:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _M_rehash_aux(size_type __bkt_count, true_type)
2090:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
2091:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __bucket_type* __new_buckets = _M_allocate_buckets(__bkt_count);
2092:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_type* __p = _M_begin();
2093:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_before_begin._M_nxt = nullptr;
 4139              		.loc 12 2093 30 view .LVU935
 4140 028a 0023     		movs	r3, #0
 4141 028c CAF87C33 		str	r3, [r10, #892]
 4142              	.LVL180:
2094:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::size_t __bbegin_bkt = 0;
2095:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       while (__p)
 4143              		.loc 12 2095 14 is_stmt 1 view .LVU936
 4144 0290 88B1     		cbz	r0, .L93
2094:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::size_t __bbegin_bkt = 0;
 4145              		.loc 12 2094 19 is_stmt 0 view .LVU937
 4146 0292 9C46     		mov	ip, r3
 4147              	.LVL181:
 4148              	.L94:
 4149              	.LBB3810:
 4150              	.LBB3811:
 4151              	.LBI3811:
 282:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return static_cast<_Hash_node*>(this->_M_nxt); }
 4152              		.loc 14 282 7 is_stmt 1 view .LVU938
 4153 0294 0246     		mov	r2, r0
 4154              	.LBB3812:
 283:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 4155              		.loc 14 283 53 is_stmt 0 view .LVU939
 4156 0296 0068     		ldr	r0, [r0]
 4157              	.LVL182:
 283:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 4158              		.loc 14 283 53 view .LVU940
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 261


 4159              	.LBE3812:
 4160              	.LBE3811:
 4161              	.LBB3813:
 4162              	.LBI3813:
1303:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	noexcept( noexcept(declval<const _H1&>()(declval<const _Key&>()))
 4163              		.loc 14 1303 7 is_stmt 1 view .LVU941
 4164              	.LBB3814:
 4165              	.LBB3815:
 4166              	.LBI3815:
 4167              		.loc 27 153 3 view .LVU942
 4168              	.LBB3816:
 4169              		.loc 27 153 3 view .LVU943
 4170              		.loc 27 153 3 is_stmt 0 view .LVU944
 4171              	.LBE3816:
 4172              	.LBE3815:
 4173              	.LBB3817:
 4174              	.LBI3817:
 431:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	       second_argument_type __den) const noexcept
 4175              		.loc 14 431 5 is_stmt 1 view .LVU945
 4176              	.LBB3818:
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 4177              		.loc 14 433 7 view .LVU946
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 4178              		.loc 14 433 22 is_stmt 0 view .LVU947
 4179 0298 5368     		ldr	r3, [r2, #4]
 4180 029a B3FBF8F1 		udiv	r1, r3, r8
 4181 029e 08FB1133 		mls	r3, r8, r1, r3
 4182              	.LVL183:
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 4183              		.loc 14 433 22 view .LVU948
 4184              	.LBE3818:
 4185              	.LBE3817:
 4186              	.LBE3814:
 4187              	.LBE3813:
2096:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
2097:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __node_type* __next = __p->_M_next();
2098:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  std::size_t __bkt
2099:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    = __hash_code_base::_M_bucket_index(__p, __bkt_count);
2100:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (!__new_buckets[__bkt])
 4188              		.loc 12 2100 22 view .LVU949
 4189 02a2 59F82310 		ldr	r1, [r9, r3, lsl #2]
 4190              		.loc 12 2100 4 view .LVU950
 4191 02a6 71B3     		cbz	r1, .L140
 4192              	.LVL184:
 4193              		.loc 12 2100 4 view .LVU951
 4194              	.LBE3810:
2095:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
 4195              		.loc 12 2095 14 is_stmt 1 view .LVU952
 4196              	.LBB3819:
2101:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    {
2102:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      __p->_M_nxt = _M_before_begin._M_nxt;
2103:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      _M_before_begin._M_nxt = __p;
2104:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      __new_buckets[__bkt] = &_M_before_begin;
2105:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      if (__p->_M_nxt)
2106:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		__new_buckets[__bbegin_bkt] = __p;
2107:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      __bbegin_bkt = __bkt;
2108:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    }
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 262


2109:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  else
2110:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    {
2111:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      __p->_M_nxt = __new_buckets[__bkt]->_M_nxt;
 4197              		.loc 12 2111 44 is_stmt 0 view .LVU953
 4198 02a8 0968     		ldr	r1, [r1]
 4199              		.loc 12 2111 20 view .LVU954
 4200 02aa 1160     		str	r1, [r2]
2112:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      __new_buckets[__bkt]->_M_nxt = __p;
 4201              		.loc 12 2112 21 view .LVU955
 4202 02ac 59F82330 		ldr	r3, [r9, r3, lsl #2]
 4203              	.LVL185:
 4204              		.loc 12 2112 37 view .LVU956
 4205 02b0 1A60     		str	r2, [r3]
 4206              	.LBE3819:
2095:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
 4207              		.loc 12 2095 14 view .LVU957
 4208 02b2 0028     		cmp	r0, #0
 4209 02b4 EED1     		bne	.L94
 4210              	.LVL186:
 4211              	.L93:
 4212              	.LBB3820:
 4213              	.LBI3820:
 411:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { _M_deallocate_buckets(_M_buckets, _M_bucket_count); }
 4214              		.loc 12 411 7 is_stmt 1 view .LVU958
 4215              	.LBB3821:
 412:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 4216              		.loc 12 412 30 is_stmt 0 view .LVU959
 4217 02b6 DAE9DD01 		ldrd	r0, r1, [r10, #884]
 4218              	.LVL187:
 4219              	.LBB3822:
 4220              	.LBI3822:
 402:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 4221              		.loc 12 402 7 is_stmt 1 view .LVU960
 4222              	.LBB3823:
 404:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return;
 4223              		.loc 12 404 2 is_stmt 0 view .LVU961
 4224 02ba 7045     		cmp	r0, lr
 4225 02bc 02D0     		beq	.L97
 4226              	.LVL188:
 4227              	.LBB3824:
 4228              	.LBI3824:
 4229              		.loc 14 2093 5 is_stmt 1 view .LVU962
 4230              	.LBB3825:
 4231              	.LBB3826:
 4232              	.LBI3826:
 157:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 4233              		.loc 17 157 2 view .LVU963
 4234              	.LBB3827:
 4235              	.LBI3827:
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4236              		.loc 16 79 7 view .LVU964
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4237              		.loc 16 79 7 is_stmt 0 view .LVU965
 4238              	.LBE3827:
 4239              	.LBE3826:
 4240              	.LBB3828:
 4241              	.LBI3828:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 263


 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 4242              		.loc 15 491 7 is_stmt 1 view .LVU966
 4243              	.LBB3829:
 4244              	.LBI3829:
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 4245              		.loc 16 120 7 view .LVU967
 4246              	.LBB3830:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 4247              		.loc 16 133 19 is_stmt 0 view .LVU968
 4248 02be 8900     		lsls	r1, r1, #2
 4249              	.LVL189:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 4250              		.loc 16 133 19 view .LVU969
 4251 02c0 FFF7FEFF 		bl	_ZdlPvj
 4252              	.LVL190:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 4253              		.loc 16 133 19 view .LVU970
 4254              	.LBE3830:
 4255              	.LBE3829:
 4256              	.LBE3828:
 4257              	.LBB3831:
 4258              	.LBI3831:
 4259              		.loc 17 162 7 is_stmt 1 view .LVU971
 4260              	.LBB3832:
 4261              	.LBI3832:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4262              		.loc 16 89 7 view .LVU972
 4263              	.L97:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4264              		.loc 16 89 7 is_stmt 0 view .LVU973
 4265              	.LBE3832:
 4266              	.LBE3831:
 4267              	.LBE3825:
 4268              	.LBE3824:
 4269              	.LBE3823:
 4270              	.LBE3822:
 4271              	.LBE3821:
 4272              	.LBE3820:
 4273              	.LBE3787:
 4274              	.LBE3786:
 4275              	.LBE3785:
 4276              	.LBB3840:
 4277              	.LBB3841:
 4278              	.LBB3842:
 4279              	.LBB3843:
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 4280              		.loc 14 433 22 view .LVU974
 4281 02c4 B7FBF8F3 		udiv	r3, r7, r8
 4282              	.LBE3843:
 4283              	.LBE3842:
 4284              	.LBE3841:
 4285              	.LBE3840:
 4286              	.LBB3847:
 4287              	.LBB3838:
 4288              	.LBB3836:
2113:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    }
2114:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __p = __next;
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 264


2115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
2116:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
2117:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_deallocate_buckets();
2118:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_bucket_count = __bkt_count;
2119:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_buckets = __new_buckets;
 4289              		.loc 12 2119 18 view .LVU975
 4290 02c8 CAE9DD98 		strd	r9, r8, [r10, #884]
 4291              	.LVL191:
 4292              		.loc 12 2119 18 view .LVU976
 4293              	.LBE3836:
 4294              	.LBE3838:
 4295              	.LBE3847:
 4296              	.LBB3848:
 4297              	.LBI3840:
 681:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __hash_code_base::_M_bucket_index(__k, __c, _M_bucket_count); }
 4298              		.loc 12 681 7 is_stmt 1 view .LVU977
 4299              	.LBB3846:
 4300              	.LBI3841:
1298:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		      std::size_t __bkt_count) const
 4301              		.loc 14 1298 7 view .LVU978
 4302              	.LBB3845:
 4303              	.LBI3842:
 431:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	       second_argument_type __den) const noexcept
 4304              		.loc 14 431 5 view .LVU979
 4305              	.LBB3844:
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 4306              		.loc 14 433 7 view .LVU980
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 4307              		.loc 14 433 22 is_stmt 0 view .LVU981
 4308 02cc 08FB1378 		mls	r8, r8, r3, r7
 4309              	.LBE3844:
 4310              	.LBE3845:
 4311              	.LBE3846:
 4312              	.LBE3848:
 4313              	.LBB3849:
 4314              	.LBB3781:
1599:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
 4315              		.loc 12 1599 21 view .LVU982
 4316 02d0 4FEA8808 		lsl	r8, r8, #2
 4317              	.LVL192:
1599:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
 4318              		.loc 12 1599 21 view .LVU983
 4319              	.LBE3781:
1595:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 4320              		.loc 12 1595 5 is_stmt 1 view .LVU984
 4321              	.LBB3782:
1599:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
 4322              		.loc 12 1599 21 is_stmt 0 view .LVU985
 4323 02d4 59F80830 		ldr	r3, [r9, r8]
 4324 02d8 09EB0802 		add	r2, r9, r8
1599:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
 4325              		.loc 12 1599 7 view .LVU986
 4326 02dc 002B     		cmp	r3, #0
 4327 02de 94D1     		bne	.L141
 4328              	.LVL193:
 4329              	.L98:
1611:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_before_begin._M_nxt = __node;
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 265


 4330              		.loc 12 1611 37 view .LVU987
 4331 02e0 DAF87C33 		ldr	r3, [r10, #892]
1612:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (__node->_M_nxt)
 4332              		.loc 12 1612 27 view .LVU988
 4333 02e4 CAF87C43 		str	r4, [r10, #892]
1611:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_before_begin._M_nxt = __node;
 4334              		.loc 12 1611 19 view .LVU989
 4335 02e8 2360     		str	r3, [r4]
1613:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    // We must update former begin bucket that is pointing to
 4336              		.loc 12 1613 4 view .LVU990
 4337 02ea 43B1     		cbz	r3, .L100
 4338              	.LVL194:
 4339              	.LBB3773:
 4340              	.LBI3773:
 677:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __hash_code_base::_M_bucket_index(__n, _M_bucket_count); }
 4341              		.loc 12 677 7 is_stmt 1 view .LVU991
 4342              	.LBB3774:
 4343              	.LBB3775:
 4344              	.LBI3775:
1303:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	noexcept( noexcept(declval<const _H1&>()(declval<const _Key&>()))
 4345              		.loc 14 1303 7 view .LVU992
 4346              	.LBB3776:
 4347              	.LBB3777:
 4348              	.LBI3777:
 4349              		.loc 27 153 3 view .LVU993
 4350              	.LBB3778:
 4351              		.loc 27 153 3 view .LVU994
 4352              		.loc 27 153 3 is_stmt 0 view .LVU995
 4353              	.LBE3778:
 4354              	.LBE3777:
 4355              	.LBB3779:
 4356              	.LBI3779:
 431:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	       second_argument_type __den) const noexcept
 4357              		.loc 14 431 5 is_stmt 1 view .LVU996
 4358              	.LBB3780:
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 4359              		.loc 14 433 7 view .LVU997
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 4360              		.loc 14 433 22 is_stmt 0 view .LVU998
 4361 02ec 5B68     		ldr	r3, [r3, #4]
 4362 02ee DAF87813 		ldr	r1, [r10, #888]
 4363 02f2 B3FBF1F0 		udiv	r0, r3, r1
 4364 02f6 01FB1033 		mls	r3, r1, r0, r3
 4365              	.LBE3780:
 4366              	.LBE3779:
 4367              	.LBE3776:
 4368              	.LBE3775:
 4369              	.LBE3774:
 4370              	.LBE3773:
1616:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_buckets[__bkt] = &_M_before_begin;
 4371              		.loc 12 1616 53 view .LVU999
 4372 02fa 49F82340 		str	r4, [r9, r3, lsl #2]
 4373              	.L100:
1617:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
 4374              		.loc 12 1617 25 view .LVU1000
 4375 02fe 0AF55F73 		add	r3, r10, #892
1617:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 266


 4376              		.loc 12 1617 22 view .LVU1001
 4377 0302 1360     		str	r3, [r2]
 4378 0304 86E7     		b	.L99
 4379              	.LVL195:
 4380              	.L140:
1617:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
 4381              		.loc 12 1617 22 view .LVU1002
 4382              	.LBE3782:
 4383              	.LBE3849:
 4384              	.LBB3850:
 4385              	.LBB3839:
 4386              	.LBB3837:
 4387              	.LBB3833:
2102:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      _M_before_begin._M_nxt = __p;
 4388              		.loc 12 2102 38 view .LVU1003
 4389 0306 DAF87C13 		ldr	r1, [r10, #892]
2102:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      _M_before_begin._M_nxt = __p;
 4390              		.loc 12 2102 20 view .LVU1004
 4391 030a 1160     		str	r1, [r2]
2104:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      if (__p->_M_nxt)
 4392              		.loc 12 2104 32 view .LVU1005
 4393 030c 0AF55F71 		add	r1, r10, #892
2103:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      __new_buckets[__bkt] = &_M_before_begin;
 4394              		.loc 12 2103 31 view .LVU1006
 4395 0310 CAF87C23 		str	r2, [r10, #892]
2104:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      if (__p->_M_nxt)
 4396              		.loc 12 2104 29 view .LVU1007
 4397 0314 49F82310 		str	r1, [r9, r3, lsl #2]
2105:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		__new_buckets[__bbegin_bkt] = __p;
 4398              		.loc 12 2105 8 view .LVU1008
 4399 0318 1168     		ldr	r1, [r2]
 4400 031a 29B1     		cbz	r1, .L112
2106:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      __bbegin_bkt = __bkt;
 4401              		.loc 12 2106 31 view .LVU1009
 4402 031c 49F82C20 		str	r2, [r9, ip, lsl #2]
2107:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    }
 4403              		.loc 12 2107 21 view .LVU1010
 4404 0320 9C46     		mov	ip, r3
 4405              	.LVL196:
2107:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    }
 4406              		.loc 12 2107 21 view .LVU1011
 4407              	.LBE3833:
2095:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
 4408              		.loc 12 2095 14 is_stmt 1 view .LVU1012
 4409 0322 0028     		cmp	r0, #0
 4410 0324 B6D1     		bne	.L94
 4411              	.LVL197:
2095:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
 4412              		.loc 12 2095 14 is_stmt 0 view .LVU1013
 4413 0326 C6E7     		b	.L93
 4414              	.LVL198:
 4415              	.L112:
 4416              	.LBB3834:
2107:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    }
 4417              		.loc 12 2107 21 view .LVU1014
 4418 0328 9C46     		mov	ip, r3
 4419              	.LVL199:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 267


2107:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    }
 4420              		.loc 12 2107 21 view .LVU1015
 4421              	.LBE3834:
2095:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
 4422              		.loc 12 2095 14 is_stmt 1 view .LVU1016
 4423 032a 0028     		cmp	r0, #0
 4424 032c B2D1     		bne	.L94
 4425              	.LVL200:
2095:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
 4426              		.loc 12 2095 14 is_stmt 0 view .LVU1017
 4427 032e C2E7     		b	.L93
 4428              	.LVL201:
 4429              	.L138:
 4430              	.LBB3835:
 4431              	.LBB3807:
 394:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    return &_M_single_bucket;
 4432              		.loc 12 394 23 view .LVU1018
 4433 0330 0023     		movs	r3, #0
 395:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  }
 4434              		.loc 12 395 14 view .LVU1019
 4435 0332 0AF56379 		add	r9, r10, #908
 394:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    return &_M_single_bucket;
 4436              		.loc 12 394 23 view .LVU1020
 4437 0336 CAF88C33 		str	r3, [r10, #908]
 395:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  }
 4438              		.loc 12 395 14 view .LVU1021
 4439 033a CE46     		mov	lr, r9
 4440 033c A3E7     		b	.L91
 4441              	.LVL202:
 4442              	.L139:
 4443              	.LBB3806:
 4444              	.LBB3805:
 4445              	.LBB3804:
 4446              	.LBB3800:
 4447              	.LBB3798:
 106:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4448              		.loc 16 106 26 view .LVU1022
 4449 033e FFF7FEFF 		bl	_ZSt17__throw_bad_allocv
 4450              	.LVL203:
 4451              	.LBE3798:
 4452              	.LBE3800:
 4453              	.LBE3804:
 4454              	.LBE3805:
 4455              	.LBE3806:
 4456              	.LBE3807:
 4457              	.LBE3835:
 4458              	.LBE3837:
 4459              	.LBE3839:
 4460              	.LBE3850:
 4461              	.LBE3851:
 4462              	.LBE3858:
 4463              	.LBE3862:
 4464              	.LBE3866:
 4465              	.LBE3870:
 4466              	.LBE3930:
 4467              	.LBE3934:
 4468              	.LBE3993:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 268


 4469              	.LBE3999:
 4470              		.cfi_endproc
 4471              	.LFE2965:
 4473 0342 00BF     		.section	.rodata._Z9UART_InitRN5daisy11UartHandlerE.str1.4,"aMS",%progbits,1
 4474              		.align	2
 4475              	.LC1:
 4476 0000 496E6974 		.ascii	"Init error\000"
 4476      20657272 
 4476      6F7200
 4477 000b 00       		.align	2
 4478              	.LC2:
 4479 000c 53746172 		.ascii	"StartRx error\000"
 4479      74527820 
 4479      6572726F 
 4479      7200
 4480              		.section	.text._Z9UART_InitRN5daisy11UartHandlerE,"ax",%progbits
 4481              		.align	1
 4482              		.p2align 2,,3
 4483              		.global	_Z9UART_InitRN5daisy11UartHandlerE
 4484              		.syntax unified
 4485              		.thumb
 4486              		.thumb_func
 4487              		.fpu fpv5-d16
 4489              	_Z9UART_InitRN5daisy11UartHandlerE:
 4490              	.LVL204:
 4491              	.LFB5473:
  49:src/main.cpp  **** 	daisy::UartHandler::Config usart1_conf;
 4492              		.loc 18 49 42 is_stmt 1 view -0
 4493              		.cfi_startproc
 4494              		@ args = 0, pretend = 0, frame = 32
 4495              		@ frame_needed = 0, uses_anonymous_args = 0
  50:src/main.cpp  **** 	usart1_conf.periph = UartHandler::Config::Peripheral::USART_1;
 4496              		.loc 18 50 2 view .LVU1024
  49:src/main.cpp  **** 	daisy::UartHandler::Config usart1_conf;
 4497              		.loc 18 49 42 is_stmt 0 view .LVU1025
 4498 0000 10B5     		push	{r4, lr}
 4499              		.cfi_def_cfa_offset 8
 4500              		.cfi_offset 4, -8
 4501              		.cfi_offset 14, -4
  51:src/main.cpp  **** 	usart1_conf.mode = UartHandler::Config::Mode::TX_RX;
 4502              		.loc 18 51 21 view .LVU1026
 4503 0002 0022     		movs	r2, #0
  49:src/main.cpp  **** 	daisy::UartHandler::Config usart1_conf;
 4504              		.loc 18 49 42 view .LVU1027
 4505 0004 88B0     		sub	sp, sp, #32
 4506              		.cfi_def_cfa_offset 40
 4507              	.LVL205:
 4508              	.LBB4000:
 4509              	.LBI4000:
 4510              		.file 29 "../../libdaisy//src/per/uart.h"
   1:../../libdaisy//src/per/uart.h **** /* 
   2:../../libdaisy//src/per/uart.h **** TODO
   3:../../libdaisy//src/per/uart.h **** - UART1 defaults to DMA, add flexible config for DMA on all periphs
   4:../../libdaisy//src/per/uart.h **** - Transmit function improvements.
   5:../../libdaisy//src/per/uart.h **** - Overflow handling, etc. for Rx Queue.
   6:../../libdaisy//src/per/uart.h **** */
   7:../../libdaisy//src/per/uart.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 269


   8:../../libdaisy//src/per/uart.h **** #pragma once
   9:../../libdaisy//src/per/uart.h **** #ifndef DSY_UART_H
  10:../../libdaisy//src/per/uart.h **** #define DSY_UART_H /**< macro */
  11:../../libdaisy//src/per/uart.h **** #include "daisy_core.h"
  12:../../libdaisy//src/per/uart.h **** 
  13:../../libdaisy//src/per/uart.h **** 
  14:../../libdaisy//src/per/uart.h **** namespace daisy
  15:../../libdaisy//src/per/uart.h **** {
  16:../../libdaisy//src/per/uart.h **** /** @addtogroup serial
  17:../../libdaisy//src/per/uart.h ****     @{
  18:../../libdaisy//src/per/uart.h ****     */
  19:../../libdaisy//src/per/uart.h **** 
  20:../../libdaisy//src/per/uart.h **** /** 
  21:../../libdaisy//src/per/uart.h ****     Uart Peripheral
  22:../../libdaisy//src/per/uart.h ****     @author shensley
  23:../../libdaisy//src/per/uart.h ****     @date March 2020
  24:../../libdaisy//src/per/uart.h ****     */
  25:../../libdaisy//src/per/uart.h **** class UartHandler
  26:../../libdaisy//src/per/uart.h **** {
  27:../../libdaisy//src/per/uart.h ****   public:
  28:../../libdaisy//src/per/uart.h ****     struct Config
  29:../../libdaisy//src/per/uart.h ****     {
  30:../../libdaisy//src/per/uart.h ****         enum class Peripheral
  31:../../libdaisy//src/per/uart.h ****         {
  32:../../libdaisy//src/per/uart.h ****             USART_1,
  33:../../libdaisy//src/per/uart.h ****             USART_2,
  34:../../libdaisy//src/per/uart.h ****             USART_3,
  35:../../libdaisy//src/per/uart.h ****             UART_4,
  36:../../libdaisy//src/per/uart.h ****             UART_5,
  37:../../libdaisy//src/per/uart.h ****             USART_6,
  38:../../libdaisy//src/per/uart.h ****             UART_7,
  39:../../libdaisy//src/per/uart.h ****             UART_8,
  40:../../libdaisy//src/per/uart.h ****             LPUART_1,
  41:../../libdaisy//src/per/uart.h ****         };
  42:../../libdaisy//src/per/uart.h **** 
  43:../../libdaisy//src/per/uart.h ****         enum class StopBits
  44:../../libdaisy//src/per/uart.h ****         {
  45:../../libdaisy//src/per/uart.h ****             BITS_0_5,
  46:../../libdaisy//src/per/uart.h ****             BITS_1,
  47:../../libdaisy//src/per/uart.h ****             BITS_1_5,
  48:../../libdaisy//src/per/uart.h ****             BITS_2,
  49:../../libdaisy//src/per/uart.h ****         };
  50:../../libdaisy//src/per/uart.h **** 
  51:../../libdaisy//src/per/uart.h ****         enum class Parity
  52:../../libdaisy//src/per/uart.h ****         {
  53:../../libdaisy//src/per/uart.h ****             NONE,
  54:../../libdaisy//src/per/uart.h ****             EVEN,
  55:../../libdaisy//src/per/uart.h ****             ODD,
  56:../../libdaisy//src/per/uart.h ****         };
  57:../../libdaisy//src/per/uart.h **** 
  58:../../libdaisy//src/per/uart.h ****         enum class Mode
  59:../../libdaisy//src/per/uart.h ****         {
  60:../../libdaisy//src/per/uart.h ****             RX,
  61:../../libdaisy//src/per/uart.h ****             TX,
  62:../../libdaisy//src/per/uart.h ****             TX_RX,
  63:../../libdaisy//src/per/uart.h ****         };
  64:../../libdaisy//src/per/uart.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 270


  65:../../libdaisy//src/per/uart.h ****         enum class WordLength
  66:../../libdaisy//src/per/uart.h ****         {
  67:../../libdaisy//src/per/uart.h ****             BITS_7,
  68:../../libdaisy//src/per/uart.h ****             BITS_8,
  69:../../libdaisy//src/per/uart.h ****             BITS_9,
  70:../../libdaisy//src/per/uart.h ****         };
  71:../../libdaisy//src/per/uart.h **** 
  72:../../libdaisy//src/per/uart.h ****         struct
  73:../../libdaisy//src/per/uart.h ****         {
  74:../../libdaisy//src/per/uart.h ****             dsy_gpio_pin tx; /**< & */
  75:../../libdaisy//src/per/uart.h ****             dsy_gpio_pin rx; /**< & */
  76:../../libdaisy//src/per/uart.h ****         } pin_config;        /**< & */
  77:../../libdaisy//src/per/uart.h **** 
  78:../../libdaisy//src/per/uart.h ****         Config()
 4511              		.loc 29 78 9 is_stmt 1 view .LVU1028
 4512              	.LBB4001:
 4513              	.LBB4002:
  79:../../libdaisy//src/per/uart.h ****         {
  80:../../libdaisy//src/per/uart.h ****             // user must init periph, pin_config, and periph
  81:../../libdaisy//src/per/uart.h ****             stopbits   = StopBits::BITS_1;
 4514              		.loc 29 81 13 view .LVU1029
  82:../../libdaisy//src/per/uart.h ****             parity     = Parity::NONE;
 4515              		.loc 29 82 13 view .LVU1030
  83:../../libdaisy//src/per/uart.h ****             wordlength = WordLength::BITS_8;
 4516              		.loc 29 83 13 view .LVU1031
  84:../../libdaisy//src/per/uart.h ****             baudrate   = 4800;
 4517              		.loc 29 84 13 view .LVU1032
 4518              		.loc 29 84 13 is_stmt 0 view .LVU1033
 4519              	.LBE4002:
 4520              	.LBE4001:
 4521              	.LBE4000:
  51:src/main.cpp  **** 	usart1_conf.mode = UartHandler::Config::Mode::TX_RX;
 4522              		.loc 18 51 2 is_stmt 1 view .LVU1034
  52:src/main.cpp  **** 	usart1_conf.wordlength = UartHandler::Config::WordLength::BITS_8;
 4523              		.loc 18 52 2 view .LVU1035
  53:src/main.cpp  **** 	usart1_conf.parity = UartHandler::Config::Parity::NONE;
 4524              		.loc 18 53 2 view .LVU1036
  54:src/main.cpp  **** 	usart1_conf.stopbits = UartHandler::Config::StopBits::BITS_1;
 4525              		.loc 18 54 2 view .LVU1037
  55:src/main.cpp  **** 	usart1_conf.baudrate = (uint32_t)9600;
 4526              		.loc 18 55 2 view .LVU1038
  56:src/main.cpp  **** 	usart1_conf.pin_config.rx = Pin(PORTB, 7); // (USART_1 RX) Daisy pin 15
 4527              		.loc 18 56 2 view .LVU1039
  57:src/main.cpp  **** 	usart1_conf.pin_config.tx = Pin(PORTB, 6); // (USART_1 TX) Daisy pin 14
 4528              		.loc 18 57 2 view .LVU1040
 4529              	.LBB4008:
 4530              	.LBI4008:
 4531              		.file 30 "../../libdaisy//src/daisy_core.h"
   1:../../libdaisy//src/daisy_core.h **** #pragma once
   2:../../libdaisy//src/daisy_core.h **** #ifndef DSY_CORE_HW_H
   3:../../libdaisy//src/daisy_core.h **** #define DSY_CORE_HW_H /**< & */
   4:../../libdaisy//src/daisy_core.h **** #include <stdint.h>
   5:../../libdaisy//src/daisy_core.h **** #include <stdlib.h>
   6:../../libdaisy//src/daisy_core.h **** 
   7:../../libdaisy//src/daisy_core.h **** #if defined(_MSC_VER)
   8:../../libdaisy//src/daisy_core.h **** #define FORCE_INLINE __forceinline /**< & */
   9:../../libdaisy//src/daisy_core.h **** #elif defined(__clang__)
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 271


  10:../../libdaisy//src/daisy_core.h **** #define FORCE_INLINE inline __attribute__((always_inline)) /**< & */
  11:../../libdaisy//src/daisy_core.h **** #pragma clang diagnostic ignored "-Wduplicate-decl-specifier"
  12:../../libdaisy//src/daisy_core.h **** #elif defined(__GNUC__)
  13:../../libdaisy//src/daisy_core.h **** #define FORCE_INLINE inline __attribute__((always_inline)) /**< & */
  14:../../libdaisy//src/daisy_core.h **** #else
  15:../../libdaisy//src/daisy_core.h **** #error unknown compiler
  16:../../libdaisy//src/daisy_core.h **** #endif
  17:../../libdaisy//src/daisy_core.h **** 
  18:../../libdaisy//src/daisy_core.h **** /** @addtogroup utility
  19:../../libdaisy//src/daisy_core.h ****     @{
  20:../../libdaisy//src/daisy_core.h **** */
  21:../../libdaisy//src/daisy_core.h **** 
  22:../../libdaisy//src/daisy_core.h **** /** Macro for area of memory that is configured as cacheless
  23:../../libdaisy//src/daisy_core.h **** This should be used primarily for DMA buffers, and the like.
  24:../../libdaisy//src/daisy_core.h **** */
  25:../../libdaisy//src/daisy_core.h **** #define DMA_BUFFER_MEM_SECTION __attribute__((section(".sram1_bss")))
  26:../../libdaisy//src/daisy_core.h **** /** 
  27:../../libdaisy//src/daisy_core.h **** THE DTCM RAM section is also non-cached. However, is not suitable 
  28:../../libdaisy//src/daisy_core.h **** for DMA transfers. Performance is on par with internal SRAM w/ 
  29:../../libdaisy//src/daisy_core.h **** cache enabled.
  30:../../libdaisy//src/daisy_core.h **** */
  31:../../libdaisy//src/daisy_core.h **** #define DTCM_MEM_SECTION __attribute__((section(".dtcmram_bss")))
  32:../../libdaisy//src/daisy_core.h **** 
  33:../../libdaisy//src/daisy_core.h **** #define FBIPMAX 0.999985f             /**< close to 1.0f-LSB at 16 bit */
  34:../../libdaisy//src/daisy_core.h **** #define FBIPMIN (-FBIPMAX)            /**< - (1 - LSB) */
  35:../../libdaisy//src/daisy_core.h **** #define U82F_SCALE 0.0078740f         /**< 1 / 127 */
  36:../../libdaisy//src/daisy_core.h **** #define F2U8_SCALE 127.0f             /**< 128 - 1 */
  37:../../libdaisy//src/daisy_core.h **** #define S82F_SCALE 0.0078125f         /**< 1 / (2**7) */
  38:../../libdaisy//src/daisy_core.h **** #define F2S8_SCALE 127.0f             /**< (2 ** 7) - 1 */
  39:../../libdaisy//src/daisy_core.h **** #define S162F_SCALE 3.0517578125e-05f /**< 1 / (2** 15) */
  40:../../libdaisy//src/daisy_core.h **** #define F2S16_SCALE 32767.0f          /**< (2 ** 15) - 1 */
  41:../../libdaisy//src/daisy_core.h **** #define F2S24_SCALE 8388608.0f        /**< 2 ** 23 */
  42:../../libdaisy//src/daisy_core.h **** #define S242F_SCALE 1.192092896e-07f  /**< 1 / (2 ** 23) */
  43:../../libdaisy//src/daisy_core.h **** #define S24SIGN 0x800000              /**< 2 ** 23 */
  44:../../libdaisy//src/daisy_core.h **** #define S322F_SCALE 4.6566129e-10f    /**< 1 / (2** 31) */
  45:../../libdaisy//src/daisy_core.h **** #define F2S32_SCALE 2147483647.f      /**< (2 ** 31) - 1 */
  46:../../libdaisy//src/daisy_core.h **** 
  47:../../libdaisy//src/daisy_core.h **** 
  48:../../libdaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the left 
  49:../../libdaisy//src/daisy_core.h ****  *  channel of a non-interleaved output buffer named out */
  50:../../libdaisy//src/daisy_core.h **** #define OUT_L out[0]
  51:../../libdaisy//src/daisy_core.h **** 
  52:../../libdaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the right 
  53:../../libdaisy//src/daisy_core.h ****  *  channel of a non-interleaved output buffer named out */
  54:../../libdaisy//src/daisy_core.h **** #define OUT_R out[1]
  55:../../libdaisy//src/daisy_core.h **** 
  56:../../libdaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the left 
  57:../../libdaisy//src/daisy_core.h ****  *  channel of a non-interleaved input buffer named in */
  58:../../libdaisy//src/daisy_core.h **** #define IN_L in[0]
  59:../../libdaisy//src/daisy_core.h **** 
  60:../../libdaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the right 
  61:../../libdaisy//src/daisy_core.h ****  *  channel of a non-interleaved input buffer named in */
  62:../../libdaisy//src/daisy_core.h **** #define IN_R in[1]
  63:../../libdaisy//src/daisy_core.h **** 
  64:../../libdaisy//src/daisy_core.h **** /** 
  65:../../libdaisy//src/daisy_core.h ****     Computes cube.
  66:../../libdaisy//src/daisy_core.h ****     \param x Number to be cubed
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 272


  67:../../libdaisy//src/daisy_core.h ****     \return x ^ 3
  68:../../libdaisy//src/daisy_core.h **** */
  69:../../libdaisy//src/daisy_core.h **** FORCE_INLINE float cube(float x)
  70:../../libdaisy//src/daisy_core.h **** {
  71:../../libdaisy//src/daisy_core.h ****     return (x * x) * x;
  72:../../libdaisy//src/daisy_core.h **** }
  73:../../libdaisy//src/daisy_core.h **** 
  74:../../libdaisy//src/daisy_core.h **** /** 
  75:../../libdaisy//src/daisy_core.h ****     Converts unsigned 8-bit to float
  76:../../libdaisy//src/daisy_core.h ****     \param x Number to be scaled.
  77:../../libdaisy//src/daisy_core.h ****     \return Scaled number.
  78:../../libdaisy//src/daisy_core.h **** */
  79:../../libdaisy//src/daisy_core.h **** FORCE_INLINE float u82f(uint8_t x)
  80:../../libdaisy//src/daisy_core.h **** {
  81:../../libdaisy//src/daisy_core.h ****     return ((float)x - 127.f) * U82F_SCALE;
  82:../../libdaisy//src/daisy_core.h **** }
  83:../../libdaisy//src/daisy_core.h **** 
  84:../../libdaisy//src/daisy_core.h **** /**
  85:../../libdaisy//src/daisy_core.h ****     Converts float to unsigned 8-bit
  86:../../libdaisy//src/daisy_core.h **** */
  87:../../libdaisy//src/daisy_core.h **** FORCE_INLINE uint8_t f2u8(float x)
  88:../../libdaisy//src/daisy_core.h **** {
  89:../../libdaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
  90:../../libdaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
  91:../../libdaisy//src/daisy_core.h ****     return (uint8_t)((x * F2U8_SCALE) + F2U8_SCALE);
  92:../../libdaisy//src/daisy_core.h **** }
  93:../../libdaisy//src/daisy_core.h **** 
  94:../../libdaisy//src/daisy_core.h **** 
  95:../../libdaisy//src/daisy_core.h **** /** 
  96:../../libdaisy//src/daisy_core.h ****     Converts Signed 8-bit to float
  97:../../libdaisy//src/daisy_core.h ****     \param x Number to be scaled.
  98:../../libdaisy//src/daisy_core.h ****     \return Scaled number.
  99:../../libdaisy//src/daisy_core.h **** */
 100:../../libdaisy//src/daisy_core.h **** FORCE_INLINE float s82f(int8_t x)
 101:../../libdaisy//src/daisy_core.h **** {
 102:../../libdaisy//src/daisy_core.h ****     return (float)x * S82F_SCALE;
 103:../../libdaisy//src/daisy_core.h **** }
 104:../../libdaisy//src/daisy_core.h **** 
 105:../../libdaisy//src/daisy_core.h **** /**
 106:../../libdaisy//src/daisy_core.h ****     Converts float to Signed 8-bit
 107:../../libdaisy//src/daisy_core.h **** */
 108:../../libdaisy//src/daisy_core.h **** FORCE_INLINE int8_t f2s8(float x)
 109:../../libdaisy//src/daisy_core.h **** {
 110:../../libdaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 111:../../libdaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 112:../../libdaisy//src/daisy_core.h ****     return (int32_t)(x * F2S8_SCALE);
 113:../../libdaisy//src/daisy_core.h **** }
 114:../../libdaisy//src/daisy_core.h **** 
 115:../../libdaisy//src/daisy_core.h **** /** 
 116:../../libdaisy//src/daisy_core.h ****     Converts Signed 16-bit to float
 117:../../libdaisy//src/daisy_core.h ****     \param x Number to be scaled.
 118:../../libdaisy//src/daisy_core.h ****     \return Scaled number.
 119:../../libdaisy//src/daisy_core.h **** */
 120:../../libdaisy//src/daisy_core.h **** FORCE_INLINE float s162f(int16_t x)
 121:../../libdaisy//src/daisy_core.h **** {
 122:../../libdaisy//src/daisy_core.h ****     return (float)x * S162F_SCALE;
 123:../../libdaisy//src/daisy_core.h **** }
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 273


 124:../../libdaisy//src/daisy_core.h **** 
 125:../../libdaisy//src/daisy_core.h **** /**
 126:../../libdaisy//src/daisy_core.h ****     Converts float to Signed 16-bit
 127:../../libdaisy//src/daisy_core.h **** */
 128:../../libdaisy//src/daisy_core.h **** FORCE_INLINE int16_t f2s16(float x)
 129:../../libdaisy//src/daisy_core.h **** {
 130:../../libdaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 131:../../libdaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 132:../../libdaisy//src/daisy_core.h ****     return (int32_t)(x * F2S16_SCALE);
 133:../../libdaisy//src/daisy_core.h **** }
 134:../../libdaisy//src/daisy_core.h **** 
 135:../../libdaisy//src/daisy_core.h **** /**
 136:../../libdaisy//src/daisy_core.h ****     Converts Signed 24-bit to float
 137:../../libdaisy//src/daisy_core.h ****  */
 138:../../libdaisy//src/daisy_core.h **** FORCE_INLINE float s242f(int32_t x)
 139:../../libdaisy//src/daisy_core.h **** {
 140:../../libdaisy//src/daisy_core.h ****     x = (x ^ S24SIGN) - S24SIGN; //sign extend aka ((x<<8)>>8)
 141:../../libdaisy//src/daisy_core.h ****     return (float)x * S242F_SCALE;
 142:../../libdaisy//src/daisy_core.h **** }
 143:../../libdaisy//src/daisy_core.h **** /**
 144:../../libdaisy//src/daisy_core.h ****     Converts float to Signed 24-bit
 145:../../libdaisy//src/daisy_core.h ****  */
 146:../../libdaisy//src/daisy_core.h **** FORCE_INLINE int32_t f2s24(float x)
 147:../../libdaisy//src/daisy_core.h **** {
 148:../../libdaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 149:../../libdaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 150:../../libdaisy//src/daisy_core.h ****     return (int32_t)(x * F2S24_SCALE);
 151:../../libdaisy//src/daisy_core.h **** }
 152:../../libdaisy//src/daisy_core.h **** 
 153:../../libdaisy//src/daisy_core.h **** /**
 154:../../libdaisy//src/daisy_core.h ****     Converts Signed 32-bit to float
 155:../../libdaisy//src/daisy_core.h ****  */
 156:../../libdaisy//src/daisy_core.h **** FORCE_INLINE float s322f(int32_t x)
 157:../../libdaisy//src/daisy_core.h **** {
 158:../../libdaisy//src/daisy_core.h ****     return (float)x * S322F_SCALE;
 159:../../libdaisy//src/daisy_core.h **** }
 160:../../libdaisy//src/daisy_core.h **** /**
 161:../../libdaisy//src/daisy_core.h ****     Converts float to Signed 24-bit
 162:../../libdaisy//src/daisy_core.h ****  */
 163:../../libdaisy//src/daisy_core.h **** FORCE_INLINE int32_t f2s32(float x)
 164:../../libdaisy//src/daisy_core.h **** {
 165:../../libdaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 166:../../libdaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 167:../../libdaisy//src/daisy_core.h ****     return (int32_t)(x * F2S32_SCALE);
 168:../../libdaisy//src/daisy_core.h **** }
 169:../../libdaisy//src/daisy_core.h **** 
 170:../../libdaisy//src/daisy_core.h **** 
 171:../../libdaisy//src/daisy_core.h **** /** Enums and a simple struct for defining a hardware pin on the MCU
 172:../../libdaisy//src/daisy_core.h ****  *  These correlate with the stm32 datasheet, and are used to configure
 173:../../libdaisy//src/daisy_core.h ****  *  the hardware.
 174:../../libdaisy//src/daisy_core.h ****  * 
 175:../../libdaisy//src/daisy_core.h ****  *  This along with the dsy_gpio_pin class should no longer be used.
 176:../../libdaisy//src/daisy_core.h ****  *  They are available for backwards compatability. 
 177:../../libdaisy//src/daisy_core.h ****  * 
 178:../../libdaisy//src/daisy_core.h ****  *  Please use GPIOPort enum and the Pin struct instead.
 179:../../libdaisy//src/daisy_core.h ****  */
 180:../../libdaisy//src/daisy_core.h **** typedef enum
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 274


 181:../../libdaisy//src/daisy_core.h **** {
 182:../../libdaisy//src/daisy_core.h ****     DSY_GPIOA, /**< & */
 183:../../libdaisy//src/daisy_core.h ****     DSY_GPIOB, /**< & */
 184:../../libdaisy//src/daisy_core.h ****     DSY_GPIOC, /**< & */
 185:../../libdaisy//src/daisy_core.h ****     DSY_GPIOD, /**< & */
 186:../../libdaisy//src/daisy_core.h ****     DSY_GPIOE, /**< & */
 187:../../libdaisy//src/daisy_core.h ****     DSY_GPIOF, /**< & */
 188:../../libdaisy//src/daisy_core.h ****     DSY_GPIOG, /**< & */
 189:../../libdaisy//src/daisy_core.h ****     DSY_GPIOH, /**< & */
 190:../../libdaisy//src/daisy_core.h ****     DSY_GPIOI, /**< & */
 191:../../libdaisy//src/daisy_core.h ****     DSY_GPIOJ, /**< & */
 192:../../libdaisy//src/daisy_core.h ****     DSY_GPIOK, /**< & */
 193:../../libdaisy//src/daisy_core.h ****     DSY_GPIOX, /** This is a non-existant port for unsupported bits of hardware. */
 194:../../libdaisy//src/daisy_core.h ****     DSY_GPIO_LAST, /** Final enum member */
 195:../../libdaisy//src/daisy_core.h **** } dsy_gpio_port;
 196:../../libdaisy//src/daisy_core.h **** 
 197:../../libdaisy//src/daisy_core.h **** /** Hardware define pins 
 198:../../libdaisy//src/daisy_core.h ****  *  
 199:../../libdaisy//src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 200:../../libdaisy//src/daisy_core.h ****  *  backwards compatability.
 201:../../libdaisy//src/daisy_core.h ****  * 
 202:../../libdaisy//src/daisy_core.h ****  *  Please use Pin struct instead.
 203:../../libdaisy//src/daisy_core.h ****  */
 204:../../libdaisy//src/daisy_core.h **** typedef struct
 205:../../libdaisy//src/daisy_core.h **** {
 206:../../libdaisy//src/daisy_core.h ****     dsy_gpio_port port; /**< & */
 207:../../libdaisy//src/daisy_core.h ****     uint8_t       pin;  /**< number 0-15 */
 208:../../libdaisy//src/daisy_core.h **** } dsy_gpio_pin;
 209:../../libdaisy//src/daisy_core.h **** 
 210:../../libdaisy//src/daisy_core.h **** /** Helper for creating pins from port/pin combos easily
 211:../../libdaisy//src/daisy_core.h ****  * 
 212:../../libdaisy//src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 213:../../libdaisy//src/daisy_core.h ****  *  backwards compatability.
 214:../../libdaisy//src/daisy_core.h ****  * 
 215:../../libdaisy//src/daisy_core.h ****  *  Please use Pin struct instead.
 216:../../libdaisy//src/daisy_core.h **** */
 217:../../libdaisy//src/daisy_core.h **** FORCE_INLINE dsy_gpio_pin dsy_pin(dsy_gpio_port port, uint8_t pin)
 218:../../libdaisy//src/daisy_core.h **** {
 219:../../libdaisy//src/daisy_core.h ****     dsy_gpio_pin p;
 220:../../libdaisy//src/daisy_core.h ****     p.port = port;
 221:../../libdaisy//src/daisy_core.h ****     p.pin  = pin;
 222:../../libdaisy//src/daisy_core.h ****     return p;
 223:../../libdaisy//src/daisy_core.h **** }
 224:../../libdaisy//src/daisy_core.h **** 
 225:../../libdaisy//src/daisy_core.h **** /** Helper for testing sameness of two dsy_gpio_pins
 226:../../libdaisy//src/daisy_core.h ****  *  \return    1 if same, 0 if different
 227:../../libdaisy//src/daisy_core.h ****  * 
 228:../../libdaisy//src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 229:../../libdaisy//src/daisy_core.h ****  *  backwards compatability.
 230:../../libdaisy//src/daisy_core.h ****  * 
 231:../../libdaisy//src/daisy_core.h ****  *  Please use Pin struct instead.
 232:../../libdaisy//src/daisy_core.h ****  */
 233:../../libdaisy//src/daisy_core.h **** FORCE_INLINE uint8_t dsy_pin_cmp(dsy_gpio_pin *a, dsy_gpio_pin *b)
 234:../../libdaisy//src/daisy_core.h **** {
 235:../../libdaisy//src/daisy_core.h ****     return ((a->port == b->port) && (a->pin == b->pin));
 236:../../libdaisy//src/daisy_core.h **** }
 237:../../libdaisy//src/daisy_core.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 275


 238:../../libdaisy//src/daisy_core.h **** #ifdef __cplusplus
 239:../../libdaisy//src/daisy_core.h **** 
 240:../../libdaisy//src/daisy_core.h **** namespace daisy
 241:../../libdaisy//src/daisy_core.h **** {
 242:../../libdaisy//src/daisy_core.h **** /** @brief GPIO Port names */
 243:../../libdaisy//src/daisy_core.h **** enum GPIOPort
 244:../../libdaisy//src/daisy_core.h **** {
 245:../../libdaisy//src/daisy_core.h ****     PORTA, /**< Port A */
 246:../../libdaisy//src/daisy_core.h ****     PORTB, /**< Port B */
 247:../../libdaisy//src/daisy_core.h ****     PORTC, /**< Port C */
 248:../../libdaisy//src/daisy_core.h ****     PORTD, /**< Port D */
 249:../../libdaisy//src/daisy_core.h ****     PORTE, /**< Port E */
 250:../../libdaisy//src/daisy_core.h ****     PORTF, /**< Port F */
 251:../../libdaisy//src/daisy_core.h ****     PORTG, /**< Port G */
 252:../../libdaisy//src/daisy_core.h ****     PORTH, /**< Port H */
 253:../../libdaisy//src/daisy_core.h ****     PORTI, /**< Port I */
 254:../../libdaisy//src/daisy_core.h ****     PORTJ, /**< Port J */
 255:../../libdaisy//src/daisy_core.h ****     PORTK, /**< Port K */
 256:../../libdaisy//src/daisy_core.h ****     PORTX, /**< Used as a dummy port to signal an invalid pin. */
 257:../../libdaisy//src/daisy_core.h **** };
 258:../../libdaisy//src/daisy_core.h **** 
 259:../../libdaisy//src/daisy_core.h **** /** @brief representation of hardware port/pin combination */
 260:../../libdaisy//src/daisy_core.h **** struct Pin
 261:../../libdaisy//src/daisy_core.h **** {
 262:../../libdaisy//src/daisy_core.h ****     GPIOPort port;
 263:../../libdaisy//src/daisy_core.h ****     uint8_t  pin;
 264:../../libdaisy//src/daisy_core.h **** 
 265:../../libdaisy//src/daisy_core.h ****     /** @brief Constructor creates a valid pin. 
 266:../../libdaisy//src/daisy_core.h ****      *  @param pt GPIOPort between PA, and PK corresponding to STM32 Port.
 267:../../libdaisy//src/daisy_core.h ****      *  @param pn pin number in range of 0-15
 268:../../libdaisy//src/daisy_core.h ****     */
 269:../../libdaisy//src/daisy_core.h ****     constexpr Pin(const GPIOPort pt, const uint8_t pn) : port(pt), pin(pn) {}
 4532              		.loc 30 269 15 view .LVU1041
 4533              		.loc 30 269 15 is_stmt 0 view .LVU1042
 4534              	.LBE4008:
 270:../../libdaisy//src/daisy_core.h **** 
 271:../../libdaisy//src/daisy_core.h ****     /** @brief Basic Constructor creates an invalid Pin object */
 272:../../libdaisy//src/daisy_core.h ****     constexpr Pin() : port(PORTX), pin(255) {}
 273:../../libdaisy//src/daisy_core.h **** 
 274:../../libdaisy//src/daisy_core.h ****     /** @brief checks validity of a Pin 
 275:../../libdaisy//src/daisy_core.h ****      *  @retval returns true if the port is a valid hardware pin, otherwise false.
 276:../../libdaisy//src/daisy_core.h ****     */
 277:../../libdaisy//src/daisy_core.h ****     constexpr bool IsValid() const { return port != PORTX && pin < 16; }
 278:../../libdaisy//src/daisy_core.h **** 
 279:../../libdaisy//src/daisy_core.h ****     /** @brief comparison operator for checking equality between Pin objects */
 280:../../libdaisy//src/daisy_core.h ****     constexpr bool operator==(const Pin &rhs) const
 281:../../libdaisy//src/daisy_core.h ****     {
 282:../../libdaisy//src/daisy_core.h ****         return (rhs.port == port) && (rhs.pin == pin);
 283:../../libdaisy//src/daisy_core.h ****     }
 284:../../libdaisy//src/daisy_core.h **** 
 285:../../libdaisy//src/daisy_core.h ****     /** @brief comparison operator for checking inequality between Pin objects */
 286:../../libdaisy//src/daisy_core.h ****     constexpr bool operator!=(const Pin &rhs) const { return !operator==(rhs); }
 287:../../libdaisy//src/daisy_core.h **** 
 288:../../libdaisy//src/daisy_core.h ****     /** @brief conversion operation for converting to the old-style representation
 289:../../libdaisy//src/daisy_core.h ****      *         of a pin.
 290:../../libdaisy//src/daisy_core.h ****      * 
 291:../../libdaisy//src/daisy_core.h ****      *  This allows the new Pin type to be used in place of the older, dsy_gpio_pin
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 276


 292:../../libdaisy//src/daisy_core.h ****      *  type.
 293:../../libdaisy//src/daisy_core.h ****      */
 294:../../libdaisy//src/daisy_core.h ****     operator dsy_gpio_pin() const
 295:../../libdaisy//src/daisy_core.h ****     {
 296:../../libdaisy//src/daisy_core.h ****         return dsy_pin(static_cast<dsy_gpio_port>(port), pin);
 4535              		.loc 30 296 9 is_stmt 1 view .LVU1043
 219:../../libdaisy//src/daisy_core.h ****     p.port = port;
 4536              		.loc 30 219 5 view .LVU1044
 220:../../libdaisy//src/daisy_core.h ****     p.pin  = pin;
 4537              		.loc 30 220 5 view .LVU1045
 221:../../libdaisy//src/daisy_core.h ****     return p;
 4538              		.loc 30 221 5 view .LVU1046
 222:../../libdaisy//src/daisy_core.h **** }
 4539              		.loc 30 222 5 view .LVU1047
  58:src/main.cpp  **** 
 4540              		.loc 18 58 2 view .LVU1048
 4541              	.LBB4009:
 4542              	.LBI4009:
 269:../../libdaisy//src/daisy_core.h **** 
 4543              		.loc 30 269 15 view .LVU1049
 269:../../libdaisy//src/daisy_core.h **** 
 4544              		.loc 30 269 15 is_stmt 0 view .LVU1050
 4545              	.LBE4009:
 4546              		.loc 30 296 9 is_stmt 1 view .LVU1051
 219:../../libdaisy//src/daisy_core.h ****     p.port = port;
 4547              		.loc 30 219 5 view .LVU1052
 220:../../libdaisy//src/daisy_core.h ****     p.pin  = pin;
 4548              		.loc 30 220 5 view .LVU1053
 221:../../libdaisy//src/daisy_core.h ****     return p;
 4549              		.loc 30 221 5 view .LVU1054
 222:../../libdaisy//src/daisy_core.h **** }
 4550              		.loc 30 222 5 view .LVU1055
 4551              	.LBB4010:
 4552              	.LBB4005:
  79:../../libdaisy//src/per/uart.h ****             // user must init periph, pin_config, and periph
 4553              		.loc 29 79 9 is_stmt 0 view .LVU1056
 4554 0006 1349     		ldr	r1, .L148
 4555              	.LBB4003:
  81:../../libdaisy//src/per/uart.h ****             parity     = Parity::NONE;
 4556              		.loc 29 81 24 view .LVU1057
 4557 0008 0123     		movs	r3, #1
 4558              	.LBE4003:
 4559              	.LBE4005:
 4560              	.LBE4010:
  49:src/main.cpp  **** 	daisy::UartHandler::Config usart1_conf;
 4561              		.loc 18 49 42 view .LVU1058
 4562 000a 0446     		mov	r4, r0
 4563              	.LBB4011:
 4564              	.LBB4006:
  79:../../libdaisy//src/per/uart.h ****             // user must init periph, pin_config, and periph
 4565              		.loc 29 79 9 view .LVU1059
 4566 000c CDE90112 		strd	r1, r2, [sp, #4]
 4567              	.LBE4006:
 4568              	.LBE4011:
  52:src/main.cpp  **** 	usart1_conf.wordlength = UartHandler::Config::WordLength::BITS_8;
 4569              		.loc 18 52 19 view .LVU1060
 4570 0010 0221     		movs	r1, #2
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 277


 4571              	.LBB4012:
 4572              	.LBB4007:
 4573              	.LBB4004:
  82:../../libdaisy//src/per/uart.h ****             wordlength = WordLength::BITS_8;
 4574              		.loc 29 82 24 view .LVU1061
 4575 0012 CDE90332 		strd	r3, r2, [sp, #12]
 4576              	.LBE4004:
 4577              	.LBE4007:
 4578              	.LBE4012:
  56:src/main.cpp  **** 	usart1_conf.pin_config.rx = Pin(PORTB, 7); // (USART_1 RX) Daisy pin 15
 4579              		.loc 18 56 23 view .LVU1062
 4580 0016 4FF41652 		mov	r2, #9600
  52:src/main.cpp  **** 	usart1_conf.wordlength = UartHandler::Config::WordLength::BITS_8;
 4581              		.loc 18 52 19 view .LVU1063
 4582 001a 0591     		str	r1, [sp, #20]
  60:src/main.cpp  **** 		hw.PrintLine("Init error");
 4583              		.loc 18 60 15 view .LVU1064
 4584 001c 01A9     		add	r1, sp, #4
  56:src/main.cpp  **** 	usart1_conf.pin_config.rx = Pin(PORTB, 7); // (USART_1 RX) Daisy pin 15
 4585              		.loc 18 56 23 view .LVU1065
 4586 001e CDE90632 		strd	r3, r2, [sp, #24]
  60:src/main.cpp  **** 		hw.PrintLine("Init error");
 4587              		.loc 18 60 2 is_stmt 1 view .LVU1066
  60:src/main.cpp  **** 		hw.PrintLine("Init error");
 4588              		.loc 18 60 15 is_stmt 0 view .LVU1067
 4589 0022 FFF7FEFF 		bl	_ZN5daisy11UartHandler4InitERKNS0_6ConfigE
 4590              	.LVL206:
  60:src/main.cpp  **** 		hw.PrintLine("Init error");
 4591              		.loc 18 60 2 view .LVU1068
 4592 0026 0128     		cmp	r0, #1
 4593 0028 06D0     		beq	.L146
  65:src/main.cpp  **** 		hw.PrintLine("StartRx error");
 4594              		.loc 18 65 2 is_stmt 1 view .LVU1069
  65:src/main.cpp  **** 		hw.PrintLine("StartRx error");
 4595              		.loc 18 65 18 is_stmt 0 view .LVU1070
 4596 002a 2046     		mov	r0, r4
 4597 002c FFF7FEFF 		bl	_ZN5daisy11UartHandler7StartRxEv
 4598              	.LVL207:
  65:src/main.cpp  **** 		hw.PrintLine("StartRx error");
 4599              		.loc 18 65 2 view .LVU1071
 4600 0030 0128     		cmp	r0, #1
 4601 0032 09D0     		beq	.L147
 4602              	.L142:
  68:src/main.cpp  **** 
 4603              		.loc 18 68 1 view .LVU1072
 4604 0034 08B0     		add	sp, sp, #32
 4605              		.cfi_remember_state
 4606              		.cfi_def_cfa_offset 8
 4607              		@ sp needed
 4608 0036 10BD     		pop	{r4, pc}
 4609              	.LVL208:
 4610              	.L146:
 4611              		.cfi_restore_state
  61:src/main.cpp  **** 		//return daisy::UartHandler::CheckError	
 4612              		.loc 18 61 3 is_stmt 1 view .LVU1073
 4613              	.LBB4013:
 4614              	.LBI4013:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 278


  23:../../libdaisy//src/daisy_seed.h **** 
  24:../../libdaisy//src/daisy_seed.h ****     /** This function used to provide a pre-initialization configuraiton 
  25:../../libdaisy//src/daisy_seed.h ****      *  it has since been deprecated, and does nothing.
  26:../../libdaisy//src/daisy_seed.h ****      */
  27:../../libdaisy//src/daisy_seed.h ****     void Configure();
  28:../../libdaisy//src/daisy_seed.h **** 
  29:../../libdaisy//src/daisy_seed.h ****     /** 
  30:../../libdaisy//src/daisy_seed.h ****     Initializes the Daisy Seed and the following peripherals:
  31:../../libdaisy//src/daisy_seed.h ****     SDRAM, QSPI, 24-bit 48kHz Audio via AK4556, Internal USB,
  32:../../libdaisy//src/daisy_seed.h ****     as well as the built-in LED and Testpoint.
  33:../../libdaisy//src/daisy_seed.h **** 
  34:../../libdaisy//src/daisy_seed.h ****     ADCs, DACs, and other special peripherals (such as I2C, SPI, etc.)
  35:../../libdaisy//src/daisy_seed.h ****     can be initialized using their specific initializers within libdaisy
  36:../../libdaisy//src/daisy_seed.h ****     for a specific application.
  37:../../libdaisy//src/daisy_seed.h ****     */
  38:../../libdaisy//src/daisy_seed.h ****     void Init(bool boost = false);
  39:../../libdaisy//src/daisy_seed.h **** 
  40:../../libdaisy//src/daisy_seed.h ****     /** 
  41:../../libdaisy//src/daisy_seed.h ****     Deinitializes all peripherals automatically handled by `Init`.
  42:../../libdaisy//src/daisy_seed.h ****     */
  43:../../libdaisy//src/daisy_seed.h ****     void DeInit();
  44:../../libdaisy//src/daisy_seed.h **** 
  45:../../libdaisy//src/daisy_seed.h ****     /** 
  46:../../libdaisy//src/daisy_seed.h ****     Wait some ms before going on.
  47:../../libdaisy//src/daisy_seed.h ****     \param del Delay time in ms.
  48:../../libdaisy//src/daisy_seed.h ****     */
  49:../../libdaisy//src/daisy_seed.h ****     void DelayMs(size_t del);
  50:../../libdaisy//src/daisy_seed.h **** 
  51:../../libdaisy//src/daisy_seed.h ****     /** 
  52:../../libdaisy//src/daisy_seed.h ****     Returns the gpio_pin corresponding to the index 0-31.
  53:../../libdaisy//src/daisy_seed.h ****     For the given GPIO on the Daisy Seed (labeled 1-32 in docs).
  54:../../libdaisy//src/daisy_seed.h ****     */
  55:../../libdaisy//src/daisy_seed.h ****     static dsy_gpio_pin GetPin(uint8_t pin_idx);
  56:../../libdaisy//src/daisy_seed.h **** 
  57:../../libdaisy//src/daisy_seed.h ****     /** Begins the audio for the seeds builtin audio.
  58:../../libdaisy//src/daisy_seed.h ****     the specified callback will get called whenever
  59:../../libdaisy//src/daisy_seed.h ****     new data is ready to be prepared.
  60:../../libdaisy//src/daisy_seed.h ****     */
  61:../../libdaisy//src/daisy_seed.h ****     void StartAudio(AudioHandle::InterleavingAudioCallback cb);
  62:../../libdaisy//src/daisy_seed.h **** 
  63:../../libdaisy//src/daisy_seed.h ****     /** Begins the audio for the seeds builtin audio.
  64:../../libdaisy//src/daisy_seed.h ****     the specified callback will get called whenever
  65:../../libdaisy//src/daisy_seed.h ****     new data is ready to be prepared.
  66:../../libdaisy//src/daisy_seed.h ****     This will use the newer non-interleaved callback.
  67:../../libdaisy//src/daisy_seed.h ****     */
  68:../../libdaisy//src/daisy_seed.h ****     void StartAudio(AudioHandle::AudioCallback cb);
  69:../../libdaisy//src/daisy_seed.h **** 
  70:../../libdaisy//src/daisy_seed.h ****     /** Changes to a new interleaved callback
  71:../../libdaisy//src/daisy_seed.h ****      */
  72:../../libdaisy//src/daisy_seed.h ****     void ChangeAudioCallback(AudioHandle::InterleavingAudioCallback cb);
  73:../../libdaisy//src/daisy_seed.h **** 
  74:../../libdaisy//src/daisy_seed.h ****     /** Changes to a new multichannel callback
  75:../../libdaisy//src/daisy_seed.h ****      */
  76:../../libdaisy//src/daisy_seed.h ****     void ChangeAudioCallback(AudioHandle::AudioCallback cb);
  77:../../libdaisy//src/daisy_seed.h **** 
  78:../../libdaisy//src/daisy_seed.h ****     /** Stops the audio if it is running. */
  79:../../libdaisy//src/daisy_seed.h ****     void StopAudio();
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 279


  80:../../libdaisy//src/daisy_seed.h **** 
  81:../../libdaisy//src/daisy_seed.h ****     /** Updates the Audio Sample Rate, and reinitializes.
  82:../../libdaisy//src/daisy_seed.h ****      ** Audio must be stopped for this to work.
  83:../../libdaisy//src/daisy_seed.h ****      */
  84:../../libdaisy//src/daisy_seed.h ****     void SetAudioSampleRate(SaiHandle::Config::SampleRate samplerate);
  85:../../libdaisy//src/daisy_seed.h **** 
  86:../../libdaisy//src/daisy_seed.h ****     /** Returns the audio sample rate in Hz as a floating point number.
  87:../../libdaisy//src/daisy_seed.h ****      */
  88:../../libdaisy//src/daisy_seed.h ****     float AudioSampleRate();
  89:../../libdaisy//src/daisy_seed.h **** 
  90:../../libdaisy//src/daisy_seed.h ****     /** Sets the number of samples processed per channel by the audio callback.
  91:../../libdaisy//src/daisy_seed.h ****      */
  92:../../libdaisy//src/daisy_seed.h ****     void SetAudioBlockSize(size_t blocksize);
  93:../../libdaisy//src/daisy_seed.h **** 
  94:../../libdaisy//src/daisy_seed.h ****     /** Returns the number of samples per channel in a block of audio. */
  95:../../libdaisy//src/daisy_seed.h ****     size_t AudioBlockSize();
  96:../../libdaisy//src/daisy_seed.h **** 
  97:../../libdaisy//src/daisy_seed.h ****     /** Returns the rate in Hz that the Audio callback is called */
  98:../../libdaisy//src/daisy_seed.h ****     float AudioCallbackRate() const;
  99:../../libdaisy//src/daisy_seed.h **** 
 100:../../libdaisy//src/daisy_seed.h ****     /** Sets the state of the built in LED
 101:../../libdaisy//src/daisy_seed.h ****      */
 102:../../libdaisy//src/daisy_seed.h ****     void SetLed(bool state);
 103:../../libdaisy//src/daisy_seed.h **** 
 104:../../libdaisy//src/daisy_seed.h ****     /** Sets the state of the test point near pin 10
 105:../../libdaisy//src/daisy_seed.h ****      */
 106:../../libdaisy//src/daisy_seed.h ****     void SetTestPoint(bool state);
 107:../../libdaisy//src/daisy_seed.h **** 
 108:../../libdaisy//src/daisy_seed.h ****     /** Print formatted debug log message
 109:../../libdaisy//src/daisy_seed.h ****      */
 110:../../libdaisy//src/daisy_seed.h ****     template <typename... VA>
 111:../../libdaisy//src/daisy_seed.h ****     static void Print(const char* format, VA... va)
 112:../../libdaisy//src/daisy_seed.h ****     {
 113:../../libdaisy//src/daisy_seed.h ****         Log::Print(format, va...);
 114:../../libdaisy//src/daisy_seed.h ****     }
 115:../../libdaisy//src/daisy_seed.h **** 
 116:../../libdaisy//src/daisy_seed.h ****     /** Print formatted debug log message with automatic line termination
 117:../../libdaisy//src/daisy_seed.h ****     */
 118:../../libdaisy//src/daisy_seed.h ****     template <typename... VA>
 119:../../libdaisy//src/daisy_seed.h ****     static void PrintLine(const char* format, VA... va)
 4615              		.loc 6 119 17 view .LVU1074
 4616              	.LBB4014:
 120:../../libdaisy//src/daisy_seed.h ****     {
 121:../../libdaisy//src/daisy_seed.h ****         Log::PrintLine(format, va...);
 4617              		.loc 6 121 23 is_stmt 0 view .LVU1075
 4618 0038 0748     		ldr	r0, .L148+4
 4619 003a FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
 4620              	.LVL209:
 4621              		.loc 6 121 23 view .LVU1076
 4622              	.LBE4014:
 4623              	.LBE4013:
  65:src/main.cpp  **** 		hw.PrintLine("StartRx error");
 4624              		.loc 18 65 2 is_stmt 1 view .LVU1077
  65:src/main.cpp  **** 		hw.PrintLine("StartRx error");
 4625              		.loc 18 65 18 is_stmt 0 view .LVU1078
 4626 003e 2046     		mov	r0, r4
 4627 0040 FFF7FEFF 		bl	_ZN5daisy11UartHandler7StartRxEv
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 280


 4628              	.LVL210:
  65:src/main.cpp  **** 		hw.PrintLine("StartRx error");
 4629              		.loc 18 65 2 view .LVU1079
 4630 0044 0128     		cmp	r0, #1
 4631 0046 F5D1     		bne	.L142
 4632              	.L147:
  66:src/main.cpp  **** 	}
 4633              		.loc 18 66 3 is_stmt 1 view .LVU1080
 4634              	.LVL211:
 4635              	.LBB4015:
 4636              	.LBI4015:
 119:../../libdaisy//src/daisy_seed.h ****     {
 4637              		.loc 6 119 17 view .LVU1081
 4638              	.LBB4016:
 4639              		.loc 6 121 23 is_stmt 0 view .LVU1082
 4640 0048 0448     		ldr	r0, .L148+8
 4641 004a FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
 4642              	.LVL212:
 4643              		.loc 6 121 23 view .LVU1083
 4644              	.LBE4016:
 4645              	.LBE4015:
  68:src/main.cpp  **** 
 4646              		.loc 18 68 1 view .LVU1084
 4647 004e 08B0     		add	sp, sp, #32
 4648              		.cfi_def_cfa_offset 8
 4649              		@ sp needed
 4650 0050 10BD     		pop	{r4, pc}
 4651              	.LVL213:
 4652              	.L149:
  68:src/main.cpp  **** 
 4653              		.loc 18 68 1 view .LVU1085
 4654 0052 00BF     		.align	2
 4655              	.L148:
 4656 0054 01060107 		.word	117507585
 4657 0058 00000000 		.word	.LC1
 4658 005c 0C000000 		.word	.LC2
 4659              		.cfi_endproc
 4660              	.LFE5473:
 4662              		.section	.text._ZNSt10_HashtableIiSt4pairIKi5paramESaIS3_ENSt8__detail10_Select1stESt8equal_toIiES
 4663              		.align	1
 4664              		.p2align 2,,3
 4665              		.weak	_ZNSt10_HashtableIiSt4pairIKi5paramESaIS3_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiE
 4666              		.syntax unified
 4667              		.thumb
 4668              		.thumb_func
 4669              		.fpu fpv5-d16
 4671              	_ZNSt10_HashtableIiSt4pairIKi5paramESaIS3_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS5_18_
 4672              	.LVL214:
 4673              	.LFB5875:
1265:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 4674              		.loc 12 1265 5 is_stmt 1 view -0
 4675              		.cfi_startproc
 4676              		@ args = 0, pretend = 0, frame = 8
 4677              		@ frame_needed = 0, uses_anonymous_args = 0
1265:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 4678              		.loc 12 1265 5 is_stmt 0 view .LVU1087
 4679 0000 F0B5     		push	{r4, r5, r6, r7, lr}
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 281


 4680              		.cfi_def_cfa_offset 20
 4681              		.cfi_offset 4, -20
 4682              		.cfi_offset 5, -16
 4683              		.cfi_offset 6, -12
 4684              		.cfi_offset 7, -8
 4685              		.cfi_offset 14, -4
 4686              	.LBB4117:
1276:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
 4687              		.loc 12 1276 45 view .LVU1088
 4688 0002 CB68     		ldr	r3, [r1, #12]
 4689 0004 0026     		movs	r6, #0
1274:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_element_count(__ht._M_element_count),
 4690              		.loc 12 1274 28 view .LVU1089
 4691 0006 4A68     		ldr	r2, [r1, #4]
 4692              	.LBE4117:
1265:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 4693              		.loc 12 1265 5 view .LVU1090
 4694 0008 0C46     		mov	r4, r1
 4695              	.LVL215:
 4696              	.LBB4298:
 4697              	.LBB4118:
 4698              	.LBI4118:
1996:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return __ebo_node_alloc::_M_cget(); }
 4699              		.loc 14 1996 7 is_stmt 1 view .LVU1091
1996:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return __ebo_node_alloc::_M_cget(); }
 4700              		.loc 14 1996 7 is_stmt 0 view .LVU1092
 4701              	.LBE4118:
 4702              	.LBB4119:
 4703              	.LBI4119:
 4704              		.loc 21 97 29 is_stmt 1 view .LVU1093
 4705              	.LBB4120:
 4706              	.LBI4120:
 4707              		.loc 15 558 7 view .LVU1094
 4708              	.LBB4121:
 4709              	.LBI4121:
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 4710              		.loc 17 147 7 view .LVU1095
 4711              	.LBB4122:
 4712              	.LBI4122:
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4713              		.loc 16 82 7 view .LVU1096
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4714              		.loc 16 82 7 is_stmt 0 view .LVU1097
 4715              	.LBE4122:
 4716              	.LBE4121:
 4717              	.LBE4120:
 4718              	.LBE4119:
1276:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
 4719              		.loc 12 1276 45 view .LVU1098
 4720 000a 1031     		adds	r1, r1, #16
 4721              	.LVL216:
1276:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
 4722              		.loc 12 1276 45 view .LVU1099
 4723 000c C360     		str	r3, [r0, #12]
 4724 000e 0660     		str	r6, [r0]
 4725              	.LBE4298:
1265:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 282


 4726              		.loc 12 1265 5 view .LVU1100
 4727 0010 0546     		mov	r5, r0
 4728              	.LVL217:
 4729              	.LBB4299:
 4730              	.LBB4123:
 4731              	.LBI4123:
1987:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	: __ebo_node_alloc(std::forward<_Alloc>(__a))
 4732              		.loc 14 1987 2 is_stmt 1 view .LVU1101
 4733              	.LBB4124:
 4734              	.LBI4124:
1115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	: _Tp(std::forward<_OtherTp>(__tp))
 4735              		.loc 14 1115 2 view .LVU1102
 4736              	.LBB4125:
 4737              	.LBI4125:
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 4738              		.loc 17 147 7 view .LVU1103
 4739              	.LBB4126:
 4740              	.LBI4126:
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4741              		.loc 16 82 7 view .LVU1104
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4742              		.loc 16 82 7 is_stmt 0 view .LVU1105
 4743              	.LBE4126:
 4744              	.LBE4125:
 4745              	.LBE4124:
 4746              	.LBE4123:
 4747              	.LBB4127:
 4748              	.LBI4127:
 4749              		.loc 17 162 7 is_stmt 1 view .LVU1106
 4750              	.LBB4128:
 4751              	.LBI4128:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4752              		.loc 16 89 7 view .LVU1107
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4753              		.loc 16 89 7 is_stmt 0 view .LVU1108
 4754              	.LBE4128:
 4755              	.LBE4127:
1276:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
 4756              		.loc 12 1276 45 view .LVU1109
 4757 0012 00F11003 		add	r3, r0, #16
 4758              	.LBB4129:
 4759              	.LBB4130:
 4760              	.LBB4131:
 4761              	.LBB4132:
 4762              	.LBB4133:
 392:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  {
 4763              		.loc 12 392 2 view .LVU1110
 4764 0016 012A     		cmp	r2, #1
 4765              	.LBE4133:
 4766              	.LBE4132:
 4767              	.LBE4131:
 4768              	.LBE4130:
 4769              	.LBE4129:
 4770              	.LBE4299:
1265:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 4771              		.loc 12 1265 5 view .LVU1111
 4772 0018 83B0     		sub	sp, sp, #12
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 283


 4773              		.cfi_def_cfa_offset 32
 4774              	.LBB4300:
1276:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
 4775              		.loc 12 1276 45 view .LVU1112
 4776 001a C0E90126 		strd	r2, r6, [r0, #4]
 4777              	.LVL218:
 4778              	.LBB4291:
 4779              	.LBI4291:
 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 4780              		.loc 14 218 5 is_stmt 1 view .LVU1113
 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 4781              		.loc 14 218 5 is_stmt 0 view .LVU1114
 4782              	.LBE4291:
1276:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
 4783              		.loc 12 1276 45 view .LVU1115
 4784 001e 03C9     		ldm	r1, {r0, r1}
 4785              	.LVL219:
1276:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
 4786              		.loc 12 1276 45 view .LVU1116
 4787 0020 83E80300 		stm	r3, {r0, r1}
 4788 0024 AE61     		str	r6, [r5, #24]
 4789              	.LVL220:
 4790              	.LBB4292:
 4791              	.LBB4284:
 4792              	.LBI4284:
 161:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : _M_h(__h) { }
 4793              		.loc 14 161 7 is_stmt 1 view .LVU1117
 161:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : _M_h(__h) { }
 4794              		.loc 14 161 7 is_stmt 0 view .LVU1118
 4795              	.LBE4284:
 4796              	.LBB4285:
 4797              	.LBI4130:
1149:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 4798              		.loc 12 1149 7 is_stmt 1 view .LVU1119
 4799              	.LBB4278:
 4800              	.LBB4153:
 4801              	.LBI4132:
 390:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 4802              		.loc 12 390 7 view .LVU1120
 4803              	.LBB4151:
 392:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  {
 4804              		.loc 12 392 2 is_stmt 0 view .LVU1121
 4805 0026 51D0     		beq	.L166
 4806              	.LVL221:
 4807              	.LBB4134:
 4808              	.LBI4134:
2081:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 4809              		.loc 14 2081 5 is_stmt 1 view .LVU1122
 4810              	.LBB4135:
 4811              	.LBB4136:
 4812              	.LBI4136:
 157:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 4813              		.loc 17 157 2 view .LVU1123
 4814              	.LBB4137:
 4815              	.LBI4137:
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4816              		.loc 16 79 7 view .LVU1124
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 284


  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4817              		.loc 16 79 7 is_stmt 0 view .LVU1125
 4818              	.LBE4137:
 4819              	.LBE4136:
 4820              	.LBB4138:
 4821              	.LBI4138:
 459:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 4822              		.loc 15 459 7 is_stmt 1 view .LVU1126
 4823              	.LBB4139:
 4824              	.LBI4139:
 103:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 4825              		.loc 16 103 7 view .LVU1127
 4826              	.LBB4140:
 105:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  std::__throw_bad_alloc();
 4827              		.loc 16 105 2 is_stmt 0 view .LVU1128
 4828 0028 B2F1005F 		cmp	r2, #536870912
 4829 002c 51D2     		bcs	.L167
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 4830              		.loc 16 115 41 view .LVU1129
 4831 002e 9200     		lsls	r2, r2, #2
 4832              	.LVL222:
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 4833              		.loc 16 115 41 view .LVU1130
 4834 0030 1046     		mov	r0, r2
 4835 0032 0192     		str	r2, [sp, #4]
 4836 0034 FFF7FEFF 		bl	_Znwj
 4837              	.LVL223:
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 4838              		.loc 16 115 41 view .LVU1131
 4839              	.LBE4140:
 4840              	.LBE4139:
 4841              	.LBE4138:
2087:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       return __p;
 4842              		.loc 14 2087 23 view .LVU1132
 4843 0038 019A     		ldr	r2, [sp, #4]
 4844 003a 3146     		mov	r1, r6
 4845              	.LBB4145:
 4846              	.LBB4143:
 4847              	.LBB4141:
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 4848              		.loc 16 115 41 view .LVU1133
 4849 003c 0746     		mov	r7, r0
 4850              	.LVL224:
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 4851              		.loc 16 115 41 view .LVU1134
 4852              	.LBE4141:
 4853              	.LBE4143:
 4854              	.LBE4145:
2087:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       return __p;
 4855              		.loc 14 2087 23 view .LVU1135
 4856 003e FFF7FEFF 		bl	memset
 4857              	.LVL225:
 4858              	.LBB4146:
 4859              	.LBI4146:
 4860              		.loc 17 162 7 is_stmt 1 view .LVU1136
 4861              	.LBB4147:
 4862              	.LBI4147:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 285


  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4863              		.loc 16 89 7 view .LVU1137
 4864              	.L152:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4865              		.loc 16 89 7 is_stmt 0 view .LVU1138
 4866              	.LBE4147:
 4867              	.LBE4146:
 4868              	.LBE4135:
 4869              	.LBE4134:
 4870              	.LBE4151:
 4871              	.LBE4153:
 4872              	.LBB4154:
1159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      return;
 4873              		.loc 12 1159 32 view .LVU1139
 4874 0042 A668     		ldr	r6, [r4, #8]
 4875              	.LBE4154:
1155:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 4876              		.loc 12 1155 15 view .LVU1140
 4877 0044 2F60     		str	r7, [r5]
 4878              	.LBB4272:
1159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      return;
 4879              		.loc 12 1159 6 view .LVU1141
 4880 0046 002E     		cmp	r6, #0
 4881 0048 3DD0     		beq	.L154
 4882              	.LVL226:
 4883              	.LBB4155:
 4884              	.LBI4155:
 166:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	{ return _M_h._M_allocate_node(std::forward<_Arg>(__arg)); }
 4885              		.loc 14 166 2 is_stmt 1 view .LVU1142
 4886              	.LBB4156:
 4887              	.LBI4156:
2029:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       -> __node_type*
 4888              		.loc 14 2029 7 view .LVU1143
 4889              	.LBB4157:
 4890              	.LBB4158:
 4891              	.LBI4158:
 459:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 4892              		.loc 15 459 7 view .LVU1144
 4893              	.LBB4159:
 4894              	.LBI4159:
 103:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 4895              		.loc 16 103 7 view .LVU1145
 4896              	.LBB4160:
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 4897              		.loc 16 115 41 is_stmt 0 view .LVU1146
 4898 004a 6020     		movs	r0, #96
 4899 004c FFF7FEFF 		bl	_Znwj
 4900              	.LVL227:
 4901              	.LBE4160:
 4902              	.LBE4159:
 4903              	.LBE4158:
 4904              	.LBB4163:
 4905              	.LBB4164:
 4906              	.LBB4165:
 4907              	.LBB4166:
 314:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       constexpr pair(pair&&) = default;		///< Move constructor
 4908              		.loc 25 314 17 view .LVU1147
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 286


 4909 0050 3146     		mov	r1, r6
 4910              	.LBE4166:
 4911              	.LBE4165:
 4912              	.LBE4164:
 4913              	.LBE4163:
 4914              	.LBB4171:
 4915              	.LBB4172:
 4916              	.LBB4173:
 4917              	.LBB4174:
 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 4918              		.loc 14 218 41 view .LVU1148
 4919 0052 0023     		movs	r3, #0
 4920              	.LBE4174:
 4921              	.LBE4173:
 4922              	.LBE4172:
 4923              	.LBE4171:
 4924              	.LBB4178:
 4925              	.LBB4162:
 4926              	.LBB4161:
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 4927              		.loc 16 115 41 view .LVU1149
 4928 0054 0446     		mov	r4, r0
 4929              	.LVL228:
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 4930              		.loc 16 115 41 view .LVU1150
 4931              	.LBE4161:
 4932              	.LBE4162:
 4933              	.LBE4178:
 4934              	.LBE4157:
 4935              	.LBE4156:
 4936              	.LBE4155:
 4937              	.LBE4272:
 4938              	.LBE4278:
 4939              	.LBE4285:
 4940              	.LBE4292:
 4941              	.LBE4300:
 4942              		.loc 26 175 3 is_stmt 1 view .LVU1151
 4943              	.LBB4301:
 4944              	.LBB4293:
 4945              	.LBB4286:
 4946              	.LBB4279:
 4947              	.LBB4273:
 4948              	.LBB4186:
 4949              	.LBB4184:
 4950              	.LBB4182:
 4951              	.LBB4179:
 4952              	.LBI4171:
 279:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 4953              		.loc 14 279 12 view .LVU1152
 4954              	.LBB4177:
 4955              	.LBI4172:
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 4956              		.loc 14 229 12 view .LVU1153
 4957              	.LBB4176:
 4958              	.LBI4173:
 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 4959              		.loc 14 218 5 view .LVU1154
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 287


 4960              	.LBB4175:
 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 4961              		.loc 14 218 41 is_stmt 0 view .LVU1155
 4962 0056 0360     		str	r3, [r0]
 4963              	.LVL229:
 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 4964              		.loc 14 218 41 view .LVU1156
 4965              	.LBE4175:
 4966              	.LBE4176:
 4967              	.LBE4177:
 4968              	.LBE4179:
 4969              	.LBB4180:
 4970              	.LBI4163:
 507:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 4971              		.loc 15 507 2 is_stmt 1 view .LVU1157
 4972              	.LBB4169:
 4973              	.LBI4164:
 148:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 4974              		.loc 16 148 2 view .LVU1158
 148:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 4975              		.loc 16 148 2 is_stmt 0 view .LVU1159
 4976              	.LBE4169:
 4977              	.LBE4180:
 4978              	.LBE4182:
 4979              	.LBE4184:
 4980              	.LBE4186:
 4981              	.LBE4273:
 4982              	.LBE4279:
 4983              	.LBE4286:
 4984              	.LBE4293:
 4985              	.LBE4301:
 4986              		.loc 26 175 3 is_stmt 1 view .LVU1160
 4987              	.LBB4302:
 4988              	.LBB4294:
 4989              	.LBB4287:
 4990              	.LBB4280:
 4991              	.LBB4274:
 4992              	.LBB4187:
 4993              	.LBB4185:
 4994              	.LBB4183:
 4995              	.LBB4181:
 4996              	.LBB4170:
 4997              	.LBB4168:
 4998              	.LBI4165:
 314:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       constexpr pair(pair&&) = default;		///< Move constructor
 4999              		.loc 25 314 17 view .LVU1161
 5000              	.LBB4167:
 5001 0058 51F8043F 		ldr	r3, [r1, #4]!
 5002              	.LVL230:
 314:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       constexpr pair(pair&&) = default;		///< Move constructor
 5003              		.loc 25 314 17 is_stmt 0 view .LVU1162
 5004 005c 40F8043F 		str	r3, [r0, #4]!
 5005              	.LVL231:
 314:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       constexpr pair(pair&&) = default;		///< Move constructor
 5006              		.loc 25 314 17 view .LVU1163
 5007 0060 0431     		adds	r1, r1, #4
 5008              	.LVL232:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 288


 314:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       constexpr pair(pair&&) = default;		///< Move constructor
 5009              		.loc 25 314 17 view .LVU1164
 5010 0062 0430     		adds	r0, r0, #4
 5011              	.LVL233:
 314:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       constexpr pair(pair&&) = default;		///< Move constructor
 5012              		.loc 25 314 17 view .LVU1165
 5013 0064 FFF7FEFF 		bl	_ZN5paramC1ERKS_
 5014              	.LVL234:
 314:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       constexpr pair(pair&&) = default;		///< Move constructor
 5015              		.loc 25 314 17 view .LVU1166
 5016              	.LBE4167:
 5017              	.LBE4168:
 5018              	.LBE4170:
 5019              	.LBE4181:
 5020              	.LBE4183:
 5021              	.LBE4185:
 5022              	.LBE4187:
 5023              	.LBB4188:
 5024              	.LBB4189:
 5025              	.LBB4190:
 5026              	.LBB4191:
 5027              	.LBB4192:
 5028              	.LBB4193:
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 5029              		.loc 14 433 22 view .LVU1167
 5030 0068 6968     		ldr	r1, [r5, #4]
 5031 006a 6368     		ldr	r3, [r4, #4]
 5032              	.LBE4193:
 5033              	.LBE4192:
 5034              	.LBE4191:
 5035              	.LBE4190:
 5036              	.LBE4189:
 5037              	.LBE4188:
1169:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 5038              		.loc 12 1169 44 view .LVU1168
 5039 006c 2A46     		mov	r2, r5
1168:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_buckets[_M_bucket_index(__this_n)] = &_M_before_begin;
 5040              		.loc 12 1168 29 view .LVU1169
 5041 006e AC60     		str	r4, [r5, #8]
 5042              	.LVL235:
 5043              	.LBB4201:
 5044              	.LBI4188:
 677:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __hash_code_base::_M_bucket_index(__n, _M_bucket_count); }
 5045              		.loc 12 677 7 is_stmt 1 view .LVU1170
 5046              	.LBB4200:
 5047              	.LBB4199:
 5048              	.LBI4190:
1303:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	noexcept( noexcept(declval<const _H1&>()(declval<const _Key&>()))
 5049              		.loc 14 1303 7 view .LVU1171
 5050              	.LBB4198:
 5051              	.LBB4195:
 5052              	.LBI4195:
 5053              		.loc 27 153 3 view .LVU1172
 5054              	.LBB4196:
 5055              		.loc 27 153 3 view .LVU1173
 5056              		.loc 27 153 3 is_stmt 0 view .LVU1174
 5057              	.LBE4196:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 289


 5058              	.LBE4195:
 5059              	.LBB4197:
 5060              	.LBI4192:
 431:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	       second_argument_type __den) const noexcept
 5061              		.loc 14 431 5 is_stmt 1 view .LVU1175
 5062              	.LBB4194:
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 5063              		.loc 14 433 7 view .LVU1176
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 5064              		.loc 14 433 22 is_stmt 0 view .LVU1177
 5065 0070 B3FBF1F0 		udiv	r0, r3, r1
 5066 0074 01FB1033 		mls	r3, r1, r0, r3
 5067              	.LBE4194:
 5068              	.LBE4197:
 5069              	.LBE4198:
 5070              	.LBE4199:
 5071              	.LBE4200:
 5072              	.LBE4201:
1169:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 5073              		.loc 12 1169 44 view .LVU1178
 5074 0078 52F8081B 		ldr	r1, [r2], #8
 5075 007c 41F82320 		str	r2, [r1, r3, lsl #2]
 5076              	.LVL236:
 5077              	.L165:
 5078              	.LBB4202:
 5079              	.LBB4203:
 5080              	.LBI4203:
 282:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return static_cast<_Hash_node*>(this->_M_nxt); }
 5081              		.loc 14 282 7 is_stmt 1 view .LVU1179
 5082              	.LBB4204:
 283:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 5083              		.loc 14 283 53 is_stmt 0 view .LVU1180
 5084 0080 3668     		ldr	r6, [r6]
 5085              	.LVL237:
 283:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 5086              		.loc 14 283 53 view .LVU1181
 5087              	.LBE4204:
 5088              	.LBE4203:
1173:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      {
 5089              		.loc 12 1173 39 is_stmt 1 view .LVU1182
 5090 0082 06B3     		cbz	r6, .L154
 5091              	.L168:
 5092              	.LVL238:
 5093              	.LBB4206:
 5094              	.LBB4207:
 5095              	.LBI4207:
 166:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	{ return _M_h._M_allocate_node(std::forward<_Arg>(__arg)); }
 5096              		.loc 14 166 2 view .LVU1183
 5097              	.LBB4208:
 5098              	.LBI4208:
2029:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       -> __node_type*
 5099              		.loc 14 2029 7 view .LVU1184
 5100              	.LBB4209:
 5101              	.LBB4210:
 5102              	.LBI4210:
 459:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 5103              		.loc 15 459 7 view .LVU1185
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 290


 5104              	.LBB4211:
 5105              	.LBI4211:
 103:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 5106              		.loc 16 103 7 view .LVU1186
 5107              	.LBB4212:
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 5108              		.loc 16 115 41 is_stmt 0 view .LVU1187
 5109 0084 6020     		movs	r0, #96
 5110 0086 2746     		mov	r7, r4
 5111 0088 FFF7FEFF 		bl	_Znwj
 5112              	.LVL239:
 5113              	.LBE4212:
 5114              	.LBE4211:
 5115              	.LBE4210:
 5116              	.LBB4215:
 5117              	.LBB4216:
 5118              	.LBB4217:
 5119              	.LBB4218:
 314:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       constexpr pair(pair&&) = default;		///< Move constructor
 5120              		.loc 25 314 17 view .LVU1188
 5121 008c 3146     		mov	r1, r6
 5122              	.LBE4218:
 5123              	.LBE4217:
 5124              	.LBE4216:
 5125              	.LBE4215:
 5126              	.LBB4226:
 5127              	.LBB4227:
 5128              	.LBB4228:
 5129              	.LBB4229:
 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 5130              		.loc 14 218 41 view .LVU1189
 5131 008e 0022     		movs	r2, #0
 5132              	.LBE4229:
 5133              	.LBE4228:
 5134              	.LBE4227:
 5135              	.LBE4226:
 5136              	.LBB4235:
 5137              	.LBB4214:
 5138              	.LBB4213:
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 5139              		.loc 16 115 41 view .LVU1190
 5140 0090 0446     		mov	r4, r0
 5141              	.LVL240:
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 5142              		.loc 16 115 41 view .LVU1191
 5143              	.LBE4213:
 5144              	.LBE4214:
 5145              	.LBE4235:
 5146              	.LBE4209:
 5147              	.LBE4208:
 5148              	.LBE4207:
 5149              	.LBE4206:
 5150              	.LBE4202:
 5151              	.LBE4274:
 5152              	.LBE4280:
 5153              	.LBE4287:
 5154              	.LBE4294:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 291


 5155              	.LBE4302:
 5156              		.loc 26 175 3 is_stmt 1 view .LVU1192
 5157              	.LBB4303:
 5158              	.LBB4295:
 5159              	.LBB4288:
 5160              	.LBB4281:
 5161              	.LBB4275:
 5162              	.LBB4270:
 5163              	.LBB4267:
 5164              	.LBB4245:
 5165              	.LBB4243:
 5166              	.LBB4241:
 5167              	.LBB4236:
 5168              	.LBI4226:
 279:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 5169              		.loc 14 279 12 view .LVU1193
 5170              	.LBB4233:
 5171              	.LBI4227:
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 5172              		.loc 14 229 12 view .LVU1194
 5173              	.LBB4231:
 5174              	.LBI4228:
 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 5175              		.loc 14 218 5 view .LVU1195
 5176              	.LBE4231:
 5177              	.LBE4233:
 5178              	.LBE4236:
 5179              	.LBB4237:
 5180              	.LBB4223:
 5181              	.LBB4221:
 5182              	.LBB4219:
 314:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       constexpr pair(pair&&) = default;		///< Move constructor
 5183              		.loc 25 314 17 is_stmt 0 view .LVU1196
 5184 0092 51F8043F 		ldr	r3, [r1, #4]!
 5185              	.LVL241:
 314:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       constexpr pair(pair&&) = default;		///< Move constructor
 5186              		.loc 25 314 17 view .LVU1197
 5187              	.LBE4219:
 5188              	.LBE4221:
 5189              	.LBE4223:
 5190              	.LBE4237:
 5191              	.LBB4238:
 5192              	.LBB4234:
 5193              	.LBB4232:
 5194              	.LBB4230:
 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 5195              		.loc 14 218 41 view .LVU1198
 5196 0096 0260     		str	r2, [r0]
 5197              	.LVL242:
 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 5198              		.loc 14 218 41 view .LVU1199
 5199              	.LBE4230:
 5200              	.LBE4232:
 5201              	.LBE4234:
 5202              	.LBE4238:
 5203              	.LBB4239:
 5204              	.LBI4215:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 292


 507:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 5205              		.loc 15 507 2 is_stmt 1 view .LVU1200
 5206              	.LBB4224:
 5207              	.LBI4216:
 148:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 5208              		.loc 16 148 2 view .LVU1201
 148:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 5209              		.loc 16 148 2 is_stmt 0 view .LVU1202
 5210              	.LBE4224:
 5211              	.LBE4239:
 5212              	.LBE4241:
 5213              	.LBE4243:
 5214              	.LBE4245:
 5215              	.LBE4267:
 5216              	.LBE4270:
 5217              	.LBE4275:
 5218              	.LBE4281:
 5219              	.LBE4288:
 5220              	.LBE4295:
 5221              	.LBE4303:
 5222              		.loc 26 175 3 is_stmt 1 view .LVU1203
 5223              	.LBB4304:
 5224              	.LBB4296:
 5225              	.LBB4289:
 5226              	.LBB4282:
 5227              	.LBB4276:
 5228              	.LBB4271:
 5229              	.LBB4268:
 5230              	.LBB4246:
 5231              	.LBB4244:
 5232              	.LBB4242:
 5233              	.LBB4240:
 5234              	.LBB4225:
 5235              	.LBB4222:
 5236              	.LBI4217:
 314:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       constexpr pair(pair&&) = default;		///< Move constructor
 5237              		.loc 25 314 17 view .LVU1204
 5238              	.LBB4220:
 5239 0098 0431     		adds	r1, r1, #4
 5240              	.LVL243:
 314:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       constexpr pair(pair&&) = default;		///< Move constructor
 5241              		.loc 25 314 17 is_stmt 0 view .LVU1205
 5242 009a 40F8043F 		str	r3, [r0, #4]!
 5243              	.LVL244:
 314:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       constexpr pair(pair&&) = default;		///< Move constructor
 5244              		.loc 25 314 17 view .LVU1206
 5245 009e 0430     		adds	r0, r0, #4
 5246              	.LVL245:
 314:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       constexpr pair(pair&&) = default;		///< Move constructor
 5247              		.loc 25 314 17 view .LVU1207
 5248 00a0 FFF7FEFF 		bl	_ZN5paramC1ERKS_
 5249              	.LVL246:
 314:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       constexpr pair(pair&&) = default;		///< Move constructor
 5250              		.loc 25 314 17 view .LVU1208
 5251              	.LBE4220:
 5252              	.LBE4222:
 5253              	.LBE4225:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 293


 5254              	.LBE4240:
 5255              	.LBE4242:
 5256              	.LBE4244:
 5257              	.LBE4246:
 5258              	.LBB4247:
 5259              	.LBB4248:
 5260              	.LBB4249:
 5261              	.LBB4250:
 5262              	.LBB4251:
 5263              	.LBB4252:
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 5264              		.loc 14 433 22 view .LVU1209
 5265 00a4 6368     		ldr	r3, [r4, #4]
 5266              	.LBE4252:
 5267              	.LBE4251:
 5268              	.LBE4250:
 5269              	.LBE4249:
 5270              	.LBE4248:
 5271              	.LBE4247:
1176:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		this->_M_copy_code(__this_n, __ht_n);
 5272              		.loc 12 1176 20 view .LVU1210
 5273 00a6 3C60     		str	r4, [r7]
 5274              	.LVL247:
 5275              	.LBB4265:
 5276              	.LBI4247:
 677:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __hash_code_base::_M_bucket_index(__n, _M_bucket_count); }
 5277              		.loc 12 677 7 is_stmt 1 view .LVU1211
 5278              	.LBB4263:
 5279              	.LBB4261:
 5280              	.LBI4249:
1303:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	noexcept( noexcept(declval<const _H1&>()(declval<const _Key&>()))
 5281              		.loc 14 1303 7 view .LVU1212
 5282              	.LBB4259:
 5283              	.LBB4255:
 5284              	.LBI4255:
 5285              		.loc 27 153 3 view .LVU1213
 5286              	.LBB4256:
 5287              		.loc 27 153 3 view .LVU1214
 5288              		.loc 27 153 3 is_stmt 0 view .LVU1215
 5289              	.LBE4256:
 5290              	.LBE4255:
 5291              	.LBB4257:
 5292              	.LBI4251:
 431:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	       second_argument_type __den) const noexcept
 5293              		.loc 14 431 5 is_stmt 1 view .LVU1216
 5294              	.LBB4253:
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 5295              		.loc 14 433 7 view .LVU1217
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 5296              		.loc 14 433 7 is_stmt 0 view .LVU1218
 5297              	.LBE4253:
 5298              	.LBE4257:
 5299              	.LBE4259:
 5300              	.LBE4261:
 5301              	.LBE4263:
 5302              	.LBE4265:
1179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		  _M_buckets[__bkt] = __prev_n;
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 294


 5303              		.loc 12 1179 18 view .LVU1219
 5304 00a8 D5E90012 		ldrd	r1, r2, [r5]
 5305              	.LBB4266:
 5306              	.LBB4264:
 5307              	.LBB4262:
 5308              	.LBB4260:
 5309              	.LBB4258:
 5310              	.LBB4254:
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 5311              		.loc 14 433 22 view .LVU1220
 5312 00ac B3FBF2F0 		udiv	r0, r3, r2
 5313 00b0 02FB1033 		mls	r3, r2, r0, r3
 5314              	.LBE4254:
 5315              	.LBE4258:
 5316              	.LBE4260:
 5317              	.LBE4262:
 5318              	.LBE4264:
 5319              	.LBE4266:
1179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		  _M_buckets[__bkt] = __prev_n;
 5320              		.loc 12 1179 3 view .LVU1221
 5321 00b4 51F82320 		ldr	r2, [r1, r3, lsl #2]
 5322 00b8 002A     		cmp	r2, #0
 5323 00ba E1D1     		bne	.L165
1180:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		__prev_n = __this_n;
 5324              		.loc 12 1180 23 view .LVU1222
 5325 00bc 41F82370 		str	r7, [r1, r3, lsl #2]
 5326              	.LVL248:
1180:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		__prev_n = __this_n;
 5327              		.loc 12 1180 23 view .LVU1223
 5328              	.LBE4268:
 5329              	.LBB4269:
 282:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return static_cast<_Hash_node*>(this->_M_nxt); }
 5330              		.loc 14 282 7 is_stmt 1 view .LVU1224
 5331              	.LBB4205:
 283:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 5332              		.loc 14 283 53 is_stmt 0 view .LVU1225
 5333 00c0 3668     		ldr	r6, [r6]
 5334              	.LVL249:
 283:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 5335              		.loc 14 283 53 view .LVU1226
 5336              	.LBE4205:
 5337              	.LBE4269:
1173:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      {
 5338              		.loc 12 1173 39 is_stmt 1 view .LVU1227
 5339 00c2 002E     		cmp	r6, #0
 5340 00c4 DED1     		bne	.L168
 5341              	.LVL250:
 5342              	.L154:
1173:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      {
 5343              		.loc 12 1173 39 is_stmt 0 view .LVU1228
 5344              	.LBE4271:
 5345              	.LBE4276:
 5346              	.LBE4282:
 5347              	.LBE4289:
 5348              	.LBE4296:
 5349              	.LBE4304:
1280:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 295


 5350              		.loc 12 1280 5 view .LVU1229
 5351 00c6 2846     		mov	r0, r5
 5352 00c8 03B0     		add	sp, sp, #12
 5353              		.cfi_remember_state
 5354              		.cfi_def_cfa_offset 20
 5355              		@ sp needed
 5356 00ca F0BD     		pop	{r4, r5, r6, r7, pc}
 5357              	.LVL251:
 5358              	.L166:
 5359              		.cfi_restore_state
 5360              	.LBB4305:
 5361              	.LBB4297:
 5362              	.LBB4290:
 5363              	.LBB4283:
 5364              	.LBB4277:
 5365              	.LBB4152:
 395:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  }
 5366              		.loc 12 395 14 view .LVU1230
 5367 00cc 05F11807 		add	r7, r5, #24
 5368 00d0 B7E7     		b	.L152
 5369              	.LVL252:
 5370              	.L167:
 5371              	.LBB4150:
 5372              	.LBB4149:
 5373              	.LBB4148:
 5374              	.LBB4144:
 5375              	.LBB4142:
 106:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5376              		.loc 16 106 26 view .LVU1231
 5377 00d2 FFF7FEFF 		bl	_ZSt17__throw_bad_allocv
 5378              	.LVL253:
 106:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5379              		.loc 16 106 26 view .LVU1232
 5380              	.LBE4142:
 5381              	.LBE4144:
 5382              	.LBE4148:
 5383              	.LBE4149:
 5384              	.LBE4150:
 5385              	.LBE4152:
 5386              	.LBE4277:
 5387              	.LBE4283:
 5388              	.LBE4290:
 5389              	.LBE4297:
 5390              	.LBE4305:
 5391              		.cfi_endproc
 5392              	.LFE5875:
 5394              		.weak	_ZNSt10_HashtableIiSt4pairIKi5paramESaIS3_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiE
 5395              		.thumb_set _ZNSt10_HashtableIiSt4pairIKi5paramESaIS3_ENSt8__detail10_Select1stESt8equal_toIiESt4ha
 5396 00d6 00BF     		.section	.text._ZNSt10_HashtableIiSt4pairIKi5paramESaIS3_ENSt8__detail10_Select1stESt8equal_toIiES
 5397              		.align	1
 5398              		.p2align 2,,3
 5399              		.weak	_ZNSt10_HashtableIiSt4pairIKi5paramESaIS3_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiE
 5400              		.syntax unified
 5401              		.thumb
 5402              		.thumb_func
 5403              		.fpu fpv5-d16
 5405              	_ZNSt10_HashtableIiSt4pairIKi5paramESaIS3_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS5_18_
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 296


 5406              	.LVL254:
 5407              	.LFB6005:
2026:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 5408              		.loc 12 2026 5 is_stmt 1 view -0
 5409              		.cfi_startproc
 5410              		@ args = 0, pretend = 0, frame = 0
 5411              		@ frame_needed = 0, uses_anonymous_args = 0
2026:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 5412              		.loc 12 2026 5 is_stmt 0 view .LVU1234
 5413 0000 70B5     		push	{r4, r5, r6, lr}
 5414              		.cfi_def_cfa_offset 16
 5415              		.cfi_offset 4, -16
 5416              		.cfi_offset 5, -12
 5417              		.cfi_offset 6, -8
 5418              		.cfi_offset 14, -4
 5419              	.LBB4378:
 5420              	.LBB4379:
 421:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 5421              		.loc 12 421 64 view .LVU1235
 5422 0002 8568     		ldr	r5, [r0, #8]
 5423              	.LBE4379:
 5424              	.LBE4378:
2026:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 5425              		.loc 12 2026 5 view .LVU1236
 5426 0004 0646     		mov	r6, r0
 5427              	.LVL255:
 5428              	.LBB4380:
 5429              	.LBI4378:
 420:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return static_cast<__node_type*>(_M_before_begin._M_nxt); }
 5430              		.loc 12 420 7 is_stmt 1 view .LVU1237
 420:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return static_cast<__node_type*>(_M_before_begin._M_nxt); }
 5431              		.loc 12 420 7 is_stmt 0 view .LVU1238
 5432              	.LBE4380:
 5433              	.LBB4381:
 5434              	.LBI4381:
2069:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 5435              		.loc 14 2069 5 is_stmt 1 view .LVU1239
 5436              	.LBB4382:
2071:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	{
 5437              		.loc 14 2071 14 view .LVU1240
 5438 0006 1DB3     		cbz	r5, .L170
 5439              	.LVL256:
 5440              	.L174:
 5441              	.LBB4383:
 5442              	.LBB4384:
 5443              	.LBI4384:
 282:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return static_cast<_Hash_node*>(this->_M_nxt); }
 5444              		.loc 14 282 7 view .LVU1241
 282:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return static_cast<_Hash_node*>(this->_M_nxt); }
 5445              		.loc 14 282 7 is_stmt 0 view .LVU1242
 5446 0008 2C46     		mov	r4, r5
 5447              	.LVL257:
 282:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return static_cast<_Hash_node*>(this->_M_nxt); }
 5448              		.loc 14 282 7 view .LVU1243
 5449              	.LBE4384:
 5450              	.LBB4386:
 5451              	.LBB4387:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 297


 5452              	.LBB4388:
 5453              	.LBB4389:
 5454              	.LBB4390:
 5455              	.LBB4391:
 5456              	.LBB4392:
 5457              	.LBB4393:
 5458              	.LBB4394:
 5459              	.LBI4394:
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 5460              		.loc 20 236 7 is_stmt 1 view .LVU1244
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 5461              		.loc 20 236 7 is_stmt 0 view .LVU1245
 5462              	.LBE4394:
 5463              	.LBE4393:
 5464              	.LBE4392:
 5465              	.LBE4391:
 5466              	.LBE4390:
 5467              	.LBE4389:
 5468              	.LBE4388:
 5469              	.LBE4387:
 5470              	.LBE4386:
 5471              	.LBB4476:
 5472              	.LBB4385:
 283:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 5473              		.loc 14 283 53 view .LVU1246
 5474 000a 2D68     		ldr	r5, [r5]
 5475              	.LVL258:
 283:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 5476              		.loc 14 283 53 view .LVU1247
 5477              	.LBE4385:
 5478              	.LBE4476:
 5479              	.LBB4477:
 5480              	.LBI4386:
2051:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 5481              		.loc 14 2051 5 is_stmt 1 view .LVU1248
 5482              	.LBB4470:
 5483              	.LBI4387:
 527:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(is_nothrow_destructible<_Up>::value)
 5484              		.loc 15 527 2 view .LVU1249
 5485              	.LBB4469:
 5486              	.LBI4388:
 5487              		.loc 16 154 2 view .LVU1250
 5488              	.LBB4468:
 5489              	.LBI4389:
 211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     : private __pair_base<_T1, _T2>
 5490              		.loc 25 211 12 view .LVU1251
 5491              	.LBB4467:
 5492              	.LBI4390:
  38:src/parameter_controller.h **** 	std::string label;
 5493              		.loc 19 38 8 view .LVU1252
 5494              	.LBB4416:
 5495              	.LBI4391:
 657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 5496              		.loc 20 657 7 view .LVU1253
 5497              	.LBB4412:
 5498              	.LBI4392:
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 298


 5499              		.loc 20 229 7 view .LVU1254
 5500              	.LBB4411:
 5501              	.LBB4402:
 5502              	.LBI4402:
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 5503              		.loc 20 221 7 view .LVU1255
 5504              	.LBB4403:
 5505              	.LBI4403:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 5506              		.loc 20 186 7 view .LVU1256
 5507              	.LBB4404:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 5508              		.loc 20 187 28 is_stmt 0 view .LVU1257
 5509 000c A06B     		ldr	r0, [r4, #56]
 5510              	.LVL259:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 5511              		.loc 20 187 28 view .LVU1258
 5512              	.LBE4404:
 5513              	.LBE4403:
 5514              	.LBB4405:
 5515              	.LBI4405:
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5516              		.loc 20 200 7 is_stmt 1 view .LVU1259
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5517              		.loc 20 200 7 is_stmt 0 view .LVU1260
 5518              	.LBE4405:
 5519              	.LBE4402:
 5520              	.LBB4408:
 5521              	.LBB4395:
 5522              	.LBB4396:
 5523              	.LBI4396:
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 5524              		.loc 15 491 7 is_stmt 1 view .LVU1261
 5525              	.LBB4397:
 5526              	.LBI4397:
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 5527              		.loc 16 120 7 view .LVU1262
 5528              	.LBE4397:
 5529              	.LBE4396:
 5530              	.LBE4395:
 5531              	.LBE4408:
 5532              	.LBB4409:
 5533              	.LBB4407:
 5534              	.LBB4406:
 203:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 5535              		.loc 20 203 57 is_stmt 0 view .LVU1263
 5536 000e 04F14003 		add	r3, r4, #64
 5537              	.LVL260:
 203:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 5538              		.loc 20 203 57 view .LVU1264
 5539              	.LBE4406:
 5540              	.LBE4407:
 5541              	.LBE4409:
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 5542              		.loc 20 231 2 view .LVU1265
 5543 0012 9842     		cmp	r0, r3
 5544 0014 03D0     		beq	.L171
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 299


 5545              	.LBB4410:
 5546              	.LBB4401:
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 5547              		.loc 20 237 34 view .LVU1266
 5548 0016 216C     		ldr	r1, [r4, #64]
 5549              	.LBB4400:
 5550              	.LBB4399:
 5551              	.LBB4398:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 5552              		.loc 16 133 19 view .LVU1267
 5553 0018 0131     		adds	r1, r1, #1
 5554              	.LVL261:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 5555              		.loc 16 133 19 view .LVU1268
 5556 001a FFF7FEFF 		bl	_ZdlPvj
 5557              	.LVL262:
 5558              	.L171:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 5559              		.loc 16 133 19 view .LVU1269
 5560              	.LBE4398:
 5561              	.LBE4399:
 5562              	.LBE4400:
 5563              	.LBE4401:
 5564              	.LBE4410:
 5565              	.LBE4411:
 5566              	.LBE4412:
 5567              	.LBB4413:
 5568              	.LBI4413:
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5569              		.loc 20 150 14 is_stmt 1 view .LVU1270
 5570              	.LBB4414:
 5571              	.LBI4414:
 5572              		.loc 17 162 7 view .LVU1271
 5573              	.LBB4415:
 5574              	.LBI4415:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5575              		.loc 16 89 7 view .LVU1272
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5576              		.loc 16 89 7 is_stmt 0 view .LVU1273
 5577              	.LBE4415:
 5578              	.LBE4414:
 5579              	.LBE4413:
 5580              	.LBE4416:
 5581              	.LBB4417:
 5582              	.LBI4417:
 657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 5583              		.loc 20 657 7 is_stmt 1 view .LVU1274
 5584              	.LBB4418:
 5585              	.LBI4418:
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5586              		.loc 20 229 7 view .LVU1275
 5587              	.LBB4419:
 5588              	.LBB4420:
 5589              	.LBI4420:
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 5590              		.loc 20 221 7 view .LVU1276
 5591              	.LBB4421:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 300


 5592              	.LBI4421:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 5593              		.loc 20 186 7 view .LVU1277
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 5594              		.loc 20 186 7 is_stmt 0 view .LVU1278
 5595              	.LBE4421:
 5596              	.LBE4420:
 5597              	.LBB4427:
 5598              	.LBI4427:
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 5599              		.loc 20 236 7 is_stmt 1 view .LVU1279
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 5600              		.loc 20 236 7 is_stmt 0 view .LVU1280
 5601              	.LBE4427:
 5602              	.LBB4435:
 5603              	.LBB4423:
 5604              	.LBB4422:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 5605              		.loc 20 187 28 view .LVU1281
 5606 001e 206A     		ldr	r0, [r4, #32]
 5607              	.LVL263:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 5608              		.loc 20 187 28 view .LVU1282
 5609              	.LBE4422:
 5610              	.LBE4423:
 5611              	.LBB4424:
 5612              	.LBI4424:
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5613              		.loc 20 200 7 is_stmt 1 view .LVU1283
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5614              		.loc 20 200 7 is_stmt 0 view .LVU1284
 5615              	.LBE4424:
 5616              	.LBE4435:
 5617              	.LBB4436:
 5618              	.LBB4428:
 5619              	.LBB4429:
 5620              	.LBI4429:
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 5621              		.loc 15 491 7 is_stmt 1 view .LVU1285
 5622              	.LBB4430:
 5623              	.LBI4430:
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 5624              		.loc 16 120 7 view .LVU1286
 5625              	.LBE4430:
 5626              	.LBE4429:
 5627              	.LBE4428:
 5628              	.LBE4436:
 5629              	.LBB4437:
 5630              	.LBB4426:
 5631              	.LBB4425:
 203:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 5632              		.loc 20 203 57 is_stmt 0 view .LVU1287
 5633 0020 04F12803 		add	r3, r4, #40
 5634              	.LVL264:
 203:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 5635              		.loc 20 203 57 view .LVU1288
 5636              	.LBE4425:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 301


 5637              	.LBE4426:
 5638              	.LBE4437:
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 5639              		.loc 20 231 2 view .LVU1289
 5640 0024 9842     		cmp	r0, r3
 5641 0026 03D0     		beq	.L172
 5642              	.LBB4438:
 5643              	.LBB4434:
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 5644              		.loc 20 237 34 view .LVU1290
 5645 0028 A16A     		ldr	r1, [r4, #40]
 5646              	.LBB4433:
 5647              	.LBB4432:
 5648              	.LBB4431:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 5649              		.loc 16 133 19 view .LVU1291
 5650 002a 0131     		adds	r1, r1, #1
 5651              	.LVL265:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 5652              		.loc 16 133 19 view .LVU1292
 5653 002c FFF7FEFF 		bl	_ZdlPvj
 5654              	.LVL266:
 5655              	.L172:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 5656              		.loc 16 133 19 view .LVU1293
 5657              	.LBE4431:
 5658              	.LBE4432:
 5659              	.LBE4433:
 5660              	.LBE4434:
 5661              	.LBE4438:
 5662              	.LBE4419:
 5663              	.LBE4418:
 5664              	.LBB4439:
 5665              	.LBI4439:
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5666              		.loc 20 150 14 is_stmt 1 view .LVU1294
 5667              	.LBB4440:
 5668              	.LBI4440:
 5669              		.loc 17 162 7 view .LVU1295
 5670              	.LBB4441:
 5671              	.LBI4441:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5672              		.loc 16 89 7 view .LVU1296
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5673              		.loc 16 89 7 is_stmt 0 view .LVU1297
 5674              	.LBE4441:
 5675              	.LBE4440:
 5676              	.LBE4439:
 5677              	.LBE4417:
 5678              	.LBB4442:
 5679              	.LBI4442:
 657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 5680              		.loc 20 657 7 is_stmt 1 view .LVU1298
 5681              	.LBB4443:
 5682              	.LBI4443:
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5683              		.loc 20 229 7 view .LVU1299
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 302


 5684              	.LBB4444:
 5685              	.LBB4445:
 5686              	.LBI4445:
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 5687              		.loc 20 221 7 view .LVU1300
 5688              	.LBB4446:
 5689              	.LBI4446:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 5690              		.loc 20 186 7 view .LVU1301
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 5691              		.loc 20 186 7 is_stmt 0 view .LVU1302
 5692              	.LBE4446:
 5693              	.LBE4445:
 5694              	.LBB4452:
 5695              	.LBI4452:
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 5696              		.loc 20 236 7 is_stmt 1 view .LVU1303
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 5697              		.loc 20 236 7 is_stmt 0 view .LVU1304
 5698              	.LBE4452:
 5699              	.LBB4460:
 5700              	.LBB4448:
 5701              	.LBB4447:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 5702              		.loc 20 187 28 view .LVU1305
 5703 0030 2346     		mov	r3, r4
 5704 0032 53F8080F 		ldr	r0, [r3, #8]!
 5705              	.LVL267:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 5706              		.loc 20 187 28 view .LVU1306
 5707              	.LBE4447:
 5708              	.LBE4448:
 5709              	.LBB4449:
 5710              	.LBI4449:
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5711              		.loc 20 200 7 is_stmt 1 view .LVU1307
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5712              		.loc 20 200 7 is_stmt 0 view .LVU1308
 5713              	.LBE4449:
 5714              	.LBE4460:
 5715              	.LBB4461:
 5716              	.LBB4453:
 5717              	.LBB4454:
 5718              	.LBI4454:
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 5719              		.loc 15 491 7 is_stmt 1 view .LVU1309
 5720              	.LBB4455:
 5721              	.LBI4455:
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 5722              		.loc 16 120 7 view .LVU1310
 5723              	.LBE4455:
 5724              	.LBE4454:
 5725              	.LBE4453:
 5726              	.LBE4461:
 5727              	.LBB4462:
 5728              	.LBB4451:
 5729              	.LBB4450:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 303


 203:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 5730              		.loc 20 203 57 is_stmt 0 view .LVU1311
 5731 0036 0833     		adds	r3, r3, #8
 5732              	.LVL268:
 203:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 5733              		.loc 20 203 57 view .LVU1312
 5734              	.LBE4450:
 5735              	.LBE4451:
 5736              	.LBE4462:
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 5737              		.loc 20 231 2 view .LVU1313
 5738 0038 9842     		cmp	r0, r3
 5739 003a 03D0     		beq	.L173
 5740              	.LBB4463:
 5741              	.LBB4459:
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 5742              		.loc 20 237 34 view .LVU1314
 5743 003c 2169     		ldr	r1, [r4, #16]
 5744              	.LBB4458:
 5745              	.LBB4457:
 5746              	.LBB4456:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 5747              		.loc 16 133 19 view .LVU1315
 5748 003e 0131     		adds	r1, r1, #1
 5749              	.LVL269:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 5750              		.loc 16 133 19 view .LVU1316
 5751 0040 FFF7FEFF 		bl	_ZdlPvj
 5752              	.LVL270:
 5753              	.L173:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 5754              		.loc 16 133 19 view .LVU1317
 5755              	.LBE4456:
 5756              	.LBE4457:
 5757              	.LBE4458:
 5758              	.LBE4459:
 5759              	.LBE4463:
 5760              	.LBE4444:
 5761              	.LBE4443:
 5762              	.LBB4464:
 5763              	.LBI4464:
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5764              		.loc 20 150 14 is_stmt 1 view .LVU1318
 5765              	.LBB4465:
 5766              	.LBI4465:
 5767              		.loc 17 162 7 view .LVU1319
 5768              	.LBB4466:
 5769              	.LBI4466:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5770              		.loc 16 89 7 view .LVU1320
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5771              		.loc 16 89 7 is_stmt 0 view .LVU1321
 5772              	.LBE4466:
 5773              	.LBE4465:
 5774              	.LBE4464:
 5775              	.LBE4442:
 5776              	.LBE4467:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 304


 5777              	.LBE4468:
 5778              	.LBE4469:
 5779              	.LBE4470:
 5780              	.LBB4471:
 5781              	.LBI4471:
2059:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 5782              		.loc 14 2059 5 is_stmt 1 view .LVU1322
 5783              	.LBB4472:
 5784              	.LBB4473:
 5785              	.LBI4473:
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 5786              		.loc 15 491 7 view .LVU1323
 5787              	.LBB4474:
 5788              	.LBI4474:
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 5789              		.loc 16 120 7 view .LVU1324
 5790              	.LBB4475:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 5791              		.loc 16 133 19 is_stmt 0 view .LVU1325
 5792 0044 6021     		movs	r1, #96
 5793 0046 2046     		mov	r0, r4
 5794 0048 FFF7FEFF 		bl	_ZdlPvj
 5795              	.LVL271:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 5796              		.loc 16 133 19 view .LVU1326
 5797              	.LBE4475:
 5798              	.LBE4474:
 5799              	.LBE4473:
 5800              	.LBE4472:
 5801              	.LBE4471:
 5802              	.LBE4477:
 5803              	.LBE4383:
2071:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	{
 5804              		.loc 14 2071 14 is_stmt 1 view .LVU1327
 5805 004c 002D     		cmp	r5, #0
 5806 004e DBD1     		bne	.L174
 5807              	.LVL272:
 5808              	.L170:
2071:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	{
 5809              		.loc 14 2071 14 is_stmt 0 view .LVU1328
 5810              	.LBE4382:
 5811              	.LBE4381:
2031:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_element_count = 0;
 5812              		.loc 12 2031 23 view .LVU1329
 5813 0050 7268     		ldr	r2, [r6, #4]
 5814 0052 0021     		movs	r1, #0
 5815 0054 3068     		ldr	r0, [r6]
 5816 0056 9200     		lsls	r2, r2, #2
 5817 0058 FFF7FEFF 		bl	memset
 5818              	.LVL273:
2032:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_before_begin._M_nxt = nullptr;
 5819              		.loc 12 2032 24 view .LVU1330
 5820 005c 0023     		movs	r3, #0
2033:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
 5821              		.loc 12 2033 30 view .LVU1331
 5822 005e C6E90233 		strd	r3, r3, [r6, #8]
2034:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 305


 5823              		.loc 12 2034 5 view .LVU1332
 5824 0062 70BD     		pop	{r4, r5, r6, pc}
2034:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 5825              		.loc 12 2034 5 view .LVU1333
 5826              		.cfi_endproc
 5827              	.LFE6005:
 5829              		.section	.text._ZN12ParameterMapD2Ev,"axG",%progbits,_ZN12ParameterMapD5Ev,comdat
 5830              		.align	1
 5831              		.p2align 2,,3
 5832              		.weak	_ZN12ParameterMapD2Ev
 5833              		.syntax unified
 5834              		.thumb
 5835              		.thumb_func
 5836              		.fpu fpv5-d16
 5838              	_ZN12ParameterMapD2Ev:
 5839              	.LVL274:
 5840              	.LFB2938:
  67:src/parameter_controller.h **** 
 5841              		.loc 19 67 5 is_stmt 1 view -0
 5842              		.cfi_startproc
 5843              		@ args = 0, pretend = 0, frame = 0
 5844              		@ frame_needed = 0, uses_anonymous_args = 0
  67:src/parameter_controller.h **** 
 5845              		.loc 19 67 5 is_stmt 0 view .LVU1335
 5846 0000 10B5     		push	{r4, lr}
 5847              		.cfi_def_cfa_offset 8
 5848              		.cfi_offset 4, -8
 5849              		.cfi_offset 14, -4
  67:src/parameter_controller.h **** 
 5850              		.loc 19 67 5 view .LVU1336
 5851 0002 0446     		mov	r4, r0
 5852              	.LVL275:
 5853              	.LBB4502:
 5854              	.LBI4502:
 102:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****     {
 5855              		.loc 13 102 11 is_stmt 1 view .LVU1337
 5856              	.LBB4503:
 5857              	.LBB4504:
 5858              	.LBI4504:
1383:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 5859              		.loc 12 1383 5 view .LVU1338
 5860              	.LBB4505:
1387:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_deallocate_buckets();
 5861              		.loc 12 1387 12 is_stmt 0 view .LVU1339
 5862 0004 FFF7FEFF 		bl	_ZNSt10_HashtableIiSt4pairIKi5paramESaIS3_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS5
 5863              	.LVL276:
 5864              	.LBB4506:
 5865              	.LBI4506:
 411:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { _M_deallocate_buckets(_M_buckets, _M_bucket_count); }
 5866              		.loc 12 411 7 is_stmt 1 view .LVU1340
 5867              	.LBB4507:
 412:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 5868              		.loc 12 412 30 is_stmt 0 view .LVU1341
 5869 0008 2068     		ldr	r0, [r4]
 5870              	.LBB4508:
 5871              	.LBB4509:
 5872              	.LBB4510:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 306


 5873              	.LBB4511:
 380:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 5874              		.loc 12 380 44 view .LVU1342
 5875 000a 04F11803 		add	r3, r4, #24
 5876              	.LBE4511:
 5877              	.LBE4510:
 5878              	.LBE4509:
 5879              	.LBE4508:
 412:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 5880              		.loc 12 412 30 view .LVU1343
 5881 000e 6168     		ldr	r1, [r4, #4]
 5882              	.LVL277:
 5883              	.LBB4523:
 5884              	.LBI4508:
 402:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 5885              		.loc 12 402 7 is_stmt 1 view .LVU1344
 5886              	.LBB4522:
 5887              	.LBB4512:
 5888              	.LBI4510:
 379:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __builtin_expect(__bkts == &_M_single_bucket, false); }
 5889              		.loc 12 379 7 view .LVU1345
 379:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __builtin_expect(__bkts == &_M_single_bucket, false); }
 5890              		.loc 12 379 7 is_stmt 0 view .LVU1346
 5891              	.LBE4512:
 404:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return;
 5892              		.loc 12 404 2 view .LVU1347
 5893 0010 9842     		cmp	r0, r3
 5894 0012 02D0     		beq	.L181
 5895              	.LVL278:
 5896              	.LBB4513:
 5897              	.LBI4513:
 5898              		.loc 14 2093 5 is_stmt 1 view .LVU1348
 5899              	.LBB4514:
 5900              	.LBB4515:
 5901              	.LBI4515:
 157:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 5902              		.loc 17 157 2 view .LVU1349
 5903              	.LBB4516:
 5904              	.LBI4516:
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5905              		.loc 16 79 7 view .LVU1350
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5906              		.loc 16 79 7 is_stmt 0 view .LVU1351
 5907              	.LBE4516:
 5908              	.LBE4515:
 5909              	.LBB4517:
 5910              	.LBI4517:
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 5911              		.loc 15 491 7 is_stmt 1 view .LVU1352
 5912              	.LBB4518:
 5913              	.LBI4518:
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 5914              		.loc 16 120 7 view .LVU1353
 5915              	.LBB4519:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 5916              		.loc 16 133 19 is_stmt 0 view .LVU1354
 5917 0014 8900     		lsls	r1, r1, #2
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 307


 5918              	.LVL279:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 5919              		.loc 16 133 19 view .LVU1355
 5920 0016 FFF7FEFF 		bl	_ZdlPvj
 5921              	.LVL280:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 5922              		.loc 16 133 19 view .LVU1356
 5923              	.LBE4519:
 5924              	.LBE4518:
 5925              	.LBE4517:
 5926              	.LBB4520:
 5927              	.LBI4520:
 5928              		.loc 17 162 7 is_stmt 1 view .LVU1357
 5929              	.LBB4521:
 5930              	.LBI4521:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5931              		.loc 16 89 7 view .LVU1358
 5932              	.L181:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5933              		.loc 16 89 7 is_stmt 0 view .LVU1359
 5934              	.LBE4521:
 5935              	.LBE4520:
 5936              	.LBE4514:
 5937              	.LBE4513:
 5938              	.LBE4522:
 5939              	.LBE4523:
 5940              	.LBE4507:
 5941              	.LBE4506:
 5942              	.LBB4524:
 5943              	.LBI4524:
1963:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 5944              		.loc 14 1963 12 is_stmt 1 view .LVU1360
 5945              	.LBB4525:
 5946              	.LBI4525:
1109:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : private _Tp
 5947              		.loc 14 1109 12 view .LVU1361
 5948              	.LBB4526:
 5949              	.LBI4526:
 5950              		.loc 17 162 7 view .LVU1362
 5951              	.LBB4527:
 5952              	.LBI4527:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5953              		.loc 16 89 7 view .LVU1363
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5954              		.loc 16 89 7 is_stmt 0 view .LVU1364
 5955              	.LBE4527:
 5956              	.LBE4526:
 5957              	.LBE4525:
 5958              	.LBE4524:
 5959              	.LBE4505:
 5960              	.LBE4504:
 5961              	.LBE4503:
 5962              	.LBE4502:
  67:src/parameter_controller.h **** 
 5963              		.loc 19 67 22 view .LVU1365
 5964 001a 2046     		mov	r0, r4
 5965 001c 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 308


  67:src/parameter_controller.h **** 
 5966              		.loc 19 67 22 view .LVU1366
 5967              		.cfi_endproc
 5968              	.LFE2938:
 5970              		.weak	_ZN12ParameterMapD1Ev
 5971              		.thumb_set _ZN12ParameterMapD1Ev,_ZN12ParameterMapD2Ev
 5972 001e 00BF     		.section	.text._ZN11PassthroughD2Ev,"axG",%progbits,_ZN11PassthroughD5Ev,comdat
 5973              		.align	1
 5974              		.p2align 2,,3
 5975              		.weak	_ZN11PassthroughD2Ev
 5976              		.syntax unified
 5977              		.thumb
 5978              		.thumb_func
 5979              		.fpu fpv5-d16
 5981              	_ZN11PassthroughD2Ev:
 5982              	.LVL281:
 5983              	.LFB2982:
  32:src/lmdsp.hpp ****     //bool reset(double _fs);
 5984              		.loc 1 32 5 is_stmt 1 view -0
 5985              		.cfi_startproc
 5986              		@ args = 0, pretend = 0, frame = 0
 5987              		@ frame_needed = 0, uses_anonymous_args = 0
 5988              	.LBB4565:
  32:src/lmdsp.hpp ****     //bool reset(double _fs);
 5989              		.loc 1 32 20 is_stmt 0 view .LVU1368
 5990 0000 084B     		ldr	r3, .L186
 5991              	.LBE4565:
  32:src/lmdsp.hpp ****     //bool reset(double _fs);
 5992              		.loc 1 32 5 view .LVU1369
 5993 0002 10B5     		push	{r4, lr}
 5994              		.cfi_def_cfa_offset 8
 5995              		.cfi_offset 4, -8
 5996              		.cfi_offset 14, -4
  32:src/lmdsp.hpp ****     //bool reset(double _fs);
 5997              		.loc 1 32 5 view .LVU1370
 5998 0004 0446     		mov	r4, r0
 5999              	.LBB4594:
  32:src/lmdsp.hpp ****     //bool reset(double _fs);
 6000              		.loc 1 32 20 view .LVU1371
 6001 0006 40F8043B 		str	r3, [r0], #4
 6002              	.LVL282:
 6003              	.LBB4566:
 6004              	.LBI4566:
  67:src/parameter_controller.h **** 
 6005              		.loc 19 67 5 is_stmt 1 view .LVU1372
 6006              	.LBB4567:
 6007              	.LBI4567:
 102:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****     {
 6008              		.loc 13 102 11 view .LVU1373
 6009              	.LBB4568:
 6010              	.LBB4569:
 6011              	.LBI4569:
1383:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 6012              		.loc 12 1383 5 view .LVU1374
 6013              	.LBB4570:
1387:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_deallocate_buckets();
 6014              		.loc 12 1387 12 is_stmt 0 view .LVU1375
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 309


 6015 000a FFF7FEFF 		bl	_ZNSt10_HashtableIiSt4pairIKi5paramESaIS3_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS5
 6016              	.LVL283:
 6017              	.LBB4571:
 6018              	.LBI4571:
 411:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { _M_deallocate_buckets(_M_buckets, _M_bucket_count); }
 6019              		.loc 12 411 7 is_stmt 1 view .LVU1376
 6020              	.LBB4572:
 412:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 6021              		.loc 12 412 30 is_stmt 0 view .LVU1377
 6022 000e 6068     		ldr	r0, [r4, #4]
 6023              	.LBB4573:
 6024              	.LBB4574:
 6025              	.LBB4575:
 6026              	.LBB4576:
 380:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 6027              		.loc 12 380 44 view .LVU1378
 6028 0010 04F11C03 		add	r3, r4, #28
 6029              	.LBE4576:
 6030              	.LBE4575:
 6031              	.LBE4574:
 6032              	.LBE4573:
 412:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 6033              		.loc 12 412 30 view .LVU1379
 6034 0014 A168     		ldr	r1, [r4, #8]
 6035              	.LVL284:
 6036              	.LBB4588:
 6037              	.LBI4573:
 402:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 6038              		.loc 12 402 7 is_stmt 1 view .LVU1380
 6039              	.LBB4587:
 6040              	.LBB4577:
 6041              	.LBI4575:
 379:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __builtin_expect(__bkts == &_M_single_bucket, false); }
 6042              		.loc 12 379 7 view .LVU1381
 379:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __builtin_expect(__bkts == &_M_single_bucket, false); }
 6043              		.loc 12 379 7 is_stmt 0 view .LVU1382
 6044              	.LBE4577:
 404:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return;
 6045              		.loc 12 404 2 view .LVU1383
 6046 0016 9842     		cmp	r0, r3
 6047 0018 02D0     		beq	.L184
 6048              	.LVL285:
 6049              	.LBB4578:
 6050              	.LBI4578:
 6051              		.loc 14 2093 5 is_stmt 1 view .LVU1384
 6052              	.LBB4579:
 6053              	.LBB4580:
 6054              	.LBI4580:
 157:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 6055              		.loc 17 157 2 view .LVU1385
 6056              	.LBB4581:
 6057              	.LBI4581:
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6058              		.loc 16 79 7 view .LVU1386
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6059              		.loc 16 79 7 is_stmt 0 view .LVU1387
 6060              	.LBE4581:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 310


 6061              	.LBE4580:
 6062              	.LBB4582:
 6063              	.LBI4582:
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 6064              		.loc 15 491 7 is_stmt 1 view .LVU1388
 6065              	.LBB4583:
 6066              	.LBI4583:
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 6067              		.loc 16 120 7 view .LVU1389
 6068              	.LBB4584:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 6069              		.loc 16 133 19 is_stmt 0 view .LVU1390
 6070 001a 8900     		lsls	r1, r1, #2
 6071              	.LVL286:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 6072              		.loc 16 133 19 view .LVU1391
 6073 001c FFF7FEFF 		bl	_ZdlPvj
 6074              	.LVL287:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 6075              		.loc 16 133 19 view .LVU1392
 6076              	.LBE4584:
 6077              	.LBE4583:
 6078              	.LBE4582:
 6079              	.LBB4585:
 6080              	.LBI4585:
 6081              		.loc 17 162 7 is_stmt 1 view .LVU1393
 6082              	.LBB4586:
 6083              	.LBI4586:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6084              		.loc 16 89 7 view .LVU1394
 6085              	.L184:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6086              		.loc 16 89 7 is_stmt 0 view .LVU1395
 6087              	.LBE4586:
 6088              	.LBE4585:
 6089              	.LBE4579:
 6090              	.LBE4578:
 6091              	.LBE4587:
 6092              	.LBE4588:
 6093              	.LBE4572:
 6094              	.LBE4571:
 6095              	.LBB4589:
 6096              	.LBI4589:
1963:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 6097              		.loc 14 1963 12 is_stmt 1 view .LVU1396
 6098              	.LBB4590:
 6099              	.LBI4590:
1109:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : private _Tp
 6100              		.loc 14 1109 12 view .LVU1397
 6101              	.LBB4591:
 6102              	.LBI4591:
 6103              		.loc 17 162 7 view .LVU1398
 6104              	.LBB4592:
 6105              	.LBI4592:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6106              		.loc 16 89 7 view .LVU1399
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 311


 6107              		.loc 16 89 7 is_stmt 0 view .LVU1400
 6108              	.LBE4592:
 6109              	.LBE4591:
 6110              	.LBE4590:
 6111              	.LBE4589:
 6112              	.LBE4570:
 6113              	.LBE4569:
 6114              	.LBE4568:
 6115              	.LBE4567:
 6116              	.LBE4566:
 6117              	.LBB4593:
 6118              	.LBI4593:
  12:src/lmdsp.hpp ****     //virtual bool reset(double _fs);
 6119              		.loc 1 12 13 is_stmt 1 view .LVU1401
  12:src/lmdsp.hpp ****     //virtual bool reset(double _fs);
 6120              		.loc 1 12 13 is_stmt 0 view .LVU1402
 6121              	.LBE4593:
 6122              	.LBE4594:
  32:src/lmdsp.hpp ****     //bool reset(double _fs);
 6123              		.loc 1 32 21 view .LVU1403
 6124 0020 2046     		mov	r0, r4
 6125 0022 10BD     		pop	{r4, pc}
 6126              	.LVL288:
 6127              	.L187:
  32:src/lmdsp.hpp ****     //bool reset(double _fs);
 6128              		.loc 1 32 21 view .LVU1404
 6129              		.align	2
 6130              	.L186:
 6131 0024 08000000 		.word	_ZTV11Passthrough+8
 6132              		.cfi_endproc
 6133              	.LFE2982:
 6135              		.weak	_ZN11PassthroughD1Ev
 6136              		.thumb_set _ZN11PassthroughD1Ev,_ZN11PassthroughD2Ev
 6137              		.section	.text._ZN9GainStageD2Ev,"axG",%progbits,_ZN9GainStageD5Ev,comdat
 6138              		.align	1
 6139              		.p2align 2,,3
 6140              		.weak	_ZN9GainStageD2Ev
 6141              		.syntax unified
 6142              		.thumb
 6143              		.thumb_func
 6144              		.fpu fpv5-d16
 6146              	_ZN9GainStageD2Ev:
 6147              	.LVL289:
 6148              	.LFB2994:
  56:src/lmdsp.hpp ****     //bool reset(double _fs);
 6149              		.loc 1 56 5 is_stmt 1 view -0
 6150              		.cfi_startproc
 6151              		@ args = 0, pretend = 0, frame = 0
 6152              		@ frame_needed = 0, uses_anonymous_args = 0
 6153              	.LBB4632:
  56:src/lmdsp.hpp ****     //bool reset(double _fs);
 6154              		.loc 1 56 18 is_stmt 0 view .LVU1406
 6155 0000 084B     		ldr	r3, .L191
 6156              	.LBE4632:
  56:src/lmdsp.hpp ****     //bool reset(double _fs);
 6157              		.loc 1 56 5 view .LVU1407
 6158 0002 10B5     		push	{r4, lr}
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 312


 6159              		.cfi_def_cfa_offset 8
 6160              		.cfi_offset 4, -8
 6161              		.cfi_offset 14, -4
  56:src/lmdsp.hpp ****     //bool reset(double _fs);
 6162              		.loc 1 56 5 view .LVU1408
 6163 0004 0446     		mov	r4, r0
 6164              	.LBB4661:
  56:src/lmdsp.hpp ****     //bool reset(double _fs);
 6165              		.loc 1 56 18 view .LVU1409
 6166 0006 40F8043B 		str	r3, [r0], #4
 6167              	.LVL290:
 6168              	.LBB4633:
 6169              	.LBI4633:
  67:src/parameter_controller.h **** 
 6170              		.loc 19 67 5 is_stmt 1 view .LVU1410
 6171              	.LBB4634:
 6172              	.LBI4634:
 102:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****     {
 6173              		.loc 13 102 11 view .LVU1411
 6174              	.LBB4635:
 6175              	.LBB4636:
 6176              	.LBI4636:
1383:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 6177              		.loc 12 1383 5 view .LVU1412
 6178              	.LBB4637:
1387:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_deallocate_buckets();
 6179              		.loc 12 1387 12 is_stmt 0 view .LVU1413
 6180 000a FFF7FEFF 		bl	_ZNSt10_HashtableIiSt4pairIKi5paramESaIS3_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS5
 6181              	.LVL291:
 6182              	.LBB4638:
 6183              	.LBI4638:
 411:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { _M_deallocate_buckets(_M_buckets, _M_bucket_count); }
 6184              		.loc 12 411 7 is_stmt 1 view .LVU1414
 6185              	.LBB4639:
 412:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 6186              		.loc 12 412 30 is_stmt 0 view .LVU1415
 6187 000e 6068     		ldr	r0, [r4, #4]
 6188              	.LBB4640:
 6189              	.LBB4641:
 6190              	.LBB4642:
 6191              	.LBB4643:
 380:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 6192              		.loc 12 380 44 view .LVU1416
 6193 0010 04F11C03 		add	r3, r4, #28
 6194              	.LBE4643:
 6195              	.LBE4642:
 6196              	.LBE4641:
 6197              	.LBE4640:
 412:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 6198              		.loc 12 412 30 view .LVU1417
 6199 0014 A168     		ldr	r1, [r4, #8]
 6200              	.LVL292:
 6201              	.LBB4655:
 6202              	.LBI4640:
 402:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 6203              		.loc 12 402 7 is_stmt 1 view .LVU1418
 6204              	.LBB4654:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 313


 6205              	.LBB4644:
 6206              	.LBI4642:
 379:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __builtin_expect(__bkts == &_M_single_bucket, false); }
 6207              		.loc 12 379 7 view .LVU1419
 379:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __builtin_expect(__bkts == &_M_single_bucket, false); }
 6208              		.loc 12 379 7 is_stmt 0 view .LVU1420
 6209              	.LBE4644:
 404:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return;
 6210              		.loc 12 404 2 view .LVU1421
 6211 0016 9842     		cmp	r0, r3
 6212 0018 02D0     		beq	.L189
 6213              	.LVL293:
 6214              	.LBB4645:
 6215              	.LBI4645:
 6216              		.loc 14 2093 5 is_stmt 1 view .LVU1422
 6217              	.LBB4646:
 6218              	.LBB4647:
 6219              	.LBI4647:
 157:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 6220              		.loc 17 157 2 view .LVU1423
 6221              	.LBB4648:
 6222              	.LBI4648:
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6223              		.loc 16 79 7 view .LVU1424
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6224              		.loc 16 79 7 is_stmt 0 view .LVU1425
 6225              	.LBE4648:
 6226              	.LBE4647:
 6227              	.LBB4649:
 6228              	.LBI4649:
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 6229              		.loc 15 491 7 is_stmt 1 view .LVU1426
 6230              	.LBB4650:
 6231              	.LBI4650:
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 6232              		.loc 16 120 7 view .LVU1427
 6233              	.LBB4651:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 6234              		.loc 16 133 19 is_stmt 0 view .LVU1428
 6235 001a 8900     		lsls	r1, r1, #2
 6236              	.LVL294:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 6237              		.loc 16 133 19 view .LVU1429
 6238 001c FFF7FEFF 		bl	_ZdlPvj
 6239              	.LVL295:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 6240              		.loc 16 133 19 view .LVU1430
 6241              	.LBE4651:
 6242              	.LBE4650:
 6243              	.LBE4649:
 6244              	.LBB4652:
 6245              	.LBI4652:
 6246              		.loc 17 162 7 is_stmt 1 view .LVU1431
 6247              	.LBB4653:
 6248              	.LBI4653:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6249              		.loc 16 89 7 view .LVU1432
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 314


 6250              	.L189:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6251              		.loc 16 89 7 is_stmt 0 view .LVU1433
 6252              	.LBE4653:
 6253              	.LBE4652:
 6254              	.LBE4646:
 6255              	.LBE4645:
 6256              	.LBE4654:
 6257              	.LBE4655:
 6258              	.LBE4639:
 6259              	.LBE4638:
 6260              	.LBB4656:
 6261              	.LBI4656:
1963:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 6262              		.loc 14 1963 12 is_stmt 1 view .LVU1434
 6263              	.LBB4657:
 6264              	.LBI4657:
1109:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : private _Tp
 6265              		.loc 14 1109 12 view .LVU1435
 6266              	.LBB4658:
 6267              	.LBI4658:
 6268              		.loc 17 162 7 view .LVU1436
 6269              	.LBB4659:
 6270              	.LBI4659:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6271              		.loc 16 89 7 view .LVU1437
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6272              		.loc 16 89 7 is_stmt 0 view .LVU1438
 6273              	.LBE4659:
 6274              	.LBE4658:
 6275              	.LBE4657:
 6276              	.LBE4656:
 6277              	.LBE4637:
 6278              	.LBE4636:
 6279              	.LBE4635:
 6280              	.LBE4634:
 6281              	.LBE4633:
 6282              	.LBB4660:
 6283              	.LBI4660:
  12:src/lmdsp.hpp ****     //virtual bool reset(double _fs);
 6284              		.loc 1 12 13 is_stmt 1 view .LVU1439
  12:src/lmdsp.hpp ****     //virtual bool reset(double _fs);
 6285              		.loc 1 12 13 is_stmt 0 view .LVU1440
 6286              	.LBE4660:
 6287              	.LBE4661:
  56:src/lmdsp.hpp ****     //bool reset(double _fs);
 6288              		.loc 1 56 19 view .LVU1441
 6289 0020 2046     		mov	r0, r4
 6290 0022 10BD     		pop	{r4, pc}
 6291              	.LVL296:
 6292              	.L192:
  56:src/lmdsp.hpp ****     //bool reset(double _fs);
 6293              		.loc 1 56 19 view .LVU1442
 6294              		.align	2
 6295              	.L191:
 6296 0024 08000000 		.word	_ZTV9GainStage+8
 6297              		.cfi_endproc
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 315


 6298              	.LFE2994:
 6300              		.weak	_ZN9GainStageD1Ev
 6301              		.thumb_set _ZN9GainStageD1Ev,_ZN9GainStageD2Ev
 6302              		.section	.text._ZN15ParameterConfigD2Ev,"axG",%progbits,_ZN15ParameterConfigD5Ev,comdat
 6303              		.align	1
 6304              		.p2align 2,,3
 6305              		.weak	_ZN15ParameterConfigD2Ev
 6306              		.syntax unified
 6307              		.thumb
 6308              		.thumb_func
 6309              		.fpu fpv5-d16
 6311              	_ZN15ParameterConfigD2Ev:
 6312              	.LVL297:
 6313              	.LFB6601:
  92:src/parameter_controller.h **** 
 6314              		.loc 19 92 7 is_stmt 1 view -0
 6315              		.cfi_startproc
 6316              		@ args = 0, pretend = 0, frame = 0
 6317              		@ frame_needed = 0, uses_anonymous_args = 0
  92:src/parameter_controller.h **** 
 6318              		.loc 19 92 7 is_stmt 0 view .LVU1444
 6319 0000 70B5     		push	{r4, r5, r6, lr}
 6320              		.cfi_def_cfa_offset 16
 6321              		.cfi_offset 4, -16
 6322              		.cfi_offset 5, -12
 6323              		.cfi_offset 6, -8
 6324              		.cfi_offset 14, -4
 6325              	.LBB4742:
  92:src/parameter_controller.h **** 
 6326              		.loc 19 92 7 view .LVU1445
 6327 0002 1A4B     		ldr	r3, .L201
 6328 0004 00F55D74 		add	r4, r0, #884
 6329              	.LVL298:
 6330              	.LBB4743:
 6331              	.LBI4743:
  67:src/parameter_controller.h **** 
 6332              		.loc 19 67 5 is_stmt 1 view .LVU1446
 6333              	.LBB4744:
 6334              	.LBI4744:
 102:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****     {
 6335              		.loc 13 102 11 view .LVU1447
 6336              	.LBB4745:
 6337              	.LBI4745:
1383:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 6338              		.loc 12 1383 5 view .LVU1448
 6339              	.LBE4745:
 6340              	.LBE4744:
 6341              	.LBE4743:
 6342              	.LBE4742:
  92:src/parameter_controller.h **** 
 6343              		.loc 19 92 7 is_stmt 0 view .LVU1449
 6344 0008 0646     		mov	r6, r0
 6345              	.LBB4836:
 6346 000a 0360     		str	r3, [r0]
 6347              	.LBB4771:
 6348              	.LBB4770:
 6349              	.LBB4769:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 316


 6350              	.LBB4746:
1387:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_deallocate_buckets();
 6351              		.loc 12 1387 12 view .LVU1450
 6352 000c 2046     		mov	r0, r4
 6353              	.LVL299:
1387:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_deallocate_buckets();
 6354              		.loc 12 1387 12 view .LVU1451
 6355 000e FFF7FEFF 		bl	_ZNSt10_HashtableIiSt4pairIKi5paramESaIS3_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS5
 6356              	.LVL300:
 6357              	.LBB4747:
 6358              	.LBI4747:
 411:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { _M_deallocate_buckets(_M_buckets, _M_bucket_count); }
 6359              		.loc 12 411 7 is_stmt 1 view .LVU1452
 6360              	.LBB4748:
 412:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 6361              		.loc 12 412 30 is_stmt 0 view .LVU1453
 6362 0012 D6F87403 		ldr	r0, [r6, #884]
 6363              	.LBB4749:
 6364              	.LBB4750:
 6365              	.LBB4751:
 6366              	.LBB4752:
 380:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 6367              		.loc 12 380 44 view .LVU1454
 6368 0016 06F56373 		add	r3, r6, #908
 6369              	.LBE4752:
 6370              	.LBE4751:
 6371              	.LBE4750:
 6372              	.LBE4749:
 412:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 6373              		.loc 12 412 30 view .LVU1455
 6374 001a D6F87813 		ldr	r1, [r6, #888]
 6375              	.LVL301:
 6376              	.LBB4764:
 6377              	.LBI4749:
 402:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 6378              		.loc 12 402 7 is_stmt 1 view .LVU1456
 6379              	.LBB4763:
 6380              	.LBB4753:
 6381              	.LBI4751:
 379:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __builtin_expect(__bkts == &_M_single_bucket, false); }
 6382              		.loc 12 379 7 view .LVU1457
 379:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __builtin_expect(__bkts == &_M_single_bucket, false); }
 6383              		.loc 12 379 7 is_stmt 0 view .LVU1458
 6384              	.LBE4753:
 404:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return;
 6385              		.loc 12 404 2 view .LVU1459
 6386 001e 9842     		cmp	r0, r3
 6387 0020 02D0     		beq	.L194
 6388              	.LVL302:
 6389              	.LBB4754:
 6390              	.LBI4754:
 6391              		.loc 14 2093 5 is_stmt 1 view .LVU1460
 6392              	.LBB4755:
 6393              	.LBB4756:
 6394              	.LBI4756:
 157:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 6395              		.loc 17 157 2 view .LVU1461
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 317


 6396              	.LBB4757:
 6397              	.LBI4757:
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6398              		.loc 16 79 7 view .LVU1462
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6399              		.loc 16 79 7 is_stmt 0 view .LVU1463
 6400              	.LBE4757:
 6401              	.LBE4756:
 6402              	.LBB4758:
 6403              	.LBI4758:
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 6404              		.loc 15 491 7 is_stmt 1 view .LVU1464
 6405              	.LBB4759:
 6406              	.LBI4759:
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 6407              		.loc 16 120 7 view .LVU1465
 6408              	.LBB4760:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 6409              		.loc 16 133 19 is_stmt 0 view .LVU1466
 6410 0022 8900     		lsls	r1, r1, #2
 6411              	.LVL303:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 6412              		.loc 16 133 19 view .LVU1467
 6413 0024 FFF7FEFF 		bl	_ZdlPvj
 6414              	.LVL304:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 6415              		.loc 16 133 19 view .LVU1468
 6416              	.LBE4760:
 6417              	.LBE4759:
 6418              	.LBE4758:
 6419              	.LBB4761:
 6420              	.LBI4761:
 6421              		.loc 17 162 7 is_stmt 1 view .LVU1469
 6422              	.LBB4762:
 6423              	.LBI4762:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6424              		.loc 16 89 7 view .LVU1470
 6425              	.L194:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6426              		.loc 16 89 7 is_stmt 0 view .LVU1471
 6427              	.LBE4762:
 6428              	.LBE4761:
 6429              	.LBE4755:
 6430              	.LBE4754:
 6431              	.LBE4763:
 6432              	.LBE4764:
 6433              	.LBE4748:
 6434              	.LBE4747:
 6435              	.LBB4765:
 6436              	.LBI4765:
1963:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 6437              		.loc 14 1963 12 is_stmt 1 view .LVU1472
 6438              	.LBB4766:
 6439              	.LBI4766:
1109:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : private _Tp
 6440              		.loc 14 1109 12 view .LVU1473
 6441              	.LBB4767:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 318


 6442              	.LBI4767:
 6443              		.loc 17 162 7 view .LVU1474
 6444              	.LBB4768:
 6445              	.LBI4768:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6446              		.loc 16 89 7 view .LVU1475
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6447              		.loc 16 89 7 is_stmt 0 view .LVU1476
 6448 0028 351D     		adds	r5, r6, #4
 6449              	.L198:
 6450              	.LVL305:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6451              		.loc 16 89 7 view .LVU1477
 6452              	.LBE4768:
 6453              	.LBE4767:
 6454              	.LBE4766:
 6455              	.LBE4765:
 6456              	.LBE4746:
 6457              	.LBE4769:
 6458              	.LBE4770:
 6459              	.LBE4771:
  92:src/parameter_controller.h **** 
 6460              		.loc 19 92 7 discriminator 5 view .LVU1478
 6461 002a 583C     		subs	r4, r4, #88
 6462              	.LVL306:
 6463              	.LBB4772:
 6464              	.LBI4772:
  38:src/parameter_controller.h **** 	std::string label;
 6465              		.loc 19 38 8 is_stmt 1 discriminator 5 view .LVU1479
 6466              	.LBB4773:
 6467              	.LBI4773:
 657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 6468              		.loc 20 657 7 discriminator 5 view .LVU1480
 6469              	.LBB4774:
 6470              	.LBI4774:
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6471              		.loc 20 229 7 discriminator 5 view .LVU1481
 6472              	.LBB4775:
 6473              	.LBB4776:
 6474              	.LBI4776:
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 6475              		.loc 20 221 7 discriminator 5 view .LVU1482
 6476              	.LBB4777:
 6477              	.LBI4777:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 6478              		.loc 20 186 7 discriminator 5 view .LVU1483
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 6479              		.loc 20 186 7 is_stmt 0 discriminator 5 view .LVU1484
 6480              	.LBE4777:
 6481              	.LBE4776:
 6482              	.LBB4780:
 6483              	.LBI4780:
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 6484              		.loc 20 236 7 is_stmt 1 discriminator 5 view .LVU1485
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 6485              		.loc 20 236 7 is_stmt 0 discriminator 5 view .LVU1486
 6486              	.LBE4780:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 319


 6487              	.LBB4788:
 6488              	.LBB4779:
 6489              	.LBB4778:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 6490              		.loc 20 187 28 discriminator 5 view .LVU1487
 6491 002c 206B     		ldr	r0, [r4, #48]
 6492              	.LVL307:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 6493              		.loc 20 187 28 discriminator 5 view .LVU1488
 6494              	.LBE4778:
 6495              	.LBE4779:
 6496              	.LBE4788:
 6497              	.LBB4789:
 6498              	.LBB4781:
 6499              	.LBB4782:
 6500              	.LBI4782:
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 6501              		.loc 15 491 7 is_stmt 1 discriminator 5 view .LVU1489
 6502              	.LBB4783:
 6503              	.LBI4783:
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 6504              		.loc 16 120 7 discriminator 5 view .LVU1490
 6505              	.LBE4783:
 6506              	.LBE4782:
 6507              	.LBE4781:
 6508              	.LBE4789:
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 6509              		.loc 20 231 2 is_stmt 0 discriminator 5 view .LVU1491
 6510 002e 04F13803 		add	r3, r4, #56
 6511              	.LVL308:
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 6512              		.loc 20 231 2 discriminator 5 view .LVU1492
 6513 0032 9842     		cmp	r0, r3
 6514 0034 03D0     		beq	.L195
 6515              	.LBB4790:
 6516              	.LBB4787:
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 6517              		.loc 20 237 34 view .LVU1493
 6518 0036 A16B     		ldr	r1, [r4, #56]
 6519              	.LBB4786:
 6520              	.LBB4785:
 6521              	.LBB4784:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 6522              		.loc 16 133 19 view .LVU1494
 6523 0038 0131     		adds	r1, r1, #1
 6524              	.LVL309:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 6525              		.loc 16 133 19 view .LVU1495
 6526 003a FFF7FEFF 		bl	_ZdlPvj
 6527              	.LVL310:
 6528              	.L195:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 6529              		.loc 16 133 19 view .LVU1496
 6530              	.LBE4784:
 6531              	.LBE4785:
 6532              	.LBE4786:
 6533              	.LBE4787:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 320


 6534              	.LBE4790:
 6535              	.LBE4775:
 6536              	.LBE4774:
 6537              	.LBB4791:
 6538              	.LBI4791:
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6539              		.loc 20 150 14 is_stmt 1 view .LVU1497
 6540              	.LBB4792:
 6541              	.LBI4792:
 6542              		.loc 17 162 7 view .LVU1498
 6543              	.LBB4793:
 6544              	.LBI4793:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6545              		.loc 16 89 7 view .LVU1499
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6546              		.loc 16 89 7 is_stmt 0 view .LVU1500
 6547              	.LBE4793:
 6548              	.LBE4792:
 6549              	.LBE4791:
 6550              	.LBE4773:
 6551              	.LBB4794:
 6552              	.LBI4794:
 657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 6553              		.loc 20 657 7 is_stmt 1 view .LVU1501
 6554              	.LBB4795:
 6555              	.LBI4795:
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6556              		.loc 20 229 7 view .LVU1502
 6557              	.LBB4796:
 6558              	.LBB4797:
 6559              	.LBI4797:
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 6560              		.loc 20 221 7 view .LVU1503
 6561              	.LBB4798:
 6562              	.LBI4798:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 6563              		.loc 20 186 7 view .LVU1504
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 6564              		.loc 20 186 7 is_stmt 0 view .LVU1505
 6565              	.LBE4798:
 6566              	.LBE4797:
 6567              	.LBB4801:
 6568              	.LBI4801:
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 6569              		.loc 20 236 7 is_stmt 1 view .LVU1506
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 6570              		.loc 20 236 7 is_stmt 0 view .LVU1507
 6571              	.LBE4801:
 6572              	.LBB4809:
 6573              	.LBB4800:
 6574              	.LBB4799:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 6575              		.loc 20 187 28 view .LVU1508
 6576 003e A069     		ldr	r0, [r4, #24]
 6577              	.LVL311:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 6578              		.loc 20 187 28 view .LVU1509
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 321


 6579              	.LBE4799:
 6580              	.LBE4800:
 6581              	.LBE4809:
 6582              	.LBB4810:
 6583              	.LBB4802:
 6584              	.LBB4803:
 6585              	.LBI4803:
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 6586              		.loc 15 491 7 is_stmt 1 view .LVU1510
 6587              	.LBB4804:
 6588              	.LBI4804:
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 6589              		.loc 16 120 7 view .LVU1511
 6590              	.LBE4804:
 6591              	.LBE4803:
 6592              	.LBE4802:
 6593              	.LBE4810:
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 6594              		.loc 20 231 2 is_stmt 0 view .LVU1512
 6595 0040 04F12003 		add	r3, r4, #32
 6596              	.LVL312:
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 6597              		.loc 20 231 2 view .LVU1513
 6598 0044 9842     		cmp	r0, r3
 6599 0046 03D0     		beq	.L196
 6600              	.LBB4811:
 6601              	.LBB4808:
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 6602              		.loc 20 237 34 view .LVU1514
 6603 0048 216A     		ldr	r1, [r4, #32]
 6604              	.LBB4807:
 6605              	.LBB4806:
 6606              	.LBB4805:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 6607              		.loc 16 133 19 view .LVU1515
 6608 004a 0131     		adds	r1, r1, #1
 6609              	.LVL313:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 6610              		.loc 16 133 19 view .LVU1516
 6611 004c FFF7FEFF 		bl	_ZdlPvj
 6612              	.LVL314:
 6613              	.L196:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 6614              		.loc 16 133 19 view .LVU1517
 6615              	.LBE4805:
 6616              	.LBE4806:
 6617              	.LBE4807:
 6618              	.LBE4808:
 6619              	.LBE4811:
 6620              	.LBE4796:
 6621              	.LBE4795:
 6622              	.LBB4812:
 6623              	.LBI4812:
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6624              		.loc 20 150 14 is_stmt 1 view .LVU1518
 6625              	.LBB4813:
 6626              	.LBI4813:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 322


 6627              		.loc 17 162 7 view .LVU1519
 6628              	.LBB4814:
 6629              	.LBI4814:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6630              		.loc 16 89 7 view .LVU1520
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6631              		.loc 16 89 7 is_stmt 0 view .LVU1521
 6632              	.LBE4814:
 6633              	.LBE4813:
 6634              	.LBE4812:
 6635              	.LBE4794:
 6636              	.LBB4815:
 6637              	.LBI4815:
 657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 6638              		.loc 20 657 7 is_stmt 1 view .LVU1522
 6639              	.LBB4816:
 6640              	.LBI4816:
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6641              		.loc 20 229 7 view .LVU1523
 6642              	.LBB4817:
 6643              	.LBB4818:
 6644              	.LBI4818:
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 6645              		.loc 20 221 7 view .LVU1524
 6646              	.LBB4819:
 6647              	.LBI4819:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 6648              		.loc 20 186 7 view .LVU1525
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 6649              		.loc 20 186 7 is_stmt 0 view .LVU1526
 6650              	.LBE4819:
 6651              	.LBE4818:
 6652              	.LBB4822:
 6653              	.LBI4822:
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 6654              		.loc 20 236 7 is_stmt 1 view .LVU1527
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 6655              		.loc 20 236 7 is_stmt 0 view .LVU1528
 6656              	.LBE4822:
 6657              	.LBB4830:
 6658              	.LBB4821:
 6659              	.LBB4820:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 6660              		.loc 20 187 28 view .LVU1529
 6661 0050 2346     		mov	r3, r4
 6662 0052 53F8080B 		ldr	r0, [r3], #8
 6663              	.LVL315:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 6664              		.loc 20 187 28 view .LVU1530
 6665              	.LBE4820:
 6666              	.LBE4821:
 6667              	.LBE4830:
 6668              	.LBB4831:
 6669              	.LBB4823:
 6670              	.LBB4824:
 6671              	.LBI4824:
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 323


 6672              		.loc 15 491 7 is_stmt 1 view .LVU1531
 6673              	.LBB4825:
 6674              	.LBI4825:
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 6675              		.loc 16 120 7 view .LVU1532
 6676              	.LBE4825:
 6677              	.LBE4824:
 6678              	.LBE4823:
 6679              	.LBE4831:
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 6680              		.loc 20 231 2 is_stmt 0 view .LVU1533
 6681 0056 9842     		cmp	r0, r3
 6682 0058 03D0     		beq	.L197
 6683              	.LBB4832:
 6684              	.LBB4829:
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 6685              		.loc 20 237 34 view .LVU1534
 6686 005a A168     		ldr	r1, [r4, #8]
 6687              	.LBB4828:
 6688              	.LBB4827:
 6689              	.LBB4826:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 6690              		.loc 16 133 19 view .LVU1535
 6691 005c 0131     		adds	r1, r1, #1
 6692              	.LVL316:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 6693              		.loc 16 133 19 view .LVU1536
 6694 005e FFF7FEFF 		bl	_ZdlPvj
 6695              	.LVL317:
 6696              	.L197:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 6697              		.loc 16 133 19 view .LVU1537
 6698              	.LBE4826:
 6699              	.LBE4827:
 6700              	.LBE4828:
 6701              	.LBE4829:
 6702              	.LBE4832:
 6703              	.LBE4817:
 6704              	.LBE4816:
 6705              	.LBB4833:
 6706              	.LBI4833:
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6707              		.loc 20 150 14 is_stmt 1 view .LVU1538
 6708              	.LBB4834:
 6709              	.LBI4834:
 6710              		.loc 17 162 7 view .LVU1539
 6711              	.LBB4835:
 6712              	.LBI4835:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6713              		.loc 16 89 7 view .LVU1540
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6714              		.loc 16 89 7 is_stmt 0 view .LVU1541
 6715              	.LBE4835:
 6716              	.LBE4834:
 6717              	.LBE4833:
 6718              	.LBE4815:
 6719              	.LBE4772:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 324


  92:src/parameter_controller.h **** 
 6720              		.loc 19 92 7 view .LVU1542
 6721 0062 AC42     		cmp	r4, r5
 6722 0064 E1D1     		bne	.L198
 6723              	.LBE4836:
  92:src/parameter_controller.h **** 
 6724              		.loc 19 92 7 discriminator 7 view .LVU1543
 6725 0066 3046     		mov	r0, r6
 6726 0068 70BD     		pop	{r4, r5, r6, pc}
 6727              	.LVL318:
 6728              	.L202:
  92:src/parameter_controller.h **** 
 6729              		.loc 19 92 7 discriminator 7 view .LVU1544
 6730 006a 00BF     		.align	2
 6731              	.L201:
 6732 006c 08000000 		.word	_ZTV15ParameterConfig+8
 6733              		.cfi_endproc
 6734              	.LFE6601:
 6736              		.weak	_ZN15ParameterConfigD1Ev
 6737              		.thumb_set _ZN15ParameterConfigD1Ev,_ZN15ParameterConfigD2Ev
 6738              		.section	.text._ZN11PassthroughD0Ev,"axG",%progbits,_ZN11PassthroughD5Ev,comdat
 6739              		.align	1
 6740              		.p2align 2,,3
 6741              		.weak	_ZN11PassthroughD0Ev
 6742              		.syntax unified
 6743              		.thumb
 6744              		.thumb_func
 6745              		.fpu fpv5-d16
 6747              	_ZN11PassthroughD0Ev:
 6748              	.LVL319:
 6749              	.LFB2984:
  32:src/lmdsp.hpp ****     //bool reset(double _fs);
 6750              		.loc 1 32 5 is_stmt 1 view -0
 6751              		.cfi_startproc
 6752              		@ args = 0, pretend = 0, frame = 0
 6753              		@ frame_needed = 0, uses_anonymous_args = 0
 6754              	.LBB4865:
 6755              	.LBB4866:
  32:src/lmdsp.hpp ****     //bool reset(double _fs);
 6756              		.loc 1 32 20 is_stmt 0 view .LVU1546
 6757 0000 0A4B     		ldr	r3, .L206
 6758              	.LBE4866:
 6759              	.LBE4865:
  32:src/lmdsp.hpp ****     //bool reset(double _fs);
 6760              		.loc 1 32 5 view .LVU1547
 6761 0002 10B5     		push	{r4, lr}
 6762              		.cfi_def_cfa_offset 8
 6763              		.cfi_offset 4, -8
 6764              		.cfi_offset 14, -4
  32:src/lmdsp.hpp ****     //bool reset(double _fs);
 6765              		.loc 1 32 5 view .LVU1548
 6766 0004 0446     		mov	r4, r0
 6767              	.LVL320:
 6768              	.LBB4896:
 6769              	.LBI4865:
  32:src/lmdsp.hpp ****     //bool reset(double _fs);
 6770              		.loc 1 32 5 is_stmt 1 view .LVU1549
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 325


 6771              	.LBB4895:
  32:src/lmdsp.hpp ****     //bool reset(double _fs);
 6772              		.loc 1 32 20 is_stmt 0 view .LVU1550
 6773 0006 40F8043B 		str	r3, [r0], #4
 6774              	.LVL321:
 6775              	.LBB4867:
 6776              	.LBI4867:
  67:src/parameter_controller.h **** 
 6777              		.loc 19 67 5 is_stmt 1 view .LVU1551
 6778              	.LBB4868:
 6779              	.LBI4868:
 102:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****     {
 6780              		.loc 13 102 11 view .LVU1552
 6781              	.LBB4869:
 6782              	.LBB4870:
 6783              	.LBI4870:
1383:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 6784              		.loc 12 1383 5 view .LVU1553
 6785              	.LBB4871:
1387:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_deallocate_buckets();
 6786              		.loc 12 1387 12 is_stmt 0 view .LVU1554
 6787 000a FFF7FEFF 		bl	_ZNSt10_HashtableIiSt4pairIKi5paramESaIS3_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS5
 6788              	.LVL322:
 6789              	.LBB4872:
 6790              	.LBI4872:
 411:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { _M_deallocate_buckets(_M_buckets, _M_bucket_count); }
 6791              		.loc 12 411 7 is_stmt 1 view .LVU1555
 6792              	.LBB4873:
 412:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 6793              		.loc 12 412 30 is_stmt 0 view .LVU1556
 6794 000e 6068     		ldr	r0, [r4, #4]
 6795              	.LBB4874:
 6796              	.LBB4875:
 6797              	.LBB4876:
 6798              	.LBB4877:
 380:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 6799              		.loc 12 380 44 view .LVU1557
 6800 0010 04F11C03 		add	r3, r4, #28
 6801              	.LBE4877:
 6802              	.LBE4876:
 6803              	.LBE4875:
 6804              	.LBE4874:
 412:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 6805              		.loc 12 412 30 view .LVU1558
 6806 0014 A168     		ldr	r1, [r4, #8]
 6807              	.LVL323:
 6808              	.LBB4889:
 6809              	.LBI4874:
 402:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 6810              		.loc 12 402 7 is_stmt 1 view .LVU1559
 6811              	.LBB4888:
 6812              	.LBB4878:
 6813              	.LBI4876:
 379:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __builtin_expect(__bkts == &_M_single_bucket, false); }
 6814              		.loc 12 379 7 view .LVU1560
 379:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __builtin_expect(__bkts == &_M_single_bucket, false); }
 6815              		.loc 12 379 7 is_stmt 0 view .LVU1561
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 326


 6816              	.LBE4878:
 404:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return;
 6817              		.loc 12 404 2 view .LVU1562
 6818 0016 9842     		cmp	r0, r3
 6819 0018 02D0     		beq	.L204
 6820              	.LVL324:
 6821              	.LBB4879:
 6822              	.LBI4879:
 6823              		.loc 14 2093 5 is_stmt 1 view .LVU1563
 6824              	.LBB4880:
 6825              	.LBB4881:
 6826              	.LBI4881:
 157:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 6827              		.loc 17 157 2 view .LVU1564
 6828              	.LBB4882:
 6829              	.LBI4882:
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6830              		.loc 16 79 7 view .LVU1565
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6831              		.loc 16 79 7 is_stmt 0 view .LVU1566
 6832              	.LBE4882:
 6833              	.LBE4881:
 6834              	.LBB4883:
 6835              	.LBI4883:
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 6836              		.loc 15 491 7 is_stmt 1 view .LVU1567
 6837              	.LBB4884:
 6838              	.LBI4884:
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 6839              		.loc 16 120 7 view .LVU1568
 6840              	.LBB4885:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 6841              		.loc 16 133 19 is_stmt 0 view .LVU1569
 6842 001a 8900     		lsls	r1, r1, #2
 6843              	.LVL325:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 6844              		.loc 16 133 19 view .LVU1570
 6845 001c FFF7FEFF 		bl	_ZdlPvj
 6846              	.LVL326:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 6847              		.loc 16 133 19 view .LVU1571
 6848              	.LBE4885:
 6849              	.LBE4884:
 6850              	.LBE4883:
 6851              	.LBB4886:
 6852              	.LBI4886:
 6853              		.loc 17 162 7 is_stmt 1 view .LVU1572
 6854              	.LBB4887:
 6855              	.LBI4887:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6856              		.loc 16 89 7 view .LVU1573
 6857              	.L204:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6858              		.loc 16 89 7 is_stmt 0 view .LVU1574
 6859              	.LBE4887:
 6860              	.LBE4886:
 6861              	.LBE4880:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 327


 6862              	.LBE4879:
 6863              	.LBE4888:
 6864              	.LBE4889:
 6865              	.LBE4873:
 6866              	.LBE4872:
 6867              	.LBB4890:
 6868              	.LBI4890:
1963:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 6869              		.loc 14 1963 12 is_stmt 1 view .LVU1575
 6870              	.LBB4891:
 6871              	.LBI4891:
1109:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : private _Tp
 6872              		.loc 14 1109 12 view .LVU1576
 6873              	.LBB4892:
 6874              	.LBI4892:
 6875              		.loc 17 162 7 view .LVU1577
 6876              	.LBB4893:
 6877              	.LBI4893:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6878              		.loc 16 89 7 view .LVU1578
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6879              		.loc 16 89 7 is_stmt 0 view .LVU1579
 6880              	.LBE4893:
 6881              	.LBE4892:
 6882              	.LBE4891:
 6883              	.LBE4890:
 6884              	.LBE4871:
 6885              	.LBE4870:
 6886              	.LBE4869:
 6887              	.LBE4868:
 6888              	.LBE4867:
 6889              	.LBB4894:
 6890              	.LBI4894:
  12:src/lmdsp.hpp ****     //virtual bool reset(double _fs);
 6891              		.loc 1 12 13 is_stmt 1 view .LVU1580
  12:src/lmdsp.hpp ****     //virtual bool reset(double _fs);
 6892              		.loc 1 12 13 is_stmt 0 view .LVU1581
 6893              	.LBE4894:
 6894              	.LBE4895:
 6895              	.LBE4896:
  32:src/lmdsp.hpp ****     //bool reset(double _fs);
 6896              		.loc 1 32 21 view .LVU1582
 6897 0020 2046     		mov	r0, r4
 6898 0022 2421     		movs	r1, #36
 6899 0024 FFF7FEFF 		bl	_ZdlPvj
 6900              	.LVL327:
 6901 0028 2046     		mov	r0, r4
 6902 002a 10BD     		pop	{r4, pc}
 6903              	.LVL328:
 6904              	.L207:
  32:src/lmdsp.hpp ****     //bool reset(double _fs);
 6905              		.loc 1 32 21 view .LVU1583
 6906              		.align	2
 6907              	.L206:
 6908 002c 08000000 		.word	_ZTV11Passthrough+8
 6909              		.cfi_endproc
 6910              	.LFE2984:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 328


 6912              		.section	.text._ZN9GainStageD0Ev,"axG",%progbits,_ZN9GainStageD5Ev,comdat
 6913              		.align	1
 6914              		.p2align 2,,3
 6915              		.weak	_ZN9GainStageD0Ev
 6916              		.syntax unified
 6917              		.thumb
 6918              		.thumb_func
 6919              		.fpu fpv5-d16
 6921              	_ZN9GainStageD0Ev:
 6922              	.LVL329:
 6923              	.LFB2996:
  56:src/lmdsp.hpp ****     //bool reset(double _fs);
 6924              		.loc 1 56 5 is_stmt 1 view -0
 6925              		.cfi_startproc
 6926              		@ args = 0, pretend = 0, frame = 0
 6927              		@ frame_needed = 0, uses_anonymous_args = 0
 6928              	.LBB4925:
 6929              	.LBB4926:
  56:src/lmdsp.hpp ****     //bool reset(double _fs);
 6930              		.loc 1 56 18 is_stmt 0 view .LVU1585
 6931 0000 0A4B     		ldr	r3, .L211
 6932              	.LBE4926:
 6933              	.LBE4925:
  56:src/lmdsp.hpp ****     //bool reset(double _fs);
 6934              		.loc 1 56 5 view .LVU1586
 6935 0002 10B5     		push	{r4, lr}
 6936              		.cfi_def_cfa_offset 8
 6937              		.cfi_offset 4, -8
 6938              		.cfi_offset 14, -4
  56:src/lmdsp.hpp ****     //bool reset(double _fs);
 6939              		.loc 1 56 5 view .LVU1587
 6940 0004 0446     		mov	r4, r0
 6941              	.LVL330:
 6942              	.LBB4956:
 6943              	.LBI4925:
  56:src/lmdsp.hpp ****     //bool reset(double _fs);
 6944              		.loc 1 56 5 is_stmt 1 view .LVU1588
 6945              	.LBB4955:
  56:src/lmdsp.hpp ****     //bool reset(double _fs);
 6946              		.loc 1 56 18 is_stmt 0 view .LVU1589
 6947 0006 40F8043B 		str	r3, [r0], #4
 6948              	.LVL331:
 6949              	.LBB4927:
 6950              	.LBI4927:
  67:src/parameter_controller.h **** 
 6951              		.loc 19 67 5 is_stmt 1 view .LVU1590
 6952              	.LBB4928:
 6953              	.LBI4928:
 102:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****     {
 6954              		.loc 13 102 11 view .LVU1591
 6955              	.LBB4929:
 6956              	.LBB4930:
 6957              	.LBI4930:
1383:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 6958              		.loc 12 1383 5 view .LVU1592
 6959              	.LBB4931:
1387:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_deallocate_buckets();
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 329


 6960              		.loc 12 1387 12 is_stmt 0 view .LVU1593
 6961 000a FFF7FEFF 		bl	_ZNSt10_HashtableIiSt4pairIKi5paramESaIS3_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS5
 6962              	.LVL332:
 6963              	.LBB4932:
 6964              	.LBI4932:
 411:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { _M_deallocate_buckets(_M_buckets, _M_bucket_count); }
 6965              		.loc 12 411 7 is_stmt 1 view .LVU1594
 6966              	.LBB4933:
 412:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 6967              		.loc 12 412 30 is_stmt 0 view .LVU1595
 6968 000e 6068     		ldr	r0, [r4, #4]
 6969              	.LBB4934:
 6970              	.LBB4935:
 6971              	.LBB4936:
 6972              	.LBB4937:
 380:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 6973              		.loc 12 380 44 view .LVU1596
 6974 0010 04F11C03 		add	r3, r4, #28
 6975              	.LBE4937:
 6976              	.LBE4936:
 6977              	.LBE4935:
 6978              	.LBE4934:
 412:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 6979              		.loc 12 412 30 view .LVU1597
 6980 0014 A168     		ldr	r1, [r4, #8]
 6981              	.LVL333:
 6982              	.LBB4949:
 6983              	.LBI4934:
 402:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 6984              		.loc 12 402 7 is_stmt 1 view .LVU1598
 6985              	.LBB4948:
 6986              	.LBB4938:
 6987              	.LBI4936:
 379:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __builtin_expect(__bkts == &_M_single_bucket, false); }
 6988              		.loc 12 379 7 view .LVU1599
 379:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __builtin_expect(__bkts == &_M_single_bucket, false); }
 6989              		.loc 12 379 7 is_stmt 0 view .LVU1600
 6990              	.LBE4938:
 404:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return;
 6991              		.loc 12 404 2 view .LVU1601
 6992 0016 9842     		cmp	r0, r3
 6993 0018 02D0     		beq	.L209
 6994              	.LVL334:
 6995              	.LBB4939:
 6996              	.LBI4939:
 6997              		.loc 14 2093 5 is_stmt 1 view .LVU1602
 6998              	.LBB4940:
 6999              	.LBB4941:
 7000              	.LBI4941:
 157:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 7001              		.loc 17 157 2 view .LVU1603
 7002              	.LBB4942:
 7003              	.LBI4942:
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7004              		.loc 16 79 7 view .LVU1604
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7005              		.loc 16 79 7 is_stmt 0 view .LVU1605
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 330


 7006              	.LBE4942:
 7007              	.LBE4941:
 7008              	.LBB4943:
 7009              	.LBI4943:
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 7010              		.loc 15 491 7 is_stmt 1 view .LVU1606
 7011              	.LBB4944:
 7012              	.LBI4944:
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 7013              		.loc 16 120 7 view .LVU1607
 7014              	.LBB4945:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 7015              		.loc 16 133 19 is_stmt 0 view .LVU1608
 7016 001a 8900     		lsls	r1, r1, #2
 7017              	.LVL335:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 7018              		.loc 16 133 19 view .LVU1609
 7019 001c FFF7FEFF 		bl	_ZdlPvj
 7020              	.LVL336:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 7021              		.loc 16 133 19 view .LVU1610
 7022              	.LBE4945:
 7023              	.LBE4944:
 7024              	.LBE4943:
 7025              	.LBB4946:
 7026              	.LBI4946:
 7027              		.loc 17 162 7 is_stmt 1 view .LVU1611
 7028              	.LBB4947:
 7029              	.LBI4947:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7030              		.loc 16 89 7 view .LVU1612
 7031              	.L209:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7032              		.loc 16 89 7 is_stmt 0 view .LVU1613
 7033              	.LBE4947:
 7034              	.LBE4946:
 7035              	.LBE4940:
 7036              	.LBE4939:
 7037              	.LBE4948:
 7038              	.LBE4949:
 7039              	.LBE4933:
 7040              	.LBE4932:
 7041              	.LBB4950:
 7042              	.LBI4950:
1963:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 7043              		.loc 14 1963 12 is_stmt 1 view .LVU1614
 7044              	.LBB4951:
 7045              	.LBI4951:
1109:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : private _Tp
 7046              		.loc 14 1109 12 view .LVU1615
 7047              	.LBB4952:
 7048              	.LBI4952:
 7049              		.loc 17 162 7 view .LVU1616
 7050              	.LBB4953:
 7051              	.LBI4953:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7052              		.loc 16 89 7 view .LVU1617
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 331


  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7053              		.loc 16 89 7 is_stmt 0 view .LVU1618
 7054              	.LBE4953:
 7055              	.LBE4952:
 7056              	.LBE4951:
 7057              	.LBE4950:
 7058              	.LBE4931:
 7059              	.LBE4930:
 7060              	.LBE4929:
 7061              	.LBE4928:
 7062              	.LBE4927:
 7063              	.LBB4954:
 7064              	.LBI4954:
  12:src/lmdsp.hpp ****     //virtual bool reset(double _fs);
 7065              		.loc 1 12 13 is_stmt 1 view .LVU1619
  12:src/lmdsp.hpp ****     //virtual bool reset(double _fs);
 7066              		.loc 1 12 13 is_stmt 0 view .LVU1620
 7067              	.LBE4954:
 7068              	.LBE4955:
 7069              	.LBE4956:
  56:src/lmdsp.hpp ****     //bool reset(double _fs);
 7070              		.loc 1 56 19 view .LVU1621
 7071 0020 2046     		mov	r0, r4
 7072 0022 2821     		movs	r1, #40
 7073 0024 FFF7FEFF 		bl	_ZdlPvj
 7074              	.LVL337:
 7075 0028 2046     		mov	r0, r4
 7076 002a 10BD     		pop	{r4, pc}
 7077              	.LVL338:
 7078              	.L212:
  56:src/lmdsp.hpp ****     //bool reset(double _fs);
 7079              		.loc 1 56 19 view .LVU1622
 7080              		.align	2
 7081              	.L211:
 7082 002c 08000000 		.word	_ZTV9GainStage+8
 7083              		.cfi_endproc
 7084              	.LFE2996:
 7086              		.section	.text._ZNSt10_HashtableIiSt4pairIKi5paramESaIS3_ENSt8__detail10_Select1stESt8equal_toIiES
 7087              		.align	1
 7088              		.p2align 2,,3
 7089              		.weak	_ZNSt10_HashtableIiSt4pairIKi5paramESaIS3_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiE
 7090              		.syntax unified
 7091              		.thumb
 7092              		.thumb_func
 7093              		.fpu fpv5-d16
 7095              	_ZNSt10_HashtableIiSt4pairIKi5paramESaIS3_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS5_18_
 7096              	.LVL339:
 7097              	.LFB6038:
1098:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 7098              		.loc 12 1098 7 is_stmt 1 view -0
 7099              		.cfi_startproc
 7100              		@ args = 0, pretend = 0, frame = 8
 7101              		@ frame_needed = 0, uses_anonymous_args = 0
1098:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 7102              		.loc 12 1098 7 is_stmt 0 view .LVU1624
 7103 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 7104              		.cfi_def_cfa_offset 36
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 332


 7105              		.cfi_offset 4, -36
 7106              		.cfi_offset 5, -32
 7107              		.cfi_offset 6, -28
 7108              		.cfi_offset 7, -24
 7109              		.cfi_offset 8, -20
 7110              		.cfi_offset 9, -16
 7111              		.cfi_offset 10, -12
 7112              		.cfi_offset 11, -8
 7113              		.cfi_offset 14, -4
1106:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  {
 7114              		.loc 12 1106 30 view .LVU1625
 7115 0004 4A68     		ldr	r2, [r1, #4]
1098:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 7116              		.loc 12 1098 7 view .LVU1626
 7117 0006 83B0     		sub	sp, sp, #12
 7118              		.cfi_def_cfa_offset 48
1103:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	const __rehash_state& __former_state = _M_rehash_policy._M_state();
 7119              		.loc 12 1103 14 view .LVU1627
 7120 0008 D0F804A0 		ldr	r10, [r0, #4]
 7121              	.LVL340:
 477:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 7122              		.loc 14 477 7 is_stmt 1 view .LVU1628
1098:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 7123              		.loc 12 1098 7 is_stmt 0 view .LVU1629
 7124 000c 0646     		mov	r6, r0
 7125 000e 0D46     		mov	r5, r1
1106:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  {
 7126              		.loc 12 1106 2 view .LVU1630
 7127 0010 5245     		cmp	r2, r10
 7128 0012 00F0FF80 		beq	.L214
 7129              	.LBB5321:
 7130              	.LBB5322:
 392:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  {
 7131              		.loc 12 392 2 view .LVU1631
 7132 0016 012A     		cmp	r2, #1
 7133              	.LBE5322:
 7134              	.LBE5321:
1108:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_buckets = _M_allocate_buckets(__ht._M_bucket_count);
 7135              		.loc 12 1108 23 view .LVU1632
 7136 0018 D0F80090 		ldr	r9, [r0]
 7137              	.LVL341:
 7138              	.LBB5343:
 7139              	.LBI5321:
 390:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 7140              		.loc 12 390 7 is_stmt 1 view .LVU1633
 7141              	.LBB5340:
 392:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  {
 7142              		.loc 12 392 2 is_stmt 0 view .LVU1634
 7143 001c 00F02A81 		beq	.L260
 7144              	.LVL342:
 7145              	.LBB5323:
 7146              	.LBI5323:
2081:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 7147              		.loc 14 2081 5 is_stmt 1 view .LVU1635
 7148              	.LBB5324:
 7149              	.LBB5325:
 7150              	.LBI5325:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 333


 157:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 7151              		.loc 17 157 2 view .LVU1636
 7152              	.LBB5326:
 7153              	.LBI5326:
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7154              		.loc 16 79 7 view .LVU1637
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7155              		.loc 16 79 7 is_stmt 0 view .LVU1638
 7156              	.LBE5326:
 7157              	.LBE5325:
 7158              	.LBB5327:
 7159              	.LBI5327:
 459:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 7160              		.loc 15 459 7 is_stmt 1 view .LVU1639
 7161              	.LBB5328:
 7162              	.LBI5328:
 103:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 7163              		.loc 16 103 7 view .LVU1640
 7164              	.LBB5329:
 105:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  std::__throw_bad_alloc();
 7165              		.loc 16 105 2 is_stmt 0 view .LVU1641
 7166 0020 B2F1005F 		cmp	r2, #536870912
 7167 0024 80F02F81 		bcs	.L223
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 7168              		.loc 16 115 41 view .LVU1642
 7169 0028 9200     		lsls	r2, r2, #2
 7170              	.LVL343:
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 7171              		.loc 16 115 41 view .LVU1643
 7172 002a 1046     		mov	r0, r2
 7173              	.LVL344:
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 7174              		.loc 16 115 41 view .LVU1644
 7175 002c 0192     		str	r2, [sp, #4]
 7176 002e FFF7FEFF 		bl	_Znwj
 7177              	.LVL345:
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 7178              		.loc 16 115 41 view .LVU1645
 7179              	.LBE5329:
 7180              	.LBE5328:
 7181              	.LBE5327:
2087:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       return __p;
 7182              		.loc 14 2087 23 view .LVU1646
 7183 0032 019A     		ldr	r2, [sp, #4]
 7184 0034 0021     		movs	r1, #0
 7185              	.LBB5334:
 7186              	.LBB5332:
 7187              	.LBB5330:
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 7188              		.loc 16 115 41 view .LVU1647
 7189 0036 0446     		mov	r4, r0
 7190              	.LVL346:
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 7191              		.loc 16 115 41 view .LVU1648
 7192              	.LBE5330:
 7193              	.LBE5332:
 7194              	.LBE5334:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 334


2087:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       return __p;
 7195              		.loc 14 2087 23 view .LVU1649
 7196 0038 FFF7FEFF 		bl	memset
 7197              	.LVL347:
 7198              	.LBB5335:
 7199              	.LBI5335:
 7200              		.loc 17 162 7 is_stmt 1 view .LVU1650
 7201              	.LBB5336:
 7202              	.LBI5336:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7203              		.loc 16 89 7 view .LVU1651
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7204              		.loc 16 89 7 is_stmt 0 view .LVU1652
 7205              	.LBE5336:
 7206              	.LBE5335:
 7207              	.LBE5324:
 7208              	.LBE5323:
 7209              	.LBE5340:
 7210              	.LBE5343:
1110:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  }
 7211              		.loc 12 1110 29 view .LVU1653
 7212 003c 6A68     		ldr	r2, [r5, #4]
 7213              	.LVL348:
 7214              	.L216:
 7215              	.LBB5344:
1119:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_rehash_policy = __ht._M_rehash_policy;
 7216              		.loc 12 1119 30 view .LVU1654
 7217 003e EB68     		ldr	r3, [r5, #12]
1122:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_assign(std::forward<_Ht>(__ht), __roan);
 7218              		.loc 12 1122 29 view .LVU1655
 7219 0040 0027     		movs	r7, #0
 7220              	.LBE5344:
1110:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  }
 7221              		.loc 12 1110 22 view .LVU1656
 7222 0042 C6E90042 		strd	r4, r2, [r6]
 7223              	.LBB5808:
1120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    __reuse_or_alloc_node_gen_t __roan(_M_begin(), *this);
 7224              		.loc 12 1120 6 view .LVU1657
 7225 0046 05F11002 		add	r2, r5, #16
1119:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_rehash_policy = __ht._M_rehash_policy;
 7226              		.loc 12 1119 23 view .LVU1658
 7227 004a F360     		str	r3, [r6, #12]
1120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    __reuse_or_alloc_node_gen_t __roan(_M_begin(), *this);
 7228              		.loc 12 1120 6 view .LVU1659
 7229 004c 06F11003 		add	r3, r6, #16
 7230              	.LBB5345:
 7231              	.LBB5346:
 421:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 7232              		.loc 12 421 64 view .LVU1660
 7233 0050 B468     		ldr	r4, [r6, #8]
 7234              	.LBE5346:
 7235              	.LBE5345:
1120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    __reuse_or_alloc_node_gen_t __roan(_M_begin(), *this);
 7236              		.loc 12 1120 6 view .LVU1661
 7237 0052 92E80300 		ldm	r2, {r0, r1}
 7238 0056 83E80300 		stm	r3, {r0, r1}
 7239              	.LVL349:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 335


 7240              	.LBB5348:
 7241              	.LBI5345:
 420:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return static_cast<__node_type*>(_M_before_begin._M_nxt); }
 7242              		.loc 12 420 7 is_stmt 1 view .LVU1662
 420:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return static_cast<__node_type*>(_M_before_begin._M_nxt); }
 7243              		.loc 12 420 7 is_stmt 0 view .LVU1663
 7244              	.LBE5348:
 7245              	.LBB5349:
 7246              	.LBI5349:
 113:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : _M_nodes(__nodes), _M_h(__h) { }
 7247              		.loc 14 113 7 is_stmt 1 view .LVU1664
 113:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : _M_nodes(__nodes), _M_h(__h) { }
 7248              		.loc 14 113 7 is_stmt 0 view .LVU1665
 7249              	.LBE5349:
1122:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_assign(std::forward<_Ht>(__ht), __roan);
 7250              		.loc 12 1122 29 view .LVU1666
 7251 005a B760     		str	r7, [r6, #8]
 7252              	.LVL350:
 7253              	.LBB5350:
 7254              	.LBI5350:
1149:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 7255              		.loc 12 1149 7 is_stmt 1 view .LVU1667
 7256              	.LBB5351:
 7257              	.LBB5352:
1159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      return;
 7258              		.loc 12 1159 32 is_stmt 0 view .LVU1668
 7259 005c AD68     		ldr	r5, [r5, #8]
 7260              	.LVL351:
1159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      return;
 7261              		.loc 12 1159 6 view .LVU1669
 7262 005e 002D     		cmp	r5, #0
 7263 0060 00F09380 		beq	.L218
 7264              	.LVL352:
 7265              	.LBB5353:
 7266              	.LBI5353:
 122:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	{
 7267              		.loc 14 122 2 is_stmt 1 view .LVU1670
 7268              	.LBB5354:
 124:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    {
 7269              		.loc 14 124 4 is_stmt 0 view .LVU1671
 7270 0064 002C     		cmp	r4, #0
 7271 0066 00F0C380 		beq	.L224
 7272              	.LVL353:
 7273              	.L264:
 7274              	.LBB5355:
 7275              	.LBB5356:
 7276              	.LBI5356:
 282:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return static_cast<_Hash_node*>(this->_M_nxt); }
 7277              		.loc 14 282 7 is_stmt 1 view .LVU1672
 7278              	.LBE5356:
 7279              	.LBB5358:
 7280              	.LBB5359:
 7281              	.LBB5360:
 7282              	.LBB5361:
 7283              	.LBB5362:
 7284              	.LBB5363:
 7285              	.LBB5364:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 336


 7286              	.LBB5365:
 7287              	.LBB5366:
 7288              	.LBB5367:
 7289              	.LBB5368:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 7290              		.loc 20 187 28 is_stmt 0 view .LVU1673
 7291 006a A06B     		ldr	r0, [r4, #56]
 7292              	.LBE5368:
 7293              	.LBE5367:
 7294              	.LBB5369:
 7295              	.LBB5370:
 203:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 7296              		.loc 20 203 57 view .LVU1674
 7297 006c 04F14003 		add	r3, r4, #64
 7298              	.LBE5370:
 7299              	.LBE5369:
 7300              	.LBE5366:
 7301              	.LBE5365:
 7302              	.LBE5364:
 7303              	.LBE5363:
 7304              	.LBE5362:
 7305              	.LBE5361:
 7306              	.LBE5360:
 7307              	.LBE5359:
 7308              	.LBE5358:
 128:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      auto& __a = _M_h._M_node_allocator();
 7309              		.loc 14 128 23 view .LVU1675
 7310 0070 2746     		mov	r7, r4
 7311 0072 0022     		movs	r2, #0
 7312              	.LBB5434:
 7313              	.LBB5432:
 7314              	.LBB5430:
 7315              	.LBB5428:
 7316              	.LBB5426:
 7317              	.LBB5388:
 7318              	.LBB5383:
 7319              	.LBB5381:
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 7320              		.loc 20 231 2 view .LVU1676
 7321 0074 9842     		cmp	r0, r3
 7322              	.LBE5381:
 7323              	.LBE5383:
 7324              	.LBE5388:
 7325              	.LBE5426:
 7326              	.LBE5428:
 7327              	.LBE5430:
 7328              	.LBE5432:
 7329              	.LBE5434:
 7330              	.LBB5435:
 7331              	.LBB5357:
 283:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 7332              		.loc 14 283 53 view .LVU1677
 7333 0076 D4F800B0 		ldr	fp, [r4]
 7334              	.LVL354:
 283:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 7335              		.loc 14 283 53 view .LVU1678
 7336              	.LBE5357:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 337


 7337              	.LBE5435:
 128:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      auto& __a = _M_h._M_node_allocator();
 7338              		.loc 14 128 23 view .LVU1679
 7339 007a 47F8042B 		str	r2, [r7], #4
 7340              	.LVL355:
 7341              	.LBB5436:
 7342              	.LBI5358:
 527:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(is_nothrow_destructible<_Up>::value)
 7343              		.loc 15 527 2 is_stmt 1 view .LVU1680
 7344              	.LBB5433:
 7345              	.LBI5359:
 7346              		.loc 16 154 2 view .LVU1681
 7347              	.LBB5431:
 7348              	.LBI5360:
 211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     : private __pair_base<_T1, _T2>
 7349              		.loc 25 211 12 view .LVU1682
 7350              	.LBB5429:
 7351 007e 07F10407 		add	r7, r7, #4
 7352              	.LVL356:
 7353              	.LBB5427:
 7354              	.LBI5362:
  38:src/parameter_controller.h **** 	std::string label;
 7355              		.loc 19 38 8 view .LVU1683
 7356              	.LBB5389:
 7357              	.LBI5363:
 657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 7358              		.loc 20 657 7 view .LVU1684
 7359              	.LBB5384:
 7360              	.LBI5364:
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7361              		.loc 20 229 7 view .LVU1685
 7362              	.LBB5382:
 7363              	.LBB5373:
 7364              	.LBI5366:
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 7365              		.loc 20 221 7 view .LVU1686
 7366              	.LBB5371:
 7367              	.LBI5367:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 7368              		.loc 20 186 7 view .LVU1687
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 7369              		.loc 20 186 7 is_stmt 0 view .LVU1688
 7370              	.LBE5371:
 7371              	.LBB5372:
 7372              	.LBI5369:
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7373              		.loc 20 200 7 is_stmt 1 view .LVU1689
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7374              		.loc 20 200 7 is_stmt 0 view .LVU1690
 7375              	.LBE5372:
 7376              	.LBE5373:
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 7377              		.loc 20 231 2 view .LVU1691
 7378 0082 03D0     		beq	.L225
 7379              	.LVL357:
 7380              	.LBB5374:
 7381              	.LBI5374:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 338


 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 7382              		.loc 20 236 7 is_stmt 1 view .LVU1692
 7383              	.LBB5375:
 7384              	.LBB5376:
 7385              	.LBI5376:
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 7386              		.loc 15 491 7 view .LVU1693
 7387              	.LBB5377:
 7388              	.LBI5377:
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 7389              		.loc 16 120 7 view .LVU1694
 7390              	.LBE5377:
 7391              	.LBE5376:
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 7392              		.loc 20 237 34 is_stmt 0 view .LVU1695
 7393 0084 216C     		ldr	r1, [r4, #64]
 7394              	.LBB5380:
 7395              	.LBB5379:
 7396              	.LBB5378:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 7397              		.loc 16 133 19 view .LVU1696
 7398 0086 0131     		adds	r1, r1, #1
 7399              	.LVL358:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 7400              		.loc 16 133 19 view .LVU1697
 7401 0088 FFF7FEFF 		bl	_ZdlPvj
 7402              	.LVL359:
 7403              	.L225:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 7404              		.loc 16 133 19 view .LVU1698
 7405              	.LBE5378:
 7406              	.LBE5379:
 7407              	.LBE5380:
 7408              	.LBE5375:
 7409              	.LBE5374:
 7410              	.LBE5382:
 7411              	.LBE5384:
 7412              	.LBB5385:
 7413              	.LBI5385:
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7414              		.loc 20 150 14 is_stmt 1 view .LVU1699
 7415              	.LBB5386:
 7416              	.LBI5386:
 7417              		.loc 17 162 7 view .LVU1700
 7418              	.LBB5387:
 7419              	.LBI5387:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7420              		.loc 16 89 7 view .LVU1701
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7421              		.loc 16 89 7 is_stmt 0 view .LVU1702
 7422              	.LBE5387:
 7423              	.LBE5386:
 7424              	.LBE5385:
 7425              	.LBE5389:
 7426              	.LBB5390:
 7427              	.LBI5390:
 657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 339


 7428              		.loc 20 657 7 is_stmt 1 view .LVU1703
 7429              	.LBB5391:
 7430              	.LBI5391:
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7431              		.loc 20 229 7 view .LVU1704
 7432              	.LBB5392:
 7433              	.LBB5393:
 7434              	.LBI5393:
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 7435              		.loc 20 221 7 view .LVU1705
 7436              	.LBB5394:
 7437              	.LBI5394:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 7438              		.loc 20 186 7 view .LVU1706
 7439              	.LBB5395:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 7440              		.loc 20 187 28 is_stmt 0 view .LVU1707
 7441 008c 206A     		ldr	r0, [r4, #32]
 7442              	.LVL360:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 7443              		.loc 20 187 28 view .LVU1708
 7444              	.LBE5395:
 7445              	.LBE5394:
 7446              	.LBB5396:
 7447              	.LBI5396:
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7448              		.loc 20 200 7 is_stmt 1 view .LVU1709
 7449              	.LBB5397:
 203:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 7450              		.loc 20 203 57 is_stmt 0 view .LVU1710
 7451 008e 04F12803 		add	r3, r4, #40
 7452              	.LBE5397:
 7453              	.LBE5396:
 7454              	.LBE5393:
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 7455              		.loc 20 231 2 view .LVU1711
 7456 0092 9842     		cmp	r0, r3
 7457 0094 03D0     		beq	.L226
 7458              	.LVL361:
 7459              	.LBB5398:
 7460              	.LBI5398:
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 7461              		.loc 20 236 7 is_stmt 1 view .LVU1712
 7462              	.LBB5399:
 7463              	.LBB5400:
 7464              	.LBI5400:
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 7465              		.loc 15 491 7 view .LVU1713
 7466              	.LBB5401:
 7467              	.LBI5401:
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 7468              		.loc 16 120 7 view .LVU1714
 7469              	.LBE5401:
 7470              	.LBE5400:
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 7471              		.loc 20 237 34 is_stmt 0 view .LVU1715
 7472 0096 A16A     		ldr	r1, [r4, #40]
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 340


 7473              	.LBB5404:
 7474              	.LBB5403:
 7475              	.LBB5402:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 7476              		.loc 16 133 19 view .LVU1716
 7477 0098 0131     		adds	r1, r1, #1
 7478              	.LVL362:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 7479              		.loc 16 133 19 view .LVU1717
 7480 009a FFF7FEFF 		bl	_ZdlPvj
 7481              	.LVL363:
 7482              	.L226:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 7483              		.loc 16 133 19 view .LVU1718
 7484              	.LBE5402:
 7485              	.LBE5403:
 7486              	.LBE5404:
 7487              	.LBE5399:
 7488              	.LBE5398:
 7489              	.LBE5392:
 7490              	.LBE5391:
 7491              	.LBB5405:
 7492              	.LBI5405:
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7493              		.loc 20 150 14 is_stmt 1 view .LVU1719
 7494              	.LBB5406:
 7495              	.LBI5406:
 7496              		.loc 17 162 7 view .LVU1720
 7497              	.LBB5407:
 7498              	.LBI5407:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7499              		.loc 16 89 7 view .LVU1721
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7500              		.loc 16 89 7 is_stmt 0 view .LVU1722
 7501              	.LBE5407:
 7502              	.LBE5406:
 7503              	.LBE5405:
 7504              	.LBE5390:
 7505              	.LBB5408:
 7506              	.LBI5408:
 657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 7507              		.loc 20 657 7 is_stmt 1 view .LVU1723
 7508              	.LBB5409:
 7509              	.LBI5409:
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7510              		.loc 20 229 7 view .LVU1724
 7511              	.LBB5410:
 7512              	.LBB5411:
 7513              	.LBI5411:
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 7514              		.loc 20 221 7 view .LVU1725
 7515              	.LBB5412:
 7516              	.LBI5412:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 7517              		.loc 20 186 7 view .LVU1726
 7518              	.LBB5413:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 341


 7519              		.loc 20 187 28 is_stmt 0 view .LVU1727
 7520 009e 2346     		mov	r3, r4
 7521 00a0 53F8080F 		ldr	r0, [r3, #8]!
 7522              	.LVL364:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 7523              		.loc 20 187 28 view .LVU1728
 7524              	.LBE5413:
 7525              	.LBE5412:
 7526              	.LBB5414:
 7527              	.LBI5414:
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7528              		.loc 20 200 7 is_stmt 1 view .LVU1729
 7529              	.LBB5415:
 203:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 7530              		.loc 20 203 57 is_stmt 0 view .LVU1730
 7531 00a4 0833     		adds	r3, r3, #8
 7532              	.LVL365:
 203:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 7533              		.loc 20 203 57 view .LVU1731
 7534              	.LBE5415:
 7535              	.LBE5414:
 7536              	.LBE5411:
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 7537              		.loc 20 231 2 view .LVU1732
 7538 00a6 9842     		cmp	r0, r3
 7539 00a8 03D0     		beq	.L227
 7540              	.LVL366:
 7541              	.LBB5416:
 7542              	.LBI5416:
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 7543              		.loc 20 236 7 is_stmt 1 view .LVU1733
 7544              	.LBB5417:
 7545              	.LBB5418:
 7546              	.LBI5418:
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 7547              		.loc 15 491 7 view .LVU1734
 7548              	.LBB5419:
 7549              	.LBI5419:
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 7550              		.loc 16 120 7 view .LVU1735
 7551              	.LBE5419:
 7552              	.LBE5418:
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 7553              		.loc 20 237 34 is_stmt 0 view .LVU1736
 7554 00aa 2169     		ldr	r1, [r4, #16]
 7555              	.LBB5422:
 7556              	.LBB5421:
 7557              	.LBB5420:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 7558              		.loc 16 133 19 view .LVU1737
 7559 00ac 0131     		adds	r1, r1, #1
 7560              	.LVL367:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 7561              		.loc 16 133 19 view .LVU1738
 7562 00ae FFF7FEFF 		bl	_ZdlPvj
 7563              	.LVL368:
 7564              	.L227:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 342


 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 7565              		.loc 16 133 19 view .LVU1739
 7566              	.LBE5420:
 7567              	.LBE5421:
 7568              	.LBE5422:
 7569              	.LBE5417:
 7570              	.LBE5416:
 7571              	.LBE5410:
 7572              	.LBE5409:
 7573              	.LBB5423:
 7574              	.LBI5423:
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7575              		.loc 20 150 14 is_stmt 1 view .LVU1740
 7576              	.LBB5424:
 7577              	.LBI5424:
 7578              		.loc 17 162 7 view .LVU1741
 7579              	.LBB5425:
 7580              	.LBI5425:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7581              		.loc 16 89 7 view .LVU1742
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7582              		.loc 16 89 7 is_stmt 0 view .LVU1743
 7583              	.LBE5425:
 7584              	.LBE5424:
 7585              	.LBE5423:
 7586              	.LBE5408:
 7587              	.LBE5427:
 7588              	.LBE5429:
 7589              	.LBE5431:
 7590              	.LBE5433:
 7591              	.LBE5436:
 7592              	.LBB5437:
 7593              	.LBI5437:
 507:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 7594              		.loc 15 507 2 is_stmt 1 view .LVU1744
 7595              	.LBB5438:
 7596              	.LBI5438:
 148:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 7597              		.loc 16 148 2 view .LVU1745
 148:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 7598              		.loc 16 148 2 is_stmt 0 view .LVU1746
 7599              	.LBE5438:
 7600              	.LBE5437:
 7601              	.LBE5355:
 7602              	.LBE5354:
 7603              	.LBE5353:
 7604              	.LBE5352:
 7605              	.LBE5351:
 7606              	.LBE5350:
 7607              	.LBE5808:
 7608              		.loc 26 175 3 is_stmt 1 view .LVU1747
 7609              	.LBB5809:
 7610              	.LBB5712:
 7611              	.LBB5702:
 7612              	.LBB5678:
 7613              	.LBB5483:
 7614              	.LBB5452:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 343


 7615              	.LBB5451:
 7616              	.LBB5448:
 7617              	.LBB5445:
 7618              	.LBB5439:
 7619              	.LBI5439:
 314:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       constexpr pair(pair&&) = default;		///< Move constructor
 7620              		.loc 25 314 17 view .LVU1748
 7621              	.LBB5440:
 7622 00b2 2946     		mov	r1, r5
 7623              	.LBE5440:
 7624              	.LBE5439:
 7625              	.LBE5445:
 7626              	.LBE5448:
 141:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    }
 7627              		.loc 14 141 15 is_stmt 0 view .LVU1749
 7628 00b4 A046     		mov	r8, r4
 7629              	.LBB5449:
 7630              	.LBB5446:
 7631              	.LBB5443:
 7632              	.LBB5441:
 314:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       constexpr pair(pair&&) = default;		///< Move constructor
 7633              		.loc 25 314 17 view .LVU1750
 7634 00b6 3846     		mov	r0, r7
 7635 00b8 51F8043F 		ldr	r3, [r1, #4]!
 7636 00bc 6360     		str	r3, [r4, #4]
 7637              	.LBE5441:
 7638              	.LBE5443:
 7639              	.LBE5446:
 7640              	.LBE5449:
 127:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      __node->_M_nxt = nullptr;
 7641              		.loc 14 127 17 view .LVU1751
 7642 00be 5C46     		mov	r4, fp
 7643              	.LVL369:
 7644              	.LBB5450:
 7645              	.LBB5447:
 7646              	.LBB5444:
 7647              	.LBB5442:
 314:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       constexpr pair(pair&&) = default;		///< Move constructor
 7648              		.loc 25 314 17 view .LVU1752
 7649 00c0 0431     		adds	r1, r1, #4
 7650 00c2 FFF7FEFF 		bl	_ZN5paramC1ERKS_
 7651              	.LVL370:
 7652              	.L228:
 314:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       constexpr pair(pair&&) = default;		///< Move constructor
 7653              		.loc 25 314 17 view .LVU1753
 7654              	.LBE5442:
 7655              	.LBE5444:
 7656              	.LBE5447:
 7657              	.LBE5450:
 7658              	.LBE5451:
 7659              	.LBE5452:
 7660              	.LBE5483:
 7661              	.LBB5484:
 7662              	.LBB5485:
 7663              	.LBB5486:
 7664              	.LBB5487:
 7665              	.LBB5488:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 344


 7666              	.LBB5489:
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 7667              		.loc 14 433 22 view .LVU1754
 7668 00c6 7168     		ldr	r1, [r6, #4]
 7669              	.LBE5489:
 7670              	.LBE5488:
 7671              	.LBE5487:
 7672              	.LBE5486:
 7673              	.LBE5485:
 7674              	.LBE5484:
1169:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 7675              		.loc 12 1169 44 view .LVU1755
 7676 00c8 3246     		mov	r2, r6
 7677              	.LBB5502:
 7678              	.LBB5500:
 7679              	.LBB5498:
 7680              	.LBB5496:
 7681              	.LBB5492:
 7682              	.LBB5490:
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 7683              		.loc 14 433 22 view .LVU1756
 7684 00ca D8F80430 		ldr	r3, [r8, #4]
 7685              	.LBE5490:
 7686              	.LBE5492:
 7687              	.LBE5496:
 7688              	.LBE5498:
 7689              	.LBE5500:
 7690              	.LBE5502:
1168:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_buckets[_M_bucket_index(__this_n)] = &_M_before_begin;
 7691              		.loc 12 1168 29 view .LVU1757
 7692 00ce C6F80880 		str	r8, [r6, #8]
 7693              	.LVL371:
 7694              	.LBB5503:
 7695              	.LBI5484:
 677:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __hash_code_base::_M_bucket_index(__n, _M_bucket_count); }
 7696              		.loc 12 677 7 is_stmt 1 view .LVU1758
 7697              	.LBB5501:
 7698              	.LBB5499:
 7699              	.LBI5486:
1303:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	noexcept( noexcept(declval<const _H1&>()(declval<const _Key&>()))
 7700              		.loc 14 1303 7 view .LVU1759
 7701              	.LBB5497:
 7702              	.LBB5493:
 7703              	.LBI5493:
 7704              		.loc 27 153 3 view .LVU1760
 7705              	.LBB5494:
 7706              		.loc 27 153 3 view .LVU1761
 7707              		.loc 27 153 3 is_stmt 0 view .LVU1762
 7708              	.LBE5494:
 7709              	.LBE5493:
 7710              	.LBB5495:
 7711              	.LBI5488:
 431:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	       second_argument_type __den) const noexcept
 7712              		.loc 14 431 5 is_stmt 1 view .LVU1763
 7713              	.LBB5491:
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 7714              		.loc 14 433 7 view .LVU1764
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 345


 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 7715              		.loc 14 433 22 is_stmt 0 view .LVU1765
 7716 00d2 B3FBF1F0 		udiv	r0, r3, r1
 7717 00d6 01FB1033 		mls	r3, r1, r0, r3
 7718              	.LBE5491:
 7719              	.LBE5495:
 7720              	.LBE5497:
 7721              	.LBE5499:
 7722              	.LBE5501:
 7723              	.LBE5503:
1169:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 7724              		.loc 12 1169 44 view .LVU1766
 7725 00da 52F8081B 		ldr	r1, [r2], #8
 7726 00de 41F82320 		str	r2, [r1, r3, lsl #2]
 7727              	.LVL372:
 7728              	.LBB5504:
 7729              	.LBB5505:
 7730              	.LBI5505:
 282:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return static_cast<_Hash_node*>(this->_M_nxt); }
 7731              		.loc 14 282 7 is_stmt 1 view .LVU1767
 7732              	.LBB5506:
 283:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 7733              		.loc 14 283 53 is_stmt 0 view .LVU1768
 7734 00e2 2F68     		ldr	r7, [r5]
 7735              	.LVL373:
 283:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 7736              		.loc 14 283 53 view .LVU1769
 7737              	.LBE5506:
 7738              	.LBE5505:
1173:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      {
 7739              		.loc 12 1173 39 is_stmt 1 view .LVU1770
 7740 00e4 002F     		cmp	r7, #0
 7741 00e6 50D0     		beq	.L218
 7742              	.LVL374:
 7743              	.LBB5507:
 7744              	.LBB5508:
 7745              	.LBI5508:
 122:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	{
 7746              		.loc 14 122 2 view .LVU1771
 7747              	.LBB5509:
 124:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    {
 7748              		.loc 14 124 4 is_stmt 0 view .LVU1772
 7749 00e8 002C     		cmp	r4, #0
 7750 00ea 3FD0     		beq	.L229
 7751              	.LVL375:
 7752              	.L262:
 7753              	.LBB5510:
 7754              	.LBB5511:
 7755              	.LBI5511:
 282:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return static_cast<_Hash_node*>(this->_M_nxt); }
 7756              		.loc 14 282 7 is_stmt 1 view .LVU1773
 7757              	.LBE5511:
 7758              	.LBB5513:
 7759              	.LBB5514:
 7760              	.LBB5515:
 7761              	.LBB5516:
 7762              	.LBB5517:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 346


 7763              	.LBB5518:
 7764              	.LBB5519:
 7765              	.LBB5520:
 7766              	.LBB5521:
 7767              	.LBB5522:
 7768              	.LBB5523:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 7769              		.loc 20 187 28 is_stmt 0 view .LVU1774
 7770 00ec A06B     		ldr	r0, [r4, #56]
 7771              	.LBE5523:
 7772              	.LBE5522:
 7773              	.LBB5524:
 7774              	.LBB5525:
 203:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 7775              		.loc 20 203 57 view .LVU1775
 7776 00ee 04F14003 		add	r3, r4, #64
 7777              	.LBE5525:
 7778              	.LBE5524:
 7779              	.LBE5521:
 7780              	.LBE5520:
 7781              	.LBE5519:
 7782              	.LBE5518:
 7783              	.LBE5517:
 7784              	.LBE5516:
 7785              	.LBE5515:
 7786              	.LBE5514:
 7787              	.LBE5513:
 128:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      auto& __a = _M_h._M_node_allocator();
 7788              		.loc 14 128 23 view .LVU1776
 7789 00f2 2546     		mov	r5, r4
 7790 00f4 0022     		movs	r2, #0
 7791              	.LBB5589:
 7792              	.LBB5587:
 7793              	.LBB5585:
 7794              	.LBB5583:
 7795              	.LBB5581:
 7796              	.LBB5543:
 7797              	.LBB5538:
 7798              	.LBB5536:
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 7799              		.loc 20 231 2 view .LVU1777
 7800 00f6 9842     		cmp	r0, r3
 7801              	.LBE5536:
 7802              	.LBE5538:
 7803              	.LBE5543:
 7804              	.LBE5581:
 7805              	.LBE5583:
 7806              	.LBE5585:
 7807              	.LBE5587:
 7808              	.LBE5589:
 7809              	.LBB5590:
 7810              	.LBB5512:
 283:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 7811              		.loc 14 283 53 view .LVU1778
 7812 00f8 D4F800B0 		ldr	fp, [r4]
 7813              	.LVL376:
 283:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 347


 7814              		.loc 14 283 53 view .LVU1779
 7815              	.LBE5512:
 7816              	.LBE5590:
 128:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      auto& __a = _M_h._M_node_allocator();
 7817              		.loc 14 128 23 view .LVU1780
 7818 00fc 45F8042B 		str	r2, [r5], #4
 7819              	.LVL377:
 7820              	.LBB5591:
 7821              	.LBI5513:
 527:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(is_nothrow_destructible<_Up>::value)
 7822              		.loc 15 527 2 is_stmt 1 view .LVU1781
 7823              	.LBB5588:
 7824              	.LBI5514:
 7825              		.loc 16 154 2 view .LVU1782
 7826              	.LBB5586:
 7827              	.LBI5515:
 211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     : private __pair_base<_T1, _T2>
 7828              		.loc 25 211 12 view .LVU1783
 7829              	.LBB5584:
 7830 0100 05F10405 		add	r5, r5, #4
 7831              	.LVL378:
 7832              	.LBB5582:
 7833              	.LBI5517:
  38:src/parameter_controller.h **** 	std::string label;
 7834              		.loc 19 38 8 view .LVU1784
 7835              	.LBB5544:
 7836              	.LBI5518:
 657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 7837              		.loc 20 657 7 view .LVU1785
 7838              	.LBB5539:
 7839              	.LBI5519:
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7840              		.loc 20 229 7 view .LVU1786
 7841              	.LBB5537:
 7842              	.LBB5528:
 7843              	.LBI5521:
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 7844              		.loc 20 221 7 view .LVU1787
 7845              	.LBB5526:
 7846              	.LBI5522:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 7847              		.loc 20 186 7 view .LVU1788
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 7848              		.loc 20 186 7 is_stmt 0 view .LVU1789
 7849              	.LBE5526:
 7850              	.LBB5527:
 7851              	.LBI5524:
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7852              		.loc 20 200 7 is_stmt 1 view .LVU1790
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7853              		.loc 20 200 7 is_stmt 0 view .LVU1791
 7854              	.LBE5527:
 7855              	.LBE5528:
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 7856              		.loc 20 231 2 view .LVU1792
 7857 0104 03D0     		beq	.L230
 7858              	.LVL379:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 348


 7859              	.LBB5529:
 7860              	.LBI5529:
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 7861              		.loc 20 236 7 is_stmt 1 view .LVU1793
 7862              	.LBB5530:
 7863              	.LBB5531:
 7864              	.LBI5531:
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 7865              		.loc 15 491 7 view .LVU1794
 7866              	.LBB5532:
 7867              	.LBI5532:
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 7868              		.loc 16 120 7 view .LVU1795
 7869              	.LBE5532:
 7870              	.LBE5531:
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 7871              		.loc 20 237 34 is_stmt 0 view .LVU1796
 7872 0106 216C     		ldr	r1, [r4, #64]
 7873              	.LBB5535:
 7874              	.LBB5534:
 7875              	.LBB5533:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 7876              		.loc 16 133 19 view .LVU1797
 7877 0108 0131     		adds	r1, r1, #1
 7878              	.LVL380:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 7879              		.loc 16 133 19 view .LVU1798
 7880 010a FFF7FEFF 		bl	_ZdlPvj
 7881              	.LVL381:
 7882              	.L230:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 7883              		.loc 16 133 19 view .LVU1799
 7884              	.LBE5533:
 7885              	.LBE5534:
 7886              	.LBE5535:
 7887              	.LBE5530:
 7888              	.LBE5529:
 7889              	.LBE5537:
 7890              	.LBE5539:
 7891              	.LBB5540:
 7892              	.LBI5540:
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7893              		.loc 20 150 14 is_stmt 1 view .LVU1800
 7894              	.LBB5541:
 7895              	.LBI5541:
 7896              		.loc 17 162 7 view .LVU1801
 7897              	.LBB5542:
 7898              	.LBI5542:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7899              		.loc 16 89 7 view .LVU1802
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7900              		.loc 16 89 7 is_stmt 0 view .LVU1803
 7901              	.LBE5542:
 7902              	.LBE5541:
 7903              	.LBE5540:
 7904              	.LBE5544:
 7905              	.LBB5545:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 349


 7906              	.LBI5545:
 657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 7907              		.loc 20 657 7 is_stmt 1 view .LVU1804
 7908              	.LBB5546:
 7909              	.LBI5546:
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7910              		.loc 20 229 7 view .LVU1805
 7911              	.LBB5547:
 7912              	.LBB5548:
 7913              	.LBI5548:
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 7914              		.loc 20 221 7 view .LVU1806
 7915              	.LBB5549:
 7916              	.LBI5549:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 7917              		.loc 20 186 7 view .LVU1807
 7918              	.LBB5550:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 7919              		.loc 20 187 28 is_stmt 0 view .LVU1808
 7920 010e 206A     		ldr	r0, [r4, #32]
 7921              	.LVL382:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 7922              		.loc 20 187 28 view .LVU1809
 7923              	.LBE5550:
 7924              	.LBE5549:
 7925              	.LBB5551:
 7926              	.LBI5551:
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7927              		.loc 20 200 7 is_stmt 1 view .LVU1810
 7928              	.LBB5552:
 203:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 7929              		.loc 20 203 57 is_stmt 0 view .LVU1811
 7930 0110 04F12803 		add	r3, r4, #40
 7931              	.LBE5552:
 7932              	.LBE5551:
 7933              	.LBE5548:
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 7934              		.loc 20 231 2 view .LVU1812
 7935 0114 9842     		cmp	r0, r3
 7936 0116 03D0     		beq	.L231
 7937              	.LVL383:
 7938              	.LBB5553:
 7939              	.LBI5553:
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 7940              		.loc 20 236 7 is_stmt 1 view .LVU1813
 7941              	.LBB5554:
 7942              	.LBB5555:
 7943              	.LBI5555:
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 7944              		.loc 15 491 7 view .LVU1814
 7945              	.LBB5556:
 7946              	.LBI5556:
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 7947              		.loc 16 120 7 view .LVU1815
 7948              	.LBE5556:
 7949              	.LBE5555:
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 350


 7950              		.loc 20 237 34 is_stmt 0 view .LVU1816
 7951 0118 A16A     		ldr	r1, [r4, #40]
 7952              	.LBB5559:
 7953              	.LBB5558:
 7954              	.LBB5557:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 7955              		.loc 16 133 19 view .LVU1817
 7956 011a 0131     		adds	r1, r1, #1
 7957              	.LVL384:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 7958              		.loc 16 133 19 view .LVU1818
 7959 011c FFF7FEFF 		bl	_ZdlPvj
 7960              	.LVL385:
 7961              	.L231:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 7962              		.loc 16 133 19 view .LVU1819
 7963              	.LBE5557:
 7964              	.LBE5558:
 7965              	.LBE5559:
 7966              	.LBE5554:
 7967              	.LBE5553:
 7968              	.LBE5547:
 7969              	.LBE5546:
 7970              	.LBB5560:
 7971              	.LBI5560:
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7972              		.loc 20 150 14 is_stmt 1 view .LVU1820
 7973              	.LBB5561:
 7974              	.LBI5561:
 7975              		.loc 17 162 7 view .LVU1821
 7976              	.LBB5562:
 7977              	.LBI5562:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7978              		.loc 16 89 7 view .LVU1822
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7979              		.loc 16 89 7 is_stmt 0 view .LVU1823
 7980              	.LBE5562:
 7981              	.LBE5561:
 7982              	.LBE5560:
 7983              	.LBE5545:
 7984              	.LBB5563:
 7985              	.LBI5563:
 657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 7986              		.loc 20 657 7 is_stmt 1 view .LVU1824
 7987              	.LBB5564:
 7988              	.LBI5564:
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7989              		.loc 20 229 7 view .LVU1825
 7990              	.LBB5565:
 7991              	.LBB5566:
 7992              	.LBI5566:
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 7993              		.loc 20 221 7 view .LVU1826
 7994              	.LBB5567:
 7995              	.LBI5567:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 7996              		.loc 20 186 7 view .LVU1827
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 351


 7997              	.LBB5568:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 7998              		.loc 20 187 28 is_stmt 0 view .LVU1828
 7999 0120 2346     		mov	r3, r4
 8000 0122 53F8080F 		ldr	r0, [r3, #8]!
 8001              	.LVL386:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 8002              		.loc 20 187 28 view .LVU1829
 8003              	.LBE5568:
 8004              	.LBE5567:
 8005              	.LBB5569:
 8006              	.LBI5569:
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 8007              		.loc 20 200 7 is_stmt 1 view .LVU1830
 8008              	.LBB5570:
 203:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 8009              		.loc 20 203 57 is_stmt 0 view .LVU1831
 8010 0126 0833     		adds	r3, r3, #8
 8011              	.LVL387:
 203:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 8012              		.loc 20 203 57 view .LVU1832
 8013              	.LBE5570:
 8014              	.LBE5569:
 8015              	.LBE5566:
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 8016              		.loc 20 231 2 view .LVU1833
 8017 0128 9842     		cmp	r0, r3
 8018 012a 03D0     		beq	.L232
 8019              	.LVL388:
 8020              	.LBB5571:
 8021              	.LBI5571:
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 8022              		.loc 20 236 7 is_stmt 1 view .LVU1834
 8023              	.LBB5572:
 8024              	.LBB5573:
 8025              	.LBI5573:
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 8026              		.loc 15 491 7 view .LVU1835
 8027              	.LBB5574:
 8028              	.LBI5574:
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 8029              		.loc 16 120 7 view .LVU1836
 8030              	.LBE5574:
 8031              	.LBE5573:
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 8032              		.loc 20 237 34 is_stmt 0 view .LVU1837
 8033 012c 2169     		ldr	r1, [r4, #16]
 8034              	.LBB5577:
 8035              	.LBB5576:
 8036              	.LBB5575:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8037              		.loc 16 133 19 view .LVU1838
 8038 012e 0131     		adds	r1, r1, #1
 8039              	.LVL389:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8040              		.loc 16 133 19 view .LVU1839
 8041 0130 FFF7FEFF 		bl	_ZdlPvj
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 352


 8042              	.LVL390:
 8043              	.L232:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8044              		.loc 16 133 19 view .LVU1840
 8045              	.LBE5575:
 8046              	.LBE5576:
 8047              	.LBE5577:
 8048              	.LBE5572:
 8049              	.LBE5571:
 8050              	.LBE5565:
 8051              	.LBE5564:
 8052              	.LBB5578:
 8053              	.LBI5578:
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 8054              		.loc 20 150 14 is_stmt 1 view .LVU1841
 8055              	.LBB5579:
 8056              	.LBI5579:
 8057              		.loc 17 162 7 view .LVU1842
 8058              	.LBB5580:
 8059              	.LBI5580:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8060              		.loc 16 89 7 view .LVU1843
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8061              		.loc 16 89 7 is_stmt 0 view .LVU1844
 8062              	.LBE5580:
 8063              	.LBE5579:
 8064              	.LBE5578:
 8065              	.LBE5563:
 8066              	.LBE5582:
 8067              	.LBE5584:
 8068              	.LBE5586:
 8069              	.LBE5588:
 8070              	.LBE5591:
 8071              	.LBB5592:
 8072              	.LBI5592:
 507:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 8073              		.loc 15 507 2 is_stmt 1 view .LVU1845
 8074              	.LBB5593:
 8075              	.LBI5593:
 148:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 8076              		.loc 16 148 2 view .LVU1846
 148:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 8077              		.loc 16 148 2 is_stmt 0 view .LVU1847
 8078              	.LBE5593:
 8079              	.LBE5592:
 8080              	.LBE5510:
 8081              	.LBE5509:
 8082              	.LBE5508:
 8083              	.LBE5507:
 8084              	.LBE5504:
 8085              	.LBE5678:
 8086              	.LBE5702:
 8087              	.LBE5712:
 8088              	.LBE5809:
 8089              		.loc 26 175 3 is_stmt 1 view .LVU1848
 8090              	.LBB5810:
 8091              	.LBB5713:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 353


 8092              	.LBB5703:
 8093              	.LBB5679:
 8094              	.LBB5670:
 8095              	.LBB5663:
 8096              	.LBB5645:
 8097              	.LBB5607:
 8098              	.LBB5606:
 8099              	.LBB5603:
 8100              	.LBB5600:
 8101              	.LBB5594:
 8102              	.LBI5594:
 314:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       constexpr pair(pair&&) = default;		///< Move constructor
 8103              		.loc 25 314 17 view .LVU1849
 8104              	.LBB5595:
 8105 0134 3946     		mov	r1, r7
 8106 0136 2846     		mov	r0, r5
 8107              	.LBE5595:
 8108              	.LBE5594:
 8109              	.LBE5600:
 8110              	.LBE5603:
 141:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    }
 8111              		.loc 14 141 15 is_stmt 0 view .LVU1850
 8112 0138 2546     		mov	r5, r4
 8113              	.LVL391:
 8114              	.LBB5604:
 8115              	.LBB5601:
 8116              	.LBB5598:
 8117              	.LBB5596:
 314:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       constexpr pair(pair&&) = default;		///< Move constructor
 8118              		.loc 25 314 17 view .LVU1851
 8119 013a 51F8043F 		ldr	r3, [r1, #4]!
 8120 013e 6360     		str	r3, [r4, #4]
 8121 0140 0431     		adds	r1, r1, #4
 8122              	.LBE5596:
 8123              	.LBE5598:
 8124              	.LBE5601:
 8125              	.LBE5604:
 127:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      __node->_M_nxt = nullptr;
 8126              		.loc 14 127 17 view .LVU1852
 8127 0142 5C46     		mov	r4, fp
 8128              	.LVL392:
 8129              	.LBB5605:
 8130              	.LBB5602:
 8131              	.LBB5599:
 8132              	.LBB5597:
 314:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       constexpr pair(pair&&) = default;		///< Move constructor
 8133              		.loc 25 314 17 view .LVU1853
 8134 0144 FFF7FEFF 		bl	_ZN5paramC1ERKS_
 8135              	.LVL393:
 8136              	.L233:
 314:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       constexpr pair(pair&&) = default;		///< Move constructor
 8137              		.loc 25 314 17 view .LVU1854
 8138              	.LBE5597:
 8139              	.LBE5599:
 8140              	.LBE5602:
 8141              	.LBE5605:
 8142              	.LBE5606:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 354


 8143              	.LBE5607:
 8144              	.LBE5645:
 8145              	.LBB5646:
 8146              	.LBB5647:
 8147              	.LBB5648:
 8148              	.LBB5649:
 8149              	.LBB5650:
 8150              	.LBB5651:
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 8151              		.loc 14 433 22 view .LVU1855
 8152 0148 6B68     		ldr	r3, [r5, #4]
 8153              	.LBE5651:
 8154              	.LBE5650:
 8155              	.LBE5649:
 8156              	.LBE5648:
 8157              	.LBE5647:
 8158              	.LBE5646:
1179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		  _M_buckets[__bkt] = __prev_n;
 8159              		.loc 12 1179 18 view .LVU1856
 8160 014a D6E90012 		ldrd	r1, r2, [r6]
1176:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		this->_M_copy_code(__this_n, __ht_n);
 8161              		.loc 12 1176 20 view .LVU1857
 8162 014e C8F80050 		str	r5, [r8]
 8163              	.LVL394:
 8164              	.LBB5659:
 8165              	.LBI5646:
 677:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __hash_code_base::_M_bucket_index(__n, _M_bucket_count); }
 8166              		.loc 12 677 7 is_stmt 1 view .LVU1858
 8167              	.LBB5658:
 8168              	.LBB5657:
 8169              	.LBI5648:
1303:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	noexcept( noexcept(declval<const _H1&>()(declval<const _Key&>()))
 8170              		.loc 14 1303 7 view .LVU1859
 8171              	.LBB5656:
 8172              	.LBB5653:
 8173              	.LBI5653:
 8174              		.loc 27 153 3 view .LVU1860
 8175              	.LBB5654:
 8176              		.loc 27 153 3 view .LVU1861
 8177              		.loc 27 153 3 is_stmt 0 view .LVU1862
 8178              	.LBE5654:
 8179              	.LBE5653:
 8180              	.LBB5655:
 8181              	.LBI5650:
 431:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	       second_argument_type __den) const noexcept
 8182              		.loc 14 431 5 is_stmt 1 view .LVU1863
 8183              	.LBB5652:
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 8184              		.loc 14 433 7 view .LVU1864
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 8185              		.loc 14 433 22 is_stmt 0 view .LVU1865
 8186 0152 B3FBF2F0 		udiv	r0, r3, r2
 8187 0156 02FB1033 		mls	r3, r2, r0, r3
 8188              	.LBE5652:
 8189              	.LBE5655:
 8190              	.LBE5656:
 8191              	.LBE5657:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 355


 8192              	.LBE5658:
 8193              	.LBE5659:
1179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		  _M_buckets[__bkt] = __prev_n;
 8194              		.loc 12 1179 3 view .LVU1866
 8195 015a 51F82320 		ldr	r2, [r1, r3, lsl #2]
 8196 015e 002A     		cmp	r2, #0
 8197 0160 55D0     		beq	.L261
 8198              	.L234:
 8199              	.LVL395:
1179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		  _M_buckets[__bkt] = __prev_n;
 8200              		.loc 12 1179 3 view .LVU1867
 8201              	.LBE5663:
1173:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      {
 8202              		.loc 12 1173 6 is_stmt 1 view .LVU1868
 8203              	.LBB5664:
 8204              	.LBI5664:
 282:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return static_cast<_Hash_node*>(this->_M_nxt); }
 8205              		.loc 14 282 7 view .LVU1869
 8206              	.LBB5665:
 283:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 8207              		.loc 14 283 53 is_stmt 0 view .LVU1870
 8208 0162 3F68     		ldr	r7, [r7]
 8209              	.LVL396:
 283:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 8210              		.loc 14 283 53 view .LVU1871
 8211              	.LBE5665:
 8212              	.LBE5664:
1173:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      {
 8213              		.loc 12 1173 39 is_stmt 1 view .LVU1872
 8214 0164 8FB1     		cbz	r7, .L218
 8215 0166 A846     		mov	r8, r5
 8216              	.LVL397:
 8217              	.LBB5666:
 8218              	.LBB5660:
 122:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	{
 8219              		.loc 14 122 2 view .LVU1873
 8220              	.LBB5608:
 124:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    {
 8221              		.loc 14 124 4 is_stmt 0 view .LVU1874
 8222 0168 002C     		cmp	r4, #0
 8223 016a BFD1     		bne	.L262
 8224              	.LVL398:
 8225              	.L229:
 124:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    {
 8226              		.loc 14 124 4 view .LVU1875
 8227              	.LBE5608:
 8228              	.LBB5609:
 8229              	.LBI5609:
 122:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	{
 8230              		.loc 14 122 2 is_stmt 1 view .LVU1876
 8231              	.LBB5610:
 8232              	.LBI5610:
2029:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       -> __node_type*
 8233              		.loc 14 2029 7 view .LVU1877
 8234              	.LBB5611:
 8235              	.LBB5612:
 8236              	.LBI5612:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 356


 459:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 8237              		.loc 15 459 7 view .LVU1878
 8238              	.LBB5613:
 8239              	.LBI5613:
 103:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 8240              		.loc 16 103 7 view .LVU1879
 8241              	.LBB5614:
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 8242              		.loc 16 115 41 is_stmt 0 view .LVU1880
 8243 016c 6020     		movs	r0, #96
 8244 016e FFF7FEFF 		bl	_Znwj
 8245              	.LVL399:
 8246              	.LBE5614:
 8247              	.LBE5613:
 8248              	.LBE5612:
 8249              	.LBB5617:
 8250              	.LBB5618:
 8251              	.LBB5619:
 8252              	.LBB5620:
 314:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       constexpr pair(pair&&) = default;		///< Move constructor
 8253              		.loc 25 314 17 view .LVU1881
 8254 0172 3946     		mov	r1, r7
 8255              	.LBE5620:
 8256              	.LBE5619:
 8257              	.LBE5618:
 8258              	.LBE5617:
 8259              	.LBB5628:
 8260              	.LBB5616:
 8261              	.LBB5615:
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 8262              		.loc 16 115 41 view .LVU1882
 8263 0174 0546     		mov	r5, r0
 8264              	.LVL400:
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 8265              		.loc 16 115 41 view .LVU1883
 8266              	.LBE5615:
 8267              	.LBE5616:
 8268              	.LBE5628:
 8269              	.LBE5611:
 8270              	.LBE5610:
 8271              	.LBE5609:
 8272              	.LBE5660:
 8273              	.LBE5666:
 8274              	.LBE5670:
 8275              	.LBE5679:
 8276              	.LBE5703:
 8277              	.LBE5713:
 8278              	.LBE5810:
 8279              		.loc 26 175 3 is_stmt 1 view .LVU1884
 8280              	.LBB5811:
 8281              	.LBB5714:
 8282              	.LBB5704:
 8283              	.LBB5680:
 8284              	.LBB5671:
 8285              	.LBB5667:
 8286              	.LBB5661:
 8287              	.LBB5643:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 357


 8288              	.LBB5641:
 8289              	.LBB5639:
 8290              	.LBB5629:
 8291              	.LBI5629:
 279:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 8292              		.loc 14 279 12 view .LVU1885
 8293              	.LBB5630:
 8294              	.LBI5630:
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 8295              		.loc 14 229 12 view .LVU1886
 8296              	.LBB5631:
 8297              	.LBI5631:
 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 8298              		.loc 14 218 5 view .LVU1887
 8299              	.LBE5631:
 8300              	.LBE5630:
 8301              	.LBE5629:
 8302              	.LBB5635:
 8303              	.LBB5625:
 8304              	.LBB5623:
 8305              	.LBB5621:
 314:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       constexpr pair(pair&&) = default;		///< Move constructor
 8306              		.loc 25 314 17 is_stmt 0 view .LVU1888
 8307 0176 51F8043F 		ldr	r3, [r1, #4]!
 8308              	.LBE5621:
 8309              	.LBE5623:
 8310              	.LBE5625:
 8311              	.LBE5635:
 8312              	.LBB5636:
 8313              	.LBB5634:
 8314              	.LBB5633:
 8315              	.LBB5632:
 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 8316              		.loc 14 218 41 view .LVU1889
 8317 017a 0460     		str	r4, [r0]
 8318              	.LVL401:
 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 8319              		.loc 14 218 41 view .LVU1890
 8320              	.LBE5632:
 8321              	.LBE5633:
 8322              	.LBE5634:
 8323              	.LBE5636:
 8324              	.LBB5637:
 8325              	.LBI5617:
 507:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 8326              		.loc 15 507 2 is_stmt 1 view .LVU1891
 8327              	.LBB5626:
 8328              	.LBI5618:
 148:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 8329              		.loc 16 148 2 view .LVU1892
 148:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 8330              		.loc 16 148 2 is_stmt 0 view .LVU1893
 8331              	.LBE5626:
 8332              	.LBE5637:
 8333              	.LBE5639:
 8334              	.LBE5641:
 8335              	.LBE5643:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 358


 8336              	.LBE5661:
 8337              	.LBE5667:
 8338              	.LBE5671:
 8339              	.LBE5680:
 8340              	.LBE5704:
 8341              	.LBE5714:
 8342              	.LBE5811:
 8343              		.loc 26 175 3 is_stmt 1 view .LVU1894
 8344              	.LBB5812:
 8345              	.LBB5715:
 8346              	.LBB5705:
 8347              	.LBB5681:
 8348              	.LBB5672:
 8349              	.LBB5668:
 8350              	.LBB5662:
 8351              	.LBB5644:
 8352              	.LBB5642:
 8353              	.LBB5640:
 8354              	.LBB5638:
 8355              	.LBB5627:
 8356              	.LBB5624:
 8357              	.LBI5619:
 314:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       constexpr pair(pair&&) = default;		///< Move constructor
 8358              		.loc 25 314 17 view .LVU1895
 8359              	.LBB5622:
 8360 017c 0431     		adds	r1, r1, #4
 8361 017e 40F8043F 		str	r3, [r0, #4]!
 8362              	.LVL402:
 314:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       constexpr pair(pair&&) = default;		///< Move constructor
 8363              		.loc 25 314 17 is_stmt 0 view .LVU1896
 8364 0182 0430     		adds	r0, r0, #4
 8365              	.LVL403:
 314:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       constexpr pair(pair&&) = default;		///< Move constructor
 8366              		.loc 25 314 17 view .LVU1897
 8367 0184 FFF7FEFF 		bl	_ZN5paramC1ERKS_
 8368              	.LVL404:
 314:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       constexpr pair(pair&&) = default;		///< Move constructor
 8369              		.loc 25 314 17 view .LVU1898
 8370 0188 DEE7     		b	.L233
 8371              	.LVL405:
 8372              	.L218:
 314:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       constexpr pair(pair&&) = default;		///< Move constructor
 8373              		.loc 25 314 17 view .LVU1899
 8374              	.LBE5622:
 8375              	.LBE5624:
 8376              	.LBE5627:
 8377              	.LBE5638:
 8378              	.LBE5640:
 8379              	.LBE5642:
 8380              	.LBE5644:
 8381              	.LBE5662:
 8382              	.LBE5668:
 8383              	.LBE5672:
 8384              	.LBE5681:
 8385              	.LBE5705:
 8386              	.LBE5715:
1124:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      _M_deallocate_buckets(__former_buckets, __former_bucket_count);
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 359


 8387              		.loc 12 1124 6 view .LVU1900
 8388 018a B9F1000F 		cmp	r9, #0
 8389 018e 07D0     		beq	.L236
 8390              	.LVL406:
 8391              	.LBB5716:
 8392              	.LBI5716:
 402:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 8393              		.loc 12 402 7 is_stmt 1 view .LVU1901
 8394              	.LBB5717:
 8395              	.LBB5718:
 8396              	.LBI5718:
 379:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __builtin_expect(__bkts == &_M_single_bucket, false); }
 8397              		.loc 12 379 7 view .LVU1902
 8398              	.LBB5719:
 380:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 8399              		.loc 12 380 44 is_stmt 0 view .LVU1903
 8400 0190 1836     		adds	r6, r6, #24
 8401              	.LVL407:
 380:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 8402              		.loc 12 380 44 view .LVU1904
 8403              	.LBE5719:
 8404              	.LBE5718:
 404:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return;
 8405              		.loc 12 404 2 view .LVU1905
 8406 0192 B145     		cmp	r9, r6
 8407 0194 04D0     		beq	.L236
 8408              	.LVL408:
 8409              	.LBB5720:
 8410              	.LBI5720:
 8411              		.loc 14 2093 5 is_stmt 1 view .LVU1906
 8412              	.LBB5721:
 8413              	.LBB5722:
 8414              	.LBI5722:
 157:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 8415              		.loc 17 157 2 view .LVU1907
 8416              	.LBB5723:
 8417              	.LBI5723:
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8418              		.loc 16 79 7 view .LVU1908
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8419              		.loc 16 79 7 is_stmt 0 view .LVU1909
 8420              	.LBE5723:
 8421              	.LBE5722:
 8422              	.LBB5724:
 8423              	.LBI5724:
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 8424              		.loc 15 491 7 is_stmt 1 view .LVU1910
 8425              	.LBB5725:
 8426              	.LBI5725:
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 8427              		.loc 16 120 7 view .LVU1911
 8428              	.LBB5726:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8429              		.loc 16 133 19 is_stmt 0 view .LVU1912
 8430 0196 4FEA8A01 		lsl	r1, r10, #2
 8431 019a 4846     		mov	r0, r9
 8432 019c FFF7FEFF 		bl	_ZdlPvj
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 360


 8433              	.LVL409:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8434              		.loc 16 133 19 view .LVU1913
 8435              	.LBE5726:
 8436              	.LBE5725:
 8437              	.LBE5724:
 8438              	.LBB5727:
 8439              	.LBI5727:
 8440              		.loc 17 162 7 is_stmt 1 view .LVU1914
 8441              	.LBB5728:
 8442              	.LBI5728:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8443              		.loc 16 89 7 view .LVU1915
 8444              	.L236:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8445              		.loc 16 89 7 is_stmt 0 view .LVU1916
 8446              	.LBE5728:
 8447              	.LBE5727:
 8448              	.LBE5721:
 8449              	.LBE5720:
 8450              	.LBE5717:
 8451              	.LBE5716:
 8452              	.LBB5729:
 8453              	.LBI5729:
 117:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { _M_h._M_deallocate_nodes(_M_nodes); }
 8454              		.loc 14 117 7 is_stmt 1 view .LVU1917
 8455              	.LBB5730:
 8456              	.LBI5730:
2069:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 8457              		.loc 14 2069 5 view .LVU1918
 8458              	.LBB5731:
2071:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	{
 8459              		.loc 14 2071 14 view .LVU1919
 8460 01a0 1CB3     		cbz	r4, .L213
 8461              	.L237:
 8462              	.LVL410:
 8463              	.LBB5732:
 8464              	.LBB5733:
 8465              	.LBI5733:
 282:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return static_cast<_Hash_node*>(this->_M_nxt); }
 8466              		.loc 14 282 7 view .LVU1920
 8467 01a2 2546     		mov	r5, r4
 8468              	.LBB5734:
 283:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 8469              		.loc 14 283 53 is_stmt 0 view .LVU1921
 8470 01a4 2468     		ldr	r4, [r4]
 8471              	.LVL411:
 283:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 8472              		.loc 14 283 53 view .LVU1922
 8473              	.LBE5734:
 8474              	.LBE5733:
 8475              	.LBB5735:
 8476              	.LBI5735:
2051:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 8477              		.loc 14 2051 5 is_stmt 1 view .LVU1923
 8478              	.LBB5736:
 8479              	.LBI5736:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 361


 527:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(is_nothrow_destructible<_Up>::value)
 8480              		.loc 15 527 2 view .LVU1924
 8481              	.LBB5737:
 8482              	.LBI5737:
 8483              		.loc 16 154 2 view .LVU1925
 8484              	.LBB5738:
 8485              	.LBI5738:
 211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     : private __pair_base<_T1, _T2>
 8486              		.loc 25 211 12 view .LVU1926
 8487              	.LBB5739:
 8488              	.LBI5739:
  38:src/parameter_controller.h **** 	std::string label;
 8489              		.loc 19 38 8 view .LVU1927
 8490              	.LBB5740:
 8491              	.LBI5740:
 657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 8492              		.loc 20 657 7 view .LVU1928
 8493              	.LBB5741:
 8494              	.LBI5741:
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 8495              		.loc 20 229 7 view .LVU1929
 8496              	.LBB5742:
 8497              	.LBB5743:
 8498              	.LBI5743:
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 8499              		.loc 20 221 7 view .LVU1930
 8500              	.LBB5744:
 8501              	.LBI5744:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 8502              		.loc 20 186 7 view .LVU1931
 8503              	.LBB5745:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 8504              		.loc 20 187 28 is_stmt 0 view .LVU1932
 8505 01a6 A86B     		ldr	r0, [r5, #56]
 8506              	.LVL412:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 8507              		.loc 20 187 28 view .LVU1933
 8508              	.LBE5745:
 8509              	.LBE5744:
 8510              	.LBB5746:
 8511              	.LBI5746:
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 8512              		.loc 20 200 7 is_stmt 1 view .LVU1934
 8513              	.LBB5747:
 203:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 8514              		.loc 20 203 57 is_stmt 0 view .LVU1935
 8515 01a8 05F14003 		add	r3, r5, #64
 8516              	.LBE5747:
 8517              	.LBE5746:
 8518              	.LBE5743:
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 8519              		.loc 20 231 2 view .LVU1936
 8520 01ac 9842     		cmp	r0, r3
 8521 01ae 03D0     		beq	.L238
 8522              	.LVL413:
 8523              	.LBB5748:
 8524              	.LBI5748:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 362


 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 8525              		.loc 20 236 7 is_stmt 1 view .LVU1937
 8526              	.LBB5749:
 8527              	.LBB5750:
 8528              	.LBI5750:
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 8529              		.loc 15 491 7 view .LVU1938
 8530              	.LBB5751:
 8531              	.LBI5751:
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 8532              		.loc 16 120 7 view .LVU1939
 8533              	.LBE5751:
 8534              	.LBE5750:
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 8535              		.loc 20 237 34 is_stmt 0 view .LVU1940
 8536 01b0 296C     		ldr	r1, [r5, #64]
 8537              	.LBB5754:
 8538              	.LBB5753:
 8539              	.LBB5752:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8540              		.loc 16 133 19 view .LVU1941
 8541 01b2 0131     		adds	r1, r1, #1
 8542              	.LVL414:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8543              		.loc 16 133 19 view .LVU1942
 8544 01b4 FFF7FEFF 		bl	_ZdlPvj
 8545              	.LVL415:
 8546              	.L238:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8547              		.loc 16 133 19 view .LVU1943
 8548              	.LBE5752:
 8549              	.LBE5753:
 8550              	.LBE5754:
 8551              	.LBE5749:
 8552              	.LBE5748:
 8553              	.LBE5742:
 8554              	.LBE5741:
 8555              	.LBB5755:
 8556              	.LBI5755:
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 8557              		.loc 20 150 14 is_stmt 1 view .LVU1944
 8558              	.LBB5756:
 8559              	.LBI5756:
 8560              		.loc 17 162 7 view .LVU1945
 8561              	.LBB5757:
 8562              	.LBI5757:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8563              		.loc 16 89 7 view .LVU1946
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8564              		.loc 16 89 7 is_stmt 0 view .LVU1947
 8565              	.LBE5757:
 8566              	.LBE5756:
 8567              	.LBE5755:
 8568              	.LBE5740:
 8569              	.LBB5758:
 8570              	.LBI5758:
 657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 363


 8571              		.loc 20 657 7 is_stmt 1 view .LVU1948
 8572              	.LBB5759:
 8573              	.LBI5759:
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 8574              		.loc 20 229 7 view .LVU1949
 8575              	.LBB5760:
 8576              	.LBB5761:
 8577              	.LBI5761:
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 8578              		.loc 20 221 7 view .LVU1950
 8579              	.LBB5762:
 8580              	.LBI5762:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 8581              		.loc 20 186 7 view .LVU1951
 8582              	.LBB5763:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 8583              		.loc 20 187 28 is_stmt 0 view .LVU1952
 8584 01b8 286A     		ldr	r0, [r5, #32]
 8585              	.LVL416:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 8586              		.loc 20 187 28 view .LVU1953
 8587              	.LBE5763:
 8588              	.LBE5762:
 8589              	.LBB5764:
 8590              	.LBI5764:
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 8591              		.loc 20 200 7 is_stmt 1 view .LVU1954
 8592              	.LBB5765:
 203:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 8593              		.loc 20 203 57 is_stmt 0 view .LVU1955
 8594 01ba 05F12803 		add	r3, r5, #40
 8595              	.LBE5765:
 8596              	.LBE5764:
 8597              	.LBE5761:
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 8598              		.loc 20 231 2 view .LVU1956
 8599 01be 9842     		cmp	r0, r3
 8600 01c0 03D0     		beq	.L239
 8601              	.LVL417:
 8602              	.LBB5766:
 8603              	.LBI5766:
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 8604              		.loc 20 236 7 is_stmt 1 view .LVU1957
 8605              	.LBB5767:
 8606              	.LBB5768:
 8607              	.LBI5768:
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 8608              		.loc 15 491 7 view .LVU1958
 8609              	.LBB5769:
 8610              	.LBI5769:
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 8611              		.loc 16 120 7 view .LVU1959
 8612              	.LBE5769:
 8613              	.LBE5768:
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 8614              		.loc 20 237 34 is_stmt 0 view .LVU1960
 8615 01c2 A96A     		ldr	r1, [r5, #40]
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 364


 8616              	.LBB5772:
 8617              	.LBB5771:
 8618              	.LBB5770:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8619              		.loc 16 133 19 view .LVU1961
 8620 01c4 0131     		adds	r1, r1, #1
 8621              	.LVL418:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8622              		.loc 16 133 19 view .LVU1962
 8623 01c6 FFF7FEFF 		bl	_ZdlPvj
 8624              	.LVL419:
 8625              	.L239:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8626              		.loc 16 133 19 view .LVU1963
 8627              	.LBE5770:
 8628              	.LBE5771:
 8629              	.LBE5772:
 8630              	.LBE5767:
 8631              	.LBE5766:
 8632              	.LBE5760:
 8633              	.LBE5759:
 8634              	.LBB5773:
 8635              	.LBI5773:
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 8636              		.loc 20 150 14 is_stmt 1 view .LVU1964
 8637              	.LBB5774:
 8638              	.LBI5774:
 8639              		.loc 17 162 7 view .LVU1965
 8640              	.LBB5775:
 8641              	.LBI5775:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8642              		.loc 16 89 7 view .LVU1966
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8643              		.loc 16 89 7 is_stmt 0 view .LVU1967
 8644              	.LBE5775:
 8645              	.LBE5774:
 8646              	.LBE5773:
 8647              	.LBE5758:
 8648              	.LBB5776:
 8649              	.LBI5776:
 657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 8650              		.loc 20 657 7 is_stmt 1 view .LVU1968
 8651              	.LBB5777:
 8652              	.LBI5777:
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 8653              		.loc 20 229 7 view .LVU1969
 8654              	.LBB5778:
 8655              	.LBB5779:
 8656              	.LBI5779:
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 8657              		.loc 20 221 7 view .LVU1970
 8658              	.LBB5780:
 8659              	.LBI5780:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 8660              		.loc 20 186 7 view .LVU1971
 8661              	.LBB5781:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 365


 8662              		.loc 20 187 28 is_stmt 0 view .LVU1972
 8663 01ca 2B46     		mov	r3, r5
 8664 01cc 53F8080F 		ldr	r0, [r3, #8]!
 8665              	.LVL420:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 8666              		.loc 20 187 28 view .LVU1973
 8667              	.LBE5781:
 8668              	.LBE5780:
 8669              	.LBB5782:
 8670              	.LBI5782:
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 8671              		.loc 20 200 7 is_stmt 1 view .LVU1974
 8672              	.LBB5783:
 203:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 8673              		.loc 20 203 57 is_stmt 0 view .LVU1975
 8674 01d0 0833     		adds	r3, r3, #8
 8675              	.LVL421:
 203:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 8676              		.loc 20 203 57 view .LVU1976
 8677              	.LBE5783:
 8678              	.LBE5782:
 8679              	.LBE5779:
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 8680              		.loc 20 231 2 view .LVU1977
 8681 01d2 9842     		cmp	r0, r3
 8682 01d4 03D0     		beq	.L240
 8683              	.LVL422:
 8684              	.LBB5784:
 8685              	.LBI5784:
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 8686              		.loc 20 236 7 is_stmt 1 view .LVU1978
 8687              	.LBB5785:
 8688              	.LBB5786:
 8689              	.LBI5786:
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 8690              		.loc 15 491 7 view .LVU1979
 8691              	.LBB5787:
 8692              	.LBI5787:
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 8693              		.loc 16 120 7 view .LVU1980
 8694              	.LBE5787:
 8695              	.LBE5786:
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 8696              		.loc 20 237 34 is_stmt 0 view .LVU1981
 8697 01d6 2969     		ldr	r1, [r5, #16]
 8698              	.LBB5790:
 8699              	.LBB5789:
 8700              	.LBB5788:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8701              		.loc 16 133 19 view .LVU1982
 8702 01d8 0131     		adds	r1, r1, #1
 8703              	.LVL423:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8704              		.loc 16 133 19 view .LVU1983
 8705 01da FFF7FEFF 		bl	_ZdlPvj
 8706              	.LVL424:
 8707              	.L240:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 366


 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8708              		.loc 16 133 19 view .LVU1984
 8709              	.LBE5788:
 8710              	.LBE5789:
 8711              	.LBE5790:
 8712              	.LBE5785:
 8713              	.LBE5784:
 8714              	.LBE5778:
 8715              	.LBE5777:
 8716              	.LBB5791:
 8717              	.LBI5791:
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 8718              		.loc 20 150 14 is_stmt 1 view .LVU1985
 8719              	.LBB5792:
 8720              	.LBI5792:
 8721              		.loc 17 162 7 view .LVU1986
 8722              	.LBB5793:
 8723              	.LBI5793:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8724              		.loc 16 89 7 view .LVU1987
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8725              		.loc 16 89 7 is_stmt 0 view .LVU1988
 8726              	.LBE5793:
 8727              	.LBE5792:
 8728              	.LBE5791:
 8729              	.LBE5776:
 8730              	.LBE5739:
 8731              	.LBE5738:
 8732              	.LBE5737:
 8733              	.LBE5736:
 8734              	.LBB5794:
 8735              	.LBI5794:
2059:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 8736              		.loc 14 2059 5 is_stmt 1 view .LVU1989
 8737              	.LBB5795:
 8738              	.LBB5796:
 8739              	.LBI5796:
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 8740              		.loc 15 491 7 view .LVU1990
 8741              	.LBB5797:
 8742              	.LBI5797:
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 8743              		.loc 16 120 7 view .LVU1991
 8744              	.LBB5798:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8745              		.loc 16 133 19 is_stmt 0 view .LVU1992
 8746 01de 6021     		movs	r1, #96
 8747 01e0 2846     		mov	r0, r5
 8748 01e2 FFF7FEFF 		bl	_ZdlPvj
 8749              	.LVL425:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8750              		.loc 16 133 19 view .LVU1993
 8751              	.LBE5798:
 8752              	.LBE5797:
 8753              	.LBE5796:
 8754              	.LBE5795:
 8755              	.LBE5794:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 367


 8756              	.LBE5735:
 8757              	.LBE5732:
2071:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	{
 8758              		.loc 14 2071 14 is_stmt 1 view .LVU1994
 8759 01e6 002C     		cmp	r4, #0
 8760 01e8 DBD1     		bne	.L237
 8761              	.LVL426:
 8762              	.L213:
2071:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	{
 8763              		.loc 14 2071 14 is_stmt 0 view .LVU1995
 8764              	.LBE5731:
 8765              	.LBE5730:
 8766              	.LBE5729:
 8767              	.LBE5812:
1141:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 8768              		.loc 12 1141 7 view .LVU1996
 8769 01ea 03B0     		add	sp, sp, #12
 8770              		.cfi_remember_state
 8771              		.cfi_def_cfa_offset 36
 8772              		@ sp needed
 8773 01ec BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 8774              	.LVL427:
 8775              	.L224:
 8776              		.cfi_restore_state
 8777              	.LBB5813:
 8778              	.LBB5799:
 8779              	.LBB5706:
 8780              	.LBB5682:
 8781              	.LBB5673:
 8782              	.LBB5453:
 8783              	.LBI5453:
 122:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	{
 8784              		.loc 14 122 2 is_stmt 1 view .LVU1997
 8785              	.LBB5454:
 8786              	.LBI5454:
2029:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       -> __node_type*
 8787              		.loc 14 2029 7 view .LVU1998
 8788              	.LBB5455:
 8789              	.LBB5456:
 8790              	.LBI5456:
 459:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 8791              		.loc 15 459 7 view .LVU1999
 8792              	.LBB5457:
 8793              	.LBI5457:
 103:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 8794              		.loc 16 103 7 view .LVU2000
 8795              	.LBB5458:
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 8796              		.loc 16 115 41 is_stmt 0 view .LVU2001
 8797 01f0 6020     		movs	r0, #96
 8798 01f2 FFF7FEFF 		bl	_Znwj
 8799              	.LVL428:
 8800              	.LBE5458:
 8801              	.LBE5457:
 8802              	.LBE5456:
 8803              	.LBB5461:
 8804              	.LBB5462:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 368


 8805              	.LBB5463:
 8806              	.LBB5464:
 314:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       constexpr pair(pair&&) = default;		///< Move constructor
 8807              		.loc 25 314 17 view .LVU2002
 8808 01f6 2946     		mov	r1, r5
 8809              	.LBE5464:
 8810              	.LBE5463:
 8811              	.LBE5462:
 8812              	.LBE5461:
 8813              	.LBB5469:
 8814              	.LBB5460:
 8815              	.LBB5459:
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 8816              		.loc 16 115 41 view .LVU2003
 8817 01f8 8046     		mov	r8, r0
 8818              	.LVL429:
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 8819              		.loc 16 115 41 view .LVU2004
 8820              	.LBE5459:
 8821              	.LBE5460:
 8822              	.LBE5469:
 8823              	.LBE5455:
 8824              	.LBE5454:
 8825              	.LBE5453:
 8826              	.LBE5673:
 8827              	.LBE5682:
 8828              	.LBE5706:
 8829              	.LBE5799:
 8830              	.LBE5813:
 8831              		.loc 26 175 3 is_stmt 1 view .LVU2005
 8832              	.LBB5814:
 8833              	.LBB5800:
 8834              	.LBB5707:
 8835              	.LBB5683:
 8836              	.LBB5674:
 8837              	.LBB5480:
 8838              	.LBB5478:
 8839              	.LBB5476:
 8840              	.LBB5470:
 8841              	.LBI5470:
 279:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 8842              		.loc 14 279 12 view .LVU2006
 8843              	.LBB5471:
 8844              	.LBI5471:
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 8845              		.loc 14 229 12 view .LVU2007
 8846              	.LBB5472:
 8847              	.LBI5472:
 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 8848              		.loc 14 218 5 view .LVU2008
 8849              	.LBB5473:
 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 8850              		.loc 14 218 41 is_stmt 0 view .LVU2009
 8851 01fa 0460     		str	r4, [r0]
 8852              	.LVL430:
 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 8853              		.loc 14 218 41 view .LVU2010
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 369


 8854              	.LBE5473:
 8855              	.LBE5472:
 8856              	.LBE5471:
 8857              	.LBE5470:
 8858              	.LBB5474:
 8859              	.LBI5461:
 507:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 8860              		.loc 15 507 2 is_stmt 1 view .LVU2011
 8861              	.LBB5467:
 8862              	.LBI5462:
 148:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 8863              		.loc 16 148 2 view .LVU2012
 148:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 8864              		.loc 16 148 2 is_stmt 0 view .LVU2013
 8865              	.LBE5467:
 8866              	.LBE5474:
 8867              	.LBE5476:
 8868              	.LBE5478:
 8869              	.LBE5480:
 8870              	.LBE5674:
 8871              	.LBE5683:
 8872              	.LBE5707:
 8873              	.LBE5800:
 8874              	.LBE5814:
 8875              		.loc 26 175 3 is_stmt 1 view .LVU2014
 8876              	.LBB5815:
 8877              	.LBB5801:
 8878              	.LBB5708:
 8879              	.LBB5684:
 8880              	.LBB5675:
 8881              	.LBB5481:
 8882              	.LBB5479:
 8883              	.LBB5477:
 8884              	.LBB5475:
 8885              	.LBB5468:
 8886              	.LBB5466:
 8887              	.LBI5463:
 314:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       constexpr pair(pair&&) = default;		///< Move constructor
 8888              		.loc 25 314 17 view .LVU2015
 8889              	.LBB5465:
 8890 01fc 51F8043F 		ldr	r3, [r1, #4]!
 8891 0200 40F8043F 		str	r3, [r0, #4]!
 8892              	.LVL431:
 314:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       constexpr pair(pair&&) = default;		///< Move constructor
 8893              		.loc 25 314 17 is_stmt 0 view .LVU2016
 8894 0204 0431     		adds	r1, r1, #4
 8895 0206 0430     		adds	r0, r0, #4
 8896              	.LVL432:
 314:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       constexpr pair(pair&&) = default;		///< Move constructor
 8897              		.loc 25 314 17 view .LVU2017
 8898 0208 FFF7FEFF 		bl	_ZN5paramC1ERKS_
 8899              	.LVL433:
 314:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       constexpr pair(pair&&) = default;		///< Move constructor
 8900              		.loc 25 314 17 view .LVU2018
 8901 020c 5BE7     		b	.L228
 8902              	.LVL434:
 8903              	.L261:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 370


 314:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       constexpr pair(pair&&) = default;		///< Move constructor
 8904              		.loc 25 314 17 view .LVU2019
 8905              	.LBE5465:
 8906              	.LBE5466:
 8907              	.LBE5468:
 8908              	.LBE5475:
 8909              	.LBE5477:
 8910              	.LBE5479:
 8911              	.LBE5481:
 8912              	.LBE5675:
 8913              	.LBB5676:
 8914              	.LBB5669:
1180:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		__prev_n = __this_n;
 8915              		.loc 12 1180 23 view .LVU2020
 8916 020e 41F82380 		str	r8, [r1, r3, lsl #2]
 8917 0212 A6E7     		b	.L234
 8918              	.LVL435:
 8919              	.L214:
1180:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		__prev_n = __this_n;
 8920              		.loc 12 1180 23 view .LVU2021
 8921              	.LBE5669:
 8922              	.LBE5676:
 8923              	.LBE5684:
 8924              	.LBE5708:
 8925              	.LBE5801:
 8926              	.LBE5815:
1113:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			   _M_bucket_count * sizeof(__bucket_type));
 8927              		.loc 12 1113 20 view .LVU2022
 8928 0214 0021     		movs	r1, #0
 8929              	.LVL436:
1113:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			   _M_bucket_count * sizeof(__bucket_type));
 8930              		.loc 12 1113 20 view .LVU2023
 8931 0216 4FEA8A02 		lsl	r2, r10, #2
 8932 021a 0068     		ldr	r0, [r0]
 8933              	.LVL437:
1113:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			   _M_bucket_count * sizeof(__bucket_type));
 8934              		.loc 12 1113 20 view .LVU2024
 8935 021c FFF7FEFF 		bl	memset
 8936              	.LVL438:
 8937              	.LBB5816:
1119:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_rehash_policy = __ht._M_rehash_policy;
 8938              		.loc 12 1119 30 view .LVU2025
 8939 0220 EB68     		ldr	r3, [r5, #12]
1120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    __reuse_or_alloc_node_gen_t __roan(_M_begin(), *this);
 8940              		.loc 12 1120 6 view .LVU2026
 8941 0222 05F11002 		add	r2, r5, #16
 8942              	.LBB5802:
 8943              	.LBB5709:
1154:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_buckets = __buckets = _M_allocate_buckets(_M_bucket_count);
 8944              		.loc 12 1154 7 view .LVU2027
 8945 0226 3768     		ldr	r7, [r6]
1154:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_buckets = __buckets = _M_allocate_buckets(_M_bucket_count);
 8946              		.loc 12 1154 7 view .LVU2028
 8947              	.LBE5709:
 8948              	.LBE5802:
1119:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_rehash_policy = __ht._M_rehash_policy;
 8949              		.loc 12 1119 23 view .LVU2029
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 371


 8950 0228 F360     		str	r3, [r6, #12]
1120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    __reuse_or_alloc_node_gen_t __roan(_M_begin(), *this);
 8951              		.loc 12 1120 6 view .LVU2030
 8952 022a 06F11003 		add	r3, r6, #16
 8953              	.LBB5803:
 8954              	.LBB5347:
 421:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 8955              		.loc 12 421 64 view .LVU2031
 8956 022e B468     		ldr	r4, [r6, #8]
 8957              	.LBE5347:
 8958              	.LBE5803:
1120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    __reuse_or_alloc_node_gen_t __roan(_M_begin(), *this);
 8959              		.loc 12 1120 6 view .LVU2032
 8960 0230 92E80300 		ldm	r2, {r0, r1}
 8961 0234 83E80300 		stm	r3, {r0, r1}
 8962              	.LVL439:
 8963              	.LBB5804:
 420:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return static_cast<__node_type*>(_M_before_begin._M_nxt); }
 8964              		.loc 12 420 7 is_stmt 1 view .LVU2033
 420:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return static_cast<__node_type*>(_M_before_begin._M_nxt); }
 8965              		.loc 12 420 7 is_stmt 0 view .LVU2034
 8966              	.LBE5804:
 8967              	.LBB5805:
 113:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : _M_nodes(__nodes), _M_h(__h) { }
 8968              		.loc 14 113 7 is_stmt 1 view .LVU2035
 113:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : _M_nodes(__nodes), _M_h(__h) { }
 8969              		.loc 14 113 7 is_stmt 0 view .LVU2036
 8970              	.LBE5805:
1122:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_assign(std::forward<_Ht>(__ht), __roan);
 8971              		.loc 12 1122 29 view .LVU2037
 8972 0238 0023     		movs	r3, #0
 8973 023a B360     		str	r3, [r6, #8]
 8974              	.LVL440:
 8975              	.LBB5806:
1149:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 8976              		.loc 12 1149 7 is_stmt 1 view .LVU2038
 8977              	.LBB5710:
1154:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_buckets = __buckets = _M_allocate_buckets(_M_bucket_count);
 8978              		.loc 12 1154 2 is_stmt 0 view .LVU2039
 8979 023c 8FB9     		cbnz	r7, .L220
1155:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 8980              		.loc 12 1155 48 view .LVU2040
 8981 023e 7268     		ldr	r2, [r6, #4]
 8982              	.LVL441:
 8983              	.LBB5685:
 8984              	.LBI5685:
 390:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 8985              		.loc 12 390 7 is_stmt 1 view .LVU2041
 8986              	.LBB5686:
 392:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  {
 8987              		.loc 12 392 2 is_stmt 0 view .LVU2042
 8988 0240 012A     		cmp	r2, #1
 8989 0242 1CD0     		beq	.L263
 8990              	.LVL442:
 8991              	.LBB5687:
 8992              	.LBI5687:
2081:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 372


 8993              		.loc 14 2081 5 is_stmt 1 view .LVU2043
 8994              	.LBB5688:
 8995              	.LBB5689:
 8996              	.LBI5689:
 157:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 8997              		.loc 17 157 2 view .LVU2044
 8998              	.LBB5690:
 8999              	.LBI5690:
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9000              		.loc 16 79 7 view .LVU2045
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9001              		.loc 16 79 7 is_stmt 0 view .LVU2046
 9002              	.LBE5690:
 9003              	.LBE5689:
 9004              	.LBB5691:
 9005              	.LBI5691:
 459:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 9006              		.loc 15 459 7 is_stmt 1 view .LVU2047
 9007              	.LBB5692:
 9008              	.LBI5692:
 103:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 9009              		.loc 16 103 7 view .LVU2048
 9010              	.LBB5693:
 105:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  std::__throw_bad_alloc();
 9011              		.loc 16 105 2 is_stmt 0 view .LVU2049
 9012 0244 B2F1005F 		cmp	r2, #536870912
 9013 0248 1DD2     		bcs	.L223
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 9014              		.loc 16 115 41 view .LVU2050
 9015 024a 9200     		lsls	r2, r2, #2
 9016              	.LVL443:
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 9017              		.loc 16 115 41 view .LVU2051
 9018 024c 1046     		mov	r0, r2
 9019 024e 0192     		str	r2, [sp, #4]
 9020 0250 FFF7FEFF 		bl	_Znwj
 9021              	.LVL444:
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 9022              		.loc 16 115 41 view .LVU2052
 9023              	.LBE5693:
 9024              	.LBE5692:
 9025              	.LBE5691:
2087:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       return __p;
 9026              		.loc 14 2087 23 view .LVU2053
 9027 0254 019A     		ldr	r2, [sp, #4]
 9028 0256 3946     		mov	r1, r7
 9029              	.LBB5696:
 9030              	.LBB5695:
 9031              	.LBB5694:
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 9032              		.loc 16 115 41 view .LVU2054
 9033 0258 8046     		mov	r8, r0
 9034              	.LVL445:
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 9035              		.loc 16 115 41 view .LVU2055
 9036              	.LBE5694:
 9037              	.LBE5695:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 373


 9038              	.LBE5696:
2087:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       return __p;
 9039              		.loc 14 2087 23 view .LVU2056
 9040 025a FFF7FEFF 		bl	memset
 9041              	.LVL446:
 9042              	.LBB5697:
 9043              	.LBI5697:
 9044              		.loc 17 162 7 is_stmt 1 view .LVU2057
 9045              	.LBB5698:
 9046              	.LBI5698:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9047              		.loc 16 89 7 view .LVU2058
 9048              	.L222:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9049              		.loc 16 89 7 is_stmt 0 view .LVU2059
 9050              	.LBE5698:
 9051              	.LBE5697:
 9052              	.LBE5688:
 9053              	.LBE5687:
 9054              	.LBE5686:
 9055              	.LBE5685:
1155:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 9056              		.loc 12 1155 15 view .LVU2060
 9057 025e C6F80080 		str	r8, [r6]
 9058              	.LVL447:
 9059              	.L220:
 9060              	.LBB5700:
1159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      return;
 9061              		.loc 12 1159 32 view .LVU2061
 9062 0262 AD68     		ldr	r5, [r5, #8]
 9063              	.LVL448:
1159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      return;
 9064              		.loc 12 1159 6 view .LVU2062
 9065 0264 002D     		cmp	r5, #0
 9066 0266 9BD0     		beq	.L236
 9067 0268 4FF00009 		mov	r9, #0
 9068              	.LVL449:
 9069              	.LBB5677:
 122:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	{
 9070              		.loc 14 122 2 is_stmt 1 view .LVU2063
 9071              	.LBB5482:
 124:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    {
 9072              		.loc 14 124 4 is_stmt 0 view .LVU2064
 9073 026c 002C     		cmp	r4, #0
 9074 026e 7FF4FCAE 		bne	.L264
 9075 0272 BDE7     		b	.L224
 9076              	.LVL450:
 9077              	.L260:
 124:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    {
 9078              		.loc 14 124 4 view .LVU2065
 9079              	.LBE5482:
 9080              	.LBE5677:
 9081              	.LBE5700:
 9082              	.LBE5710:
 9083              	.LBE5806:
 9084              	.LBE5816:
 9085              	.LBB5817:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 374


 9086              	.LBB5341:
 394:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    return &_M_single_bucket;
 9087              		.loc 12 394 23 view .LVU2066
 9088 0274 0023     		movs	r3, #0
 9089 0276 0446     		mov	r4, r0
 9090 0278 44F8183F 		str	r3, [r4, #24]!
 395:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  }
 9091              		.loc 12 395 14 view .LVU2067
 9092 027c DFE6     		b	.L216
 9093              	.LVL451:
 9094              	.L263:
 395:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  }
 9095              		.loc 12 395 14 view .LVU2068
 9096              	.LBE5341:
 9097              	.LBE5817:
 9098              	.LBB5818:
 9099              	.LBB5807:
 9100              	.LBB5711:
 9101              	.LBB5701:
 9102              	.LBB5699:
 394:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    return &_M_single_bucket;
 9103              		.loc 12 394 23 view .LVU2069
 9104 027e B046     		mov	r8, r6
 9105 0280 48F8187F 		str	r7, [r8, #24]!
 395:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  }
 9106              		.loc 12 395 14 view .LVU2070
 9107 0284 EBE7     		b	.L222
 9108              	.LVL452:
 9109              	.L223:
 395:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  }
 9110              		.loc 12 395 14 view .LVU2071
 9111              	.LBE5699:
 9112              	.LBE5701:
 9113              	.LBE5711:
 9114              	.LBE5807:
 9115              	.LBE5818:
 9116              	.LBB5819:
 9117              	.LBB5342:
 9118              	.LBB5339:
 9119              	.LBB5338:
 9120              	.LBB5337:
 9121              	.LBB5333:
 9122              	.LBB5331:
 106:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9123              		.loc 16 106 26 view .LVU2072
 9124 0286 FFF7FEFF 		bl	_ZSt17__throw_bad_allocv
 9125              	.LVL453:
 9126              	.LBE5331:
 9127              	.LBE5333:
 9128              	.LBE5337:
 9129              	.LBE5338:
 9130              	.LBE5339:
 9131              	.LBE5342:
 9132              	.LBE5819:
 9133              		.cfi_endproc
 9134              	.LFE6038:
 9136 028a 00BF     		.section	.rodata._Z12processAudiofP12ParameterMap.str1.4,"aMS",%progbits,1
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 375


 9137              		.align	2
 9138              	.LC3:
 9139 0000 5F4D6170 		.ascii	"_Map_base::at\000"
 9139      5F626173 
 9139      653A3A61 
 9139      7400
 9140              		.section	.text._Z12processAudiofP12ParameterMap,"ax",%progbits
 9141              		.align	1
 9142              		.p2align 2,,3
 9143              		.global	_Z12processAudiofP12ParameterMap
 9144              		.syntax unified
 9145              		.thumb
 9146              		.thumb_func
 9147              		.fpu fpv5-d16
 9149              	_Z12processAudiofP12ParameterMap:
 9150              	.LVL454:
 9151              	.LFB4683:
 9152              		.file 31 "src/audiohandler.hpp"
   1:src/audiohandler.hpp **** // #ifndef _AUDIOHANDLER_H_
   2:src/audiohandler.hpp **** // #define _AUDIOHANDLER_H_
   3:src/audiohandler.hpp **** 
   4:src/audiohandler.hpp **** // #include "daisy.h"
   5:src/audiohandler.hpp **** // #include "daisysp.h"
   6:src/audiohandler.hpp **** // #include "daisy_seed.h"
   7:src/audiohandler.hpp **** 
   8:src/audiohandler.hpp **** #include "lmdsp.hpp"
   9:src/audiohandler.hpp **** #include "parameter_controller.h"
  10:src/audiohandler.hpp **** #include "statemanager.h"
  11:src/audiohandler.hpp **** #include "daisysp.h"
  12:src/audiohandler.hpp **** 
  13:src/audiohandler.hpp **** StateManager stateManager;
  14:src/audiohandler.hpp **** 
  15:src/audiohandler.hpp **** float processAudio(float xn, ParameterMap* params) {
 9153              		.loc 31 15 52 is_stmt 1 view -0
 9154              		.cfi_startproc
 9155              		@ args = 0, pretend = 0, frame = 112
 9156              		@ frame_needed = 0, uses_anonymous_args = 0
  16:src/audiohandler.hpp **** 
  17:src/audiohandler.hpp ****     //float _fs = SaiHandle::Config::SampleRate::SAI_48KHZ;
  18:src/audiohandler.hpp **** 
  19:src/audiohandler.hpp ****     int curr_state = stateManager.getState();
 9157              		.loc 31 19 5 view .LVU2074
 9158              	.LBB6031:
 9159              	.LBI6031:
  49:src/statemanager.h ****     
  50:src/statemanager.h ****     void setState(int s) {
  51:src/statemanager.h ****         // state_id.prev_state = state_id.state;
  52:src/statemanager.h ****         // state_id.state = s;
  53:src/statemanager.h ****         state = s;
  54:src/statemanager.h ****     }
  55:src/statemanager.h **** 
  56:src/statemanager.h ****     int getState() {
 9160              		.loc 11 56 9 view .LVU2075
 9161              	.LBB6032:
  57:src/statemanager.h ****         //return state_id.state;
  58:src/statemanager.h ****         return state;
 9162              		.loc 11 58 9 view .LVU2076
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 376


 9163              		.loc 11 58 16 is_stmt 0 view .LVU2077
 9164 0000 564B     		ldr	r3, .L290
 9165              	.LBE6032:
 9166              	.LBE6031:
 9167              	.LBB6034:
 9168              	.LBB6035:
 9169              	.LBB6036:
 9170              	.LBB6037:
 9171              	.LBB6038:
 9172              	.LBB6039:
 181:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 9173              		.loc 13 181 7 view .LVU2078
 9174 0002 0146     		mov	r1, r0
 9175              	.LBE6039:
 9176              	.LBE6038:
 9177              	.LBE6037:
 9178              	.LBE6036:
 9179              	.LBE6035:
 9180              	.LBE6034:
  15:src/audiohandler.hpp **** 
 9181              		.loc 31 15 52 view .LVU2079
 9182 0004 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 9183              		.cfi_def_cfa_offset 32
 9184              		.cfi_offset 4, -32
 9185              		.cfi_offset 5, -28
 9186              		.cfi_offset 6, -24
 9187              		.cfi_offset 7, -20
 9188              		.cfi_offset 8, -16
 9189              		.cfi_offset 9, -12
 9190              		.cfi_offset 10, -8
 9191              		.cfi_offset 14, -4
 9192              	.LBB6052:
 9193              	.LBB6033:
 9194              		.loc 11 58 16 view .LVU2080
 9195 0008 D3F80090 		ldr	r9, [r3]
 9196              	.LVL455:
 9197              		.loc 11 58 16 view .LVU2081
 9198              	.LBE6033:
 9199              	.LBE6052:
  20:src/audiohandler.hpp **** 
  21:src/audiohandler.hpp ****     Passthrough passthrough;
 9200              		.loc 31 21 5 is_stmt 1 view .LVU2082
 9201              	.LBB6053:
 9202              	.LBB6054:
 9203              	.LBB6055:
 9204              	.LBB6056:
 9205              	.LBB6057:
 9206              	.LBB6058:
 9207              	.LBB6059:
 9208              	.LBB6060:
 9209              	.LBB6061:
 450:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 9210              		.loc 14 450 48 is_stmt 0 view .LVU2083
 9211 000c 4FF07E53 		mov	r3, #1065353216
 9212              	.LBE6061:
 9213              	.LBE6060:
 9214              	.LBE6059:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 377


 9215              	.LBE6058:
 9216              	.LBE6057:
 9217              	.LBE6056:
 9218              	.LBE6055:
 9219              	.LBE6054:
 9220              	.LBE6053:
  15:src/audiohandler.hpp **** 
 9221              		.loc 31 15 52 view .LVU2084
 9222 0010 8246     		mov	r10, r0
 9223              	.LBB6089:
 9224              	.LBB6085:
  31:src/lmdsp.hpp ****     ~Passthrough() {};
 9225              		.loc 1 31 19 view .LVU2085
 9226 0012 534E     		ldr	r6, .L290+4
 9227              	.LBE6085:
 9228              	.LBE6089:
  15:src/audiohandler.hpp **** 
 9229              		.loc 31 15 52 view .LVU2086
 9230 0014 2DED028B 		vpush.64	{d8}
 9231              		.cfi_def_cfa_offset 40
 9232              		.cfi_offset 80, -40
 9233              		.cfi_offset 81, -36
 9234 0018 9CB0     		sub	sp, sp, #112
 9235              		.cfi_def_cfa_offset 152
 9236              	.LVL456:
 9237              	.LBB6090:
 9238              	.LBI6053:
  31:src/lmdsp.hpp ****     ~Passthrough() {};
 9239              		.loc 1 31 5 is_stmt 1 view .LVU2087
 9240              	.LBB6086:
 9241              	.LBB6082:
 9242              	.LBI6082:
  11:src/lmdsp.hpp ****     virtual ~LMAudioSignalProcessor() {};
 9243              		.loc 1 11 5 view .LVU2088
  11:src/lmdsp.hpp ****     virtual ~LMAudioSignalProcessor() {};
 9244              		.loc 1 11 5 is_stmt 0 view .LVU2089
 9245              	.LBE6082:
 9246              	.LBE6086:
 9247              	.LBE6090:
  15:src/audiohandler.hpp **** 
 9248              		.loc 31 15 52 view .LVU2090
 9249 001a B0EE408A 		vmov.f32	s16, s0
 9250              	.LBB6091:
 9251              	.LBB6087:
 9252              	.LBB6083:
 9253              	.LBB6074:
 9254              	.LBB6072:
 9255              	.LBB6070:
 9256              	.LBB6064:
 9257              	.LBB6063:
 9258              	.LBB6062:
 450:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 9259              		.loc 14 450 48 view .LVU2091
 9260 001e 0E93     		str	r3, [sp, #56]	@ float
 9261              	.LBE6062:
 9262              	.LBE6063:
 9263              	.LBE6064:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 378


 9264              	.LBB6065:
 9265              	.LBB6066:
 9266              	.LBB6067:
 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 9267              		.loc 14 218 41 view .LVU2092
 9268 0020 0023     		movs	r3, #0
 9269              	.LBE6067:
 9270              	.LBE6066:
 9271              	.LBE6065:
 451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(size_type __bkt_count_hint,
 9272              		.loc 12 451 7 view .LVU2093
 9273 0022 0DF14008 		add	r8, sp, #64
 9274              	.LBE6070:
 9275              	.LBE6072:
 9276              	.LBE6074:
 9277              	.LBE6083:
 9278              	.LBE6087:
 9279              	.LBE6091:
 9280              	.LBB6092:
 9281              	.LBB6049:
 9282              	.LBB6046:
 9283              	.LBB6044:
 9284              	.LBB6042:
 9285              	.LBB6040:
 181:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 9286              		.loc 13 181 7 view .LVU2094
 9287 0026 12A8     		add	r0, sp, #72
 9288              	.LVL457:
 181:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 9289              		.loc 13 181 7 view .LVU2095
 9290              	.LBE6040:
 9291              	.LBE6042:
 9292              	.LBE6044:
 9293              	.LBE6046:
 9294              	.LBE6049:
 9295              	.LBE6092:
 9296              	.LBB6093:
 9297              	.LBB6088:
 9298              	.LBB6084:
 9299              	.LBB6075:
 9300              	.LBB6076:
 9301              	.LBB6077:
 9302              	.LBB6078:
 295:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 9303              		.loc 14 295 19 view .LVU2096
 9304 0028 1193     		str	r3, [sp, #68]
 9305              	.LBE6078:
 9306              	.LBE6077:
 9307              	.LBE6076:
 9308              	.LBE6075:
 9309              	.LBB6080:
 9310              	.LBB6073:
 9311              	.LBB6071:
 451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(size_type __bkt_count_hint,
 9312              		.loc 12 451 7 view .LVU2097
 9313 002a CDE90C33 		strd	r3, r3, [sp, #48]
 9314 002e CDE90F33 		strd	r3, r3, [sp, #60]
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 379


 9315 0032 0123     		movs	r3, #1
 9316 0034 CDE90968 		strd	r6, r8, [sp, #36]
 9317 0038 0B93     		str	r3, [sp, #44]
 9318              	.LVL458:
 9319              	.LBB6068:
 9320              	.LBI6065:
 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 9321              		.loc 14 218 5 is_stmt 1 view .LVU2098
 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 9322              		.loc 14 218 5 is_stmt 0 view .LVU2099
 9323              	.LBE6068:
 9324              	.LBB6069:
 9325              	.LBI6059:
 449:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : _M_max_load_factor(__z), _M_next_resize(0) { }
 9326              		.loc 14 449 5 is_stmt 1 view .LVU2100
 449:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : _M_max_load_factor(__z), _M_next_resize(0) { }
 9327              		.loc 14 449 5 is_stmt 0 view .LVU2101
 9328              	.LBE6069:
 9329              	.LBE6071:
 9330              	.LBE6073:
 9331              	.LBE6080:
 9332              	.LBB6081:
 9333              	.LBI6075:
 336:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : __base_type(0) { }
 9334              		.loc 14 336 7 is_stmt 1 view .LVU2102
 9335              	.LBB6079:
 9336              	.LBI6076:
 294:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : _M_cur(__p) { }
 9337              		.loc 14 294 7 view .LVU2103
 294:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : _M_cur(__p) { }
 9338              		.loc 14 294 7 is_stmt 0 view .LVU2104
 9339              	.LBE6079:
 9340              	.LBE6081:
 9341              	.LBE6084:
 9342              	.LBE6088:
 9343              	.LBE6093:
  22:src/audiohandler.hpp ****     passthrough.setParameters(*params);
 9344              		.loc 31 22 5 is_stmt 1 view .LVU2105
 9345              	.LBB6094:
 9346              	.LBI6034:
  60:src/parameter_controller.h **** private:
 9347              		.loc 19 60 7 view .LVU2106
 9348              	.LBB6050:
 9349              	.LBB6047:
 9350              	.LBB6045:
 9351              	.LBI6037:
 181:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 9352              		.loc 13 181 7 view .LVU2107
 9353              	.LBB6043:
 9354              	.LBB6041:
 9355 003a FFF7FEFF 		bl	_ZNSt10_HashtableIiSt4pairIKi5paramESaIS3_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS5
 9356              	.LVL459:
 181:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 9357              		.loc 13 181 7 is_stmt 0 view .LVU2108
 9358              	.LBE6041:
 9359              	.LBE6043:
 9360              	.LBE6045:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 380


  60:src/parameter_controller.h **** private:
 9361              		.loc 19 60 7 view .LVU2109
 9362 003e DAF81C30 		ldr	r3, [r10, #28]
 9363              	.LBE6047:
 9364              	.LBE6050:
 9365              	.LBE6094:
 9366              	.LBB6095:
 9367              	.LBB6096:
 9368              	.LBB6097:
 9369              	.LBB6098:
 9370              	.LBB6099:
 9371              	.LBB6100:
1088:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return *this;
 9372              		.loc 12 1088 25 view .LVU2110
 9373 0042 12A9     		add	r1, sp, #72
 9374              	.LVL460:
1088:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return *this;
 9375              		.loc 12 1088 25 view .LVU2111
 9376 0044 0AA8     		add	r0, sp, #40
 9377              	.LBE6100:
 9378              	.LBE6099:
 9379              	.LBE6098:
 9380              	.LBE6097:
 9381              	.LBE6096:
 9382              	.LBE6095:
 9383              	.LBB6108:
 9384              	.LBB6051:
 9385              	.LBB6048:
  60:src/parameter_controller.h **** private:
 9386              		.loc 19 60 7 view .LVU2112
 9387 0046 1993     		str	r3, [sp, #100]
 9388              	.LVL461:
  60:src/parameter_controller.h **** private:
 9389              		.loc 19 60 7 view .LVU2113
 9390              	.LBE6048:
 9391              	.LBE6051:
 9392              	.LBE6108:
 9393              	.LBB6109:
 9394              	.LBI6095:
  45:src/lmdsp.hpp ****         params = p;
 9395              		.loc 1 45 10 is_stmt 1 view .LVU2114
 9396              	.LBE6109:
  46:src/lmdsp.hpp ****     }
 9397              		.loc 1 46 9 view .LVU2115
 9398              	.LBB6110:
 9399              	.LBB6106:
 9400              	.LBI6096:
  60:src/parameter_controller.h **** private:
 9401              		.loc 19 60 7 view .LVU2116
 9402              	.LBB6104:
 9403              	.LBB6103:
 9404              	.LBI6098:
 271:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 9405              		.loc 13 271 7 view .LVU2117
 9406              	.LBB6102:
 9407              	.LBI6099:
1045:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 381


 9408              		.loc 12 1045 5 view .LVU2118
 9409              	.LBB6101:
1088:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return *this;
 9410              		.loc 12 1088 25 is_stmt 0 view .LVU2119
 9411 0048 FFF7FEFF 		bl	_ZNSt10_HashtableIiSt4pairIKi5paramESaIS3_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS5
 9412              	.LVL462:
1088:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return *this;
 9413              		.loc 12 1088 25 view .LVU2120
 9414              	.LBE6101:
 9415              	.LBE6102:
 9416              	.LBE6103:
  60:src/parameter_controller.h **** private:
 9417              		.loc 19 60 7 view .LVU2121
 9418 004c 199B     		ldr	r3, [sp, #100]
 9419              	.LBE6104:
 9420              	.LBE6106:
 9421              	.LBE6110:
 9422              	.LBB6111:
 9423              	.LBB6112:
 9424              	.LBB6113:
 9425              	.LBB6114:
 9426              	.LBB6115:
1387:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_deallocate_buckets();
 9427              		.loc 12 1387 12 view .LVU2122
 9428 004e 12A8     		add	r0, sp, #72
 9429              	.LVL463:
1387:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_deallocate_buckets();
 9430              		.loc 12 1387 12 view .LVU2123
 9431              	.LBE6115:
 9432              	.LBE6114:
 9433              	.LBE6113:
 9434              	.LBE6112:
 9435              	.LBE6111:
 9436              	.LBB6140:
 9437              	.LBB6107:
 9438              	.LBB6105:
  60:src/parameter_controller.h **** private:
 9439              		.loc 19 60 7 view .LVU2124
 9440 0050 1193     		str	r3, [sp, #68]
 9441              	.LVL464:
  60:src/parameter_controller.h **** private:
 9442              		.loc 19 60 7 view .LVU2125
 9443              	.LBE6105:
 9444              	.LBE6107:
 9445              	.LBE6140:
 9446              	.LBB6141:
 9447              	.LBI6111:
  67:src/parameter_controller.h **** 
 9448              		.loc 19 67 5 is_stmt 1 view .LVU2126
 9449              	.LBB6139:
 9450              	.LBB6138:
 9451              	.LBI6113:
 102:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****     {
 9452              		.loc 13 102 11 view .LVU2127
 9453              	.LBB6137:
 9454              	.LBI6114:
1383:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 382


 9455              		.loc 12 1383 5 view .LVU2128
 9456              	.LBB6136:
1387:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_deallocate_buckets();
 9457              		.loc 12 1387 12 is_stmt 0 view .LVU2129
 9458 0052 FFF7FEFF 		bl	_ZNSt10_HashtableIiSt4pairIKi5paramESaIS3_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS5
 9459              	.LVL465:
 9460              	.LBB6116:
 9461              	.LBI6116:
 411:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { _M_deallocate_buckets(_M_buckets, _M_bucket_count); }
 9462              		.loc 12 411 7 is_stmt 1 view .LVU2130
 9463              	.LBB6117:
 412:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 9464              		.loc 12 412 30 is_stmt 0 view .LVU2131
 9465 0056 1298     		ldr	r0, [sp, #72]
 9466              	.LBB6118:
 9467              	.LBB6119:
 404:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return;
 9468              		.loc 12 404 2 view .LVU2132
 9469 0058 18AB     		add	r3, sp, #96
 9470              	.LBE6119:
 9471              	.LBE6118:
 412:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 9472              		.loc 12 412 30 view .LVU2133
 9473 005a 1399     		ldr	r1, [sp, #76]
 9474              	.LVL466:
 9475              	.LBB6131:
 9476              	.LBI6118:
 402:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 9477              		.loc 12 402 7 is_stmt 1 view .LVU2134
 9478              	.LBB6130:
 9479              	.LBB6120:
 9480              	.LBI6120:
 379:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __builtin_expect(__bkts == &_M_single_bucket, false); }
 9481              		.loc 12 379 7 view .LVU2135
 379:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __builtin_expect(__bkts == &_M_single_bucket, false); }
 9482              		.loc 12 379 7 is_stmt 0 view .LVU2136
 9483              	.LBE6120:
 404:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return;
 9484              		.loc 12 404 2 view .LVU2137
 9485 005c 9842     		cmp	r0, r3
 9486 005e 02D0     		beq	.L266
 9487              	.LVL467:
 9488              	.LBB6121:
 9489              	.LBI6121:
 9490              		.loc 14 2093 5 is_stmt 1 view .LVU2138
 9491              	.LBB6122:
 9492              	.LBB6123:
 9493              	.LBI6123:
 157:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 9494              		.loc 17 157 2 view .LVU2139
 9495              	.LBB6124:
 9496              	.LBI6124:
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9497              		.loc 16 79 7 view .LVU2140
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9498              		.loc 16 79 7 is_stmt 0 view .LVU2141
 9499              	.LBE6124:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 383


 9500              	.LBE6123:
 9501              	.LBB6125:
 9502              	.LBI6125:
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 9503              		.loc 15 491 7 is_stmt 1 view .LVU2142
 9504              	.LBB6126:
 9505              	.LBI6126:
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 9506              		.loc 16 120 7 view .LVU2143
 9507              	.LBB6127:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 9508              		.loc 16 133 19 is_stmt 0 view .LVU2144
 9509 0060 8900     		lsls	r1, r1, #2
 9510              	.LVL468:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 9511              		.loc 16 133 19 view .LVU2145
 9512 0062 FFF7FEFF 		bl	_ZdlPvj
 9513              	.LVL469:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 9514              		.loc 16 133 19 view .LVU2146
 9515              	.LBE6127:
 9516              	.LBE6126:
 9517              	.LBE6125:
 9518              	.LBB6128:
 9519              	.LBI6128:
 9520              		.loc 17 162 7 is_stmt 1 view .LVU2147
 9521              	.LBB6129:
 9522              	.LBI6129:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9523              		.loc 16 89 7 view .LVU2148
 9524              	.L266:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9525              		.loc 16 89 7 is_stmt 0 view .LVU2149
 9526              	.LBE6129:
 9527              	.LBE6128:
 9528              	.LBE6122:
 9529              	.LBE6121:
 9530              	.LBE6130:
 9531              	.LBE6131:
 9532              	.LBE6117:
 9533              	.LBE6116:
 9534              	.LBB6132:
 9535              	.LBI6132:
1963:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 9536              		.loc 14 1963 12 is_stmt 1 view .LVU2150
 9537              	.LBB6133:
 9538              	.LBI6133:
1109:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : private _Tp
 9539              		.loc 14 1109 12 view .LVU2151
 9540              	.LBB6134:
 9541              	.LBI6134:
 9542              		.loc 17 162 7 view .LVU2152
 9543              	.LBB6135:
 9544              	.LBI6135:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9545              		.loc 16 89 7 view .LVU2153
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 384


 9546              		.loc 16 89 7 is_stmt 0 view .LVU2154
 9547              	.LBE6135:
 9548              	.LBE6134:
 9549              	.LBE6133:
 9550              	.LBE6132:
 9551              	.LBE6136:
 9552              	.LBE6137:
 9553              	.LBE6138:
 9554              	.LBE6139:
 9555              	.LBE6141:
  23:src/audiohandler.hpp ****     GainStage gainstage;
 9556              		.loc 31 23 5 is_stmt 1 view .LVU2155
 9557              	.LBB6142:
 9558              	.LBI6142:
  55:src/lmdsp.hpp ****     ~GainStage() {};
 9559              		.loc 1 55 5 view .LVU2156
 9560              	.LBB6143:
 9561              	.LBB6144:
 9562              	.LBB6145:
 9563              	.LBI6145:
  11:src/lmdsp.hpp ****     virtual ~LMAudioSignalProcessor() {};
 9564              		.loc 1 11 5 view .LVU2157
  11:src/lmdsp.hpp ****     virtual ~LMAudioSignalProcessor() {};
 9565              		.loc 1 11 5 is_stmt 0 view .LVU2158
 9566              	.LBE6145:
 9567              	.LBB6146:
 9568              	.LBB6147:
 9569              	.LBB6148:
 9570              	.LBB6149:
 9571              	.LBB6150:
 9572              	.LBB6151:
 9573              	.LBB6152:
 450:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 9574              		.loc 14 450 48 view .LVU2159
 9575 0066 4FF07E53 		mov	r3, #1065353216
 9576              	.LBE6152:
 9577              	.LBE6151:
 9578              	.LBE6150:
 451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(size_type __bkt_count_hint,
 9579              		.loc 12 451 7 view .LVU2160
 9580 006a 0124     		movs	r4, #1
 9581              	.LBE6149:
 9582              	.LBE6148:
 9583              	.LBE6147:
 9584              	.LBE6146:
  55:src/lmdsp.hpp ****     ~GainStage() {};
 9585              		.loc 1 55 17 view .LVU2161
 9586 006c 3D4D     		ldr	r5, .L290+8
 9587              	.LBB6183:
 9588              	.LBB6173:
 9589              	.LBB6169:
 9590              	.LBB6165:
 451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(size_type __bkt_count_hint,
 9591              		.loc 12 451 7 view .LVU2162
 9592 006e 19AF     		add	r7, sp, #100
 9593              	.LBB6155:
 9594              	.LBB6154:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 385


 9595              	.LBB6153:
 450:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 9596              		.loc 14 450 48 view .LVU2163
 9597 0070 1793     		str	r3, [sp, #92]	@ float
 9598              	.LBE6153:
 9599              	.LBE6154:
 9600              	.LBE6155:
 9601              	.LBB6156:
 9602              	.LBB6157:
 9603              	.LBB6158:
 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 9604              		.loc 14 218 41 view .LVU2164
 9605 0072 0023     		movs	r3, #0
 9606              	.LBE6158:
 9607              	.LBE6157:
 9608              	.LBE6156:
 9609              	.LBE6165:
 9610              	.LBE6169:
 9611              	.LBE6173:
 9612              	.LBE6183:
 9613              	.LBE6144:
 9614              	.LBE6143:
 9615              	.LBE6142:
 9616              	.LBB6191:
 9617              	.LBB6192:
 9618              	.LBB6193:
 9619              	.LBB6194:
 9620              	.LBB6195:
 9621              	.LBB6196:
 181:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 9622              		.loc 13 181 7 view .LVU2165
 9623 0074 5146     		mov	r1, r10
 9624 0076 01A8     		add	r0, sp, #4
 9625              	.LBE6196:
 9626              	.LBE6195:
 9627              	.LBE6194:
 9628              	.LBE6193:
 9629              	.LBE6192:
 9630              	.LBE6191:
 9631              	.LBB6207:
 9632              	.LBB6189:
 9633              	.LBB6187:
 9634              	.LBB6184:
 9635              	.LBB6174:
 9636              	.LBB6175:
 9637              	.LBB6176:
 9638              	.LBB6177:
 295:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 9639              		.loc 14 295 19 view .LVU2166
 9640 0078 1A93     		str	r3, [sp, #104]
 9641              	.LBE6177:
 9642              	.LBE6176:
 9643              	.LBE6175:
 9644              	.LBE6174:
 9645              	.LBB6179:
 9646              	.LBB6170:
 9647              	.LBB6166:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 386


 451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(size_type __bkt_count_hint,
 9648              		.loc 12 451 7 view .LVU2167
 9649 007a 1494     		str	r4, [sp, #80]
 9650              	.LBE6166:
 9651              	.LBE6170:
 9652              	.LBE6179:
 9653              	.LBE6184:
  55:src/lmdsp.hpp ****     ~GainStage() {};
 9654              		.loc 1 55 17 view .LVU2168
 9655 007c 1295     		str	r5, [sp, #72]
 9656              	.LVL470:
 9657              	.LBB6185:
 9658              	.LBI6146:
  66:src/parameter_controller.h ****     ~ParameterMap() {};
 9659              		.loc 19 66 5 is_stmt 1 view .LVU2169
 9660              	.LBB6180:
 9661              	.LBI6147:
 141:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 9662              		.loc 13 141 7 view .LVU2170
 9663              	.LBB6171:
 9664              	.LBI6148:
 451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(size_type __bkt_count_hint,
 9665              		.loc 12 451 7 view .LVU2171
 9666              	.LBB6167:
 9667              	.LBB6159:
 9668              	.LBI6159:
1982:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Hashtable_alloc(const _Hashtable_alloc&) = default;
 9669              		.loc 14 1982 7 view .LVU2172
 9670              	.LBB6160:
 9671              	.LBI6160:
1112:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 9672              		.loc 14 1112 7 view .LVU2173
 9673              	.LBB6161:
 9674              	.LBI6161:
 144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 9675              		.loc 17 144 7 view .LVU2174
 9676              	.LBB6162:
 9677              	.LBI6162:
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9678              		.loc 16 79 7 view .LVU2175
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9679              		.loc 16 79 7 is_stmt 0 view .LVU2176
 9680              	.LBE6162:
 9681              	.LBE6161:
 9682              	.LBE6160:
 9683              	.LBE6159:
 9684              	.LBB6163:
 9685              	.LBI6156:
 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 9686              		.loc 14 218 5 is_stmt 1 view .LVU2177
 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 9687              		.loc 14 218 5 is_stmt 0 view .LVU2178
 9688              	.LBE6163:
 9689              	.LBB6164:
 9690              	.LBI6150:
 449:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : _M_max_load_factor(__z), _M_next_resize(0) { }
 9691              		.loc 14 449 5 is_stmt 1 view .LVU2179
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 387


 449:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : _M_max_load_factor(__z), _M_next_resize(0) { }
 9692              		.loc 14 449 5 is_stmt 0 view .LVU2180
 9693              	.LBE6164:
 9694              	.LBE6167:
 9695              	.LBE6171:
 9696              	.LBE6180:
 9697              	.LBB6181:
 9698              	.LBI6174:
 336:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : __base_type(0) { }
 9699              		.loc 14 336 7 is_stmt 1 view .LVU2181
 9700              	.LBB6178:
 9701              	.LBI6175:
 294:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : _M_cur(__p) { }
 9702              		.loc 14 294 7 view .LVU2182
 294:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : _M_cur(__p) { }
 9703              		.loc 14 294 7 is_stmt 0 view .LVU2183
 9704              	.LBE6178:
 9705              	.LBE6181:
 9706              	.LBE6185:
 9707              	.LBE6187:
 9708              	.LBE6189:
 9709              	.LBE6207:
  24:src/audiohandler.hpp ****     gainstage.setParameters(*params);
 9710              		.loc 31 24 5 is_stmt 1 view .LVU2184
 9711              	.LBB6208:
 9712              	.LBI6191:
  60:src/parameter_controller.h **** private:
 9713              		.loc 19 60 7 view .LVU2185
 9714              	.LBB6204:
 9715              	.LBB6201:
 9716              	.LBB6199:
 9717              	.LBI6194:
 181:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 9718              		.loc 13 181 7 view .LVU2186
 9719              	.LBE6199:
 9720              	.LBE6201:
 9721              	.LBE6204:
 9722              	.LBE6208:
 9723              	.LBB6209:
 9724              	.LBB6190:
 9725              	.LBB6188:
 9726              	.LBB6186:
 9727              	.LBB6182:
 9728              	.LBB6172:
 9729              	.LBB6168:
 451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(size_type __bkt_count_hint,
 9730              		.loc 12 451 7 is_stmt 0 view .LVU2187
 9731 007e 1397     		str	r7, [sp, #76]
 9732 0080 CDE91533 		strd	r3, r3, [sp, #84]
 9733 0084 CDE91833 		strd	r3, r3, [sp, #96]
 9734              	.LBE6168:
 9735              	.LBE6172:
 9736              	.LBE6182:
 9737              	.LBE6186:
 9738              	.LBE6188:
 9739              	.LBE6190:
 9740              	.LBE6209:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 388


 9741              	.LBB6210:
 9742              	.LBB6205:
 9743              	.LBB6202:
 9744              	.LBB6200:
 9745              	.LBB6198:
 9746              	.LBB6197:
 181:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 9747              		.loc 13 181 7 view .LVU2188
 9748 0088 FFF7FEFF 		bl	_ZNSt10_HashtableIiSt4pairIKi5paramESaIS3_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS5
 9749              	.LVL471:
 181:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 9750              		.loc 13 181 7 view .LVU2189
 9751              	.LBE6197:
 9752              	.LBE6198:
 9753              	.LBE6200:
  60:src/parameter_controller.h **** private:
 9754              		.loc 19 60 7 view .LVU2190
 9755 008c DAF81C30 		ldr	r3, [r10, #28]
 9756              	.LBE6202:
 9757              	.LBE6205:
 9758              	.LBE6210:
 9759              	.LBB6211:
 9760              	.LBB6212:
 9761              	.LBB6213:
 9762              	.LBB6214:
 9763              	.LBB6215:
 9764              	.LBB6216:
 9765              	.LBB6217:
1088:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return *this;
 9766              		.loc 12 1088 25 view .LVU2191
 9767 0090 01A9     		add	r1, sp, #4
 9768              	.LVL472:
1088:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return *this;
 9769              		.loc 12 1088 25 view .LVU2192
 9770 0092 13A8     		add	r0, sp, #76
 9771              	.LBE6217:
 9772              	.LBE6216:
 9773              	.LBE6215:
 9774              	.LBE6214:
 9775              	.LBE6213:
 9776              	.LBE6212:
 9777              	.LBE6211:
 9778              	.LBB6291:
 9779              	.LBB6206:
 9780              	.LBB6203:
  60:src/parameter_controller.h **** private:
 9781              		.loc 19 60 7 view .LVU2193
 9782 0094 0893     		str	r3, [sp, #32]
 9783              	.LVL473:
  60:src/parameter_controller.h **** private:
 9784              		.loc 19 60 7 view .LVU2194
 9785              	.LBE6203:
 9786              	.LBE6206:
 9787              	.LBE6291:
 9788              	.LBB6292:
 9789              	.LBI6211:
  69:src/lmdsp.hpp ****     void setParameters(ParameterMap p) {
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 389


 9790              		.loc 1 69 10 is_stmt 1 view .LVU2195
 9791              	.LBB6287:
  70:src/lmdsp.hpp ****         params = p;
 9792              		.loc 1 70 9 view .LVU2196
 9793              	.LBB6223:
 9794              	.LBI6213:
  60:src/parameter_controller.h **** private:
 9795              		.loc 19 60 7 view .LVU2197
 9796              	.LBB6221:
 9797              	.LBB6220:
 9798              	.LBI6215:
 271:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 9799              		.loc 13 271 7 view .LVU2198
 9800              	.LBB6219:
 9801              	.LBI6216:
1045:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 9802              		.loc 12 1045 5 view .LVU2199
 9803              	.LBB6218:
1088:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return *this;
 9804              		.loc 12 1088 25 is_stmt 0 view .LVU2200
 9805 0096 FFF7FEFF 		bl	_ZNSt10_HashtableIiSt4pairIKi5paramESaIS3_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS5
 9806              	.LVL474:
1088:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return *this;
 9807              		.loc 12 1088 25 view .LVU2201
 9808              	.LBE6218:
 9809              	.LBE6219:
 9810              	.LBE6220:
 9811              	.LBE6221:
 9812              	.LBE6223:
 9813              	.LBB6224:
 9814              	.LBB6225:
 9815              	.LBB6226:
 9816              	.LBB6227:
 9817              	.LBB6228:
 9818              	.LBB6229:
 9819              	.LBB6230:
 682:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 9820              		.loc 12 682 60 view .LVU2202
 9821 009a DDF850C0 		ldr	ip, [sp, #80]
 9822              	.LBE6230:
 9823              	.LBE6229:
 9824              	.LBB6239:
 9825              	.LBB6240:
 9826              	.LBB6241:
 9827              	.LBB6242:
1573:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (!__prev_p)
 9828              		.loc 12 1573 20 view .LVU2203
 9829 009e 139A     		ldr	r2, [sp, #76]
 9830              	.LBE6242:
 9831              	.LBE6241:
 9832              	.LBE6240:
 9833              	.LBE6239:
 9834              	.LBB6268:
 9835              	.LBB6237:
 9836              	.LBB6231:
 9837              	.LBB6232:
 9838              	.LBB6233:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 390


 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 9839              		.loc 14 433 22 view .LVU2204
 9840 00a0 B4FBFCF3 		udiv	r3, r4, ip
 9841 00a4 0CFB03F3 		mul	r3, ip, r3
 9842 00a8 E31A     		subs	r3, r4, r3
 9843              	.LBE6233:
 9844              	.LBE6232:
 9845              	.LBE6231:
 9846              	.LBE6237:
 9847              	.LBE6268:
 9848              	.LBB6269:
 9849              	.LBB6266:
 9850              	.LBB6264:
 9851              	.LBB6262:
1573:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (!__prev_p)
 9852              		.loc 12 1573 20 view .LVU2205
 9853 00aa 52F82340 		ldr	r4, [r2, r3, lsl #2]
 9854              	.LBE6262:
 9855              	.LBE6264:
 9856              	.LBE6266:
 9857              	.LBE6269:
 9858              	.LBE6228:
 9859              	.LBE6227:
 9860              	.LBE6226:
 9861              	.LBE6225:
 9862              	.LBE6224:
 9863              	.LBB6283:
 9864              	.LBB6222:
  60:src/parameter_controller.h **** private:
 9865              		.loc 19 60 7 view .LVU2206
 9866 00ae 089A     		ldr	r2, [sp, #32]
 9867 00b0 1A92     		str	r2, [sp, #104]
 9868              	.LVL475:
  60:src/parameter_controller.h **** private:
 9869              		.loc 19 60 7 view .LVU2207
 9870              	.LBE6222:
 9871              	.LBE6283:
  71:src/lmdsp.hpp ****         gain = params.getValue(1);
 9872              		.loc 1 71 9 is_stmt 1 view .LVU2208
 9873              	.LBB6284:
 9874              	.LBI6224:
  86:src/parameter_controller.h ****         float val = map.at(index).val;//map[idx];//map.at(idx).val;
 9875              		.loc 19 86 11 view .LVU2209
 9876              	.LBB6280:
  87:src/parameter_controller.h **** 		return val;
 9877              		.loc 19 87 9 view .LVU2210
 9878              	.LBB6277:
 9879              	.LBI6226:
 592:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         { return _M_h.emplace(std::forward<_Pair>(__x)); }
 593:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@}
 594:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 595:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@{
 596:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 597:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief Attempts to insert a std::pair into the %unordered_map.
 598:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __hint  An iterator that serves as a hint as to where the
 599:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *                 pair should be inserted.
 600:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __x  Pair to be inserted (see std::make_pair for easy creation
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 391


 601:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *               of pairs).
 602:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @return An iterator that points to the element with key of
 603:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *           @a __x (may or may not be the %pair passed in).
 604:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 605:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  This function is not concerned about whether the insertion took place,
 606:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  and thus does not return a boolean like the single-argument insert()
 607:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  does.  Note that the first parameter is only a hint and can
 608:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  potentially improve the performance of the insertion process.  A bad
 609:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  hint would cause no gains in efficiency.
 610:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 611:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  See
 612:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  https://gcc.gnu.org/onlinedocs/libstdc++/manual/associative.html#containers.associative.i
 613:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  for more on @a hinting.
 614:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 615:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Insertion requires amortized constant time.
 616:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 617:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       iterator
 618:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       insert(const_iterator __hint, const value_type& __x)
 619:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.insert(__hint, __x); }
 620:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 621:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 622:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       // 2354. Unnecessary copying when inserting into maps with braced-init
 623:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       iterator
 624:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       insert(const_iterator __hint, value_type&& __x)
 625:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.insert(__hint, std::move(__x)); }
 626:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 627:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template<typename _Pair>
 628:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	__enable_if_t<is_constructible<value_type, _Pair&&>::value, iterator>
 629:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	insert(const_iterator __hint, _Pair&& __x)
 630:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	{ return _M_h.emplace_hint(__hint, std::forward<_Pair>(__x)); }
 631:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@}
 632:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 633:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 634:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief A template function that attempts to insert a range of
 635:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  elements.
 636:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __first  Iterator pointing to the start of the range to be
 637:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *                   inserted.
 638:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __last  Iterator pointing to the end of the range.
 639:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 640:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Complexity similar to that of the range constructor.
 641:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 642:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template<typename _InputIterator>
 643:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	void
 644:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	insert(_InputIterator __first, _InputIterator __last)
 645:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	{ _M_h.insert(__first, __last); }
 646:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 647:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 648:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief Attempts to insert a list of elements into the %unordered_map.
 649:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __l  A std::initializer_list<value_type> of elements
 650:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *               to be inserted.
 651:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 652:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Complexity similar to that of the range constructor.
 653:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 654:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       void
 655:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       insert(initializer_list<value_type> __l)
 656:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { _M_h.insert(__l); }
 657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 392


 658:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 659:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** #if __cplusplus > 201402L
 660:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 661:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief Attempts to insert a std::pair into the %unordered_map.
 662:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __k    Key to use for finding a possibly existing pair in
 663:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *                the map.
 664:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __obj  Argument used to generate the .second for a pair 
 665:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *                instance.
 666:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 667:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @return  A pair, of which the first element is an iterator that 
 668:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *           points to the possibly inserted pair, and the second is 
 669:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *           a bool that is true if the pair was actually inserted.
 670:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 671:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  This function attempts to insert a (key, value) %pair into the
 672:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  %unordered_map. An %unordered_map relies on unique keys and thus a
 673:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  %pair is only inserted if its first element (the key) is not already
 674:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  present in the %unordered_map.
 675:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  If the %pair was already in the %unordered_map, the .second of 
 676:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  the %pair is assigned from __obj.
 677:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 678:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Insertion requires amortized constant time.
 679:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 680:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template <typename _Obj>
 681:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         pair<iterator, bool>
 682:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         insert_or_assign(const key_type& __k, _Obj&& __obj)
 683:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         {
 684:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           iterator __i = find(__k);
 685:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           if (__i == end())
 686:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****             {
 687:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****               __i = emplace(std::piecewise_construct,
 688:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                             std::forward_as_tuple(__k),
 689:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                             std::forward_as_tuple(std::forward<_Obj>(__obj)))
 690:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                 .first;
 691:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****               return {__i, true};
 692:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****             }
 693:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           (*__i).second = std::forward<_Obj>(__obj);
 694:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           return {__i, false};
 695:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         }
 696:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 697:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       // move-capable overload
 698:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template <typename _Obj>
 699:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         pair<iterator, bool>
 700:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         insert_or_assign(key_type&& __k, _Obj&& __obj)
 701:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         {
 702:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           iterator __i = find(__k);
 703:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           if (__i == end())
 704:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****             {
 705:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****               __i = emplace(std::piecewise_construct,
 706:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                             std::forward_as_tuple(std::move(__k)),
 707:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                             std::forward_as_tuple(std::forward<_Obj>(__obj)))
 708:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                 .first;
 709:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****               return {__i, true};
 710:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****             }
 711:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           (*__i).second = std::forward<_Obj>(__obj);
 712:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           return {__i, false};
 713:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         }
 714:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 393


 715:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 716:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief Attempts to insert a std::pair into the %unordered_map.
 717:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __hint  An iterator that serves as a hint as to where the
 718:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *                  pair should be inserted.
 719:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __k    Key to use for finding a possibly existing pair in
 720:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *                the unordered_map.
 721:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __obj  Argument used to generate the .second for a pair 
 722:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *                instance.
 723:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @return An iterator that points to the element with key of
 724:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *           @a __x (may or may not be the %pair passed in).
 725:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 726:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  This function is not concerned about whether the insertion took place,
 727:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  and thus does not return a boolean like the single-argument insert()
 728:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  does.         
 729:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  If the %pair was already in the %unordered map, the .second of
 730:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  the %pair is assigned from __obj.
 731:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Note that the first parameter is only a hint and can
 732:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  potentially improve the performance of the insertion process.  A bad
 733:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  hint would cause no gains in efficiency.
 734:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 735:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  See
 736:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  https://gcc.gnu.org/onlinedocs/libstdc++/manual/associative.html#containers.associative.i
 737:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  for more on @a hinting.
 738:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 739:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Insertion requires amortized constant time.
 740:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 741:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template <typename _Obj>
 742:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         iterator
 743:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         insert_or_assign(const_iterator __hint, const key_type& __k,
 744:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                          _Obj&& __obj)
 745:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         {
 746:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           iterator __i = find(__k);
 747:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           if (__i == end())
 748:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****             {
 749:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****               return emplace_hint(__hint, std::piecewise_construct,
 750:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                                   std::forward_as_tuple(__k),
 751:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                                   std::forward_as_tuple(
 752:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                                     std::forward<_Obj>(__obj)));
 753:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****             }
 754:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           (*__i).second = std::forward<_Obj>(__obj);
 755:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           return __i;
 756:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         }
 757:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 758:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       // move-capable overload
 759:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template <typename _Obj>
 760:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         iterator
 761:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         insert_or_assign(const_iterator __hint, key_type&& __k, _Obj&& __obj)
 762:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         {
 763:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           iterator __i = find(__k);
 764:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           if (__i == end())
 765:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****             {
 766:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****               return emplace_hint(__hint, std::piecewise_construct,
 767:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                                   std::forward_as_tuple(std::move(__k)),
 768:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                                   std::forward_as_tuple(
 769:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                                     std::forward<_Obj>(__obj)));
 770:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****             }
 771:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           (*__i).second = std::forward<_Obj>(__obj);
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 394


 772:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           return __i;
 773:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         }
 774:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** #endif
 775:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 776:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@{
 777:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 778:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief Erases an element from an %unordered_map.
 779:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __position  An iterator pointing to the element to be erased.
 780:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @return An iterator pointing to the element immediately following
 781:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *          @a __position prior to the element being erased. If no such
 782:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *          element exists, end() is returned.
 783:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 784:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  This function erases an element, pointed to by the given iterator,
 785:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  from an %unordered_map.
 786:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Note that this function only erases the element, and that if the
 787:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  element is itself a pointer, the pointed-to memory is not touched in
 788:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  any way.  Managing the pointer is the user's responsibility.
 789:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 790:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       iterator
 791:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       erase(const_iterator __position)
 792:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.erase(__position); }
 793:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 794:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       // LWG 2059.
 795:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       iterator
 796:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       erase(iterator __position)
 797:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.erase(__position); }
 798:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@}
 799:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 800:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 801:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief Erases elements according to the provided key.
 802:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __x  Key of element to be erased.
 803:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @return  The number of elements erased.
 804:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 805:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  This function erases all the elements located by the given key from
 806:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  an %unordered_map. For an %unordered_map the result of this function
 807:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  can only be 0 (not present) or 1 (present).
 808:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Note that this function only erases the element, and that if the
 809:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  element is itself a pointer, the pointed-to memory is not touched in
 810:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  any way.  Managing the pointer is the user's responsibility.
 811:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 812:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       size_type
 813:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       erase(const key_type& __x)
 814:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.erase(__x); }
 815:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 816:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 817:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief Erases a [__first,__last) range of elements from an
 818:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  %unordered_map.
 819:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __first  Iterator pointing to the start of the range to be
 820:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *                  erased.
 821:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __last  Iterator pointing to the end of the range to
 822:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *                be erased.
 823:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @return The iterator @a __last.
 824:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 825:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  This function erases a sequence of elements from an %unordered_map.
 826:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Note that this function only erases the elements, and that if
 827:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  the element is itself a pointer, the pointed-to memory is not touched
 828:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  in any way.  Managing the pointer is the user's responsibility.
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 395


 829:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 830:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       iterator
 831:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       erase(const_iterator __first, const_iterator __last)
 832:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.erase(__first, __last); }
 833:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 834:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 835:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Erases all elements in an %unordered_map.
 836:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Note that this function only erases the elements, and that if the
 837:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  elements themselves are pointers, the pointed-to memory is not touched
 838:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  in any way.  Managing the pointer is the user's responsibility.
 839:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 840:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       void
 841:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       clear() noexcept
 842:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { _M_h.clear(); }
 843:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 844:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 845:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief  Swaps data with another %unordered_map.
 846:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __x  An %unordered_map of the same element and allocator
 847:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  types.
 848:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 849:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  This exchanges the elements between two %unordered_map in constant
 850:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  time.
 851:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Note that the global std::swap() function is specialized such that
 852:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  std::swap(m1,m2) will feed to this function.
 853:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 854:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       void
 855:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       swap(unordered_map& __x)
 856:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       noexcept( noexcept(_M_h.swap(__x._M_h)) )
 857:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { _M_h.swap(__x._M_h); }
 858:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 859:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** #if __cplusplus > 201402L
 860:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template<typename, typename, typename>
 861:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	friend class std::_Hash_merge_helper;
 862:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 863:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template<typename _H2, typename _P2>
 864:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	void
 865:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	merge(unordered_map<_Key, _Tp, _H2, _P2, _Alloc>& __source)
 866:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	{
 867:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	  using _Merge_helper = _Hash_merge_helper<unordered_map, _H2, _P2>;
 868:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	  _M_h._M_merge_unique(_Merge_helper::_S_get_table(__source));
 869:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	}
 870:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 871:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template<typename _H2, typename _P2>
 872:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	void
 873:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	merge(unordered_map<_Key, _Tp, _H2, _P2, _Alloc>&& __source)
 874:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	{ merge(__source); }
 875:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 876:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template<typename _H2, typename _P2>
 877:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	void
 878:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	merge(unordered_multimap<_Key, _Tp, _H2, _P2, _Alloc>& __source)
 879:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	{
 880:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	  using _Merge_helper = _Hash_merge_helper<unordered_map, _H2, _P2>;
 881:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	  _M_h._M_merge_unique(_Merge_helper::_S_get_table(__source));
 882:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	}
 883:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 884:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template<typename _H2, typename _P2>
 885:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	void
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 396


 886:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	merge(unordered_multimap<_Key, _Tp, _H2, _P2, _Alloc>&& __source)
 887:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	{ merge(__source); }
 888:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** #endif // C++17
 889:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 890:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       // observers.
 891:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 892:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       ///  Returns the hash functor object with which the %unordered_map was
 893:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       ///  constructed.
 894:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       hasher
 895:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       hash_function() const
 896:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.hash_function(); }
 897:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 898:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       ///  Returns the key comparison object with which the %unordered_map was
 899:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       ///  constructed.
 900:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       key_equal
 901:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       key_eq() const
 902:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.key_eq(); }
 903:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 904:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       // lookup.
 905:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 906:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@{
 907:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 908:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief Tries to locate an element in an %unordered_map.
 909:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __x  Key to be located.
 910:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @return  Iterator pointing to sought-after element, or end() if not
 911:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *           found.
 912:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 913:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  This function takes a key and tries to locate the element with which
 914:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  the key matches.  If successful the function returns an iterator
 915:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  pointing to the sought after element.  If unsuccessful it returns the
 916:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  past-the-end ( @c end() ) iterator.
 917:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 918:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       iterator
 919:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       find(const key_type& __x)
 920:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.find(__x); }
 921:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 922:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       const_iterator
 923:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       find(const key_type& __x) const
 924:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.find(__x); }
 925:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@}
 926:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 927:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 928:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief  Finds the number of elements.
 929:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __x  Key to count.
 930:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @return  Number of elements with specified key.
 931:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 932:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  This function only makes sense for %unordered_multimap; for
 933:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  %unordered_map the result will either be 0 (not present) or 1
 934:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  (present).
 935:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 936:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       size_type
 937:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       count(const key_type& __x) const
 938:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.count(__x); }
 939:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 940:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** #if __cplusplus > 201703L
 941:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 942:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief  Finds whether an element with the given key exists.
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 397


 943:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __x  Key of elements to be located.
 944:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @return  True if there is any element with the specified key.
 945:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 946:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       bool
 947:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       contains(const key_type& __x) const
 948:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.find(__x) != _M_h.end(); }
 949:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** #endif
 950:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 951:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@{
 952:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 953:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief Finds a subsequence matching given key.
 954:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __x  Key to be located.
 955:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @return  Pair of iterators that possibly points to the subsequence
 956:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *           matching given key.
 957:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 958:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  This function probably only makes sense for %unordered_multimap.
 959:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 960:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       std::pair<iterator, iterator>
 961:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       equal_range(const key_type& __x)
 962:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.equal_range(__x); }
 963:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 964:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       std::pair<const_iterator, const_iterator>
 965:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       equal_range(const key_type& __x) const
 966:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.equal_range(__x); }
 967:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@}
 968:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 969:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@{
 970:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 971:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief  Subscript ( @c [] ) access to %unordered_map data.
 972:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __k  The key for which data should be retrieved.
 973:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @return  A reference to the data of the (key,data) %pair.
 974:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 975:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Allows for easy lookup with the subscript ( @c [] )operator.  Returns
 976:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  data associated with the key specified in subscript.  If the key does
 977:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  not exist, a pair with that key is created using default values, which
 978:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  is then returned.
 979:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 980:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Lookup requires constant time.
 981:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 982:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       mapped_type&
 983:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       operator[](const key_type& __k)
 984:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h[__k]; }
 985:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 986:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       mapped_type&
 987:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       operator[](key_type&& __k)
 988:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h[std::move(__k)]; }
 989:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@}
 990:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 991:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@{
 992:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 993:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief  Access to %unordered_map data.
 994:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __k  The key for which data should be retrieved.
 995:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @return  A reference to the data whose key is equal to @a __k, if
 996:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *           such a data is present in the %unordered_map.
 997:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @throw  std::out_of_range  If no such data is present.
 998:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 999:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       mapped_type&
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 398


1000:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       at(const key_type& __k)
 9880              		.loc 13 1000 7 view .LVU2211
 9881              	.LBB6274:
 9882              	.LBI6227:
 755:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      _H1, _H2, _Hash, _RehashPolicy, _Traits, true>::
 9883              		.loc 14 755 5 view .LVU2212
 755:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      _H1, _H2, _Hash, _RehashPolicy, _Traits, true>::
 9884              		.loc 14 755 5 is_stmt 0 view .LVU2213
 9885              	.LBE6274:
 9886              	.LBE6277:
 9887              	.LBE6280:
 9888              	.LBE6284:
 9889              	.LBE6287:
 9890              	.LBE6292:
 9891              		.loc 27 153 3 is_stmt 1 view .LVU2214
 9892              	.LBB6293:
 9893              	.LBB6288:
 9894              	.LBB6285:
 9895              	.LBB6281:
 9896              	.LBB6278:
 9897              	.LBB6275:
 9898              	.LBB6272:
 9899              	.LBB6270:
 9900              	.LBI6229:
 681:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __hash_code_base::_M_bucket_index(__k, __c, _M_bucket_count); }
 9901              		.loc 12 681 7 view .LVU2215
 9902              	.LBB6238:
 9903              	.LBB6236:
 9904              	.LBI6231:
1298:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		      std::size_t __bkt_count) const
 9905              		.loc 14 1298 7 view .LVU2216
 9906              	.LBB6235:
 9907              	.LBI6232:
 431:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	       second_argument_type __den) const noexcept
 9908              		.loc 14 431 5 view .LVU2217
 9909              	.LBB6234:
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 9910              		.loc 14 433 7 view .LVU2218
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 9911              		.loc 14 433 7 is_stmt 0 view .LVU2219
 9912              	.LBE6234:
 9913              	.LBE6235:
 9914              	.LBE6236:
 9915              	.LBE6238:
 9916              	.LBE6270:
 9917              	.LBB6271:
 9918              	.LBI6239:
 690:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		   __hash_code __c) const
 9919              		.loc 12 690 7 is_stmt 1 view .LVU2220
 9920              	.LBB6267:
 9921              	.LBB6265:
 9922              	.LBI6241:
1567:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 9923              		.loc 12 1567 5 view .LVU2221
 9924              	.LBB6263:
1574:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return nullptr;
 9925              		.loc 12 1574 7 is_stmt 0 view .LVU2222
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 399


 9926 00b2 002C     		cmp	r4, #0
 9927 00b4 4ED0     		beq	.L267
 9928              	.LBB6243:
1577:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   __p = __p->_M_next())
 9929              		.loc 12 1577 25 view .LVU2223
 9930 00b6 2168     		ldr	r1, [r4]
 9931              	.LVL476:
 9932              	.LBB6244:
 9933              	.LBB6245:
 9934              	.LBB6246:
 9935              	.LBB6247:
 9936              		.loc 28 356 20 view .LVU2224
 9937 00b8 4A68     		ldr	r2, [r1, #4]
 9938              	.LVL477:
 9939              		.loc 28 356 20 view .LVU2225
 9940              	.LBE6247:
 9941              	.LBE6246:
 9942              	.LBE6245:
 9943              	.LBI6244:
1798:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 9944              		.loc 14 1798 5 is_stmt 1 view .LVU2226
 9945              	.LBB6250:
 9946              	.LBB6248:
 9947              	.LBI6246:
 355:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return __x == __y; }
 9948              		.loc 28 355 7 view .LVU2227
 355:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return __x == __y; }
 9949              		.loc 28 355 7 is_stmt 0 view .LVU2228
 9950              	.LBE6248:
1804:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
 9951              		.loc 14 1804 2 view .LVU2229
 9952 00ba 012A     		cmp	r2, #1
 9953 00bc 0DD0     		beq	.L268
 9954              	.L288:
 9955              	.LVL478:
1804:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
 9956              		.loc 14 1804 2 view .LVU2230
 9957              	.LBE6250:
 9958              	.LBE6244:
1583:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    break;
 9959              		.loc 12 1583 14 view .LVU2231
 9960 00be 0868     		ldr	r0, [r1]
1583:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    break;
 9961              		.loc 12 1583 21 view .LVU2232
 9962 00c0 0028     		cmp	r0, #0
 9963 00c2 47D0     		beq	.L267
 9964              	.LVL479:
 9965              	.LBB6253:
 9966              	.LBI6253:
 677:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __hash_code_base::_M_bucket_index(__n, _M_bucket_count); }
 9967              		.loc 12 677 7 is_stmt 1 view .LVU2233
 9968              	.LBB6254:
 9969              	.LBI6254:
1303:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	noexcept( noexcept(declval<const _H1&>()(declval<const _Key&>()))
 9970              		.loc 14 1303 7 view .LVU2234
 9971              	.LBB6255:
1307:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 400


 9972              		.loc 14 1307 23 is_stmt 0 view .LVU2235
 9973 00c4 4268     		ldr	r2, [r0, #4]
 9974              	.LVL480:
 9975              	.LBB6256:
 9976              	.LBI6256:
 9977              		.loc 27 153 3 is_stmt 1 view .LVU2236
 9978              	.LBB6257:
 9979              		.loc 27 153 3 view .LVU2237
 9980              		.loc 27 153 3 is_stmt 0 view .LVU2238
 9981              	.LBE6257:
 9982              	.LBE6256:
 9983              	.LBB6258:
 9984              	.LBI6258:
 431:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	       second_argument_type __den) const noexcept
 9985              		.loc 14 431 5 is_stmt 1 view .LVU2239
 9986              	.LBB6259:
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 9987              		.loc 14 433 7 view .LVU2240
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 9988              		.loc 14 433 7 is_stmt 0 view .LVU2241
 9989 00c6 0C46     		mov	r4, r1
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 9990              		.loc 14 433 22 view .LVU2242
 9991 00c8 B2FBFCF1 		udiv	r1, r2, ip
 9992              	.LVL481:
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 9993              		.loc 14 433 22 view .LVU2243
 9994 00cc 0CFB1121 		mls	r1, ip, r1, r2
 9995              	.LBE6259:
 9996              	.LBE6258:
 9997              	.LBE6255:
 9998              	.LBE6254:
 9999              	.LBE6253:
1583:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    break;
 10000              		.loc 12 1583 21 view .LVU2244
 10001 00d0 8B42     		cmp	r3, r1
 10002 00d2 3FD1     		bne	.L267
 10003              	.LBB6260:
 10004              	.LBB6251:
1804:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
 10005              		.loc 14 1804 2 view .LVU2245
 10006 00d4 012A     		cmp	r2, #1
 10007              	.LBE6251:
 10008              	.LBE6260:
 10009 00d6 0146     		mov	r1, r0
 10010              	.LVL482:
 10011              	.LBB6261:
1798:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 10012              		.loc 14 1798 5 is_stmt 1 view .LVU2246
 10013              	.LBB6252:
 10014              	.LBB6249:
 355:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return __x == __y; }
 10015              		.loc 28 355 7 view .LVU2247
 355:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return __x == __y; }
 10016              		.loc 28 355 7 is_stmt 0 view .LVU2248
 10017              	.LBE6249:
1804:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 401


 10018              		.loc 14 1804 2 view .LVU2249
 10019 00d8 F1D1     		bne	.L288
 10020              	.LVL483:
 10021              	.L268:
1804:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
 10022              		.loc 14 1804 2 view .LVU2250
 10023              	.LBE6252:
 10024              	.LBE6261:
 10025              	.LBE6243:
 10026              	.LBE6263:
 10027              	.LBE6265:
 695:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return nullptr;
 10028              		.loc 12 695 55 view .LVU2251
 10029 00da 2368     		ldr	r3, [r4]
 10030              	.LVL484:
 695:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return nullptr;
 10031              		.loc 12 695 55 view .LVU2252
 10032              	.LBE6267:
 10033              	.LBE6271:
 765:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__throw_out_of_range(__N("_Map_base::at"));
 10034              		.loc 14 765 7 view .LVU2253
 10035 00dc 002B     		cmp	r3, #0
 10036 00de 39D0     		beq	.L267
 10037              	.LVL485:
 765:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__throw_out_of_range(__N("_Map_base::at"));
 10038              		.loc 14 765 7 view .LVU2254
 10039              	.LBE6272:
 10040              	.LBE6275:
 10041              	.LBE6278:
  88:src/parameter_controller.h ****     }  
 10042              		.loc 19 88 3 is_stmt 1 view .LVU2255
  88:src/parameter_controller.h ****     }  
 10043              		.loc 19 88 3 is_stmt 0 view .LVU2256
 10044              	.LBE6281:
 10045              	.LBE6285:
 10046              		.loc 1 71 14 view .LVU2257
 10047 00e0 D3ED157A 		vldr.32	s15, [r3, #84]
 10048              	.LBE6288:
 10049              	.LBE6293:
 10050              	.LBB6294:
 10051              	.LBB6295:
 10052              	.LBB6296:
 10053              	.LBB6297:
 10054              	.LBB6298:
1387:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_deallocate_buckets();
 10055              		.loc 12 1387 12 view .LVU2258
 10056 00e4 01A8     		add	r0, sp, #4
 10057              	.LVL486:
1387:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_deallocate_buckets();
 10058              		.loc 12 1387 12 view .LVU2259
 10059              	.LBE6298:
 10060              	.LBE6297:
 10061              	.LBE6296:
 10062              	.LBE6295:
 10063              	.LBE6294:
 10064              	.LBB6323:
 10065              	.LBB6289:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 402


 10066              		.loc 1 71 14 view .LVU2260
 10067 00e6 FDEEE77A 		vcvt.s32.f32	s15, s15
 10068 00ea CDED1B7A 		vstr.32	s15, [sp, #108]	@ int
 10069              	.LVL487:
 10070              		.loc 1 71 14 view .LVU2261
 10071              	.LBE6289:
 10072              	.LBE6323:
 10073              	.LBB6324:
 10074              	.LBI6294:
  67:src/parameter_controller.h **** 
 10075              		.loc 19 67 5 is_stmt 1 view .LVU2262
 10076              	.LBB6322:
 10077              	.LBB6321:
 10078              	.LBI6296:
 102:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****     {
 10079              		.loc 13 102 11 view .LVU2263
 10080              	.LBB6320:
 10081              	.LBI6297:
1383:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 10082              		.loc 12 1383 5 view .LVU2264
 10083              	.LBB6319:
1387:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_deallocate_buckets();
 10084              		.loc 12 1387 12 is_stmt 0 view .LVU2265
 10085 00ee FFF7FEFF 		bl	_ZNSt10_HashtableIiSt4pairIKi5paramESaIS3_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS5
 10086              	.LVL488:
 10087              	.LBB6299:
 10088              	.LBI6299:
 411:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { _M_deallocate_buckets(_M_buckets, _M_bucket_count); }
 10089              		.loc 12 411 7 is_stmt 1 view .LVU2266
 10090              	.LBB6300:
 412:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 10091              		.loc 12 412 30 is_stmt 0 view .LVU2267
 10092 00f2 0198     		ldr	r0, [sp, #4]
 10093              	.LBB6301:
 10094              	.LBB6302:
 404:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return;
 10095              		.loc 12 404 2 view .LVU2268
 10096 00f4 07AB     		add	r3, sp, #28
 10097              	.LBE6302:
 10098              	.LBE6301:
 412:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 10099              		.loc 12 412 30 view .LVU2269
 10100 00f6 0299     		ldr	r1, [sp, #8]
 10101              	.LVL489:
 10102              	.LBB6314:
 10103              	.LBI6301:
 402:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 10104              		.loc 12 402 7 is_stmt 1 view .LVU2270
 10105              	.LBB6313:
 10106              	.LBB6303:
 10107              	.LBI6303:
 379:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __builtin_expect(__bkts == &_M_single_bucket, false); }
 10108              		.loc 12 379 7 view .LVU2271
 379:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __builtin_expect(__bkts == &_M_single_bucket, false); }
 10109              		.loc 12 379 7 is_stmt 0 view .LVU2272
 10110              	.LBE6303:
 404:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return;
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 403


 10111              		.loc 12 404 2 view .LVU2273
 10112 00f8 9842     		cmp	r0, r3
 10113 00fa 02D0     		beq	.L270
 10114              	.LVL490:
 10115              	.LBB6304:
 10116              	.LBI6304:
 10117              		.loc 14 2093 5 is_stmt 1 view .LVU2274
 10118              	.LBB6305:
 10119              	.LBB6306:
 10120              	.LBI6306:
 157:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 10121              		.loc 17 157 2 view .LVU2275
 10122              	.LBB6307:
 10123              	.LBI6307:
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10124              		.loc 16 79 7 view .LVU2276
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10125              		.loc 16 79 7 is_stmt 0 view .LVU2277
 10126              	.LBE6307:
 10127              	.LBE6306:
 10128              	.LBB6308:
 10129              	.LBI6308:
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 10130              		.loc 15 491 7 is_stmt 1 view .LVU2278
 10131              	.LBB6309:
 10132              	.LBI6309:
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 10133              		.loc 16 120 7 view .LVU2279
 10134              	.LBB6310:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 10135              		.loc 16 133 19 is_stmt 0 view .LVU2280
 10136 00fc 8900     		lsls	r1, r1, #2
 10137              	.LVL491:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 10138              		.loc 16 133 19 view .LVU2281
 10139 00fe FFF7FEFF 		bl	_ZdlPvj
 10140              	.LVL492:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 10141              		.loc 16 133 19 view .LVU2282
 10142              	.LBE6310:
 10143              	.LBE6309:
 10144              	.LBE6308:
 10145              	.LBB6311:
 10146              	.LBI6311:
 10147              		.loc 17 162 7 is_stmt 1 view .LVU2283
 10148              	.LBB6312:
 10149              	.LBI6312:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10150              		.loc 16 89 7 view .LVU2284
 10151              	.L270:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10152              		.loc 16 89 7 is_stmt 0 view .LVU2285
 10153              	.LBE6312:
 10154              	.LBE6311:
 10155              	.LBE6305:
 10156              	.LBE6304:
 10157              	.LBE6313:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 404


 10158              	.LBE6314:
 10159              	.LBE6300:
 10160              	.LBE6299:
 10161              	.LBB6315:
 10162              	.LBI6315:
1963:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 10163              		.loc 14 1963 12 is_stmt 1 view .LVU2286
 10164              	.LBB6316:
 10165              	.LBI6316:
1109:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : private _Tp
 10166              		.loc 14 1109 12 view .LVU2287
 10167              	.LBB6317:
 10168              	.LBI6317:
 10169              		.loc 17 162 7 view .LVU2288
 10170              	.LBB6318:
 10171              	.LBI6318:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10172              		.loc 16 89 7 view .LVU2289
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10173              		.loc 16 89 7 is_stmt 0 view .LVU2290
 10174              	.LBE6318:
 10175              	.LBE6317:
 10176              	.LBE6316:
 10177              	.LBE6315:
 10178              	.LBE6319:
 10179              	.LBE6320:
 10180              	.LBE6321:
 10181              	.LBE6322:
 10182              	.LBE6324:
  25:src/audiohandler.hpp **** 
  26:src/audiohandler.hpp ****     // daisysp::Autowah _autowah;
  27:src/audiohandler.hpp ****     // _autowah.Init();
  28:src/audiohandler.hpp **** 
  29:src/audiohandler.hpp ****     //Skeleton skeleton;
  30:src/audiohandler.hpp ****     //stateManager.insertEffect(skeleton);
  31:src/audiohandler.hpp **** 
  32:src/audiohandler.hpp ****     float yn = 0.0f;
 10183              		.loc 31 32 5 is_stmt 1 view .LVU2291
  33:src/audiohandler.hpp **** 
  34:src/audiohandler.hpp ****     //effect = stateManager.getEffect(curr_state);
  35:src/audiohandler.hpp ****     //return effect.processAudioSample(xn);
  36:src/audiohandler.hpp **** 
  37:src/audiohandler.hpp ****     switch(curr_state) {
 10184              		.loc 31 37 5 view .LVU2292
 10185 0102 B9F1010F 		cmp	r9, #1
 10186 0106 1ED9     		bls	.L289
  32:src/audiohandler.hpp **** 
 10187              		.loc 31 32 11 is_stmt 0 view .LVU2293
 10188 0108 9FED178A 		vldr.32	s16, .L290+12
 10189              	.LVL493:
 10190              	.L271:
  38:src/audiohandler.hpp ****         case 0:
  39:src/audiohandler.hpp ****             yn = passthrough.processAudioSample(xn);
  40:src/audiohandler.hpp ****         case 1:
  41:src/audiohandler.hpp ****             yn = gainstage.processAudioSample(xn);
  42:src/audiohandler.hpp ****     }
  43:src/audiohandler.hpp ****     
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 405


  44:src/audiohandler.hpp ****     return yn;
 10191              		.loc 31 44 5 is_stmt 1 view .LVU2294
 10192              	.LBB6325:
 10193              	.LBI6325:
  56:src/lmdsp.hpp ****     //bool reset(double _fs);
 10194              		.loc 1 56 5 view .LVU2295
 10195              	.LBB6326:
 10196              	.LBB6327:
 10197              	.LBB6328:
 10198              	.LBB6329:
 10199              	.LBB6330:
1387:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_deallocate_buckets();
 10200              		.loc 12 1387 12 is_stmt 0 view .LVU2296
 10201 010c 13A8     		add	r0, sp, #76
 10202              	.LVL494:
1387:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_deallocate_buckets();
 10203              		.loc 12 1387 12 view .LVU2297
 10204              	.LBE6330:
 10205              	.LBE6329:
 10206              	.LBE6328:
 10207              	.LBE6327:
  56:src/lmdsp.hpp ****     //bool reset(double _fs);
 10208              		.loc 1 56 18 view .LVU2298
 10209 010e 1295     		str	r5, [sp, #72]
 10210              	.LVL495:
 10211              	.LBB6352:
 10212              	.LBI6327:
  67:src/parameter_controller.h **** 
 10213              		.loc 19 67 5 is_stmt 1 view .LVU2299
 10214              	.LBB6351:
 10215              	.LBI6328:
 102:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****     {
 10216              		.loc 13 102 11 view .LVU2300
 10217              	.LBB6350:
 10218              	.LBI6329:
1383:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 10219              		.loc 12 1383 5 view .LVU2301
 10220              	.LBB6349:
1387:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_deallocate_buckets();
 10221              		.loc 12 1387 12 is_stmt 0 view .LVU2302
 10222 0110 FFF7FEFF 		bl	_ZNSt10_HashtableIiSt4pairIKi5paramESaIS3_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS5
 10223              	.LVL496:
 10224              	.LBB6331:
 10225              	.LBI6331:
 411:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { _M_deallocate_buckets(_M_buckets, _M_bucket_count); }
 10226              		.loc 12 411 7 is_stmt 1 view .LVU2303
 10227              	.LBB6332:
 412:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 10228              		.loc 12 412 30 is_stmt 0 view .LVU2304
 10229 0114 DDE91301 		ldrd	r0, r1, [sp, #76]
 10230              	.LVL497:
 10231              	.LBB6333:
 10232              	.LBI6333:
 402:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 10233              		.loc 12 402 7 is_stmt 1 view .LVU2305
 10234              	.LBB6334:
 10235              	.LBB6335:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 406


 10236              	.LBI6335:
 379:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __builtin_expect(__bkts == &_M_single_bucket, false); }
 10237              		.loc 12 379 7 view .LVU2306
 379:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __builtin_expect(__bkts == &_M_single_bucket, false); }
 10238              		.loc 12 379 7 is_stmt 0 view .LVU2307
 10239              	.LBE6335:
 404:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return;
 10240              		.loc 12 404 2 view .LVU2308
 10241 0118 B842     		cmp	r0, r7
 10242 011a 02D0     		beq	.L272
 10243              	.LVL498:
 10244              	.LBB6336:
 10245              	.LBI6336:
 10246              		.loc 14 2093 5 is_stmt 1 view .LVU2309
 10247              	.LBB6337:
 10248              	.LBB6338:
 10249              	.LBI6338:
 157:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 10250              		.loc 17 157 2 view .LVU2310
 10251              	.LBB6339:
 10252              	.LBI6339:
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10253              		.loc 16 79 7 view .LVU2311
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10254              		.loc 16 79 7 is_stmt 0 view .LVU2312
 10255              	.LBE6339:
 10256              	.LBE6338:
 10257              	.LBB6340:
 10258              	.LBI6340:
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 10259              		.loc 15 491 7 is_stmt 1 view .LVU2313
 10260              	.LBB6341:
 10261              	.LBI6341:
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 10262              		.loc 16 120 7 view .LVU2314
 10263              	.LBB6342:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 10264              		.loc 16 133 19 is_stmt 0 view .LVU2315
 10265 011c 8900     		lsls	r1, r1, #2
 10266              	.LVL499:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 10267              		.loc 16 133 19 view .LVU2316
 10268 011e FFF7FEFF 		bl	_ZdlPvj
 10269              	.LVL500:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 10270              		.loc 16 133 19 view .LVU2317
 10271              	.LBE6342:
 10272              	.LBE6341:
 10273              	.LBE6340:
 10274              	.LBB6343:
 10275              	.LBI6343:
 10276              		.loc 17 162 7 is_stmt 1 view .LVU2318
 10277              	.LBB6344:
 10278              	.LBI6344:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10279              		.loc 16 89 7 view .LVU2319
 10280              	.L272:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 407


  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10281              		.loc 16 89 7 is_stmt 0 view .LVU2320
 10282              	.LBE6344:
 10283              	.LBE6343:
 10284              	.LBE6337:
 10285              	.LBE6336:
 10286              	.LBE6334:
 10287              	.LBE6333:
 10288              	.LBE6332:
 10289              	.LBE6331:
 10290              	.LBB6345:
 10291              	.LBI6345:
1963:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 10292              		.loc 14 1963 12 is_stmt 1 view .LVU2321
 10293              	.LBB6346:
 10294              	.LBI6346:
1109:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : private _Tp
 10295              		.loc 14 1109 12 view .LVU2322
 10296              	.LBB6347:
 10297              	.LBI6347:
 10298              		.loc 17 162 7 view .LVU2323
 10299              	.LBB6348:
 10300              	.LBI6348:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10301              		.loc 16 89 7 view .LVU2324
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10302              		.loc 16 89 7 is_stmt 0 view .LVU2325
 10303              	.LBE6348:
 10304              	.LBE6347:
 10305              	.LBE6346:
 10306              	.LBE6345:
 10307              	.LBE6349:
 10308              	.LBE6350:
 10309              	.LBE6351:
 10310              	.LBE6352:
 10311              	.LBB6353:
 10312              	.LBI6353:
  12:src/lmdsp.hpp ****     //virtual bool reset(double _fs);
 10313              		.loc 1 12 13 is_stmt 1 view .LVU2326
  12:src/lmdsp.hpp ****     //virtual bool reset(double _fs);
 10314              		.loc 1 12 13 is_stmt 0 view .LVU2327
 10315              	.LBE6353:
 10316              	.LBE6326:
 10317              	.LBE6325:
 10318              	.LBB6354:
 10319              	.LBI6354:
  32:src/lmdsp.hpp ****     //bool reset(double _fs);
 10320              		.loc 1 32 5 is_stmt 1 view .LVU2328
 10321              	.LBB6355:
 10322              	.LBB6356:
 10323              	.LBB6357:
 10324              	.LBB6358:
 10325              	.LBB6359:
1387:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_deallocate_buckets();
 10326              		.loc 12 1387 12 is_stmt 0 view .LVU2329
 10327 0122 0AA8     		add	r0, sp, #40
 10328              	.LBE6359:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 408


 10329              	.LBE6358:
 10330              	.LBE6357:
 10331              	.LBE6356:
  32:src/lmdsp.hpp ****     //bool reset(double _fs);
 10332              		.loc 1 32 20 view .LVU2330
 10333 0124 0996     		str	r6, [sp, #36]
 10334              	.LVL501:
 10335              	.LBB6381:
 10336              	.LBI6356:
  67:src/parameter_controller.h **** 
 10337              		.loc 19 67 5 is_stmt 1 view .LVU2331
 10338              	.LBB6380:
 10339              	.LBI6357:
 102:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****     {
 10340              		.loc 13 102 11 view .LVU2332
 10341              	.LBB6379:
 10342              	.LBI6358:
1383:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 10343              		.loc 12 1383 5 view .LVU2333
 10344              	.LBB6378:
1387:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_deallocate_buckets();
 10345              		.loc 12 1387 12 is_stmt 0 view .LVU2334
 10346 0126 FFF7FEFF 		bl	_ZNSt10_HashtableIiSt4pairIKi5paramESaIS3_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS5
 10347              	.LVL502:
 10348              	.LBB6360:
 10349              	.LBI6360:
 411:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { _M_deallocate_buckets(_M_buckets, _M_bucket_count); }
 10350              		.loc 12 411 7 is_stmt 1 view .LVU2335
 10351              	.LBB6361:
 412:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 10352              		.loc 12 412 30 is_stmt 0 view .LVU2336
 10353 012a DDE90A01 		ldrd	r0, r1, [sp, #40]
 10354              	.LVL503:
 10355              	.LBB6362:
 10356              	.LBI6362:
 402:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 10357              		.loc 12 402 7 is_stmt 1 view .LVU2337
 10358              	.LBB6363:
 10359              	.LBB6364:
 10360              	.LBI6364:
 379:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __builtin_expect(__bkts == &_M_single_bucket, false); }
 10361              		.loc 12 379 7 view .LVU2338
 379:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __builtin_expect(__bkts == &_M_single_bucket, false); }
 10362              		.loc 12 379 7 is_stmt 0 view .LVU2339
 10363              	.LBE6364:
 404:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return;
 10364              		.loc 12 404 2 view .LVU2340
 10365 012e 4045     		cmp	r0, r8
 10366 0130 02D0     		beq	.L265
 10367              	.LVL504:
 10368              	.LBB6365:
 10369              	.LBI6365:
 10370              		.loc 14 2093 5 is_stmt 1 view .LVU2341
 10371              	.LBB6366:
 10372              	.LBB6367:
 10373              	.LBI6367:
 157:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 409


 10374              		.loc 17 157 2 view .LVU2342
 10375              	.LBB6368:
 10376              	.LBI6368:
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10377              		.loc 16 79 7 view .LVU2343
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10378              		.loc 16 79 7 is_stmt 0 view .LVU2344
 10379              	.LBE6368:
 10380              	.LBE6367:
 10381              	.LBB6369:
 10382              	.LBI6369:
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 10383              		.loc 15 491 7 is_stmt 1 view .LVU2345
 10384              	.LBB6370:
 10385              	.LBI6370:
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 10386              		.loc 16 120 7 view .LVU2346
 10387              	.LBB6371:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 10388              		.loc 16 133 19 is_stmt 0 view .LVU2347
 10389 0132 8900     		lsls	r1, r1, #2
 10390              	.LVL505:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 10391              		.loc 16 133 19 view .LVU2348
 10392 0134 FFF7FEFF 		bl	_ZdlPvj
 10393              	.LVL506:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 10394              		.loc 16 133 19 view .LVU2349
 10395              	.LBE6371:
 10396              	.LBE6370:
 10397              	.LBE6369:
 10398              	.LBB6372:
 10399              	.LBI6372:
 10400              		.loc 17 162 7 is_stmt 1 view .LVU2350
 10401              	.LBB6373:
 10402              	.LBI6373:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10403              		.loc 16 89 7 view .LVU2351
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10404              		.loc 16 89 7 is_stmt 0 view .LVU2352
 10405              	.LBE6373:
 10406              	.LBE6372:
 10407              	.LBE6366:
 10408              	.LBE6365:
 10409              	.LBE6363:
 10410              	.LBE6362:
 10411              	.LBE6361:
 10412              	.LBE6360:
 10413              	.LBB6374:
 10414              	.LBI6374:
1963:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 10415              		.loc 14 1963 12 is_stmt 1 view .LVU2353
 10416              	.LBB6375:
 10417              	.LBI6375:
1109:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : private _Tp
 10418              		.loc 14 1109 12 view .LVU2354
 10419              	.LBB6376:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 410


 10420              	.LBI6376:
 10421              		.loc 17 162 7 view .LVU2355
 10422              	.LBB6377:
 10423              	.LBI6377:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10424              		.loc 16 89 7 view .LVU2356
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10425              		.loc 16 89 7 is_stmt 0 view .LVU2357
 10426              	.LBE6377:
 10427              	.LBE6376:
 10428              	.LBE6375:
 10429              	.LBE6374:
 10430              	.LBE6378:
 10431              	.LBE6379:
 10432              	.LBE6380:
 10433              	.LBE6381:
 10434              	.LBB6382:
 10435              	.LBI6382:
  12:src/lmdsp.hpp ****     //virtual bool reset(double _fs);
 10436              		.loc 1 12 13 is_stmt 1 view .LVU2358
 10437              	.L265:
  12:src/lmdsp.hpp ****     //virtual bool reset(double _fs);
 10438              		.loc 1 12 13 is_stmt 0 view .LVU2359
 10439              	.LBE6382:
 10440              	.LBE6355:
 10441              	.LBE6354:
  45:src/audiohandler.hpp **** }
 10442              		.loc 31 45 1 view .LVU2360
 10443 0138 B0EE480A 		vmov.f32	s0, s16
 10444 013c 1CB0     		add	sp, sp, #112
 10445              		.cfi_remember_state
 10446              		.cfi_def_cfa_offset 40
 10447              		@ sp needed
 10448 013e BDEC028B 		vldm	sp!, {d8}
 10449              		.cfi_restore 80
 10450              		.cfi_restore 81
 10451              		.cfi_def_cfa_offset 32
 10452              	.LVL507:
 10453              		.loc 31 45 1 view .LVU2361
 10454 0142 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 10455              	.LVL508:
 10456              	.L289:
 10457              		.cfi_restore_state
  40:src/audiohandler.hpp ****             yn = gainstage.processAudioSample(xn);
 10458              		.loc 31 40 9 is_stmt 1 view .LVU2362
  41:src/audiohandler.hpp ****     }
 10459              		.loc 31 41 13 view .LVU2363
 10460              	.LBB6383:
 10461              	.LBI6383:
  60:src/lmdsp.hpp ****         return xn * gain;
 10462              		.loc 1 60 11 view .LVU2364
 10463              	.LBB6384:
  61:src/lmdsp.hpp ****     }
 10464              		.loc 1 61 9 view .LVU2365
  61:src/lmdsp.hpp ****     }
 10465              		.loc 1 61 19 is_stmt 0 view .LVU2366
 10466 0146 DDED1B7A 		vldr.32	s15, [sp, #108]	@ int
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 411


 10467 014a B8EEE70A 		vcvt.f32.s32	s0, s15
  61:src/lmdsp.hpp ****     }
 10468              		.loc 1 61 21 view .LVU2367
 10469 014e 20EE088A 		vmul.f32	s16, s0, s16
 10470              	.LVL509:
  61:src/lmdsp.hpp ****     }
 10471              		.loc 1 61 21 view .LVU2368
 10472 0152 DBE7     		b	.L271
 10473              	.LVL510:
 10474              	.L267:
  61:src/lmdsp.hpp ****     }
 10475              		.loc 1 61 21 view .LVU2369
 10476              	.LBE6384:
 10477              	.LBE6383:
 10478              	.LBB6385:
 10479              	.LBB6290:
 10480              	.LBB6286:
 10481              	.LBB6282:
 10482              	.LBB6279:
 10483              	.LBB6276:
 10484              	.LBB6273:
 766:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       return __p->_M_v().second;
 10485              		.loc 14 766 22 view .LVU2370
 10486 0154 0548     		ldr	r0, .L290+16
 10487 0156 FFF7FEFF 		bl	_ZSt20__throw_out_of_rangePKc
 10488              	.LVL511:
 10489              	.L291:
 766:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       return __p->_M_v().second;
 10490              		.loc 14 766 22 view .LVU2371
 10491 015a 00BF     		.align	2
 10492              	.L290:
 10493 015c 00000000 		.word	.LANCHOR2
 10494 0160 08000000 		.word	_ZTV11Passthrough+8
 10495 0164 08000000 		.word	_ZTV9GainStage+8
 10496 0168 00000000 		.word	0
 10497 016c 00000000 		.word	.LC3
 10498              	.LBE6273:
 10499              	.LBE6276:
 10500              	.LBE6279:
 10501              	.LBE6282:
 10502              	.LBE6286:
 10503              	.LBE6290:
 10504              	.LBE6385:
 10505              		.cfi_endproc
 10506              	.LFE4683:
 10508              		.section	.rodata._ZNSt6vectorImSaImEE17_M_realloc_insertIJRKmEEEvN9__gnu_cxx17__normal_iteratorIPm
 10509              		.align	2
 10510              	.LC4:
 10511 0000 76656374 		.ascii	"vector::_M_realloc_insert\000"
 10511      6F723A3A 
 10511      5F4D5F72 
 10511      65616C6C 
 10511      6F635F69 
 10512              		.section	.text._ZNSt6vectorImSaImEE17_M_realloc_insertIJRKmEEEvN9__gnu_cxx17__normal_iteratorIPmS1
 10513              		.align	1
 10514              		.p2align 2,,3
 10515              		.weak	_ZNSt6vectorImSaImEE17_M_realloc_insertIJRKmEEEvN9__gnu_cxx17__normal_iteratorIPmS1_EEDpOT_
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 412


 10516              		.syntax unified
 10517              		.thumb
 10518              		.thumb_func
 10519              		.fpu fpv5-d16
 10521              	_ZNSt6vectorImSaImEE17_M_realloc_insertIJRKmEEEvN9__gnu_cxx17__normal_iteratorIPmS1_EEDpOT_:
 10522              	.LVL512:
 10523              	.LFB6079:
 10524              		.file 32 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
   1:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // Vector implementation (out of line) -*- C++ -*-
   2:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
   3:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** //
   5:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // software; you can redistribute it and/or modify it under the
   7:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // terms of the GNU General Public License as published by the
   8:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // any later version.
  10:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
  11:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // This library is distributed in the hope that it will be useful,
  12:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // GNU General Public License for more details.
  15:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
  16:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // 3.1, as published by the Free Software Foundation.
  19:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
  20:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // You should have received a copy of the GNU General Public License and
  21:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // <http://www.gnu.org/licenses/>.
  24:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
  25:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** /*
  26:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  *
  27:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * Copyright (c) 1994
  28:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * Hewlett-Packard Company
  29:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  *
  30:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * provided that the above copyright notice appear in all copies and
  33:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * that both that copyright notice and this permission notice appear
  34:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * representations about the suitability of this software for any
  36:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  *
  38:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  *
  39:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * Copyright (c) 1996
  40:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  *
  42:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * provided that the above copyright notice appear in all copies and
  45:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * that both that copyright notice and this permission notice appear
  46:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * representations about the suitability of this  software for any
  48:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  */
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 413


  50:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
  51:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** /** @file bits/vector.tcc
  52:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  *  This is an internal header file, included by other library headers.
  53:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  *  Do not attempt to use it directly. @headername{vector}
  54:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  */
  55:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
  56:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #ifndef _VECTOR_TCC
  57:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #define _VECTOR_TCC 1
  58:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
  59:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** namespace std _GLIBCXX_VISIBILITY(default)
  60:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** {
  61:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  62:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  63:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
  64:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
  65:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     void
  66:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
  67:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     reserve(size_type __n)
  68:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
  69:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (__n > this->max_size())
  70:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	__throw_length_error(__N("vector::reserve"));
  71:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (this->capacity() < __n)
  72:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
  73:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  const size_type __old_size = size();
  74:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  pointer __tmp;
  75:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if _GLIBCXX17_CONSTEXPR (_S_use_relocate())
  77:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
  78:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      __tmp = this->_M_allocate(__n);
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
  80:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			  __tmp, _M_get_Tp_allocator());
  81:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  else
  83:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
  84:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
  85:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      __tmp = _M_allocate_and_copy(__n,
  86:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		_GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(this->_M_impl._M_start),
  87:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		_GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(this->_M_impl._M_finish));
  88:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    _M_get_Tp_allocator());
  90:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
  91:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _GLIBCXX_ASAN_ANNOTATE_REINIT;
  92:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_deallocate(this->_M_impl._M_start,
  93:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			this->_M_impl._M_end_of_storage
  94:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			- this->_M_impl._M_start);
  95:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  this->_M_impl._M_start = __tmp;
  96:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  this->_M_impl._M_finish = __tmp + __old_size;
  97:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
  98:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
  99:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 100:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 101:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 102:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 103:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     template<typename... _Args>
 104:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 105:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       typename vector<_Tp, _Alloc>::reference
 106:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 414


 107:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       void
 108:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 109:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       vector<_Tp, _Alloc>::
 110:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 111:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       {
 112:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 113:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 114:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 116:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				     std::forward<_Args>(__args)...);
 117:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    ++this->_M_impl._M_finish;
 118:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 119:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  }
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	else
 121:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
 122:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 123:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	return back();
 124:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 125:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       }
 126:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 127:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 128:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 129:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     typename vector<_Tp, _Alloc>::iterator
 130:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 131:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 132:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     insert(const_iterator __position, const value_type& __x)
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 134:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     insert(iterator __position, const value_type& __x)
 135:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 136:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 137:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       const size_type __n = __position - begin();
 138:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 139:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	if (__position == end())
 140:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 141:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
 142:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 143:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				     __x);
 144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    ++this->_M_impl._M_finish;
 145:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 146:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  }
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	else
 148:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 149:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    const auto __pos = begin() + (__position - cbegin());
 151:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    // __x could be an existing element of this vector, so make a
 152:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    // copy of it before _M_insert_aux moves elements around.
 153:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _Temporary_value __x_copy(this, __x);
 154:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _M_insert_aux(__pos, std::move(__x_copy._M_val()));
 155:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 156:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _M_insert_aux(__position, __x);
 157:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 158:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  }
 159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       else
 160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 161:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	_M_realloc_insert(begin() + (__position - cbegin()), __x);
 162:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 163:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	_M_realloc_insert(__position, __x);
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 415


 164:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 165:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 166:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       return iterator(this->_M_impl._M_start + __n);
 167:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 168:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 169:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 170:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     typename vector<_Tp, _Alloc>::iterator
 171:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 172:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     _M_erase(iterator __position)
 173:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 174:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (__position + 1 != end())
 175:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	_GLIBCXX_MOVE3(__position + 1, end(), __position);
 176:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       --this->_M_impl._M_finish;
 177:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _Alloc_traits::destroy(this->_M_impl, this->_M_impl._M_finish);
 178:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _GLIBCXX_ASAN_ANNOTATE_SHRINK(1);
 179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       return __position;
 180:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 181:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 182:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     typename vector<_Tp, _Alloc>::iterator
 184:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 185:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     _M_erase(iterator __first, iterator __last)
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (__first != __last)
 188:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
 189:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if (__last != end())
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_MOVE3(__last, end(), __first);
 191:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_erase_at_end(__first.base() + (end() - __last));
 192:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
 193:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       return __first;
 194:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 195:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 196:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 197:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>&
 198:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 199:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     operator=(const vector<_Tp, _Alloc>& __x)
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 201:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (&__x != this)
 202:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
 203:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _GLIBCXX_ASAN_ANNOTATE_REINIT;
 204:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 205:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if (_Alloc_traits::_S_propagate_on_copy_assign())
 206:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 207:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      if (!_Alloc_traits::_S_always_equal()
 208:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	          && _M_get_Tp_allocator() != __x._M_get_Tp_allocator())
 209:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	        {
 210:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  // replacement allocator cannot free existing storage
 211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  this->clear();
 212:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  _M_deallocate(this->_M_impl._M_start,
 213:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				this->_M_impl._M_end_of_storage
 214:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				- this->_M_impl._M_start);
 215:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  this->_M_impl._M_start = nullptr;
 216:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  this->_M_impl._M_finish = nullptr;
 217:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  this->_M_impl._M_end_of_storage = nullptr;
 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		}
 219:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      std::__alloc_on_copy(_M_get_Tp_allocator(),
 220:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				   __x._M_get_Tp_allocator());
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 416


 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 222:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 223:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  const size_type __xlen = __x.size();
 224:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if (__xlen > capacity())
 225:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 226:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      pointer __tmp = _M_allocate_and_copy(__xlen, __x.begin(),
 227:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 						   __x.end());
 228:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    _M_get_Tp_allocator());
 230:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _M_deallocate(this->_M_impl._M_start,
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    this->_M_impl._M_end_of_storage
 232:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    - this->_M_impl._M_start);
 233:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      this->_M_impl._M_start = __tmp;
 234:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __xlen;
 235:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  else if (size() >= __xlen)
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 238:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      std::_Destroy(std::copy(__x.begin(), __x.end(), begin()),
 239:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    end(), _M_get_Tp_allocator());
 240:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 241:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  else
 242:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 243:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      std::copy(__x._M_impl._M_start, __x._M_impl._M_start + size(),
 244:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			this->_M_impl._M_start);
 245:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      std::__uninitialized_copy_a(__x._M_impl._M_start + size(),
 246:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					  __x._M_impl._M_finish,
 247:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					  this->_M_impl._M_finish,
 248:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					  _M_get_Tp_allocator());
 249:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 250:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  this->_M_impl._M_finish = this->_M_impl._M_start + __xlen;
 251:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
 252:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       return *this;
 253:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 254:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 255:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 256:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     void
 257:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 258:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     _M_fill_assign(size_t __n, const value_type& __val)
 259:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 260:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (__n > capacity())
 261:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
 262:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  vector __tmp(__n, __val, _M_get_Tp_allocator());
 263:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  __tmp._M_impl._M_swap_data(this->_M_impl);
 264:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
 265:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       else if (__n > size())
 266:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
 267:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  std::fill(begin(), end(), __val);
 268:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  const size_type __add = __n - size();
 269:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _GLIBCXX_ASAN_ANNOTATE_GROW(__add);
 270:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  this->_M_impl._M_finish =
 271:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    std::__uninitialized_fill_n_a(this->_M_impl._M_finish,
 272:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					  __add, __val, _M_get_Tp_allocator());
 273:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _GLIBCXX_ASAN_ANNOTATE_GREW(__add);
 274:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
 275:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       else
 276:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****         _M_erase_at_end(std::fill_n(this->_M_impl._M_start, __n, __val));
 277:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 417


 278:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 279:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 280:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     template<typename _InputIterator>
 281:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       void
 282:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       vector<_Tp, _Alloc>::
 283:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_assign_aux(_InputIterator __first, _InputIterator __last,
 284:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    std::input_iterator_tag)
 285:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       {
 286:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	pointer __cur(this->_M_impl._M_start);
 287:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	for (; __first != __last && __cur != this->_M_impl._M_finish;
 288:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	     ++__cur, (void)++__first)
 289:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  *__cur = *__first;
 290:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	if (__first == __last)
 291:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_erase_at_end(__cur);
 292:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	else
 293:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_range_insert(end(), __first, __last,
 294:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			  std::__iterator_category(__first));
 295:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       }
 296:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 297:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 298:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     template<typename _ForwardIterator>
 299:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       void
 300:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       vector<_Tp, _Alloc>::
 301:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_assign_aux(_ForwardIterator __first, _ForwardIterator __last,
 302:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    std::forward_iterator_tag)
 303:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       {
 304:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	const size_type __len = std::distance(__first, __last);
 305:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 306:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	if (__len > capacity())
 307:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 308:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _S_check_init_len(__len, _M_get_Tp_allocator());
 309:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    pointer __tmp(_M_allocate_and_copy(__len, __first, __last));
 310:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 311:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			  _M_get_Tp_allocator());
 312:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_REINIT;
 313:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _M_deallocate(this->_M_impl._M_start,
 314:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			  this->_M_impl._M_end_of_storage
 315:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			  - this->_M_impl._M_start);
 316:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    this->_M_impl._M_start = __tmp;
 317:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    this->_M_impl._M_finish = this->_M_impl._M_start + __len;
 318:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    this->_M_impl._M_end_of_storage = this->_M_impl._M_finish;
 319:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  }
 320:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	else if (size() >= __len)
 321:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_erase_at_end(std::copy(__first, __last, this->_M_impl._M_start));
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	else
 323:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 324:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _ForwardIterator __mid = __first;
 325:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    std::advance(__mid, size());
 326:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    std::copy(__first, __mid, this->_M_impl._M_start);
 327:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    const size_type __attribute__((__unused__)) __n = __len - size();
 328:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GROW(__n);
 329:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    this->_M_impl._M_finish =
 330:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      std::__uninitialized_copy_a(__mid, __last,
 331:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					  this->_M_impl._M_finish,
 332:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					  _M_get_Tp_allocator());
 333:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(__n);
 334:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  }
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 418


 335:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       }
 336:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 337:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 338:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 339:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     auto
 340:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 341:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     _M_insert_rval(const_iterator __position, value_type&& __v) -> iterator
 342:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 343:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       const auto __n = __position - cbegin();
 344:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 345:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	if (__position == cend())
 346:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 347:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
 348:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 349:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				     std::move(__v));
 350:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    ++this->_M_impl._M_finish;
 351:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 352:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  }
 353:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	else
 354:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_insert_aux(begin() + __n, std::move(__v));
 355:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       else
 356:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	_M_realloc_insert(begin() + __n, std::move(__v));
 357:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 358:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       return iterator(this->_M_impl._M_start + __n);
 359:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 360:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 361:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 362:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     template<typename... _Args>
 363:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       auto
 364:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       vector<_Tp, _Alloc>::
 365:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_emplace_aux(const_iterator __position, _Args&&... __args)
 366:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       -> iterator
 367:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       {
 368:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	const auto __n = __position - cbegin();
 369:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 370:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if (__position == cend())
 371:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 372:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _GLIBCXX_ASAN_ANNOTATE_GROW(1);
 373:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 374:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				       std::forward<_Args>(__args)...);
 375:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      ++this->_M_impl._M_finish;
 376:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 377:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 378:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  else
 379:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 380:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      // We need to construct a temporary because something in __args...
 381:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      // could alias one of the elements of the container and so we
 382:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      // need to use it before _M_insert_aux moves elements around.
 383:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _Temporary_value __tmp(this, std::forward<_Args>(__args)...);
 384:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _M_insert_aux(begin() + __n, std::move(__tmp._M_val()));
 385:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 386:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	else
 387:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_realloc_insert(begin() + __n, std::forward<_Args>(__args)...);
 388:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 389:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	return iterator(this->_M_impl._M_start + __n);
 390:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       }
 391:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 419


 392:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 393:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     template<typename _Arg>
 394:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       void
 395:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       vector<_Tp, _Alloc>::
 396:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_insert_aux(iterator __position, _Arg&& __arg)
 397:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 398:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 399:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     void
 400:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 401:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     _M_insert_aux(iterator __position, const _Tp& __x)
 402:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 403:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 404:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _GLIBCXX_ASAN_ANNOTATE_GROW(1);
 405:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 406:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			       _GLIBCXX_MOVE(*(this->_M_impl._M_finish - 1)));
 407:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       ++this->_M_impl._M_finish;
 408:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 409:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus < 201103L
 410:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _Tp __x_copy = __x;
 411:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 412:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _GLIBCXX_MOVE_BACKWARD3(__position.base(),
 413:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			      this->_M_impl._M_finish - 2,
 414:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			      this->_M_impl._M_finish - 1);
 415:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus < 201103L
 416:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       *__position = __x_copy;
 417:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 418:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       *__position = std::forward<_Arg>(__arg);
 419:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 420:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 421:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 422:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 423:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 424:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     template<typename... _Args>
 425:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       void
 426:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       vector<_Tp, _Alloc>::
 10525              		.loc 32 426 7 is_stmt 1 view -0
 10526              		.cfi_startproc
 10527              		@ args = 0, pretend = 0, frame = 0
 10528              		@ frame_needed = 0, uses_anonymous_args = 0
 10529              		.loc 32 426 7 is_stmt 0 view .LVU2373
 10530 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 10531              		.cfi_def_cfa_offset 40
 10532              		.cfi_offset 3, -40
 10533              		.cfi_offset 4, -36
 10534              		.cfi_offset 5, -32
 10535              		.cfi_offset 6, -28
 10536              		.cfi_offset 7, -24
 10537              		.cfi_offset 8, -20
 10538              		.cfi_offset 9, -16
 10539              		.cfi_offset 10, -12
 10540              		.cfi_offset 11, -8
 10541              		.cfi_offset 14, -4
 10542 0004 D0E90089 		ldrd	r8, r9, [r0]
 10543              		.loc 32 426 7 view .LVU2374
 10544 0008 0F46     		mov	r7, r1
 10545              	.LVL513:
 10546              	.LBB6423:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 420


 10547              	.LBI6423:
 10548              		.file 33 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
   1:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // Vector implementation -*- C++ -*-
   2:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
   3:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** //
   5:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // software; you can redistribute it and/or modify it under the
   7:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // terms of the GNU General Public License as published by the
   8:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // any later version.
  10:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  11:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // This library is distributed in the hope that it will be useful,
  12:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // GNU General Public License for more details.
  15:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  16:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  20:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // You should have received a copy of the GNU General Public License and
  21:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // <http://www.gnu.org/licenses/>.
  24:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  25:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** /*
  26:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  27:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Copyright (c) 1994
  28:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Hewlett-Packard Company
  29:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  30:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * that both that copyright notice and this permission notice appear
  34:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * representations about the suitability of this software for any
  36:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  38:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  39:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Copyright (c) 1996
  40:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  42:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * that both that copyright notice and this permission notice appear
  46:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * representations about the suitability of this  software for any
  48:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  */
  50:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  51:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** /** @file bits/stl_vector.h
  52:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *  This is an internal header file, included by other library headers.
  53:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *  Do not attempt to use it directly. @headername{vector}
  54:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  */
  55:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 421


  56:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #ifndef _STL_VECTOR_H
  57:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _STL_VECTOR_H 1
  58:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  59:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <bits/stl_iterator_base_funcs.h>
  60:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <bits/functexcept.h>
  61:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <bits/concept_check.h>
  62:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
  63:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <initializer_list>
  64:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
  65:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus > 201703L
  66:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # include <compare>
  67:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
  68:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  69:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <debug/assertions.h>
  70:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  71:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if _GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR
  72:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** extern "C" void
  73:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** __sanitizer_annotate_contiguous_container(const void*, const void*,
  74:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  const void*, const void*);
  75:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  77:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** namespace std _GLIBCXX_VISIBILITY(default)
  78:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** {
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  80:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  81:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   /// See bits/stl_deque.h's _Deque_base for an explanation.
  83:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   template<typename _Tp, typename _Alloc>
  84:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     struct _Vector_base
  85:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     {
  86:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  87:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	rebind<_Tp>::other _Tp_alloc_type;
  88:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>::pointer
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        	pointer;
  90:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  91:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       struct _Vector_impl_data
  92:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
  93:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	pointer _M_start;
  94:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	pointer _M_finish;
  95:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	pointer _M_end_of_storage;
  96:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  97:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl_data() _GLIBCXX_NOEXCEPT
  98:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
  99:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 100:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 101:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 102:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl_data(_Vector_impl_data&& __x) noexcept
 103:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(__x._M_start), _M_finish(__x._M_finish),
 104:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_end_of_storage(__x._M_end_of_storage)
 105:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 106:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 107:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 108:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
 109:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_copy_data(_Vector_impl_data const& __x) _GLIBCXX_NOEXCEPT
 110:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 111:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_start = __x._M_start;
 112:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_finish = __x._M_finish;
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 422


 113:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_end_of_storage = __x._M_end_of_storage;
 114:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 116:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
 117:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_swap_data(_Vector_impl_data& __x) _GLIBCXX_NOEXCEPT
 118:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 119:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // Do not use std::swap(_M_start, __x._M_start), etc as it loses
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // information used by TBAA.
 121:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Vector_impl_data __tmp;
 122:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __tmp._M_copy_data(*this);
 123:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_copy_data(__x);
 124:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __x._M_copy_data(__tmp);
 125:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 126:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       };
 127:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 128:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       struct _Vector_impl
 129:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 130:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 131:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 132:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    is_nothrow_default_constructible<_Tp_alloc_type>::value)
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type()
 134:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 135:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 136:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
 137:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(__a)
 138:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 139:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 140:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 141:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// Not defaulted, to enforce noexcept(true) even when
 142:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// !is_nothrow_move_constructible<_Tp_alloc_type>.
 143:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl(_Vector_impl&& __x) noexcept
 144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(std::move(__x)), _Vector_impl_data(std::move(__x))
 145:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 146:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl(_Tp_alloc_type&& __a) noexcept
 148:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(std::move(__a))
 149:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 151:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl(_Tp_alloc_type&& __a, _Vector_impl&& __rv) noexcept
 152:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(std::move(__a)), _Vector_impl_data(std::move(__rv))
 153:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 154:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 155:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 156:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if _GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR
 157:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	template<typename = _Tp_alloc_type>
 158:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  struct _Asan
 159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>
 161:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      ::size_type size_type;
 162:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 163:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void _S_shrink(_Vector_impl&, size_type) { }
 164:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void _S_on_dealloc(_Vector_impl&) { }
 165:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 166:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    typedef _Vector_impl& _Reinit;
 167:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 168:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    struct _Grow
 169:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 423


 170:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Grow(_Vector_impl&, size_type) { }
 171:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      void _M_grew(size_type) { }
 172:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    };
 173:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  };
 174:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 175:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// Enable ASan annotations for memory obtained from std::allocator.
 176:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	template<typename _Up>
 177:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  struct _Asan<allocator<_Up> >
 178:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>
 180:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      ::size_type size_type;
 181:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 182:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    // Adjust ASan annotation for [_M_start, _M_end_of_storage) to
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    // mark end of valid region as __curr instead of __prev.
 184:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void
 185:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _S_adjust(_Vector_impl& __impl, pointer __prev, pointer __curr)
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      __sanitizer_annotate_contiguous_container(__impl._M_start,
 188:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  __impl._M_end_of_storage, __prev, __curr);
 189:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    }
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 191:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void
 192:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _S_grow(_Vector_impl& __impl, size_type __n)
 193:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    { _S_adjust(__impl, __impl._M_finish, __impl._M_finish + __n); }
 194:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 195:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void
 196:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _S_shrink(_Vector_impl& __impl, size_type __n)
 197:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    { _S_adjust(__impl, __impl._M_finish + __n, __impl._M_finish); }
 198:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 199:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _S_on_dealloc(_Vector_impl& __impl)
 201:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 202:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      if (__impl._M_start)
 203:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		_S_adjust(__impl, __impl._M_finish, __impl._M_end_of_storage);
 204:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    }
 205:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 206:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    // Used on reallocation to tell ASan unused capacity is invalid.
 207:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    struct _Reinit
 208:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 209:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      explicit _Reinit(_Vector_impl& __impl) : _M_impl(__impl)
 210:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      {
 211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		// Mark unused capacity as valid again before deallocating it.
 212:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		_S_on_dealloc(_M_impl);
 213:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      }
 214:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 215:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      ~_Reinit()
 216:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      {
 217:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		// Mark unused capacity as invalid after reallocation.
 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		if (_M_impl._M_start)
 219:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  _S_adjust(_M_impl, _M_impl._M_end_of_storage,
 220:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    _M_impl._M_finish);
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      }
 222:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 223:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Vector_impl& _M_impl;
 224:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 225:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 226:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Reinit(const _Reinit&) = delete;
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 424


 227:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Reinit& operator=(const _Reinit&) = delete;
 228:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    };
 230:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    // Tell ASan when unused capacity is initialized to be valid.
 232:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    struct _Grow
 233:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 234:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Grow(_Vector_impl& __impl, size_type __n)
 235:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      : _M_impl(__impl), _M_n(__n)
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      { _S_grow(_M_impl, __n); }
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 238:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      ~_Grow() { if (_M_n) _S_shrink(_M_impl, _M_n); }
 239:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 240:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      void _M_grew(size_type __n) { _M_n -= __n; }
 241:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 242:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 243:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Grow(const _Grow&) = delete;
 244:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Grow& operator=(const _Grow&) = delete;
 245:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 246:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    private:
 247:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Vector_impl& _M_impl;
 248:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      size_type _M_n;
 249:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    };
 250:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  };
 251:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 252:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_REINIT \
 253:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   typename _Base::_Vector_impl::template _Asan<>::_Reinit const \
 254:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__attribute__((__unused__)) __reinit_guard(this->_M_impl)
 255:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GROW(n) \
 256:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   typename _Base::_Vector_impl::template _Asan<>::_Grow \
 257:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__attribute__((__unused__)) __grow_guard(this->_M_impl, (n))
 258:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GREW(n) __grow_guard._M_grew(n)
 259:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_SHRINK(n) \
 260:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   _Base::_Vector_impl::template _Asan<>::_S_shrink(this->_M_impl, n)
 261:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC \
 262:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   _Base::_Vector_impl::template _Asan<>::_S_on_dealloc(this->_M_impl)
 263:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else // ! (_GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR)
 264:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_REINIT
 265:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GROW(n)
 266:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GREW(n)
 267:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_SHRINK(n)
 268:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC
 269:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif // _GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR
 270:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       };
 271:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 272:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 273:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef _Alloc allocator_type;
 274:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 275:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Tp_alloc_type&
 276:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 277:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 278:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 279:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const _Tp_alloc_type&
 280:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 281:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 282:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 283:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       allocator_type
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 425


 284:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
 285:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return allocator_type(_M_get_Tp_allocator()); }
 286:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 287:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 288:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base() = default;
 289:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 290:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base() { }
 291:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 292:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 293:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 294:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a) { }
 295:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 296:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Kept for ABI compatibility.
 297:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if !_GLIBCXX_INLINE_VERSION
 298:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(size_t __n)
 299:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl()
 300:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_create_storage(__n); }
 301:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 302:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 303:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(size_t __n, const allocator_type& __a)
 304:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a)
 305:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_create_storage(__n); }
 306:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 307:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 308:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(_Vector_base&&) = default;
 309:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 310:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Kept for ABI compatibility.
 311:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # if !_GLIBCXX_INLINE_VERSION
 312:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(_Tp_alloc_type&& __a) noexcept
 313:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(std::move(__a)) { }
 314:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 315:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(_Vector_base&& __x, const allocator_type& __a)
 316:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a)
 317:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 318:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__x.get_allocator() == __a)
 319:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_swap_data(__x._M_impl);
 320:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else
 321:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    size_t __n = __x._M_impl._M_finish - __x._M_impl._M_start;
 323:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _M_create_storage(__n);
 324:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
 325:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 326:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # endif
 327:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 328:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(const allocator_type& __a, _Vector_base&& __x)
 329:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(_Tp_alloc_type(__a), std::move(__x._M_impl))
 330:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { }
 331:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 332:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 333:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       ~_Vector_base() _GLIBCXX_NOEXCEPT
 334:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 335:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_deallocate(_M_impl._M_start,
 336:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 337:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 338:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 339:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 340:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_impl _M_impl;
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 426


 341:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 342:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       pointer
 343:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_allocate(size_t __n)
 344:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 345:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 346:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 347:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 348:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 349:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 350:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_deallocate(pointer __p, size_t __n)
 351:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 352:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 353:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__p)
 354:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 355:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 356:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 357:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     protected:
 358:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 359:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_create_storage(size_t __n)
 360:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 361:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_start = this->_M_allocate(__n);
 362:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish = this->_M_impl._M_start;
 363:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 364:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 365:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     };
 366:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 367:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   /**
 368:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  @brief A standard container which offers fixed time access to
 369:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  individual elements in any order.
 370:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *
 371:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  @ingroup sequences
 372:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *
 373:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  @tparam _Tp  Type of element.
 374:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_Tp>.
 375:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *
 376:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
 377:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  <a href="tables.html#66">reversible container</a>, and a
 378:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  <a href="tables.html#67">sequence</a>, including the
 379:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  <a href="tables.html#68">optional sequence requirements</a> with the
 380:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  %exception of @c push_front and @c pop_front.
 381:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *
 382:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  In some terminology a %vector can be described as a dynamic
 383:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  C-style array, it offers fast and efficient access to individual
 384:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  elements in any order and saves the user from worrying about
 385:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  memory and size allocation.  Subscripting ( @c [] ) access is
 386:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  also provided as with C-style arrays.
 387:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   */
 388:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   template<typename _Tp, typename _Alloc = std::allocator<_Tp> >
 389:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     class vector : protected _Vector_base<_Tp, _Alloc>
 390:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     {
 391:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #ifdef _GLIBCXX_CONCEPT_CHECKS
 392:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Concept requirements.
 393:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Alloc::value_type		_Alloc_value_type;
 394:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # if __cplusplus < 201103L
 395:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       __glibcxx_class_requires(_Tp, _SGIAssignableConcept)
 396:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # endif
 397:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       __glibcxx_class_requires2(_Tp, _Alloc_value_type, _SameTypeConcept)
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 427


 398:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 399:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 400:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 401:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static_assert(is_same<typename remove_cv<_Tp>::type, _Tp>::value,
 402:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  "std::vector must have a non-const, non-volatile value_type");
 403:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # if __cplusplus > 201703L || defined __STRICT_ANSI__
 404:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static_assert(is_same<typename _Alloc::value_type, _Tp>::value,
 405:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  "std::vector must have the same value_type as its allocator");
 406:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # endif
 407:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 408:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 409:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef _Vector_base<_Tp, _Alloc>			_Base;
 410:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Base::_Tp_alloc_type		_Tp_alloc_type;
 411:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type>	_Alloc_traits;
 412:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 413:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 414:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef _Tp					value_type;
 415:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Base::pointer			pointer;
 416:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Alloc_traits::const_pointer	const_pointer;
 417:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Alloc_traits::reference		reference;
 418:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Alloc_traits::const_reference	const_reference;
 419:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<pointer, vector> iterator;
 420:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, vector>
 421:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator;
 422:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
 423:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef std::reverse_iterator<iterator>		reverse_iterator;
 424:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef size_t					size_type;
 425:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef ptrdiff_t					difference_type;
 426:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef _Alloc					allocator_type;
 427:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 428:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     private:
 429:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 430:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static constexpr bool
 431:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_nothrow_relocate(true_type)
 432:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return noexcept(std::__relocate_a(std::declval<pointer>(),
 434:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  std::declval<pointer>(),
 435:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  std::declval<pointer>(),
 436:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  std::declval<_Tp_alloc_type&>()));
 437:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 438:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 439:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static constexpr bool
 440:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_nothrow_relocate(false_type)
 441:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return false; }
 442:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 443:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static constexpr bool
 444:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_use_relocate()
 445:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 446:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// Instantiating std::__relocate_a might cause an error outside the
 447:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// immediate context (in __relocate_object_a's noexcept-specifier),
 448:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// so only do it if we know the type can be move-inserted into *this.
 449:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return _S_nothrow_relocate(__is_move_insertable<_Tp_alloc_type>{});
 450:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 452:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static pointer
 453:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_do_relocate(pointer __first, pointer __last, pointer __result,
 454:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		     _Tp_alloc_type& __alloc, true_type) noexcept
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 428


 455:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 456:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return std::__relocate_a(__first, __last, __result, __alloc);
 457:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 458:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 459:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static pointer
 460:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_do_relocate(pointer, pointer, pointer __result,
 461:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		     _Tp_alloc_type&, false_type) noexcept
 462:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return __result; }
 463:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 464:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static pointer
 465:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_relocate(pointer __first, pointer __last, pointer __result,
 466:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  _Tp_alloc_type& __alloc) noexcept
 467:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 468:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	using __do_it = __bool_constant<_S_use_relocate()>;
 469:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 470:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 471:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif // C++11
 472:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 473:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     protected:
 474:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::_M_allocate;
 475:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::_M_deallocate;
 476:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::_M_impl;
 477:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::_M_get_Tp_allocator;
 478:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 479:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 480:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // [23.2.4.1] construct/copy/destroy
 481:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // (assign() and get_allocator() are also listed in this section)
 482:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 483:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 484:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 485:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 486:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 487:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector() = default;
 488:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 489:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector() { }
 490:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 492:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 493:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 494:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator object.
 495:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 496:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       explicit
 497:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 498:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__a) { }
 499:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 500:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 501:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 502:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with default constructed elements.
 503:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 504:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 505:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 506:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This constructor fills the %vector with @a __n default
 507:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  constructed elements.
 508:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 509:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       explicit
 510:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(size_type __n, const allocator_type& __a = allocator_type())
 511:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(_S_check_init_len(__n, __a), __a)
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 429


 512:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_default_initialize(__n); }
 513:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 514:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 515:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 516:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 517:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __value  An element to copy.
 518:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 519:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 520:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 521:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 522:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(size_type __n, const value_type& __value,
 523:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 524:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(_S_check_init_len(__n, __a), __a)
 525:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 526:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 527:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 528:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 529:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 530:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __value  An element to copy.
 531:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 532:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 533:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 534:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 535:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       explicit
 536:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(size_type __n, const value_type& __value = value_type(),
 537:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 538:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(_S_check_init_len(__n, __a), __a)
 539:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 540:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 541:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 542:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 543:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector copy constructor.
 544:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 545:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 546:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  All the elements of @a __x are copied, but any unused capacity in
 547:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @a __x  will not be copied
 548:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  (i.e. capacity() == size() in the new %vector).
 549:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 550:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The newly-created %vector uses a copy of the allocator object used
 551:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  by @a __x (unless the allocator traits dictate a different object).
 552:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 553:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(const vector& __x)
 554:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__x.size(),
 555:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
 556:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 557:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish =
 558:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 559:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				      this->_M_impl._M_start,
 560:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				      _M_get_Tp_allocator());
 561:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 562:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 563:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 564:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 565:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector move constructor.
 566:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 567:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The newly-created %vector contains the exact contents of the
 568:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  moved instance.
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 430


 569:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The contents of the moved instance are a valid, but unspecified
 570:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector.
 571:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 572:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(vector&&) noexcept = default;
 573:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 574:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /// Copy constructor with alternative allocator
 575:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(const vector& __x, const allocator_type& __a)
 576:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__x.size(), __a)
 577:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 578:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish =
 579:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 580:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				      this->_M_impl._M_start,
 581:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				      _M_get_Tp_allocator());
 582:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 583:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 584:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     private:
 585:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m, true_type) noexcept
 586:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__m, std::move(__rv))
 587:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { }
 588:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 589:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m, false_type)
 590:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__m)
 591:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 592:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__rv.get_allocator() == __m)
 593:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_swap_data(__rv._M_impl);
 594:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else if (!__rv.empty())
 595:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 596:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    this->_M_create_storage(__rv.size());
 597:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    this->_M_impl._M_finish =
 598:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      std::__uninitialized_move_a(__rv.begin(), __rv.end(),
 599:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  this->_M_impl._M_start,
 600:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  _M_get_Tp_allocator());
 601:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    __rv.clear();
 602:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
 603:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 604:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 605:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 606:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /// Move constructor with alternative allocator
 607:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m)
 608:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       noexcept( noexcept(
 609:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	vector(std::declval<vector&&>(), std::declval<const allocator_type&>(),
 610:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       std::declval<typename _Alloc_traits::is_always_equal>())) )
 611:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : vector(std::move(__rv), __m, typename _Alloc_traits::is_always_equal{})
 612:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { }
 613:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 614:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 615:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Builds a %vector from an initializer list.
 616:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __l  An initializer_list.
 617:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 618:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 619:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Create a %vector consisting of copies of the elements in the
 620:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  initializer_list @a __l.
 621:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 622:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This will call the element type's copy constructor N times
 623:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  (where N is @a __l.size()) and do no memory reallocation.
 624:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 625:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(initializer_list<value_type> __l,
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 431


 626:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 627:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__a)
 628:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 629:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_initialize(__l.begin(), __l.end(),
 630:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    random_access_iterator_tag());
 631:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 632:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 633:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 634:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 635:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Builds a %vector from a range.
 636:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  An input iterator.
 637:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last  An input iterator.
 638:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 639:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 640:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Create a %vector consisting of copies of the elements from
 641:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  [first,last).
 642:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 643:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  If the iterators are forward, bidirectional, or
 644:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  random-access, then this will call the elements' copy
 645:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  constructor N times (where N is distance(first,last)) and do
 646:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  no memory reallocation.  But if only input iterators are
 647:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  used, then this will do at most 2N calls to the copy
 648:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  constructor, and logN memory reallocations.
 649:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 650:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 651:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator,
 652:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 653:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	vector(_InputIterator __first, _InputIterator __last,
 654:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 655:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Base(__a)
 656:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_range_initialize(__first, __last,
 658:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			      std::__iterator_category(__first));
 659:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 660:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 661:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
 662:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	vector(_InputIterator __first, _InputIterator __last,
 663:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 664:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Base(__a)
 665:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 666:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 667:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 668:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_initialize_dispatch(__first, __last, _Integral());
 669:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 670:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 671:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 672:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 673:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The dtor only erases the elements, and note that if the
 674:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  elements themselves are pointers, the pointed-to memory is
 675:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  not touched in any way.  Managing the pointer is the user's
 676:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  responsibility.
 677:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 678:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       ~vector() _GLIBCXX_NOEXCEPT
 679:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 680:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 681:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_get_Tp_allocator());
 682:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC;
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 432


 683:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 684:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 685:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 686:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector assignment operator.
 687:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 688:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 689:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  All the elements of @a __x are copied, but any unused capacity in
 690:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @a __x will not be copied.
 691:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 692:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Whether the allocator is copied depends on the allocator traits.
 693:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 694:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector&
 695:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator=(const vector& __x);
 696:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 697:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 698:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 699:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector move assignment operator.
 700:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 701:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 702:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The contents of @a __x are moved into this %vector (without copying,
 703:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  if the allocators permit it).
 704:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Afterwards @a __x is a valid, but unspecified %vector.
 705:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 706:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Whether the allocator is moved depends on the allocator traits.
 707:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 708:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector&
 709:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())
 710:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 711:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	constexpr bool __move_storage =
 712:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Alloc_traits::_S_propagate_on_move_assign()
 713:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  || _Alloc_traits::_S_always_equal();
 714:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_move_assign(std::move(__x), __bool_constant<__move_storage>());
 715:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *this;
 716:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 717:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 718:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 719:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector list assignment operator.
 720:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __l  An initializer_list.
 721:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 722:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 723:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  initializer list @a __l.
 724:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 725:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 726:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 727:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  of elements assigned.
 728:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 729:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector&
 730:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator=(initializer_list<value_type> __l)
 731:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 732:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_assign_aux(__l.begin(), __l.end(),
 733:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    random_access_iterator_tag());
 734:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *this;
 735:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 736:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 737:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 738:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 739:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Assigns a given value to a %vector.
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 433


 740:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  Number of elements to be assigned.
 741:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __val  Value to be assigned.
 742:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 743:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function fills a %vector with @a __n copies of the given
 744:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  value.  Note that the assignment completely changes the
 745:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and that the resulting %vector's size is the same as
 746:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the number of elements assigned.
 747:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 748:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 749:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       assign(size_type __n, const value_type& __val)
 750:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_fill_assign(__n, __val); }
 751:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 752:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 753:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Assigns a range to a %vector.
 754:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  An input iterator.
 755:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last   An input iterator.
 756:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 757:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 758:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  range [__first,__last).
 759:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 760:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 761:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 762:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  of elements assigned.
 763:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 764:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 765:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator,
 766:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 767:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
 768:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	assign(_InputIterator __first, _InputIterator __last)
 769:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _M_assign_dispatch(__first, __last, __false_type()); }
 770:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 771:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
 772:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
 773:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	assign(_InputIterator __first, _InputIterator __last)
 774:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 775:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 776:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 777:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_assign_dispatch(__first, __last, _Integral());
 778:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 779:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 780:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 781:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 782:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 783:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Assigns an initializer list to a %vector.
 784:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __l  An initializer_list.
 785:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 786:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 787:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  initializer list @a __l.
 788:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 789:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 790:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 791:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  of elements assigned.
 792:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 793:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 794:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       assign(initializer_list<value_type> __l)
 795:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 796:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_assign_aux(__l.begin(), __l.end(),
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 434


 797:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    random_access_iterator_tag());
 798:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 799:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 800:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 801:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /// Get a copy of the memory allocation object.
 802:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::get_allocator;
 803:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 804:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // iterators
 805:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 806:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write iterator that points to the first
 807:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element in the %vector.  Iteration is done in ordinary
 808:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 809:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 810:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
 811:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       begin() _GLIBCXX_NOEXCEPT
 812:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 813:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 814:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 815:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) iterator that points to the
 816:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  first element in the %vector.  Iteration is done in ordinary
 817:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 818:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 819:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator
 820:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       begin() const _GLIBCXX_NOEXCEPT
 821:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 822:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 823:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 824:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write iterator that points one past the last
 825:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element in the %vector.  Iteration is done in ordinary
 826:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 827:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 828:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
 829:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       end() _GLIBCXX_NOEXCEPT
 830:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 831:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 832:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 833:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) iterator that points one past
 834:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the last element in the %vector.  Iteration is done in
 835:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  ordinary element order.
 836:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 837:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator
 838:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       end() const _GLIBCXX_NOEXCEPT
 839:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 840:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 841:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 842:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write reverse iterator that points to the
 843:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  last element in the %vector.  Iteration is done in reverse
 844:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 845:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 846:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reverse_iterator
 847:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       rbegin() _GLIBCXX_NOEXCEPT
 848:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return reverse_iterator(end()); }
 849:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 850:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 851:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 852:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to the last element in the %vector.  Iteration is done in
 853:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  reverse element order.
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 435


 854:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 855:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reverse_iterator
 856:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 857:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_reverse_iterator(end()); }
 858:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 859:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 860:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write reverse iterator that points to one
 861:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  before the first element in the %vector.  Iteration is done
 862:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  in reverse element order.
 863:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 864:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reverse_iterator
 865:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       rend() _GLIBCXX_NOEXCEPT
 866:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return reverse_iterator(begin()); }
 867:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 868:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 869:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 870:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to one before the first element in the %vector.  Iteration
 871:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  is done in reverse element order.
 872:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 873:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reverse_iterator
 874:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       rend() const _GLIBCXX_NOEXCEPT
 875:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_reverse_iterator(begin()); }
 876:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 877:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 878:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 879:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) iterator that points to the
 880:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  first element in the %vector.  Iteration is done in ordinary
 881:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 882:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 883:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator
 884:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       cbegin() const noexcept
 885:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 886:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 887:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 888:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) iterator that points one past
 889:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the last element in the %vector.  Iteration is done in
 890:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  ordinary element order.
 891:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 892:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator
 893:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       cend() const noexcept
 894:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 895:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 896:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 897:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 898:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to the last element in the %vector.  Iteration is done in
 899:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  reverse element order.
 900:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 901:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reverse_iterator
 902:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       crbegin() const noexcept
 903:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_reverse_iterator(end()); }
 904:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 905:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 906:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 907:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to one before the first element in the %vector.  Iteration
 908:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  is done in reverse element order.
 909:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 910:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reverse_iterator
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 436


 911:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       crend() const noexcept
 912:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_reverse_iterator(begin()); }
 913:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 914:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 915:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // [23.2.4.2] capacity
 916:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**  Returns the number of elements in the %vector.  */
 917:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size_type
 918:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size() const _GLIBCXX_NOEXCEPT
 919:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 920:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 921:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**  Returns the size() of the largest possible %vector.  */
 922:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size_type
 923:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       max_size() const _GLIBCXX_NOEXCEPT
 924:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _S_max_size(_M_get_Tp_allocator()); }
 925:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 926:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 927:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 928:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 929:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 930:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 931:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will %resize the %vector to the specified
 932:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  number of elements.  If the number is smaller than the
 933:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 934:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  default constructed elements are appended.
 935:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 936:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 937:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       resize(size_type __new_size)
 938:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 939:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__new_size > size())
 940:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_default_append(__new_size - size());
 941:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else if (__new_size < size())
 942:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 943:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 944:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 945:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 946:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 947:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 948:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data with which new elements should be populated.
 949:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 950:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will %resize the %vector to the specified
 951:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  number of elements.  If the number is smaller than the
 952:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 953:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the %vector is extended and new elements are populated with
 954:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  given data.
 955:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 956:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 957:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       resize(size_type __new_size, const value_type& __x)
 958:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 959:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__new_size > size())
 960:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_fill_insert(end(), __new_size - size(), __x);
 961:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else if (__new_size < size())
 962:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 963:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 964:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 965:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 966:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 967:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 437


 968:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data with which new elements should be populated.
 969:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 970:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will %resize the %vector to the specified
 971:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  number of elements.  If the number is smaller than the
 972:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 973:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the %vector is extended and new elements are populated with
 974:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  given data.
 975:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 976:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 977:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       resize(size_type __new_size, value_type __x = value_type())
 978:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 979:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__new_size > size())
 980:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_fill_insert(end(), __new_size - size(), __x);
 981:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else if (__new_size < size())
 982:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 983:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 984:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 985:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 986:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 987:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**  A non-binding request to reduce capacity() to size().  */
 988:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 989:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       shrink_to_fit()
 990:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_shrink_to_fit(); }
 991:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 992:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 993:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 994:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns the total number of elements that the %vector can
 995:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  hold before needing to allocate more memory.
 996:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 997:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size_type
 998:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       capacity() const _GLIBCXX_NOEXCEPT
 999:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_end_of_storage
1000:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			 - this->_M_impl._M_start); }
1001:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1002:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1003:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns true if the %vector is empty.  (Thus begin() would
1004:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  equal end().)
1005:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1006:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _GLIBCXX_NODISCARD bool
1007:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       empty() const _GLIBCXX_NOEXCEPT
1008:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return begin() == end(); }
1009:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1010:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1011:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
1012:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *          elements.
1013:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  Number of elements required.
1014:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @throw  std::length_error  If @a n exceeds @c max_size().
1015:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1016:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function attempts to reserve enough memory for the
1017:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector to hold the specified number of elements.  If the
1018:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  number requested is more than max_size(), length_error is
1019:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  thrown.
1020:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1021:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The advantage of this function is that if optimal code is a
1022:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  necessity and the user can determine the number of elements
1023:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  that will be required, the user can reserve the memory in
1024:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %advance, and thus prevent a possible reallocation of memory
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 438


1025:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  and copying of %vector data.
1026:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1027:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1028:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reserve(size_type __n);
1029:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1030:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // element access
1031:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1032:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Subscript access to the data contained in the %vector.
1033:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param __n The index of the element for which data should be
1034:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  accessed.
1035:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  Read/write reference to data.
1036:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1037:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This operator allows for easy, array-style, data access.
1038:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that data access with this operator is unchecked and
1039:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  out_of_range lookups are not defined. (For checked lookups
1040:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  see at().)
1041:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1042:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reference
1043:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator[](size_type __n) _GLIBCXX_NOEXCEPT
1044:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1045:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_subscript(__n);
1046:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *(this->_M_impl._M_start + __n);
1047:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1048:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1049:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1050:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Subscript access to the data contained in the %vector.
1051:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param __n The index of the element for which data should be
1052:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  accessed.
1053:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  Read-only (constant) reference to data.
1054:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1055:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This operator allows for easy, array-style, data access.
1056:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that data access with this operator is unchecked and
1057:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  out_of_range lookups are not defined. (For checked lookups
1058:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  see at().)
1059:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1060:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reference
1061:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
1062:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1063:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_subscript(__n);
1064:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *(this->_M_impl._M_start + __n);
1065:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1066:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1067:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     protected:
1068:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /// Safety check used only from at().
1069:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1070:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_range_check(size_type __n) const
1071:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1072:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__n >= this->size())
1073:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_out_of_range_fmt(__N("vector::_M_range_check: __n "
1074:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				       "(which is %zu) >= this->size() "
1075:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				       "(which is %zu)"),
1076:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				   __n, this->size());
1077:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1078:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1079:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
1080:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1081:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Provides access to the data contained in the %vector.
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 439


1082:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param __n The index of the element for which data should be
1083:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  accessed.
1084:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  Read/write reference to data.
1085:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
1086:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1087:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function provides for safer data access.  The parameter
1088:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  is first checked that it is in the range of the vector.  The
1089:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  function throws out_of_range if the check fails.
1090:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1091:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reference
1092:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       at(size_type __n)
1093:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1094:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_check(__n);
1095:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return (*this)[__n];
1096:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1097:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1098:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1099:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Provides access to the data contained in the %vector.
1100:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param __n The index of the element for which data should be
1101:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  accessed.
1102:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  Read-only (constant) reference to data.
1103:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
1104:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1105:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function provides for safer data access.  The parameter
1106:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  is first checked that it is in the range of the vector.  The
1107:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  function throws out_of_range if the check fails.
1108:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1109:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reference
1110:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       at(size_type __n) const
1111:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1112:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_check(__n);
1113:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return (*this)[__n];
1114:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1116:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1117:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write reference to the data at the first
1118:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element of the %vector.
1119:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reference
1121:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       front() _GLIBCXX_NOEXCEPT
1122:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1123:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_nonempty();
1124:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *begin();
1125:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1126:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1127:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1128:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reference to the data at the first
1129:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element of the %vector.
1130:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1131:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reference
1132:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       front() const _GLIBCXX_NOEXCEPT
1133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1134:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_nonempty();
1135:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *begin();
1136:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1137:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1138:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 440


1139:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write reference to the data at the last
1140:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element of the %vector.
1141:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1142:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reference
1143:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       back() _GLIBCXX_NOEXCEPT
1144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1145:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_nonempty();
1146:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *(end() - 1);
1147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1148:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1149:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reference to the data at the
1151:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  last element of the %vector.
1152:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1153:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reference
1154:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       back() const _GLIBCXX_NOEXCEPT
1155:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1156:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_nonempty();
1157:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *(end() - 1);
1158:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1161:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // DR 464. Suggestion for new member functions in standard containers.
1162:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // data access
1163:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1164:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *   Returns a pointer such that [data(), data() + size()) is a valid
1165:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *   range.  For a non-empty %vector, data() == &front().
1166:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1167:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Tp*
1168:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       data() _GLIBCXX_NOEXCEPT
1169:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_data_ptr(this->_M_impl._M_start); }
1170:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1171:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const _Tp*
1172:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       data() const _GLIBCXX_NOEXCEPT
1173:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_data_ptr(this->_M_impl._M_start); }
1174:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1175:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // [23.2.4.3] modifiers
1176:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1177:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Add data to the end of the %vector.
1178:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be added.
1179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1180:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This is a typical stack operation.  The function creates an
1181:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element at the end of the %vector and assigns the given data
1182:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to it.  Due to the nature of a %vector this operation can be
1183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  done in constant time if the %vector has preallocated space
1184:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  available.
1185:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       push_back(const value_type& __x)
1188:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1189:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
1190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
1191:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
1192:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
1193:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				     __x);
1194:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    ++this->_M_impl._M_finish;
1195:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 441


1196:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
1197:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else
1198:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_realloc_insert(end(), __x);
1199:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1201:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1202:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1203:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       push_back(value_type&& __x)
1204:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
1205:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1206:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename... _Args>
1207:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus > 201402L
1208:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	reference
1209:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1210:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1212:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	emplace_back(_Args&&... __args);
1213:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1214:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1215:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1216:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Removes last element.
1217:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This is a typical stack operation. It shrinks the %vector by one.
1219:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1220:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that no data is returned, and if the last element's
1221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  data is needed, it should be retrieved before pop_back() is
1222:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  called.
1223:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1224:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1225:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       pop_back() _GLIBCXX_NOEXCEPT
1226:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1227:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_nonempty();
1228:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	--this->_M_impl._M_finish;
1229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Alloc_traits::destroy(this->_M_impl, this->_M_impl._M_finish);
1230:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_GLIBCXX_ASAN_ANNOTATE_SHRINK(1);
1231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1232:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1233:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1234:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1235:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts an object in %vector before specified iterator.
1236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __args  Arguments.
1238:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1239:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1240:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert an object of type T constructed
1241:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  with T(std::forward<Args>(args)...) before the specified location.
1242:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a %vector
1243:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  and if it is frequently used the user should consider using
1244:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  std::list.
1245:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1246:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename... _Args>
1247:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	iterator
1248:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	emplace(const_iterator __position, _Args&&... __args)
1249:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ return _M_emplace_aux(__position, std::forward<_Args>(__args)...); }
1250:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1251:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1252:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts given value into %vector before specified iterator.
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 442


1253:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1254:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1255:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1256:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1257:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert a copy of the given value before
1258:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the specified location.  Note that this kind of operation
1259:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
1260:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  used the user should consider using std::list.
1261:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1262:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1263:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(const_iterator __position, const value_type& __x);
1264:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1265:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1266:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts given value into %vector before specified iterator.
1267:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1268:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1269:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1270:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1271:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert a copy of the given value before
1272:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the specified location.  Note that this kind of operation
1273:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
1274:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  used the user should consider using std::list.
1275:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1276:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1277:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(iterator __position, const value_type& __x);
1278:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1279:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1280:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1281:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1282:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts given rvalue into %vector before specified iterator.
1283:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1284:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1285:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1286:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1287:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert a copy of the given rvalue before
1288:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the specified location.  Note that this kind of operation
1289:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
1290:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  used the user should consider using std::list.
1291:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1292:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1293:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(const_iterator __position, value_type&& __x)
1294:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_insert_rval(__position, std::move(__x)); }
1295:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1296:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1297:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts an initializer_list into the %vector.
1298:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1299:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __l  An initializer_list.
1300:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1301:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert copies of the data in the
1302:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  initializer_list @a l into the %vector before the location
1303:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  specified by @a position.
1304:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1305:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1306:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1307:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  consider using std::list.
1308:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1309:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 443


1310:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(const_iterator __position, initializer_list<value_type> __l)
1311:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1312:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	auto __offset = __position - cbegin();
1313:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_insert(begin() + __offset, __l.begin(), __l.end(),
1314:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			std::random_access_iterator_tag());
1315:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return begin() + __offset;
1316:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1317:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1318:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1319:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1320:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1321:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts a number of copies of given data into the %vector.
1322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1323:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  Number of elements to be inserted.
1324:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1325:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1326:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1327:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert a specified number of copies of
1328:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the given data before the location specified by @a position.
1329:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1330:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1331:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1332:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  consider using std::list.
1333:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1334:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1335:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(const_iterator __position, size_type __n, const value_type& __x)
1336:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1337:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	difference_type __offset = __position - cbegin();
1338:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_fill_insert(begin() + __offset, __n, __x);
1339:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return begin() + __offset;
1340:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1341:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1342:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1343:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts a number of copies of given data into the %vector.
1344:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1345:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  Number of elements to be inserted.
1346:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1347:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1348:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert a specified number of copies of
1349:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the given data before the location specified by @a position.
1350:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1351:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1352:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1353:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  consider using std::list.
1354:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1355:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1356:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(iterator __position, size_type __n, const value_type& __x)
1357:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_fill_insert(__position, __n, __x); }
1358:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1359:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1360:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1361:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1362:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts a range into the %vector.
1363:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1364:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  An input iterator.
1365:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last   An input iterator.
1366:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 444


1367:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1368:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert copies of the data in the range
1369:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  [__first,__last) into the %vector before the location specified
1370:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  by @a pos.
1371:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1372:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1373:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1374:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  consider using std::list.
1375:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1376:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator,
1377:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1378:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	iterator
1379:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	insert(const_iterator __position, _InputIterator __first,
1380:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       _InputIterator __last)
1381:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1382:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  difference_type __offset = __position - cbegin();
1383:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_insert_dispatch(begin() + __offset,
1384:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			     __first, __last, __false_type());
1385:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  return begin() + __offset;
1386:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1387:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1388:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1389:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts a range into the %vector.
1390:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1391:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  An input iterator.
1392:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last   An input iterator.
1393:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1394:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert copies of the data in the range
1395:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  [__first,__last) into the %vector before the location specified
1396:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  by @a pos.
1397:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1398:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1399:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1400:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  consider using std::list.
1401:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1402:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1403:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1404:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	insert(iterator __position, _InputIterator __first,
1405:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       _InputIterator __last)
1406:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1407:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
1408:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
1409:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_insert_dispatch(__position, __first, __last, _Integral());
1410:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1411:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1412:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1413:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1414:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Remove element at given position.
1415:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  Iterator pointing to element to be erased.
1416:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator pointing to the next element (or end()).
1417:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1418:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will erase the element at the given position and thus
1419:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  shorten the %vector by one.
1420:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1421:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note This operation could be expensive and if it is
1422:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  frequently used the user should consider using std::list.
1423:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The user is also cautioned that this function only erases
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 445


1424:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the element, and that if the element is itself a pointer,
1425:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the pointed-to memory is not touched in any way.  Managing
1426:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the pointer is the user's responsibility.
1427:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1428:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1429:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1430:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       erase(const_iterator __position)
1431:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_erase(begin() + (__position - cbegin())); }
1432:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       erase(iterator __position)
1434:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_erase(__position); }
1435:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1436:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1437:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1438:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Remove a range of elements.
1439:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  Iterator pointing to the first element to be erased.
1440:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last  Iterator pointing to one past the last element to be
1441:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *                  erased.
1442:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator pointing to the element pointed to by @a __last
1443:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *           prior to erasing (or end()).
1444:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1445:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will erase the elements in the range
1446:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  [__first,__last) and shorten the %vector accordingly.
1447:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1448:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note This operation could be expensive and if it is
1449:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  frequently used the user should consider using std::list.
1450:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The user is also cautioned that this function only erases
1451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the elements, and that if the elements themselves are
1452:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  pointers, the pointed-to memory is not touched in any way.
1453:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Managing the pointer is the user's responsibility.
1454:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1455:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1456:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1457:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       erase(const_iterator __first, const_iterator __last)
1458:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1459:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	const auto __beg = begin();
1460:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	const auto __cbeg = cbegin();
1461:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return _M_erase(__beg + (__first - __cbeg), __beg + (__last - __cbeg));
1462:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1463:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1464:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       erase(iterator __first, iterator __last)
1465:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_erase(__first, __last); }
1466:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1467:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1468:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1469:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Swaps data with another %vector.
1470:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  A %vector of the same element and allocator types.
1471:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1472:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This exchanges the elements between two vectors in constant time.
1473:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  (Three pointers, so it should be quite fast.)
1474:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that the global std::swap() function is specialized such that
1475:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  std::swap(v1,v2) will feed to this function.
1476:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1477:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Whether the allocators are swapped depends on the allocator traits.
1478:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1479:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1480:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       swap(vector& __x) _GLIBCXX_NOEXCEPT
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 446


1481:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1482:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1483:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_assert(_Alloc_traits::propagate_on_container_swap::value
1484:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			 || _M_get_Tp_allocator() == __x._M_get_Tp_allocator());
1485:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1486:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_swap_data(__x._M_impl);
1487:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Alloc_traits::_S_on_swap(_M_get_Tp_allocator(),
1488:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				  __x._M_get_Tp_allocator());
1489:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1490:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1492:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Erases all the elements.  Note that this function only erases the
1493:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  elements, and that if the elements themselves are pointers, the
1494:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  pointed-to memory is not touched in any way.  Managing the pointer is
1495:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the user's responsibility.
1496:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1497:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1498:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       clear() _GLIBCXX_NOEXCEPT
1499:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_erase_at_end(this->_M_impl._M_start); }
1500:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1501:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     protected:
1502:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1503:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Memory expansion handler.  Uses the member allocation function to
1504:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  obtain @a n bytes of memory, and then copies [first,last) into it.
1505:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1506:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _ForwardIterator>
1507:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	pointer
1508:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_allocate_and_copy(size_type __n,
1509:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			     _ForwardIterator __first, _ForwardIterator __last)
1510:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1511:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  pointer __result = this->_M_allocate(__n);
1512:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __try
1513:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
1514:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      std::__uninitialized_copy_a(__first, __last, __result,
1515:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  _M_get_Tp_allocator());
1516:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      return __result;
1517:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    }
1518:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __catch(...)
1519:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
1520:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _M_deallocate(__result, __n);
1521:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      __throw_exception_again;
1522:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    }
1523:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1524:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1525:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1526:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Internal constructor functions follow.
1527:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1528:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range constructor to implement [23.1.1]/9
1529:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1530:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus < 201103L
1531:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1532:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // 438. Ambiguity in the "do the right thing" clause
1533:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _Integer>
1534:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1535:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_initialize_dispatch(_Integer __n, _Integer __value, __true_type)
1536:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1537:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_start = _M_allocate(_S_check_init_len(
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 447


1538:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		static_cast<size_type>(__n), _M_get_Tp_allocator()));
1539:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_end_of_storage =
1540:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    this->_M_impl._M_start + static_cast<size_type>(__n);
1541:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_fill_initialize(static_cast<size_type>(__n), __value);
1542:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1543:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1544:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range constructor to implement [23.1.1]/9
1545:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1546:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1547:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_initialize_dispatch(_InputIterator __first, _InputIterator __last,
1548:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			       __false_type)
1549:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1550:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_range_initialize(__first, __last,
1551:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			      std::__iterator_category(__first));
1552:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1553:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1554:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1555:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second initialize_dispatch above
1556:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1557:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1558:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_initialize(_InputIterator __first, _InputIterator __last,
1559:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    std::input_iterator_tag)
1560:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1561:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __try {
1562:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    for (; __first != __last; ++__first)
1563:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1564:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      emplace_back(*__first);
1565:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1566:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      push_back(*__first);
1567:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1568:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  } __catch(...) {
1569:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    clear();
1570:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    __throw_exception_again;
1571:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
1572:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1573:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1574:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second initialize_dispatch above
1575:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _ForwardIterator>
1576:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1577:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
1578:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    std::forward_iterator_tag)
1579:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1580:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  const size_type __n = std::distance(__first, __last);
1581:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_start
1582:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
1583:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
1584:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_finish =
1585:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    std::__uninitialized_copy_a(__first, __last,
1586:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					this->_M_impl._M_start,
1587:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					_M_get_Tp_allocator());
1588:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1589:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1590:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the first initialize_dispatch above and by the
1591:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // vector(n,value,a) constructor.
1592:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1593:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_fill_initialize(size_type __n, const value_type& __value)
1594:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 448


1595:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish =
1596:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_fill_n_a(this->_M_impl._M_start, __n, __value,
1597:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					_M_get_Tp_allocator());
1598:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1599:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1600:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1601:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the vector(n) constructor.
1602:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1603:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_default_initialize(size_type __n)
1604:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1605:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish =
1606:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
1607:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					   _M_get_Tp_allocator());
1608:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1609:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1610:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1611:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Internal assign functions follow.  The *_aux functions do the actual
1612:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // assignment work for the range versions.
1613:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1614:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range assign to implement [23.1.1]/9
1615:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1616:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1617:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // 438. Ambiguity in the "do the right thing" clause
1618:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _Integer>
1619:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1620:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_assign_dispatch(_Integer __n, _Integer __val, __true_type)
1621:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _M_fill_assign(__n, __val); }
1622:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1623:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range assign to implement [23.1.1]/9
1624:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1625:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1626:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_assign_dispatch(_InputIterator __first, _InputIterator __last,
1627:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			   __false_type)
1628:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _M_assign_aux(__first, __last, std::__iterator_category(__first)); }
1629:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1630:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second assign_dispatch above
1631:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1632:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1633:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_assign_aux(_InputIterator __first, _InputIterator __last,
1634:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      std::input_iterator_tag);
1635:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1636:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second assign_dispatch above
1637:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _ForwardIterator>
1638:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1639:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_assign_aux(_ForwardIterator __first, _ForwardIterator __last,
1640:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      std::forward_iterator_tag);
1641:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1642:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by assign(n,t), and the range assign when it turns out
1643:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // to be the same thing.
1644:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1645:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_fill_assign(size_type __n, const value_type& __val);
1646:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1647:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Internal insert functions follow.
1648:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1649:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range insert to implement [23.1.1]/9
1650:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1651:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 449


1652:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // 438. Ambiguity in the "do the right thing" clause
1653:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _Integer>
1654:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1655:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_insert_dispatch(iterator __pos, _Integer __n, _Integer __val,
1656:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			   __true_type)
1657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _M_fill_insert(__pos, __n, __val); }
1658:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1659:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range insert to implement [23.1.1]/9
1660:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1661:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1662:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_insert_dispatch(iterator __pos, _InputIterator __first,
1663:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			   _InputIterator __last, __false_type)
1664:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1665:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_range_insert(__pos, __first, __last,
1666:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			  std::__iterator_category(__first));
1667:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1668:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1669:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second insert_dispatch above
1670:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1671:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1672:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_insert(iterator __pos, _InputIterator __first,
1673:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			_InputIterator __last, std::input_iterator_tag);
1674:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1675:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second insert_dispatch above
1676:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _ForwardIterator>
1677:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1678:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_insert(iterator __pos, _ForwardIterator __first,
1679:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			_ForwardIterator __last, std::forward_iterator_tag);
1680:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1681:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by insert(p,n,x), and the range insert when it turns out to be
1682:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // the same thing.
1683:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1684:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_fill_insert(iterator __pos, size_type __n, const value_type& __x);
1685:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1686:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1687:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by resize(n).
1688:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1689:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_default_append(size_type __n);
1690:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1691:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       bool
1692:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_shrink_to_fit();
1693:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1694:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1695:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus < 201103L
1696:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by insert(p,x)
1697:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1698:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_insert_aux(iterator __position, const value_type& __x);
1699:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1700:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1701:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_realloc_insert(iterator __position, const value_type& __x);
1702:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1703:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // A value_type object constructed with _Alloc_traits::construct()
1704:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // and destroyed with _Alloc_traits::destroy().
1705:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       struct _Temporary_value
1706:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1707:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	template<typename... _Args>
1708:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  explicit
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 450


1709:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Temporary_value(vector* __vec, _Args&&... __args) : _M_this(__vec)
1710:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
1711:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _Alloc_traits::construct(_M_this->_M_impl, _M_ptr(),
1712:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				     std::forward<_Args>(__args)...);
1713:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
1714:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1715:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	~_Temporary_value()
1716:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _Alloc_traits::destroy(_M_this->_M_impl, _M_ptr()); }
1717:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1718:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	value_type&
1719:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_val() { return *_M_ptr(); }
1720:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1721:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       private:
1722:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Tp*
1723:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_ptr() { return reinterpret_cast<_Tp*>(&__buf); }
1724:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1725:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	vector* _M_this;
1726:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	typename aligned_storage<sizeof(_Tp), alignof(_Tp)>::type __buf;
1727:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       };
1728:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1729:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by insert(p,x) and other functions when insertion needs to
1730:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // reallocate or move existing elements. _Arg is either _Tp& or _Tp.
1731:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _Arg>
1732:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1733:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_insert_aux(iterator __position, _Arg&& __arg);
1734:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1735:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename... _Args>
1736:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1737:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_realloc_insert(iterator __position, _Args&&... __args);
1738:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1739:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Either move-construct at the end, or forward to _M_insert_aux.
1740:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1741:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_insert_rval(const_iterator __position, value_type&& __v);
1742:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1743:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Try to emplace at the end, otherwise forward to _M_insert_aux.
1744:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename... _Args>
1745:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	iterator
1746:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_emplace_aux(const_iterator __position, _Args&&... __args);
1747:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1748:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Emplacing an rvalue of the correct type can use _M_insert_rval.
1749:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1750:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_emplace_aux(const_iterator __position, value_type&& __v)
1751:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_insert_rval(__position, std::move(__v)); }
1752:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1753:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1754:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by _M_fill_insert, _M_insert_aux etc.
1755:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size_type
1756:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_check_len(size_type __n, const char* __s) const
 10549              		.loc 33 1756 7 is_stmt 1 view .LVU2375
 10550              	.LBB6424:
 10551              	.LBB6425:
 10552              	.LBI6425:
 918:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 10553              		.loc 33 918 7 view .LVU2376
 10554              	.LBE6425:
 10555              	.LBE6424:
 10556              	.LBE6423:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 451


 10557              		.loc 32 426 7 is_stmt 0 view .LVU2377
 10558 000a 9246     		mov	r10, r2
 10559              	.LBB6430:
 10560              	.LBB6428:
1757:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1758:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (max_size() - size() < __n)
 10561              		.loc 33 1758 2 view .LVU2378
 10562 000c 6FF06041 		mvn	r1, #-536870912
 10563              	.LBB6427:
 10564              	.LBB6426:
 919:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 10565              		.loc 33 919 50 view .LVU2379
 10566 0010 A9EB0802 		sub	r2, r9, r8
 10567              	.LVL514:
 919:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 10568              		.loc 33 919 50 view .LVU2380
 10569              	.LBE6426:
 10570              	.LBE6427:
 10571              		.loc 33 1758 2 view .LVU2381
 10572 0014 B1EBA20F 		cmp	r1, r2, asr #2
 10573 0018 54D0     		beq	.L313
 10574 001a 9310     		asrs	r3, r2, #2
 10575 001c 0646     		mov	r6, r0
 10576              	.LBE6428:
 10577              	.LBE6430:
 10578              	.LBB6431:
 10579              	.LBB6432:
 10580              		.file 34 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
   1:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // Iterators -*- C++ -*-
   2:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
   3:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** //
   5:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // software; you can redistribute it and/or modify it under the
   7:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // terms of the GNU General Public License as published by the
   8:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // any later version.
  10:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  11:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // This library is distributed in the hope that it will be useful,
  12:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // GNU General Public License for more details.
  15:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  16:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  20:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // You should have received a copy of the GNU General Public License and
  21:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // <http://www.gnu.org/licenses/>.
  24:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  25:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** /*
  26:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
  27:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Copyright (c) 1994
  28:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Hewlett-Packard Company
  29:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 452


  30:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * that both that copyright notice and this permission notice appear
  34:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * representations about the suitability of this software for any
  36:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
  38:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
  39:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Copyright (c) 1996-1998
  40:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
  42:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * that both that copyright notice and this permission notice appear
  46:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * representations about the suitability of this software for any
  48:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  */
  50:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  51:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** /** @file bits/stl_iterator.h
  52:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *  This is an internal header file, included by other library headers.
  53:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *  Do not attempt to use it directly. @headername{iterator}
  54:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
  55:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *  This file implements reverse_iterator, back_insert_iterator,
  56:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *  front_insert_iterator, insert_iterator, __normal_iterator, and their
  57:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *  supporting functions and overloaded operators.
  58:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  */
  59:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  60:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #ifndef _STL_ITERATOR_H
  61:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #define _STL_ITERATOR_H 1
  62:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  63:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #include <bits/cpp_type_traits.h>
  64:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #include <ext/type_traits.h>
  65:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #include <bits/move.h>
  66:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #include <bits/ptr_traits.h>
  67:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  68:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus >= 201103L
  69:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # include <type_traits>
  70:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
  71:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  72:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L
  73:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # define __cpp_lib_array_constexpr 201811L
  74:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # define __cpp_lib_constexpr_iterator 201811L
  75:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #elif __cplusplus == 201703L
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # define __cpp_lib_array_constexpr 201803L
  77:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
  78:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L
  80:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # include <compare>
  81:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # include <new>
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # include <bits/iterator_concepts.h>
  83:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
  84:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  85:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  86:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** {
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 453


  87:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  88:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
  90:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    * @addtogroup iterators
  91:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    * @{
  92:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    */
  93:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  94:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_lib_concepts
  95:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   namespace __detail
  96:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   {
  97:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     // Weaken iterator_category _Cat to _Limit if it is derived from that,
  98:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     // otherwise use _Otherwise.
  99:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     template<typename _Cat, typename _Limit, typename _Otherwise = _Cat>
 100:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using __clamp_iter_cat
 101:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	= conditional_t<derived_from<_Cat, _Limit>, _Limit, _Otherwise>;
 102:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   }
 103:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 104:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 105:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // 24.4.1 Reverse iterators
 106:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 107:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Bidirectional and random access iterators have corresponding reverse
 108:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  %iterator adaptors that iterate through the data structure in the
 109:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  opposite direction.  They have the same signatures as the corresponding
 110:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  iterators.  The fundamental relation between a reverse %iterator and its
 111:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  corresponding %iterator @c i is established by the identity:
 112:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @code
 113:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *      &*(reverse_iterator(i)) == &*(i - 1)
 114:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @endcode
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 116:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  <em>This mapping is dictated by the fact that while there is always a
 117:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  pointer past the end of an array, there might not be a valid pointer
 118:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  before the beginning of an array.</em> [24.4.1]/1,2
 119:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Reverse iterators can be tricky and surprising at first.  Their
 121:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  semantics make sense, however, and the trickiness is a side effect of
 122:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  the requirement that the iterators must be safe.
 123:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 124:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 125:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     class reverse_iterator
 126:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     : public iterator<typename iterator_traits<_Iterator>::iterator_category,
 127:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		      typename iterator_traits<_Iterator>::value_type,
 128:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		      typename iterator_traits<_Iterator>::difference_type,
 129:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		      typename iterator_traits<_Iterator>::pointer,
 130:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****                       typename iterator_traits<_Iterator>::reference>
 131:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 132:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Iterator current;
 134:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 135:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef iterator_traits<_Iterator>		__traits_type;
 136:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 137:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     public:
 138:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef _Iterator					iterator_type;
 139:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::difference_type	difference_type;
 140:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::pointer		pointer;
 141:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::reference		reference;
 142:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 143:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_lib_concepts
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 454


 144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using iterator_concept
 145:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	= conditional_t<random_access_iterator<_Iterator>,
 146:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 			random_access_iterator_tag,
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 			bidirectional_iterator_tag>;
 148:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using iterator_category
 149:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	= __detail::__clamp_iter_cat<typename __traits_type::iterator_category,
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 				     random_access_iterator_tag>;
 151:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 152:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 153:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 154:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The default constructor value-initializes member @p current.
 155:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  If it is a pointer, that means it is zero-initialized.
 156:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 157:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 158:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // 235 No specification of default ctor for reverse_iterator
 159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // 1012. reverse_iterator default ctor should value initialize
 160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR
 161:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       reverse_iterator() : current() { }
 162:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 163:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 164:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This %iterator will move in the opposite direction that @p x does.
 165:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 166:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       explicit _GLIBCXX17_CONSTEXPR
 167:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       reverse_iterator(iterator_type __x) : current(__x) { }
 168:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 169:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 170:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The copy constructor is normal.
 171:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 172:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR
 173:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       reverse_iterator(const reverse_iterator& __x)
 174:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : current(__x.current) { }
 175:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 176:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus >= 201103L
 177:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       reverse_iterator& operator=(const reverse_iterator&) = default;
 178:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 180:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 181:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  A %reverse_iterator across other types can be copied if the
 182:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  underlying %iterator can be converted to the type of @c current.
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 184:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<typename _Iter>
 185:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	_GLIBCXX17_CONSTEXPR
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         reverse_iterator(const reverse_iterator<_Iter>& __x)
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	: current(__x.base()) { }
 188:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 189:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  @c current, the %iterator used for underlying work.
 191:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 192:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR iterator_type
 193:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       base() const
 194:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return current; }
 195:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 196:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 197:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  A reference to the value at @c --current
 198:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 199:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This requires that @c --current is dereferenceable.
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 455


 201:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @warning This implementation requires that for an iterator of the
 202:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *           underlying iterator type, @c x, a reference obtained by
 203:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *           @c *x remains valid after @c x has been modified or
 204:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *           destroyed. This is a bug: http://gcc.gnu.org/PR51823
 205:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 206:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reference
 207:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator*() const
 208:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 209:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	_Iterator __tmp = current;
 210:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *--__tmp;
 211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 212:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 213:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 214:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  A pointer to the value at @c --current
 215:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 216:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This requires that @c --current is dereferenceable.
 217:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR pointer
 219:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator->() const
 220:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_concepts >= 201907L
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       requires is_pointer_v<_Iterator>
 222:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	|| requires(const _Iterator __i) { __i.operator->(); }
 223:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 224:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 225:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 226:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	// 1052. operator-> should also support smart pointers
 227:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	_Iterator __tmp = current;
 228:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	--__tmp;
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return _S_to_pointer(__tmp);
 230:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 232:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 233:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  @c *this
 234:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 235:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Decrements the underlying iterator.
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator&
 238:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++()
 239:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 240:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	--current;
 241:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 242:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 243:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 244:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 245:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  The original value of @c *this
 246:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 247:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Decrements the underlying iterator.
 248:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 249:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 250:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++(int)
 251:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 252:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	reverse_iterator __tmp = *this;
 253:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	--current;
 254:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return __tmp;
 255:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 256:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 257:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 456


 258:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  @c *this
 259:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 260:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Increments the underlying iterator.
 261:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 262:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator&
 263:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator--()
 264:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 265:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++current;
 266:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 267:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 268:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 269:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 270:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  A reverse_iterator with the previous value of @c *this
 271:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 272:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Increments the underlying iterator.
 273:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 274:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 275:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator--(int)
 276:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 277:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	reverse_iterator __tmp = *this;
 278:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++current;
 279:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return __tmp;
 280:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 281:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 282:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 283:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  A reverse_iterator that refers to @c current - @a __n
 284:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 285:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 286:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 287:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 288:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator+(difference_type __n) const
 289:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return reverse_iterator(current - __n); }
 290:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 291:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 292:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  *this
 293:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 294:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Moves the underlying iterator backwards @a __n steps.
 295:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 296:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 297:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator&
 298:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator+=(difference_type __n)
 299:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 300:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	current -= __n;
 301:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 302:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 303:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 304:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 305:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  A reverse_iterator that refers to @c current - @a __n
 306:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 307:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 308:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 309:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 310:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator-(difference_type __n) const
 311:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return reverse_iterator(current + __n); }
 312:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 313:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 314:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  *this
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 457


 315:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 316:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Moves the underlying iterator forwards @a __n steps.
 317:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 318:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 319:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator&
 320:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator-=(difference_type __n)
 321:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	current += __n;
 323:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 324:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 325:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 326:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 327:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  The value at @c current - @a __n - 1
 328:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 329:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 330:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 331:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reference
 332:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator[](difference_type __n) const
 333:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *(*this + __n); }
 334:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 335:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_lib_concepts
 336:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       friend constexpr iter_rvalue_reference_t<_Iterator>
 337:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       iter_move(const reverse_iterator& __i)
 338:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       noexcept(is_nothrow_copy_constructible_v<_Iterator>
 339:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       && noexcept(ranges::iter_move(--std::declval<_Iterator&>())))
 340:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 341:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	auto __tmp = __i.base();
 342:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return ranges::iter_move(--__tmp);
 343:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 344:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 345:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<indirectly_swappable<_Iterator> _Iter2>
 346:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	friend constexpr void
 347:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	iter_swap(const reverse_iterator& __x,
 348:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		  const reverse_iterator<_Iter2>& __y)
 349:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	noexcept(is_nothrow_copy_constructible_v<_Iterator>
 350:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		 && is_nothrow_copy_constructible_v<_Iter2>
 351:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		 && noexcept(ranges::iter_swap(--std::declval<_Iterator&>(),
 352:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 					       --std::declval<_Iter2&>())))
 353:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	{
 354:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  auto __xtmp = __x.base();
 355:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  auto __ytmp = __y.base();
 356:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  ranges::iter_swap(--__xtmp, --__ytmp);
 357:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	}
 358:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 359:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 360:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     private:
 361:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<typename _Tp>
 362:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	static _GLIBCXX17_CONSTEXPR _Tp*
 363:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	_S_to_pointer(_Tp* __p)
 364:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         { return __p; }
 365:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 366:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<typename _Tp>
 367:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	static _GLIBCXX17_CONSTEXPR pointer
 368:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	_S_to_pointer(_Tp __t)
 369:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         { return __t.operator->(); }
 370:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     };
 371:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 458


 372:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   //@{
 373:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 374:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param  __x  A %reverse_iterator.
 375:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param  __y  A %reverse_iterator.
 376:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @return  A simple bool.
 377:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 378:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Reverse iterators forward comparisons to their underlying base()
 379:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  iterators.
 380:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 381:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 382:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus <= 201703L || ! defined __cpp_lib_concepts
 383:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 384:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 385:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator==(const reverse_iterator<_Iterator>& __x,
 386:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 387:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() == __y.base(); }
 388:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 389:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 390:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 391:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<(const reverse_iterator<_Iterator>& __x,
 392:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __y)
 393:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() < __x.base(); }
 394:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 395:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 396:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 397:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator!=(const reverse_iterator<_Iterator>& __x,
 398:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 399:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__x == __y); }
 400:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 401:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 402:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 403:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>(const reverse_iterator<_Iterator>& __x,
 404:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __y)
 405:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y < __x; }
 406:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 407:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 408:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 409:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=(const reverse_iterator<_Iterator>& __x,
 410:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 411:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__y < __x); }
 412:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 413:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 414:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 415:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>=(const reverse_iterator<_Iterator>& __x,
 416:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 417:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__x < __y); }
 418:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 419:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 420:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // DR 280. Comparison of reverse_iterator to const reverse_iterator.
 421:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 422:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 423:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator==(const reverse_iterator<_IteratorL>& __x,
 424:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 425:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() == __y.base(); }
 426:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 427:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 428:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 459


 429:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<(const reverse_iterator<_IteratorL>& __x,
 430:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 431:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() < __x.base(); }
 432:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 434:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 435:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator!=(const reverse_iterator<_IteratorL>& __x,
 436:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 437:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__x == __y); }
 438:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 439:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 440:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 441:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>(const reverse_iterator<_IteratorL>& __x,
 442:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 443:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y < __x; }
 444:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 445:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 446:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 447:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=(const reverse_iterator<_IteratorL>& __x,
 448:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 449:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__y < __x); }
 450:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 452:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 453:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>=(const reverse_iterator<_IteratorL>& __x,
 454:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 455:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__x < __y); }
 456:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else // C++20
 457:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 458:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 459:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator==(const reverse_iterator<_IteratorL>& __x,
 460:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 461:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() == __y.base() } -> convertible_to<bool>; }
 462:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() == __y.base(); }
 463:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 464:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 465:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 466:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator!=(const reverse_iterator<_IteratorL>& __x,
 467:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 468:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() != __y.base() } -> convertible_to<bool>; }
 469:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() != __y.base(); }
 470:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 471:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 472:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 473:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<(const reverse_iterator<_IteratorL>& __x,
 474:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 475:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() > __y.base() } -> convertible_to<bool>; }
 476:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() > __y.base(); }
 477:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 478:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 479:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 480:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>(const reverse_iterator<_IteratorL>& __x,
 481:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 482:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() < __y.base() } -> convertible_to<bool>; }
 483:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() < __y.base(); }
 484:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 485:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 460


 486:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 487:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=(const reverse_iterator<_IteratorL>& __x,
 488:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 489:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() >= __y.base() } -> convertible_to<bool>; }
 490:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() >= __y.base(); }
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 492:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 493:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 494:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>=(const reverse_iterator<_IteratorL>& __x,
 495:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 496:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() <= __y.base() } -> convertible_to<bool>; }
 497:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() <= __y.base(); }
 498:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 499:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL,
 500:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	   three_way_comparable_with<_IteratorL> _IteratorR>
 501:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr compare_three_way_result_t<_IteratorL, _IteratorR>
 502:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=>(const reverse_iterator<_IteratorL>& __x,
 503:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		const reverse_iterator<_IteratorR>& __y)
 504:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() <=> __x.base(); }
 505:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif // C++20
 506:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   //@}
 507:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 508:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus < 201103L
 509:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 510:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline typename reverse_iterator<_Iterator>::difference_type
 511:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator-(const reverse_iterator<_Iterator>& __x,
 512:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __y)
 513:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() - __x.base(); }
 514:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 515:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 516:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline typename reverse_iterator<_IteratorL>::difference_type
 517:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator-(const reverse_iterator<_IteratorL>& __x,
 518:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 519:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() - __x.base(); }
 520:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 521:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 522:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // DR 685. reverse_iterator/move_iterator difference has invalid signatures
 523:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 524:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR auto
 525:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator-(const reverse_iterator<_IteratorL>& __x,
 526:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 527:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     -> decltype(__y.base() - __x.base())
 528:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() - __x.base(); }
 529:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 530:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 531:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 532:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR reverse_iterator<_Iterator>
 533:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator+(typename reverse_iterator<_Iterator>::difference_type __n,
 534:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __x)
 535:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return reverse_iterator<_Iterator>(__x.base() - __n); }
 536:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 537:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus >= 201103L
 538:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // Same as C++14 make_reverse_iterator but used in C++11 mode too.
 539:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 540:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR reverse_iterator<_Iterator>
 541:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     __make_reverse_iterator(_Iterator __i)
 542:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return reverse_iterator<_Iterator>(__i); }
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 461


 543:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 544:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # if __cplusplus >= 201402L
 545:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #  define __cpp_lib_make_reverse_iterator 201402
 546:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 547:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 548:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // DR 2285. make_reverse_iterator
 549:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /// Generator function for reverse_iterator.
 550:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 551:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR reverse_iterator<_Iterator>
 552:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     make_reverse_iterator(_Iterator __i)
 553:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return reverse_iterator<_Iterator>(__i); }
 554:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 555:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #  if __cplusplus > 201703L && defined __cpp_lib_concepts
 556:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator1, typename _Iterator2>
 557:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires (!sized_sentinel_for<_Iterator1, _Iterator2>)
 558:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline constexpr bool
 559:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     disable_sized_sentinel_for<reverse_iterator<_Iterator1>,
 560:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 			       reverse_iterator<_Iterator2>> = true;
 561:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #  endif // C++20
 562:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # endif // C++14
 563:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 564:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 565:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
 566:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     auto
 567:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     __niter_base(reverse_iterator<_Iterator> __it)
 568:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     -> decltype(__make_reverse_iterator(__niter_base(__it.base())))
 569:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __make_reverse_iterator(__niter_base(__it.base())); }
 570:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 571:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 572:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     struct __is_move_iterator<reverse_iterator<_Iterator> >
 573:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : __is_move_iterator<_Iterator>
 574:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { };
 575:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 576:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 577:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
 578:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     auto
 579:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     __miter_base(reverse_iterator<_Iterator> __it)
 580:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     -> decltype(__make_reverse_iterator(__miter_base(__it.base())))
 581:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __make_reverse_iterator(__miter_base(__it.base())); }
 582:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif // C++11
 583:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 584:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // 24.4.2.2.1 back_insert_iterator
 585:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 586:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @brief  Turns assignment into insertion.
 587:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 588:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  These are output iterators, constructed from a container-of-T.
 589:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Assigning a T to the iterator appends it to the container using
 590:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  push_back.
 591:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 592:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Tip:  Using the back_inserter function to create these iterators can
 593:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  save typing.
 594:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 595:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 596:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     class back_insert_iterator
 597:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     : public iterator<output_iterator_tag, void, void, void, void>
 598:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 599:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 462


 600:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Container* container;
 601:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 602:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     public:
 603:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// A nested typedef for the type of whatever container you used.
 604:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef _Container          container_type;
 605:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L
 606:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using difference_type = ptrdiff_t;
 607:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 608:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       constexpr back_insert_iterator() noexcept : container(nullptr) { }
 609:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 610:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 611:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// The only way to create this %iterator is with a container.
 612:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       explicit _GLIBCXX20_CONSTEXPR
 613:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator(_Container& __x)
 614:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : container(std::__addressof(__x)) { }
 615:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 616:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 617:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @param  __value  An instance of whatever type
 618:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 container_type::const_reference is; presumably a
 619:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 reference-to-const T for container<T>.
 620:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  This %iterator, for chained operations.
 621:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 622:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This kind of %iterator doesn't really have a @a position in the
 623:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  container (you can think of the position as being permanently at
 624:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  the end, if you like).  Assigning a value to the %iterator will
 625:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  always append the value to the end of the container.
 626:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 627:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus < 201103L
 628:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator&
 629:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::const_reference __value)
 630:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 631:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_back(__value);
 632:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 633:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 634:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 635:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 636:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator&
 637:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(const typename _Container::value_type& __value)
 638:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 639:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_back(__value);
 640:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 641:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 642:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 643:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 644:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator&
 645:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::value_type&& __value)
 646:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 647:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_back(std::move(__value));
 648:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 649:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 650:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 651:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 652:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.
 653:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 654:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator&
 655:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator*()
 656:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 463


 657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 658:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 659:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 660:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator&
 661:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++()
 662:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 663:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 664:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 665:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 666:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator
 667:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++(int)
 668:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 669:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     };
 670:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 671:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 672:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param  __x  A container of arbitrary type.
 673:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @return  An instance of back_insert_iterator working on @p __x.
 674:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 675:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  This wrapper function helps in creating back_insert_iterator instances.
 676:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Typing the name of the %iterator requires knowing the precise full
 677:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  type of the container, which can be tedious and impedes generic
 678:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  programming.  Using this function lets you take advantage of automatic
 679:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  template parameter deduction, making the compiler match the correct
 680:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  types for you.
 681:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 682:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 683:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
 684:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline back_insert_iterator<_Container>
 685:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     back_inserter(_Container& __x)
 686:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return back_insert_iterator<_Container>(__x); }
 687:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 688:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 689:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @brief  Turns assignment into insertion.
 690:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 691:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  These are output iterators, constructed from a container-of-T.
 692:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Assigning a T to the iterator prepends it to the container using
 693:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  push_front.
 694:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 695:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Tip:  Using the front_inserter function to create these iterators can
 696:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  save typing.
 697:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 698:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 699:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     class front_insert_iterator
 700:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     : public iterator<output_iterator_tag, void, void, void, void>
 701:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 702:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 703:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Container* container;
 704:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 705:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     public:
 706:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// A nested typedef for the type of whatever container you used.
 707:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef _Container          container_type;
 708:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L
 709:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using difference_type = ptrdiff_t;
 710:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 711:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       constexpr front_insert_iterator() noexcept : container(nullptr) { }
 712:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 713:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 464


 714:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// The only way to create this %iterator is with a container.
 715:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       explicit _GLIBCXX20_CONSTEXPR
 716:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator(_Container& __x)
 717:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : container(std::__addressof(__x)) { }
 718:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 719:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 720:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @param  __value  An instance of whatever type
 721:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 container_type::const_reference is; presumably a
 722:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 reference-to-const T for container<T>.
 723:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  This %iterator, for chained operations.
 724:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 725:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This kind of %iterator doesn't really have a @a position in the
 726:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  container (you can think of the position as being permanently at
 727:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  the front, if you like).  Assigning a value to the %iterator will
 728:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  always prepend the value to the front of the container.
 729:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 730:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus < 201103L
 731:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator&
 732:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::const_reference __value)
 733:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 734:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_front(__value);
 735:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 736:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 737:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 738:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 739:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator&
 740:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(const typename _Container::value_type& __value)
 741:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 742:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_front(__value);
 743:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 744:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 745:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 746:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 747:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator&
 748:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::value_type&& __value)
 749:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 750:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_front(std::move(__value));
 751:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 752:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 753:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 754:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 755:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.
 756:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 757:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator&
 758:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator*()
 759:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 760:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 761:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 762:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 763:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator&
 764:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++()
 765:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 766:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 767:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 768:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 769:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator
 770:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++(int)
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 465


 771:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 772:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     };
 773:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 774:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 775:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param  __x  A container of arbitrary type.
 776:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @return  An instance of front_insert_iterator working on @p x.
 777:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 778:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  This wrapper function helps in creating front_insert_iterator instances.
 779:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Typing the name of the %iterator requires knowing the precise full
 780:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  type of the container, which can be tedious and impedes generic
 781:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  programming.  Using this function lets you take advantage of automatic
 782:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  template parameter deduction, making the compiler match the correct
 783:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  types for you.
 784:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 785:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 786:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
 787:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline front_insert_iterator<_Container>
 788:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     front_inserter(_Container& __x)
 789:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return front_insert_iterator<_Container>(__x); }
 790:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 791:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 792:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @brief  Turns assignment into insertion.
 793:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 794:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  These are output iterators, constructed from a container-of-T.
 795:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Assigning a T to the iterator inserts it in the container at the
 796:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  %iterator's position, rather than overwriting the value at that
 797:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  position.
 798:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 799:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  (Sequences will actually insert a @e copy of the value before the
 800:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  %iterator's position.)
 801:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 802:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Tip:  Using the inserter function to create these iterators can
 803:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  save typing.
 804:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 805:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 806:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     class insert_iterator
 807:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     : public iterator<output_iterator_tag, void, void, void, void>
 808:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 809:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && defined __cpp_lib_concepts
 810:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using _Iter = std::__detail::__range_iter_t<_Container>;
 811:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 812:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 813:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Container* container = nullptr;
 814:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Iter iter = _Iter();
 815:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 816:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename _Container::iterator		_Iter;
 817:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 818:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 819:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Container* container;
 820:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Iter iter;
 821:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 822:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 823:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     public:
 824:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// A nested typedef for the type of whatever container you used.
 825:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef _Container          container_type;
 826:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 827:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && defined __cpp_lib_concepts
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 466


 828:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using difference_type = ptrdiff_t;
 829:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 830:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator() = default;
 831:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 832:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 833:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 834:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The only way to create this %iterator is with a container and an
 835:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  initial position (a normal %iterator into the container).
 836:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 837:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 838:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator(_Container& __x, _Iter __i)
 839:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : container(std::__addressof(__x)), iter(__i) {}
 840:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 841:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 842:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @param  __value  An instance of whatever type
 843:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 container_type::const_reference is; presumably a
 844:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 reference-to-const T for container<T>.
 845:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  This %iterator, for chained operations.
 846:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 847:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This kind of %iterator maintains its own position in the
 848:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  container.  Assigning a value to the %iterator will insert the
 849:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  value into the container at the place before the %iterator.
 850:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 851:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The position is maintained such that subsequent assignments will
 852:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  insert values immediately after one another.  For example,
 853:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @code
 854:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     // vector v contains A and Z
 855:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 856:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     insert_iterator i (v, ++v.begin());
 857:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     i = 1;
 858:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     i = 2;
 859:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     i = 3;
 860:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 861:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     // vector v contains A, 1, 2, 3, and Z
 862:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @endcode
 863:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 864:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus < 201103L
 865:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 866:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::const_reference __value)
 867:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 868:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	iter = container->insert(iter, __value);
 869:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++iter;
 870:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 871:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 872:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 873:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 874:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 875:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(const typename _Container::value_type& __value)
 876:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 877:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	iter = container->insert(iter, __value);
 878:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++iter;
 879:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 880:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 881:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 882:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 883:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 884:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::value_type&& __value)
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 467


 885:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 886:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	iter = container->insert(iter, std::move(__value));
 887:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++iter;
 888:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 889:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 890:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 891:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 892:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.
 893:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 894:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 895:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator*()
 896:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 897:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 898:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 899:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 900:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 901:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++()
 902:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 903:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 904:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 905:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 906:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 907:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++(int)
 908:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 909:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     };
 910:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 911:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 912:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param __x  A container of arbitrary type.
 913:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param __i  An iterator into the container.
 914:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @return  An instance of insert_iterator working on @p __x.
 915:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 916:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  This wrapper function helps in creating insert_iterator instances.
 917:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Typing the name of the %iterator requires knowing the precise full
 918:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  type of the container, which can be tedious and impedes generic
 919:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  programming.  Using this function lets you take advantage of automatic
 920:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  template parameter deduction, making the compiler match the correct
 921:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  types for you.
 922:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 923:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && defined __cpp_lib_concepts
 924:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 925:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr insert_iterator<_Container>
 926:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inserter(_Container& __x, std::__detail::__range_iter_t<_Container> __i)
 927:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return insert_iterator<_Container>(__x, __i); }
 928:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 929:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container, typename _Iterator>
 930:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline insert_iterator<_Container>
 931:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inserter(_Container& __x, _Iterator __i)
 932:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 933:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       return insert_iterator<_Container>(__x,
 934:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 					 typename _Container::iterator(__i));
 935:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     }
 936:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 937:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 938:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // @} group iterators
 939:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 940:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** _GLIBCXX_END_NAMESPACE_VERSION
 941:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** } // namespace
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 468


 942:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 943:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
 944:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** {
 945:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
 946:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 947:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // This iterator adapter is @a normal in the sense that it does not
 948:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // change the semantics of any of the operators of its iterator
 949:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // parameter.  Its primary purpose is to convert an iterator that is
 950:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // not a class, e.g. a pointer, into an iterator that is a class.
 951:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // The _Container parameter exists solely so that different containers
 952:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // using this template can instantiate different types, even if the
 953:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // _Iterator parameter is the same.
 954:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
 955:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     class __normal_iterator
 956:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 957:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 958:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Iterator _M_current;
 959:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 960:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef std::iterator_traits<_Iterator>		__traits_type;
 961:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 962:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     public:
 963:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef _Iterator					iterator_type;
 964:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::iterator_category iterator_category;
 965:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::value_type  	value_type;
 966:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::difference_type 	difference_type;
 967:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::reference 	reference;
 968:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::pointer   	pointer;
 969:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 970:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_lib_concepts
 971:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using iterator_concept = std::__detail::__iter_concept<_Iterator>;
 972:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 973:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 974:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX_CONSTEXPR __normal_iterator() _GLIBCXX_NOEXCEPT
 975:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(_Iterator()) { }
 976:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 977:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       explicit _GLIBCXX20_CONSTEXPR
 978:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 979:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 980:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 981:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // Allow iterator to const_iterator conversion
 982:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<typename _Iter>
 983:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         _GLIBCXX20_CONSTEXPR
 984:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         __normal_iterator(const __normal_iterator<_Iter,
 985:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 			  typename __enable_if<
 986:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       	       (std::__are_same<_Iter, typename _Container::pointer>::__value),
 987:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		      _Container>::__type>& __i) _GLIBCXX_NOEXCEPT
 988:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         : _M_current(__i.base()) { }
 989:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 990:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // Forward iterator requirements
 991:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 992:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       reference
 993:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator*() const _GLIBCXX_NOEXCEPT
 994:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *_M_current; }
 995:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 996:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 997:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       pointer
 998:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator->() const _GLIBCXX_NOEXCEPT
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 469


 999:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return _M_current; }
1000:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1001:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1002:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator&
1003:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++() _GLIBCXX_NOEXCEPT
1004:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
1005:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++_M_current;
1006:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
1007:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
1008:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1009:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1010:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator
1011:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++(int) _GLIBCXX_NOEXCEPT
1012:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return __normal_iterator(_M_current++); }
1013:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1014:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // Bidirectional iterator requirements
1015:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1016:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator&
1017:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator--() _GLIBCXX_NOEXCEPT
1018:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
1019:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	--_M_current;
1020:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
1021:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
1022:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1023:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1024:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator
1025:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator--(int) _GLIBCXX_NOEXCEPT
1026:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return __normal_iterator(_M_current--); }
1027:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1028:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // Random access iterator requirements
1029:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1030:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       reference
1031:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator[](difference_type __n) const _GLIBCXX_NOEXCEPT
1032:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return _M_current[__n]; }
1033:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1034:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1035:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator&
1036:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator+=(difference_type __n) _GLIBCXX_NOEXCEPT
1037:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { _M_current += __n; return *this; }
1038:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1039:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1040:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator
1041:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT
1042:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return __normal_iterator(_M_current + __n); }
1043:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1044:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1045:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator&
1046:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator-=(difference_type __n) _GLIBCXX_NOEXCEPT
1047:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { _M_current -= __n; return *this; }
1048:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1049:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1050:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator
1051:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
1052:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return __normal_iterator(_M_current - __n); }
1053:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1054:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1055:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       const _Iterator&
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 470


1056:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       base() const _GLIBCXX_NOEXCEPT
1057:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return _M_current; }
1058:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     };
1059:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1060:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // Note: In what follows, the left- and right-hand-side iterators are
1061:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // allowed to vary in types (conceptually in cv-qualification) so that
1062:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // comparison between cv-qualified and non-cv-qualified iterators be
1063:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // valid.  However, the greedy and unfriendly operators in std::rel_ops
1064:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // will make overload resolution ambiguous (when in scope) if we don't
1065:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // provide overloads whose operands are of the same type.  Can someone
1066:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // remind me what generic programming is about? -- Gaby
1067:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1068:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cpp_lib_three_way_comparison
1069:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1070:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires (_IteratorL __lhs, _IteratorR __rhs)
1071:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { { __lhs == __rhs } -> std::convertible_to<bool>; }
1072:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
1073:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,
1074:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
1075:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     noexcept(noexcept(__lhs.base() == __rhs.base()))
1076:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() == __rhs.base(); }
1077:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1078:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1079:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr std::__detail::__synth3way_t<_IteratorR, _IteratorL>
1080:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=>(const __normal_iterator<_IteratorL, _Container>& __lhs,
1081:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		const __normal_iterator<_IteratorR, _Container>& __rhs)
1082:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     noexcept(noexcept(std::__detail::__synth3way(__lhs.base(), __rhs.base())))
1083:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return std::__detail::__synth3way(__lhs.base(), __rhs.base()); }
1084:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
1085:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    // Forward iterator requirements
1086:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1087:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1088:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1089:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,
1090:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
1091:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1092:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() == __rhs.base(); }
1093:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1094:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
1095:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1096:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1097:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
1098:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
1099:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1100:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() == __rhs.base(); }
1101:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1102:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1103:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1104:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1105:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator!=(const __normal_iterator<_IteratorL, _Container>& __lhs,
1106:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
1107:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1108:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() != __rhs.base(); }
1109:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1110:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
1111:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1112:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 471


1113:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
1114:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
1115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1116:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() != __rhs.base(); }
1117:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1118:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // Random access iterator requirements
1119:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1121:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<(const __normal_iterator<_IteratorL, _Container>& __lhs,
1122:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_IteratorR, _Container>& __rhs)
1123:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1124:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() < __rhs.base(); }
1125:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1126:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
1127:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1128:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1129:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<(const __normal_iterator<_Iterator, _Container>& __lhs,
1130:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
1131:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1132:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() < __rhs.base(); }
1133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1134:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1135:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1136:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>(const __normal_iterator<_IteratorL, _Container>& __lhs,
1137:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_IteratorR, _Container>& __rhs)
1138:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1139:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() > __rhs.base(); }
1140:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1141:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
1142:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1143:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>(const __normal_iterator<_Iterator, _Container>& __lhs,
1145:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
1146:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() > __rhs.base(); }
1148:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1149:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1151:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=(const __normal_iterator<_IteratorL, _Container>& __lhs,
1152:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
1153:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1154:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() <= __rhs.base(); }
1155:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1156:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
1157:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1158:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=(const __normal_iterator<_Iterator, _Container>& __lhs,
1160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
1161:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1162:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() <= __rhs.base(); }
1163:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1164:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1165:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1166:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>=(const __normal_iterator<_IteratorL, _Container>& __lhs,
1167:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
1168:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1169:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() >= __rhs.base(); }
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 472


1170:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1171:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
1172:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1173:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1174:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>=(const __normal_iterator<_Iterator, _Container>& __lhs,
1175:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
1176:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1177:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() >= __rhs.base(); }
1178:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif // three-way comparison
1179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1180:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
1181:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // According to the resolution of DR179 not only the various comparison
1182:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // operators but also operator- must accept mixed iterator/const_iterator
1183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // parameters.
1184:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1185:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus >= 201103L
1186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     // DR 685.
1187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1188:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline auto
1189:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator-(const __normal_iterator<_IteratorL, _Container>& __lhs,
1190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_IteratorR, _Container>& __rhs) noexcept
1191:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     -> decltype(__lhs.base() - __rhs.base())
1192:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
1193:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline typename __normal_iterator<_IteratorL, _Container>::difference_type
1194:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator-(const __normal_iterator<_IteratorL, _Container>& __lhs,
1195:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_IteratorR, _Container>& __rhs)
1196:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
1197:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() - __rhs.base(); }
1198:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1199:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
1200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1201:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline typename __normal_iterator<_Iterator, _Container>::difference_type
1202:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
1203:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
1204:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1205:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() - __rhs.base(); }
 10581              		.loc 34 1205 27 view .LVU2382
 10582 001e A7EB0805 		sub	r5, r7, r8
 10583 0022 012B     		cmp	r3, #1
 10584 0024 1C46     		mov	r4, r3
 10585 0026 38BF     		it	cc
 10586 0028 0124     		movcc	r4, #1
 10587 002a 1C19     		adds	r4, r3, r4
 10588 002c 48D2     		bcs	.L295
 10589              	.LVL515:
 10590              		.loc 34 1205 27 view .LVU2383
 10591              	.LBE6432:
 10592              	.LBE6431:
 10593              	.LBB6434:
 10594              	.LBI6434:
 811:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 10595              		.loc 33 811 7 is_stmt 1 view .LVU2384
 10596              	.LBB6435:
 10597              	.LBI6435:
 978:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 10598              		.loc 34 978 7 view .LVU2385
 978:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 473


 10599              		.loc 34 978 7 is_stmt 0 view .LVU2386
 10600              	.LBE6435:
 10601              	.LBE6434:
 10602              	.LBB6437:
 10603              	.LBI6431:
1202:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
 10604              		.loc 34 1202 5 is_stmt 1 view .LVU2387
1202:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
 10605              		.loc 34 1202 5 is_stmt 0 view .LVU2388
 10606              	.LBE6437:
 10607              	.LBB6438:
 10608              	.LBI6438:
 343:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 10609              		.loc 33 343 7 is_stmt 1 view .LVU2389
 10610              	.LBB6439:
 346:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 10611              		.loc 33 346 18 is_stmt 0 view .LVU2390
 10612 002e 002C     		cmp	r4, #0
 10613 0030 3CD1     		bne	.L314
 10614 0032 A346     		mov	fp, r4
 10615              	.LVL516:
 10616              	.L304:
 346:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 10617              		.loc 33 346 18 view .LVU2391
 10618              	.LBE6439:
 10619              	.LBE6438:
 10620              	.LBB6447:
 10621              	.LBI6447:
 507:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 10622              		.loc 15 507 2 is_stmt 1 view .LVU2392
 10623              	.LBB6448:
 10624              	.LBI6448:
 148:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 10625              		.loc 16 148 2 view .LVU2393
 148:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 10626              		.loc 16 148 2 is_stmt 0 view .LVU2394
 10627              	.LBE6448:
 10628              	.LBE6447:
 10629              		.loc 26 175 3 is_stmt 1 view .LVU2395
 10630              	.LBB6453:
 10631              	.LBB6451:
 10632              	.LBB6449:
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10633              		.loc 16 150 4 is_stmt 0 view .LVU2396
 10634 0034 DAF80030 		ldr	r3, [r10]
 10635              	.LBE6449:
 10636              	.LBE6451:
 10637              	.LBE6453:
 10638              	.LBB6454:
 10639              	.LBB6455:
 10640              	.LBB6456:
 10641              	.LBB6457:
 10642              	.LBB6458:
 10643              	.LBB6459:
 10644              		.file 35 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
   1:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // Raw memory manipulators -*- C++ -*-
   2:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 474


   3:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** //
   5:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // software; you can redistribute it and/or modify it under the
   7:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // terms of the GNU General Public License as published by the
   8:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // any later version.
  10:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  11:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // This library is distributed in the hope that it will be useful,
  12:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // GNU General Public License for more details.
  15:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  16:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  20:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // You should have received a copy of the GNU General Public License and
  21:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // <http://www.gnu.org/licenses/>.
  24:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  25:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** /*
  26:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *
  27:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Copyright (c) 1994
  28:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Hewlett-Packard Company
  29:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *
  30:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * that both that copyright notice and this permission notice appear
  34:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * representations about the suitability of this software for any
  36:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *
  38:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *
  39:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Copyright (c) 1996,1997
  40:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *
  42:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * that both that copyright notice and this permission notice appear
  46:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * representations about the suitability of this software for any
  48:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  */
  50:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  51:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** /** @file bits/stl_uninitialized.h
  52:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *  This is an internal header file, included by other library headers.
  53:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *  Do not attempt to use it directly. @headername{memory}
  54:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  */
  55:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  56:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #ifndef _STL_UNINITIALIZED_H
  57:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #define _STL_UNINITIALIZED_H 1
  58:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  59:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus > 201402L
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 475


  60:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #include <bits/stl_pair.h>
  61:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
  62:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  63:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus >= 201103L
  64:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #include <type_traits>
  65:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
  66:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  67:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #include <ext/alloc_traits.h>
  68:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  69:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** namespace std _GLIBCXX_VISIBILITY(default)
  70:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** {
  71:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  72:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  73:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /** @addtogroup memory
  74:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @{
  75:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    */
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  77:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
  78:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueTypes>
  80:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_copy
  81:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _InputIterator, typename _ForwardIterator>
  83:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
  84:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_copy(_InputIterator __first, _InputIterator __last,
  85:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      _ForwardIterator __result)
  86:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
  87:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __result;
  88:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
  90:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __first != __last; ++__first, (void)++__cur)
  91:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
  92:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      return __cur;
  93:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
  94:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
  95:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
  96:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__result, __cur);
  97:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
  98:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
  99:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 100:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 101:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 102:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
 103:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_copy<true>
 104:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 105:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _InputIterator, typename _ForwardIterator>
 106:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
 107:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_copy(_InputIterator __first, _InputIterator __last,
 108:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      _ForwardIterator __result)
 109:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         { return std::copy(__first, __last, __result); }
 110:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 111:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 112:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @endcond
 113:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 114:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Copies the range [first,last) into result.
 116:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  An input iterator.
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 476


 117:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __last   An input iterator.
 118:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __result An output iterator.
 119:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return   __result + (__first - __last)
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *
 121:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  Like copy(), but does not require an initialized output range.
 122:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 123:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator>
 124:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 125:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_copy(_InputIterator __first, _InputIterator __last,
 126:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		       _ForwardIterator __result)
 127:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 128:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_InputIterator>::value_type
 129:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType1;
 130:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 131:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType2;
 132:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus < 201103L
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = true;
 134:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #else
 135:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted copy constructor, but the std::copy
 136:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // optimization that uses memmove would happily "copy" them anyway.
 137:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       static_assert(is_constructible<_ValueType2, decltype(*__first)>::value,
 138:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  "result type must be constructible from value type of input range");
 139:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 140:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_InputIterator>::reference _RefType1;
 141:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::reference _RefType2;
 142:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted assignment, so using std::copy
 143:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // would be ill-formed. Require assignability before using std::copy:
 144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = is_assignable<_RefType2, _RefType1>::value;
 145:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
 146:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return std::__uninitialized_copy<__is_trivial(_ValueType1)
 148:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				       && __is_trivial(_ValueType2)
 149:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				       && __assignable>::
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_copy(__first, __last, __result);
 151:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 152:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 153:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
 154:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 155:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueType>
 156:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_fill
 157:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 158:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Tp>
 159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static void
 160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_fill(_ForwardIterator __first, _ForwardIterator __last,
 161:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      const _Tp& __x)
 162:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
 163:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 164:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
 165:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 166:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __cur != __last; ++__cur)
 167:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), __x);
 168:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 169:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
 170:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 171:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 172:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
 173:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 477


 174:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 175:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 176:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 177:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
 178:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_fill<true>
 179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 180:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Tp>
 181:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static void
 182:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_fill(_ForwardIterator __first, _ForwardIterator __last,
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      const _Tp& __x)
 184:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         { std::fill(__first, __last, __x); }
 185:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @endcond
 188:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 189:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Copies the value x into the range [first,last).
 191:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  An input iterator.
 192:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __last   An input iterator.
 193:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __x      The source value.
 194:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return   Nothing.
 195:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *
 196:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  Like fill(), but does not require an initialized output range.
 197:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 198:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp>
 199:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_fill(_ForwardIterator __first, _ForwardIterator __last,
 201:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		       const _Tp& __x)
 202:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 203:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 204:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType;
 205:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus < 201103L
 206:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = true;
 207:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #else
 208:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted copy constructor, but the std::fill
 209:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // optimization that uses memmove would happily "copy" them anyway.
 210:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       static_assert(is_constructible<_ValueType, const _Tp&>::value,
 211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  "result type must be constructible from input type");
 212:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 213:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted assignment, so using std::fill
 214:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // would be ill-formed. Require assignability before using std::fill:
 215:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 216:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
 217:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       std::__uninitialized_fill<__is_trivial(_ValueType) && __assignable>::
 219:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_fill(__first, __last, __x);
 220:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 222:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
 223:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 224:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueType>
 225:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_fill_n
 226:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 227:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size, typename _Tp>
 228:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_fill_n(_ForwardIterator __first, _Size __n,
 230:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			const _Tp& __x)
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 478


 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
 232:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 233:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
 234:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 235:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __n > 0; --__n, (void) ++__cur)
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), __x);
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      return __cur;
 238:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 239:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
 240:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 241:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 242:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
 243:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 244:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 245:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 246:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 247:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
 248:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_fill_n<true>
 249:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 250:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size, typename _Tp>
 251:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
 252:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_fill_n(_ForwardIterator __first, _Size __n,
 253:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			const _Tp& __x)
 254:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         { return std::fill_n(__first, __n, __x); }
 255:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 256:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 257:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @endcond
 258:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 259:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    // _GLIBCXX_RESOLVE_LIB_DEFECTS
 260:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    // DR 1339. uninitialized_fill_n should return the end of its range
 261:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 262:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Copies the value x into the range [first,first+n).
 263:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  An input iterator.
 264:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __n      The number of copies to make.
 265:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __x      The source value.
 266:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return   Nothing.
 267:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *
 268:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  Like fill_n(), but does not require an initialized output range.
 269:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 270:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Tp>
 271:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 272:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_fill_n(_ForwardIterator __first, _Size __n, const _Tp& __x)
 273:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 274:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 275:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType;
 276:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus < 201103L
 277:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = true;
 278:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #else
 279:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted copy constructor, but the std::fill
 280:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // optimization that uses memmove would happily "copy" them anyway.
 281:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       static_assert(is_constructible<_ValueType, const _Tp&>::value,
 282:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  "result type must be constructible from input type");
 283:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 284:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted assignment, so using std::fill
 285:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // would be ill-formed. Require assignability before using std::fill:
 286:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 287:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 479


 288:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __uninitialized_fill_n<__is_trivial(_ValueType) && __assignable>::
 289:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_fill_n(__first, __n, __x);
 290:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 291:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 292:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
 293:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 294:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Extensions: versions of uninitialized_copy, uninitialized_fill,
 295:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  and uninitialized_fill_n that take an allocator parameter.
 296:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  We dispatch back to the standard versions when we're given the
 297:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  default allocator.  For nondefault allocators we do not use 
 298:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  any of the POD optimizations.
 299:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 300:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator,
 301:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _Allocator>
 302:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     _ForwardIterator
 303:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 304:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   _ForwardIterator __result, _Allocator& __alloc)
 305:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 306:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __cur = __result;
 307:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 308:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 309:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 310:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  for (; __first != __last; ++__first, (void)++__cur)
 311:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur), *__first);
 312:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return __cur;
 313:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 314:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 315:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 316:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__result, __cur, __alloc);
 317:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 318:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 319:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 320:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 321:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator, typename _Tp>
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 323:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 324:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   _ForwardIterator __result, allocator<_Tp>&)
 325:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     { return std::uninitialized_copy(__first, __last, __result); }
 326:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 327:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator,
 328:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _Allocator>
 329:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 330:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_move_a(_InputIterator __first, _InputIterator __last,
 331:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   _ForwardIterator __result, _Allocator& __alloc)
 332:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 333:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return std::__uninitialized_copy_a(_GLIBCXX_MAKE_MOVE_ITERATOR(__first),
 334:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 					 _GLIBCXX_MAKE_MOVE_ITERATOR(__last),
 335:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 					 __result, __alloc);
 336:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 337:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 338:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator,
 339:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _Allocator>
 340:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 341:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_move_if_noexcept_a(_InputIterator __first,
 342:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				       _InputIterator __last,
 343:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				       _ForwardIterator __result,
 344:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				       _Allocator& __alloc)
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 480


 345:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 346:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return std::__uninitialized_copy_a
 347:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	(_GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(__first),
 348:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	 _GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(__last), __result, __alloc);
 349:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 350:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 351:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp, typename _Allocator>
 352:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     void
 353:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_fill_a(_ForwardIterator __first, _ForwardIterator __last,
 354:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   const _Tp& __x, _Allocator& __alloc)
 355:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 356:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __cur = __first;
 357:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 358:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 359:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 360:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  for (; __cur != __last; ++__cur)
 361:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur), __x);
 362:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 363:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 364:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 365:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__first, __cur, __alloc);
 366:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 367:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 368:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 369:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 370:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp, typename _Tp2>
 371:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 372:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_fill_a(_ForwardIterator __first, _ForwardIterator __last,
 373:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   const _Tp& __x, allocator<_Tp2>&)
 374:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     { std::uninitialized_fill(__first, __last, __x); }
 375:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 376:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Tp,
 377:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _Allocator>
 378:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     _ForwardIterator
 379:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_fill_n_a(_ForwardIterator __first, _Size __n, 
 380:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			     const _Tp& __x, _Allocator& __alloc)
 381:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 382:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __cur = __first;
 383:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 384:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 385:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 386:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  for (; __n > 0; --__n, (void) ++__cur)
 387:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur), __x);
 388:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return __cur;
 389:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 390:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 391:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 392:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__first, __cur, __alloc);
 393:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 394:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 395:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 396:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 397:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Tp,
 398:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _Tp2>
 399:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 400:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_fill_n_a(_ForwardIterator __first, _Size __n, 
 401:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			     const _Tp& __x, allocator<_Tp2>&)
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 481


 402:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     { return std::uninitialized_fill_n(__first, __n, __x); }
 403:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 404:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 405:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Extensions: __uninitialized_copy_move, __uninitialized_move_copy,
 406:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_fill_move, __uninitialized_move_fill.
 407:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // All of these algorithms take a user-supplied allocator, which is used
 408:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // for construction and destruction.
 409:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 410:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_copy_move
 411:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Copies [first1, last1) into [result, result + (last1 - first1)), and
 412:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  move [first2, last2) into
 413:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  [result, result + (last1 - first1) + (last2 - first2)).
 414:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator1, typename _InputIterator2,
 415:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _ForwardIterator, typename _Allocator>
 416:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 417:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_move(_InputIterator1 __first1,
 418:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _InputIterator1 __last1,
 419:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _InputIterator2 __first2,
 420:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _InputIterator2 __last2,
 421:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _ForwardIterator __result,
 422:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _Allocator& __alloc)
 423:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 424:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __mid = std::__uninitialized_copy_a(__first1, __last1,
 425:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 							   __result,
 426:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 							   __alloc);
 427:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 428:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 429:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return std::__uninitialized_move_a(__first2, __last2, __mid, __alloc);
 430:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 431:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 432:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__result, __mid, __alloc);
 434:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 435:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 436:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 437:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 438:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_move_copy
 439:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Moves [first1, last1) into [result, result + (last1 - first1)), and
 440:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  copies [first2, last2) into
 441:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  [result, result + (last1 - first1) + (last2 - first2)).
 442:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator1, typename _InputIterator2,
 443:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _ForwardIterator, typename _Allocator>
 444:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 445:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_move_copy(_InputIterator1 __first1,
 446:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _InputIterator1 __last1,
 447:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _InputIterator2 __first2,
 448:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _InputIterator2 __last2,
 449:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _ForwardIterator __result,
 450:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _Allocator& __alloc)
 451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 452:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __mid = std::__uninitialized_move_a(__first1, __last1,
 453:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 							   __result,
 454:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 							   __alloc);
 455:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 456:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 457:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return std::__uninitialized_copy_a(__first2, __last2, __mid, __alloc);
 458:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 482


 459:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 460:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 461:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__result, __mid, __alloc);
 462:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 463:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 464:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 465:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   
 466:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_fill_move
 467:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Fills [result, mid) with x, and moves [first, last) into
 468:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  [mid, mid + (last - first)).
 469:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp, typename _InputIterator,
 470:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _Allocator>
 471:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 472:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_fill_move(_ForwardIterator __result, _ForwardIterator __mid,
 473:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      const _Tp& __x, _InputIterator __first,
 474:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _InputIterator __last, _Allocator& __alloc)
 475:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 476:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       std::__uninitialized_fill_a(__result, __mid, __x, __alloc);
 477:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 478:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 479:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return std::__uninitialized_move_a(__first, __last, __mid, __alloc);
 480:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 481:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 482:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 483:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__result, __mid, __alloc);
 484:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 485:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 486:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 487:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 488:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_move_fill
 489:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Moves [first1, last1) into [first2, first2 + (last1 - first1)), and
 490:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  fills [first2 + (last1 - first1), last2) with x.
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator, typename _Tp,
 492:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _Allocator>
 493:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 494:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_move_fill(_InputIterator __first1, _InputIterator __last1,
 495:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _ForwardIterator __first2,
 496:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _ForwardIterator __last2, const _Tp& __x,
 497:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _Allocator& __alloc)
 498:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 499:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __mid2 = std::__uninitialized_move_a(__first1, __last1,
 500:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 							    __first2,
 501:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 							    __alloc);
 502:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 503:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 504:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::__uninitialized_fill_a(__mid2, __last2, __x, __alloc);
 505:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 506:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 507:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 508:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__first2, __mid2, __alloc);
 509:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 510:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 511:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 512:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 513:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @endcond
 514:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 515:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus >= 201103L
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 483


 516:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
 517:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 518:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Extensions: __uninitialized_default, __uninitialized_default_n,
 519:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_default_a, __uninitialized_default_n_a.
 520:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 521:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueType>
 522:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_default_1
 523:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 524:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator>
 525:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static void
 526:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_default(_ForwardIterator __first, _ForwardIterator __last)
 527:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
 528:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 529:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
 530:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 531:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __cur != __last; ++__cur)
 532:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur));
 533:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 534:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
 535:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 536:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 537:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
 538:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 539:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 540:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 541:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 542:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
 543:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_default_1<true>
 544:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 545:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator>
 546:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static void
 547:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_default(_ForwardIterator __first, _ForwardIterator __last)
 548:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
 549:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  typedef typename iterator_traits<_ForwardIterator>::value_type
 550:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    _ValueType;
 551:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 552:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::fill(__first, __last, _ValueType());
 553:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 554:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 555:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 556:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueType>
 557:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_default_n_1
 558:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 559:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size>
 560:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
 561:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_default_n(_ForwardIterator __first, _Size __n)
 562:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
 563:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 564:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
 565:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 566:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __n > 0; --__n, (void) ++__cur)
 567:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur));
 568:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      return __cur;
 569:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 570:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
 571:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 572:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 484


 573:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
 574:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 575:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 576:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 577:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 578:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
 579:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_default_n_1<true>
 580:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 581:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size>
 582:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
 583:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_default_n(_ForwardIterator __first, _Size __n)
 584:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
 585:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  typedef typename iterator_traits<_ForwardIterator>::value_type
 586:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    _ValueType;
 587:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 588:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return std::fill_n(__first, __n, _ValueType());
 589:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 590:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 591:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 592:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_default
 593:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Fills [first, last) with std::distance(first, last) default
 594:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // constructed value_types(s).
 595:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator>
 596:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 597:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_default(_ForwardIterator __first,
 598:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			    _ForwardIterator __last)
 599:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 600:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 601:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType;
 602:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // trivial types can have deleted assignment
 603:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 604:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 605:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       std::__uninitialized_default_1<__is_trivial(_ValueType)
 606:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				     && __assignable>::
 607:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_default(__first, __last);
 608:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 609:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 610:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_default_n
 611:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Fills [first, first + n) with n default constructed value_type(s).
 612:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size>
 613:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 614:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_default_n(_ForwardIterator __first, _Size __n)
 615:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 616:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 617:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType;
 618:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // trivial types can have deleted assignment
 619:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 620:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 621:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __uninitialized_default_n_1<__is_trivial(_ValueType)
 622:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				       && __assignable>::
 623:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_default_n(__first, __n);
 624:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 625:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 626:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 627:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_default_a
 628:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Fills [first, last) with std::distance(first, last) default
 629:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // constructed value_types(s), constructed with the allocator alloc.
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 485


 630:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Allocator>
 631:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     void
 632:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_default_a(_ForwardIterator __first,
 633:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _ForwardIterator __last,
 634:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _Allocator& __alloc)
 635:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 636:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __cur = __first;
 637:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 638:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 639:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 640:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  for (; __cur != __last; ++__cur)
 641:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur));
 642:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 643:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 644:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 645:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__first, __cur, __alloc);
 646:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 647:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 648:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 649:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 650:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp>
 651:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 652:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_default_a(_ForwardIterator __first,
 653:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _ForwardIterator __last,
 654:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      allocator<_Tp>&)
 655:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     { std::__uninitialized_default(__first, __last); }
 656:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 658:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_default_n_a
 659:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Fills [first, first + n) with n default constructed value_types(s),
 660:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // constructed with the allocator alloc.
 661:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Allocator>
 662:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     _ForwardIterator
 663:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_default_n_a(_ForwardIterator __first, _Size __n, 
 664:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				_Allocator& __alloc)
 665:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 666:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __cur = __first;
 667:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 668:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 669:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 670:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  for (; __n > 0; --__n, (void) ++__cur)
 671:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur));
 672:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return __cur;
 673:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 674:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 675:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 676:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__first, __cur, __alloc);
 677:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 678:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 679:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 680:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 681:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Tp>
 682:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 683:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_default_n_a(_ForwardIterator __first, _Size __n, 
 684:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				allocator<_Tp>&)
 685:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     { return std::__uninitialized_default_n(__first, __n); }
 686:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 486


 687:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueType>
 688:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_default_novalue_1
 689:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 690:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator>
 691:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	static void
 692:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_default_novalue(_ForwardIterator __first,
 693:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				 _ForwardIterator __last)
 694:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 695:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 696:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
 697:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 698:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __cur != __last; ++__cur)
 699:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct_novalue(std::__addressof(*__cur));
 700:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 701:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
 702:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 703:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 704:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
 705:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 706:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 707:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 708:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 709:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
 710:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_default_novalue_1<true>
 711:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 712:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator>
 713:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static void
 714:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_default_novalue(_ForwardIterator __first,
 715:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				 _ForwardIterator __last)
 716:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 717:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 718:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 719:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 720:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueType>
 721:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_default_novalue_n_1
 722:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 723:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size>
 724:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	static _ForwardIterator
 725:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_default_novalue_n(_ForwardIterator __first, _Size __n)
 726:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 727:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 728:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
 729:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 730:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __n > 0; --__n, (void) ++__cur)
 731:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct_novalue(std::__addressof(*__cur));
 732:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      return __cur;
 733:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 734:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
 735:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 736:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 737:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
 738:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 739:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 740:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 741:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 742:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
 743:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_default_novalue_n_1<true>
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 487


 744:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 745:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size>
 746:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	static _ForwardIterator
 747:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_default_novalue_n(_ForwardIterator __first, _Size __n)
 748:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{ return std::next(__first, __n); }
 749:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 750:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 751:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_default_novalue
 752:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Fills [first, last) with std::distance(first, last) default-initialized
 753:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // value_types(s).
 754:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator>
 755:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 756:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_default_novalue(_ForwardIterator __first,
 757:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				    _ForwardIterator __last)
 758:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 759:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 760:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType;
 761:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 762:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       std::__uninitialized_default_novalue_1<
 763:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	is_trivially_default_constructible<_ValueType>::value>::
 764:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_default_novalue(__first, __last);
 765:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 766:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 767:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_default_n
 768:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Fills [first, first + n) with n default-initialized value_type(s).
 769:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size>
 770:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 771:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_default_novalue_n(_ForwardIterator __first, _Size __n)
 772:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 773:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 774:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType;
 775:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 776:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __uninitialized_default_novalue_n_1<
 777:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	is_trivially_default_constructible<_ValueType>::value>::
 778:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_default_novalue_n(__first, __n);
 779:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 780:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 781:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _Size,
 782:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _ForwardIterator>
 783:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     _ForwardIterator
 784:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_n(_InputIterator __first, _Size __n,
 785:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   _ForwardIterator __result, input_iterator_tag)
 786:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 787:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __cur = __result;
 788:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 789:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 790:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  for (; __n > 0; --__n, (void) ++__first, ++__cur)
 791:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    std::_Construct(std::__addressof(*__cur), *__first);
 792:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return __cur;
 793:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 794:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 795:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 796:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__result, __cur);
 797:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 798:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 799:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 800:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 488


 801:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _RandomAccessIterator, typename _Size,
 802:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _ForwardIterator>
 803:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 804:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_n(_RandomAccessIterator __first, _Size __n,
 805:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   _ForwardIterator __result,
 806:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   random_access_iterator_tag)
 807:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     { return std::uninitialized_copy(__first, __first + __n, __result); }
 808:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 809:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _Size,
 810:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _ForwardIterator>
 811:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     pair<_InputIterator, _ForwardIterator>
 812:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_n_pair(_InputIterator __first, _Size __n,
 813:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   _ForwardIterator __result, input_iterator_tag)
 814:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 815:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __cur = __result;
 816:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 817:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 818:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  for (; __n > 0; --__n, (void) ++__first, ++__cur)
 819:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    std::_Construct(std::__addressof(*__cur), *__first);
 820:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return {__first, __cur};
 821:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 822:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 823:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 824:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__result, __cur);
 825:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 826:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 827:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 828:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 829:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _RandomAccessIterator, typename _Size,
 830:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _ForwardIterator>
 831:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline pair<_RandomAccessIterator, _ForwardIterator>
 832:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_n_pair(_RandomAccessIterator __first, _Size __n,
 833:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   _ForwardIterator __result,
 834:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   random_access_iterator_tag)
 835:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 836:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       auto __second_res = uninitialized_copy(__first, __first + __n, __result);
 837:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       auto __first_res = std::next(__first, __n);
 838:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return {__first_res, __second_res};
 839:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 840:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 841:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @endcond
 842:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 843:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 844:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Copies the range [first,first+n) into result.
 845:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  An input iterator.
 846:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __n      The number of elements to copy.
 847:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __result An output iterator.
 848:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return  __result + __n
 849:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *
 850:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  Like copy_n(), but does not require an initialized output range.
 851:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 852:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _Size, typename _ForwardIterator>
 853:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 854:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_copy_n(_InputIterator __first, _Size __n,
 855:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			 _ForwardIterator __result)
 856:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     { return std::__uninitialized_copy_n(__first, __n, __result,
 857:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 					 std::__iterator_category(__first)); }
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 489


 858:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 859:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
 860:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _Size, typename _ForwardIterator>
 861:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline pair<_InputIterator, _ForwardIterator>
 862:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_n_pair(_InputIterator __first, _Size __n,
 863:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _ForwardIterator __result)
 864:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 865:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return
 866:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	std::__uninitialized_copy_n_pair(__first, __n, __result,
 867:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 					 std::__iterator_category(__first));
 868:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 869:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @endcond
 870:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
 871:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 872:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus >= 201703L
 873:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** # define __cpp_lib_raw_memory_algorithms 201606L
 874:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 875:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 876:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Default-initializes objects in the range [first,last).
 877:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  A forward iterator.
 878:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __last   A forward iterator.
 879:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 880:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template <typename _ForwardIterator>
 881:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 882:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_default_construct(_ForwardIterator __first,
 883:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				    _ForwardIterator __last)
 884:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 885:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __uninitialized_default_novalue(__first, __last);
 886:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 887:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 888:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 889:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Default-initializes objects in the range [first,first+count).
 890:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  A forward iterator.
 891:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __count  The number of objects to construct.
 892:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return   __first + __count
 893:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 894:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template <typename _ForwardIterator, typename _Size>
 895:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 896:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_default_construct_n(_ForwardIterator __first, _Size __count)
 897:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 898:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __uninitialized_default_novalue_n(__first, __count);
 899:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 900:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 901:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 902:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Value-initializes objects in the range [first,last).
 903:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  A forward iterator.
 904:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __last   A forward iterator.
 905:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 906:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template <typename _ForwardIterator>
 907:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 908:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_value_construct(_ForwardIterator __first,
 909:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				  _ForwardIterator __last)
 910:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 911:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __uninitialized_default(__first, __last);
 912:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 913:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 914:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 490


 915:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Value-initializes objects in the range [first,first+count).
 916:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  A forward iterator.
 917:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __count  The number of objects to construct.
 918:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return   __result + __count
 919:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 920:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template <typename _ForwardIterator, typename _Size>
 921:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 922:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_value_construct_n(_ForwardIterator __first, _Size __count)
 923:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 924:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __uninitialized_default_n(__first, __count);
 925:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 926:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 927:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 928:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Move-construct from the range [first,last) into result.
 929:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  An input iterator.
 930:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __last   An input iterator.
 931:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __result An output iterator.
 932:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return   __result + (__first - __last)
 933:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 934:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template <typename _InputIterator, typename _ForwardIterator>
 935:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 936:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_move(_InputIterator __first, _InputIterator __last,
 937:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		       _ForwardIterator __result)
 938:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 939:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return std::uninitialized_copy
 940:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	(_GLIBCXX_MAKE_MOVE_ITERATOR(__first),
 941:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	 _GLIBCXX_MAKE_MOVE_ITERATOR(__last), __result);
 942:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 943:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 944:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 945:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Move-construct from the range [first,first+count) into result.
 946:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  An input iterator.
 947:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __count  The number of objects to initialize.
 948:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __result An output iterator.
 949:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return  __result + __count
 950:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 951:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template <typename _InputIterator, typename _Size, typename _ForwardIterator>
 952:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline pair<_InputIterator, _ForwardIterator>
 953:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_move_n(_InputIterator __first, _Size __count,
 954:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			 _ForwardIterator __result)
 955:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 956:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       auto __res = std::__uninitialized_copy_n_pair
 957:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	(_GLIBCXX_MAKE_MOVE_ITERATOR(__first),
 958:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	 __count, __result);
 959:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return {__res.first.base(), __res.second};
 960:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 961:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif // C++17
 962:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 963:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus >= 201103L
 964:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
 965:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 966:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _Tp, typename _Up, typename _Allocator>
 967:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 968:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __relocate_object_a(_Tp* __restrict __dest, _Up* __restrict __orig,
 969:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			_Allocator& __alloc)
 970:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     noexcept(noexcept(std::allocator_traits<_Allocator>::construct(__alloc,
 971:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			 __dest, std::move(*__orig)))
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 491


 972:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	     && noexcept(std::allocator_traits<_Allocator>::destroy(
 973:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			    __alloc, std::__addressof(*__orig))))
 974:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 975:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef std::allocator_traits<_Allocator> __traits;
 976:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __traits::construct(__alloc, __dest, std::move(*__orig));
 977:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __traits::destroy(__alloc, std::__addressof(*__orig));
 978:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 979:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 980:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // This class may be specialized for specific types.
 981:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Also known as is_trivially_relocatable.
 982:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _Tp, typename = void>
 983:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __is_bitwise_relocatable
 984:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     : is_trivial<_Tp> { };
 985:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 986:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template <typename _Tp, typename _Up>
 987:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline __enable_if_t<std::__is_bitwise_relocatable<_Tp>::value, _Tp*>
 988:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __relocate_a_1(_Tp* __first, _Tp* __last,
 989:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		   _Tp* __result, allocator<_Up>&) noexcept
 990:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 991:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       ptrdiff_t __count = __last - __first;
 992:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       if (__count > 0)
 10645              		.loc 35 992 7 view .LVU2397
 10646 0038 002D     		cmp	r5, #0
 10647              	.LBE6459:
 10648              	.LBE6458:
 10649              	.LBE6457:
 10650              	.LBE6456:
 10651              	.LBE6455:
 10652              	.LBE6454:
 10653              	.LBB6475:
 10654              	.LBB6452:
 10655              	.LBB6450:
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10656              		.loc 16 150 4 view .LVU2398
 10657 003a 4BF80530 		str	r3, [fp, r5]
 10658              	.LVL517:
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 10659              		.loc 16 150 4 view .LVU2399
 10660              	.LBE6450:
 10661              	.LBE6452:
 10662              	.LBE6475:
 10663              	.LBB6476:
 10664              	.LBI6454:
 465:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  _Tp_alloc_type& __alloc) noexcept
 10665              		.loc 33 465 7 is_stmt 1 view .LVU2400
 10666              	.LBB6472:
 10667              	.LBB6469:
 10668              	.LBI6456:
 453:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		     _Tp_alloc_type& __alloc, true_type) noexcept
 10669              		.loc 33 453 7 view .LVU2401
 10670              	.LBB6466:
 10671              	.LBI6457:
 993:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 994:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __result + __count;
 995:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 996:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 997:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template <typename _InputIterator, typename _ForwardIterator,
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 492


 998:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    typename _Allocator>
 999:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
1000:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __relocate_a_1(_InputIterator __first, _InputIterator __last,
1001:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		   _ForwardIterator __result, _Allocator& __alloc)
1002:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     noexcept(noexcept(std::__relocate_object_a(std::addressof(*__result),
1003:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 					       std::addressof(*__first),
1004:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 					       __alloc)))
1005:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
1006:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_InputIterator>::value_type
1007:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType;
1008:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
1009:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType2;
1010:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       static_assert(std::is_same<_ValueType, _ValueType2>::value,
1011:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  "relocation is only possible for values of the same type");
1012:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __cur = __result;
1013:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       for (; __first != __last; ++__first, (void)++__cur)
1014:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
1015:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				 std::__addressof(*__first), __alloc);
1016:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __cur;
1017:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
1018:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
1019:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template <typename _InputIterator, typename _ForwardIterator,
1020:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    typename _Allocator>
1021:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
1022:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __relocate_a(_InputIterator __first, _InputIterator __last,
 10672              		.loc 35 1022 5 view .LVU2402
 10673              	.LBB6463:
 10674              	.LBI6458:
 988:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		   _Tp* __result, allocator<_Up>&) noexcept
 10675              		.loc 35 988 5 view .LVU2403
 10676              	.LBB6460:
 992:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 10677              		.loc 35 992 7 is_stmt 0 view .LVU2404
 10678 003e 24DC     		bgt	.L315
 10679              	.LVL518:
 992:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 10680              		.loc 35 992 7 view .LVU2405
 10681              	.LBE6460:
 10682              	.LBE6463:
 10683              	.LBE6466:
 10684              	.LBE6469:
 10685              	.LBE6472:
 10686              	.LBE6476:
 10687              	.LBB6477:
 10688              	.LBB6478:
 10689              	.LBB6479:
 10690              	.LBB6480:
 10691              	.LBB6481:
 10692              	.LBB6482:
 991:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       if (__count > 0)
 10693              		.loc 35 991 34 view .LVU2406
 10694 0040 A9EB0709 		sub	r9, r9, r7
 10695              	.LVL519:
 991:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       if (__count > 0)
 10696              		.loc 35 991 34 view .LVU2407
 10697              	.LBE6482:
 10698              	.LBE6481:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 493


 10699              	.LBE6480:
 10700              	.LBE6479:
 10701              	.LBE6478:
 10702              	.LBE6477:
 427:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_realloc_insert(iterator __position, _Args&&... __args)
 428:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 429:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 430:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     void
 431:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 432:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     _M_realloc_insert(iterator __position, const _Tp& __x)
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 434:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 435:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       const size_type __len =
 436:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	_M_check_len(size_type(1), "vector::_M_realloc_insert");
 437:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       pointer __old_start = this->_M_impl._M_start;
 438:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       pointer __old_finish = this->_M_impl._M_finish;
 439:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       const size_type __elems_before = __position - begin();
 440:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       pointer __new_start(this->_M_allocate(__len));
 441:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       pointer __new_finish(__new_start);
 442:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       __try
 443:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
 444:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  // The order of the three operations is dictated by the C++11
 445:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  // case, where the moves could alter a new element belonging
 446:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  // to the existing vector.  This is an issue only for callers
 447:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  // taking the element by lvalue ref (see last bullet of C++11
 448:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  // [res.on.arguments]).
 449:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _Alloc_traits::construct(this->_M_impl,
 450:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				   __new_start + __elems_before,
 451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 452:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				   std::forward<_Args>(__args)...);
 453:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 454:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				   __x);
 455:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 456:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  __new_finish = pointer();
 457:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 458:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 459:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if _GLIBCXX17_CONSTEXPR (_S_use_relocate())
 460:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 461:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      __new_finish = _S_relocate(__old_start, __position.base(),
 462:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					 __new_start, _M_get_Tp_allocator());
 463:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 464:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      ++__new_finish;
 10703              		.loc 32 464 8 view .LVU2408
 10704 0044 0435     		adds	r5, r5, #4
 10705              	.LVL520:
 10706              	.LBB6518:
 10707              	.LBB6511:
 10708              	.LBB6504:
 10709              	.LBB6497:
 10710              	.LBB6490:
 10711              	.LBB6483:
 992:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 10712              		.loc 35 992 7 view .LVU2409
 10713 0046 B9F1000F 		cmp	r9, #0
 10714              	.LBE6483:
 10715              	.LBE6490:
 10716              	.LBE6497:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 494


 10717              	.LBE6504:
 10718              	.LBE6511:
 10719              	.LBE6518:
 10720              		.loc 32 464 8 view .LVU2410
 10721 004a 5D44     		add	r5, r5, fp
 10722              	.LVL521:
 10723              	.LBB6519:
 10724              	.LBI6477:
 465:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  _Tp_alloc_type& __alloc) noexcept
 10725              		.loc 33 465 7 is_stmt 1 view .LVU2411
 10726              	.LBB6512:
 10727              	.LBB6505:
 10728              	.LBI6479:
 453:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		     _Tp_alloc_type& __alloc, true_type) noexcept
 10729              		.loc 33 453 7 view .LVU2412
 10730              	.LBB6498:
 10731              	.LBI6480:
 10732              		.loc 35 1022 5 view .LVU2413
 10733              	.LBB6491:
 10734              	.LBI6481:
 988:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		   _Tp* __result, allocator<_Up>&) noexcept
 10735              		.loc 35 988 5 view .LVU2414
 10736              	.LBB6484:
 992:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 10737              		.loc 35 992 7 is_stmt 0 view .LVU2415
 10738 004c 13DC     		bgt	.L300
 994:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 10739              		.loc 35 994 25 view .LVU2416
 10740 004e 4D44     		add	r5, r5, r9
 10741              	.LVL522:
 994:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 10742              		.loc 35 994 25 view .LVU2417
 10743              	.LBE6484:
 10744              	.LBE6491:
 10745              	.LBE6498:
 10746              	.LBE6505:
 10747              	.LBE6512:
 10748              	.LBE6519:
 10749              	.LBB6520:
 10750              	.LBI6520:
 350:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 10751              		.loc 33 350 7 is_stmt 1 view .LVU2418
 10752              	.LBB6521:
 353:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 10753              		.loc 33 353 2 is_stmt 0 view .LVU2419
 10754 0050 B8F1000F 		cmp	r8, #0
 10755 0054 04D1     		bne	.L316
 10756              	.LVL523:
 10757              	.L303:
 353:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 10758              		.loc 33 353 2 view .LVU2420
 10759              	.LBE6521:
 10760              	.LBE6520:
 465:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 466:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      __new_finish = _S_relocate(__position.base(), __old_finish,
 467:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					 __new_finish, _M_get_Tp_allocator());
 468:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 495


 469:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  else
 470:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 471:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 472:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      __new_finish
 473:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		= std::__uninitialized_move_if_noexcept_a
 474:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		(__old_start, __position.base(),
 475:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		 __new_start, _M_get_Tp_allocator());
 476:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 477:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      ++__new_finish;
 478:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 479:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      __new_finish
 480:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		= std::__uninitialized_move_if_noexcept_a
 481:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		(__position.base(), __old_finish,
 482:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		 __new_finish, _M_get_Tp_allocator());
 483:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 484:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
 485:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       __catch(...)
 486:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
 487:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if (!__new_finish)
 488:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _Alloc_traits::destroy(this->_M_impl,
 489:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				   __new_start + __elems_before);
 490:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  else
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    std::_Destroy(__new_start, __new_finish, _M_get_Tp_allocator());
 492:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_deallocate(__new_start, __len);
 493:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  __throw_exception_again;
 494:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
 495:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 496:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if _GLIBCXX17_CONSTEXPR (!_S_use_relocate())
 497:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 498:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	std::_Destroy(__old_start, __old_finish, _M_get_Tp_allocator());
 499:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _GLIBCXX_ASAN_ANNOTATE_REINIT;
 500:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_deallocate(__old_start,
 501:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    this->_M_impl._M_end_of_storage - __old_start);
 502:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_start = __new_start;
 503:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_finish = __new_finish;
 504:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_end_of_storage = __new_start + __len;
 10761              		.loc 32 504 39 view .LVU2421
 10762 0056 B460     		str	r4, [r6, #8]
 503:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_end_of_storage = __new_start + __len;
 10763              		.loc 32 503 31 view .LVU2422
 10764 0058 C6E900B5 		strd	fp, r5, [r6]
 505:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 10765              		.loc 32 505 5 view .LVU2423
 10766 005c BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 10767              	.LVL524:
 10768              	.L316:
 501:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_start = __new_start;
 10769              		.loc 32 501 39 view .LVU2424
 10770 0060 B168     		ldr	r1, [r6, #8]
 10771 0062 A1EB0801 		sub	r1, r1, r8
 10772              	.L305:
 10773              	.LVL525:
 10774              	.LBB6528:
 10775              	.LBB6526:
 10776              	.LBB6522:
 10777              	.LBI6522:
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 496


 10778              		.loc 15 491 7 is_stmt 1 view .LVU2425
 10779              	.LBB6523:
 10780              	.LBB6524:
 10781              	.LBI6524:
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 10782              		.loc 16 120 7 view .LVU2426
 10783              	.LBB6525:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 10784              		.loc 16 133 19 is_stmt 0 view .LVU2427
 10785 0066 4046     		mov	r0, r8
 10786 0068 FFF7FEFF 		bl	_ZdlPvj
 10787              	.LVL526:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 10788              		.loc 16 133 19 view .LVU2428
 10789              	.LBE6525:
 10790              	.LBE6524:
 10791              	.LBE6523:
 10792              	.LBE6522:
 10793              	.LBE6526:
 10794              	.LBE6528:
 504:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 10795              		.loc 32 504 39 view .LVU2429
 10796 006c B460     		str	r4, [r6, #8]
 503:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_end_of_storage = __new_start + __len;
 10797              		.loc 32 503 31 view .LVU2430
 10798 006e C6E900B5 		strd	fp, r5, [r6]
 10799              		.loc 32 505 5 view .LVU2431
 10800 0072 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 10801              	.LVL527:
 10802              	.L300:
 10803              	.LBB6529:
 10804              	.LBB6513:
 10805              	.LBB6506:
 10806              	.LBB6499:
 10807              	.LBB6492:
 10808              	.LBB6485:
 993:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __result + __count;
 10809              		.loc 35 993 19 view .LVU2432
 10810 0076 2846     		mov	r0, r5
 10811 0078 3946     		mov	r1, r7
 10812 007a 4A46     		mov	r2, r9
 994:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 10813              		.loc 35 994 25 view .LVU2433
 10814 007c 4D44     		add	r5, r5, r9
 10815              	.LVL528:
 993:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __result + __count;
 10816              		.loc 35 993 19 view .LVU2434
 10817 007e FFF7FEFF 		bl	memcpy
 10818              	.LVL529:
 993:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __result + __count;
 10819              		.loc 35 993 19 view .LVU2435
 10820              	.LBE6485:
 10821              	.LBE6492:
 10822              	.LBE6499:
 10823              	.LBE6506:
 10824              	.LBE6513:
 10825              	.LBE6529:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 497


 10826              	.LBB6530:
 350:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 10827              		.loc 33 350 7 is_stmt 1 view .LVU2436
 10828              	.LBB6527:
 353:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 10829              		.loc 33 353 2 is_stmt 0 view .LVU2437
 10830 0082 B8F1000F 		cmp	r8, #0
 10831 0086 E6D0     		beq	.L303
 10832 0088 EAE7     		b	.L316
 10833              	.LVL530:
 10834              	.L315:
 353:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 10835              		.loc 33 353 2 view .LVU2438
 10836              	.LBE6527:
 10837              	.LBE6530:
 10838              	.LBB6531:
 10839              	.LBB6514:
 10840              	.LBB6507:
 10841              	.LBB6500:
 10842              	.LBB6493:
 10843              	.LBB6486:
 991:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       if (__count > 0)
 10844              		.loc 35 991 34 view .LVU2439
 10845 008a A9EB0709 		sub	r9, r9, r7
 10846              	.LVL531:
 991:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       if (__count > 0)
 10847              		.loc 35 991 34 view .LVU2440
 10848              	.LBE6486:
 10849              	.LBE6493:
 10850              	.LBE6500:
 10851              	.LBE6507:
 10852              	.LBE6514:
 10853              	.LBE6531:
 10854              	.LBB6532:
 10855              	.LBB6473:
 10856              	.LBB6470:
 10857              	.LBB6467:
 10858              	.LBB6464:
 10859              	.LBB6461:
 993:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __result + __count;
 10860              		.loc 35 993 19 view .LVU2441
 10861 008e 2A46     		mov	r2, r5
 10862 0090 4146     		mov	r1, r8
 10863 0092 5846     		mov	r0, fp
 10864              	.LBE6461:
 10865              	.LBE6464:
 10866              	.LBE6467:
 10867              	.LBE6470:
 10868              	.LBE6473:
 10869              	.LBE6532:
 464:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 10870              		.loc 32 464 8 view .LVU2442
 10871 0094 0435     		adds	r5, r5, #4
 10872              	.LVL532:
 10873              	.LBB6533:
 10874              	.LBB6474:
 10875              	.LBB6471:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 498


 10876              	.LBB6468:
 10877              	.LBB6465:
 10878              	.LBB6462:
 993:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __result + __count;
 10879              		.loc 35 993 19 view .LVU2443
 10880 0096 FFF7FEFF 		bl	memmove
 10881              	.LVL533:
 993:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __result + __count;
 10882              		.loc 35 993 19 view .LVU2444
 10883              	.LBE6462:
 10884              	.LBE6465:
 10885              	.LBE6468:
 10886              	.LBE6471:
 10887              	.LBE6474:
 10888              	.LBE6533:
 10889              	.LBB6534:
 10890              	.LBB6515:
 10891              	.LBB6508:
 10892              	.LBB6501:
 10893              	.LBB6494:
 10894              	.LBB6487:
 992:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 10895              		.loc 35 992 7 view .LVU2445
 10896 009a B9F1000F 		cmp	r9, #0
 10897              	.LBE6487:
 10898              	.LBE6494:
 10899              	.LBE6501:
 10900              	.LBE6508:
 10901              	.LBE6515:
 10902              	.LBE6534:
 464:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 10903              		.loc 32 464 8 view .LVU2446
 10904 009e 5D44     		add	r5, r5, fp
 10905              	.LVL534:
 10906              	.LBB6535:
 465:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  _Tp_alloc_type& __alloc) noexcept
 10907              		.loc 33 465 7 is_stmt 1 view .LVU2447
 10908              	.LBB6516:
 10909              	.LBB6509:
 453:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		     _Tp_alloc_type& __alloc, true_type) noexcept
 10910              		.loc 33 453 7 view .LVU2448
 10911              	.LBB6502:
 10912              		.loc 35 1022 5 view .LVU2449
 10913              	.LBB6495:
 988:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		   _Tp* __result, allocator<_Up>&) noexcept
 10914              		.loc 35 988 5 view .LVU2450
 10915              	.LBB6488:
 992:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 10916              		.loc 35 992 7 is_stmt 0 view .LVU2451
 10917 00a0 E9DC     		bgt	.L300
 10918              	.LBE6488:
 10919              	.LBE6495:
 10920              	.LBE6502:
 10921              	.LBE6509:
 10922              	.LBE6516:
 10923              	.LBE6535:
 501:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_start = __new_start;
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 499


 10924              		.loc 32 501 39 view .LVU2452
 10925 00a2 B168     		ldr	r1, [r6, #8]
 10926              	.LBB6536:
 10927              	.LBB6517:
 10928              	.LBB6510:
 10929              	.LBB6503:
 10930              	.LBB6496:
 10931              	.LBB6489:
 994:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 10932              		.loc 35 994 25 view .LVU2453
 10933 00a4 4D44     		add	r5, r5, r9
 10934              	.LVL535:
 994:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 10935              		.loc 35 994 25 view .LVU2454
 10936              	.LBE6489:
 10937              	.LBE6496:
 10938              	.LBE6503:
 10939              	.LBE6510:
 10940              	.LBE6517:
 10941              	.LBE6536:
 501:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_start = __new_start;
 10942              		.loc 32 501 39 view .LVU2455
 10943 00a6 A1EB0801 		sub	r1, r1, r8
 10944              	.LVL536:
 10945              	.LBB6537:
 350:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 10946              		.loc 33 350 7 is_stmt 1 view .LVU2456
 10947 00aa DCE7     		b	.L305
 10948              	.LVL537:
 10949              	.L314:
 350:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 10950              		.loc 33 350 7 is_stmt 0 view .LVU2457
 10951              	.LBE6537:
 10952              	.LBB6538:
 10953              	.LBB6445:
 10954              	.LBB6440:
 10955              	.LBB6441:
 10956              	.LBB6442:
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 10957              		.loc 16 115 41 view .LVU2458
 10958 00ac 8C42     		cmp	r4, r1
 10959 00ae 28BF     		it	cs
 10960 00b0 0C46     		movcs	r4, r1
 10961              	.LVL538:
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 10962              		.loc 16 115 41 view .LVU2459
 10963 00b2 A400     		lsls	r4, r4, #2
 10964              	.LVL539:
 10965              	.L297:
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 10966              		.loc 16 115 41 view .LVU2460
 10967              	.LBE6442:
 10968              	.LBE6441:
 10969              	.LBI6440:
 459:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 10970              		.loc 15 459 7 is_stmt 1 view .LVU2461
 10971              	.LBB6444:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 500


 10972              	.LBI6441:
 103:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 10973              		.loc 16 103 7 view .LVU2462
 10974              	.LBB6443:
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 10975              		.loc 16 115 41 is_stmt 0 view .LVU2463
 10976 00b4 2046     		mov	r0, r4
 10977              	.LVL540:
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 10978              		.loc 16 115 41 view .LVU2464
 10979 00b6 FFF7FEFF 		bl	_Znwj
 10980              	.LVL541:
 10981 00ba 8346     		mov	fp, r0
 10982              	.LVL542:
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 10983              		.loc 16 115 41 view .LVU2465
 10984              	.LBE6443:
 10985              	.LBE6444:
 10986              	.LBE6440:
 10987              	.LBE6445:
 10988              	.LBE6538:
 504:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 10989              		.loc 32 504 53 view .LVU2466
 10990 00bc 0444     		add	r4, r4, r0
 10991              	.LBB6539:
 10992              	.LBB6446:
 10993 00be B9E7     		b	.L304
 10994              	.LVL543:
 10995              	.L295:
 504:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 10996              		.loc 32 504 53 view .LVU2467
 10997              	.LBE6446:
 10998              	.LBE6539:
 10999              	.LBB6540:
 811:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 11000              		.loc 33 811 7 is_stmt 1 view .LVU2468
 11001              	.LBB6436:
 978:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 11002              		.loc 34 978 7 view .LVU2469
 978:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 11003              		.loc 34 978 7 is_stmt 0 view .LVU2470
 11004              	.LBE6436:
 11005              	.LBE6540:
 11006              	.LBB6541:
1202:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
 11007              		.loc 34 1202 5 is_stmt 1 view .LVU2471
1202:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
 11008              		.loc 34 1202 5 is_stmt 0 view .LVU2472
 11009              	.LBE6541:
 11010              	.LBB6542:
 343:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 11011              		.loc 33 343 7 is_stmt 1 view .LVU2473
 11012              	.LBE6542:
 11013              	.LBB6543:
 11014              	.LBB6433:
 11015              		.loc 34 1205 27 is_stmt 0 view .LVU2474
 11016 00c0 024C     		ldr	r4, .L317
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 501


 11017 00c2 F7E7     		b	.L297
 11018              	.LVL544:
 11019              	.L313:
 11020              		.loc 34 1205 27 view .LVU2475
 11021              	.LBE6433:
 11022              	.LBE6543:
 11023              	.LBB6544:
 11024              	.LBB6429:
1759:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_length_error(__N(__s));
 11025              		.loc 33 1759 24 view .LVU2476
 11026 00c4 0248     		ldr	r0, .L317+4
 11027              	.LVL545:
 11028              		.loc 33 1759 24 view .LVU2477
 11029 00c6 FFF7FEFF 		bl	_ZSt20__throw_length_errorPKc
 11030              	.LVL546:
 11031              	.L318:
 11032 00ca 00BF     		.align	2
 11033              	.L317:
 11034 00cc FCFFFF7F 		.word	2147483644
 11035 00d0 00000000 		.word	.LC4
 11036              	.LBE6429:
 11037              	.LBE6544:
 11038              		.cfi_endproc
 11039              	.LFE6079:
 11041              		.section	.text.startup.main,"ax",%progbits
 11042              		.align	1
 11043              		.p2align 2,,3
 11044              		.global	main
 11045              		.syntax unified
 11046              		.thumb
 11047              		.thumb_func
 11048              		.fpu fpv5-d16
 11050              	main:
 11051              	.LFB5483:
 154:src/main.cpp  **** 
 155:src/main.cpp  **** 
 156:src/main.cpp  **** 
 157:src/main.cpp  **** int main(void)
 158:src/main.cpp  **** {
 11052              		.loc 18 158 1 is_stmt 1 view -0
 11053              		.cfi_startproc
 11054              		@ args = 0, pretend = 0, frame = 16
 11055              		@ frame_needed = 0, uses_anonymous_args = 0
 159:src/main.cpp  **** 	hw.Init();
 11056              		.loc 18 159 2 view .LVU2479
 158:src/main.cpp  **** 	hw.Init();
 11057              		.loc 18 158 1 is_stmt 0 view .LVU2480
 11058 0000 70B5     		push	{r4, r5, r6, lr}
 11059              		.cfi_def_cfa_offset 16
 11060              		.cfi_offset 4, -16
 11061              		.cfi_offset 5, -12
 11062              		.cfi_offset 6, -8
 11063              		.cfi_offset 14, -4
 11064 0002 2DED028B 		vpush.64	{d8}
 11065              		.cfi_def_cfa_offset 24
 11066              		.cfi_offset 80, -24
 11067              		.cfi_offset 81, -20
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 502


 11068 0006 9FED308A 		vldr.32	s16, .L334	@ int
 11069 000a 84B0     		sub	sp, sp, #16
 11070              		.cfi_def_cfa_offset 40
 11071              		.loc 18 159 9 view .LVU2481
 11072 000c 2F48     		ldr	r0, .L334+4
 11073 000e 18EE101A 		vmov	r1, s16	@ int
 158:src/main.cpp  **** 	hw.Init();
 11074              		.loc 18 158 1 view .LVU2482
 11075 0012 18EE105A 		vmov	r5, s16	@ int
 11076              		.loc 18 159 9 view .LVU2483
 11077 0016 FFF7FEFF 		bl	_ZN5daisy9DaisySeed4InitEb
 11078              	.LVL547:
 160:src/main.cpp  **** 	hw.SetAudioBlockSize(4); // number of samples handled per callback
 11079              		.loc 18 160 2 is_stmt 1 view .LVU2484
 11080              		.loc 18 160 22 is_stmt 0 view .LVU2485
 11081 001a 0421     		movs	r1, #4
 11082 001c 2B48     		ldr	r0, .L334+4
 11083 001e FFF7FEFF 		bl	_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
 11084              	.LVL548:
 161:src/main.cpp  **** 	hw.SetAudioSampleRate(SaiHandle::Config::SampleRate::SAI_48KHZ);
 11085              		.loc 18 161 2 is_stmt 1 view .LVU2486
 11086              		.loc 18 161 23 is_stmt 0 view .LVU2487
 11087 0022 0321     		movs	r1, #3
 11088 0024 2948     		ldr	r0, .L334+4
 11089 0026 FFF7FEFF 		bl	_ZN5daisy9DaisySeed18SetAudioSampleRateENS_9SaiHandle6Config10SampleRateE
 11090              	.LVL549:
 162:src/main.cpp  **** 	hw.StartAudio(AudioCallback); // callback in AudioHandler.h
 11091              		.loc 18 162 2 is_stmt 1 view .LVU2488
 11092              		.loc 18 162 15 is_stmt 0 view .LVU2489
 11093 002a 2949     		ldr	r1, .L334+8
 11094 002c 2748     		ldr	r0, .L334+4
 11095 002e FFF7FEFF 		bl	_ZN5daisy9DaisySeed10StartAudioEPFvPKPKfPPfjE
 11096              	.LVL550:
 163:src/main.cpp  **** 	//hw.StartLog(true);
 164:src/main.cpp  **** 	UART_Init(usart1);
 11097              		.loc 18 164 2 is_stmt 1 view .LVU2490
 11098              		.loc 18 164 11 is_stmt 0 view .LVU2491
 11099 0032 2848     		ldr	r0, .L334+12
 11100 0034 FFF7FEFF 		bl	_Z9UART_InitRN5daisy11UartHandlerE
 11101              	.LVL551:
 165:src/main.cpp  **** 
 166:src/main.cpp  **** 	float fs = hw.AudioSampleRate();
 11102              		.loc 18 166 2 is_stmt 1 view .LVU2492
 11103              		.loc 18 166 31 is_stmt 0 view .LVU2493
 11104 0038 2448     		ldr	r0, .L334+4
 11105 003a FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 11106              	.LVL552:
 167:src/main.cpp  **** 
 168:src/main.cpp  ****     //daisysp::Autowah* _autowah = new daisysp::Autowah;
 169:src/main.cpp  **** 	//daisysp::Overdrive* _overdrive = new daisysp::Overdrive;
 170:src/main.cpp  **** 
 171:src/main.cpp  ****     _autowah.Init(fs);
 11107              		.loc 18 171 5 is_stmt 1 view .LVU2494
 11108 003e 264E     		ldr	r6, .L334+16
 11109              		.loc 18 171 18 is_stmt 0 view .LVU2495
 11110 0040 2648     		ldr	r0, .L334+20
 11111 0042 FFF7FEFF 		bl	_ZN7daisysp7Autowah4InitEf
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 503


 11112              	.LVL553:
 172:src/main.cpp  **** 	_overdrive.Init();
 11113              		.loc 18 172 2 is_stmt 1 view .LVU2496
 11114              		.loc 18 172 17 is_stmt 0 view .LVU2497
 11115 0046 2648     		ldr	r0, .L334+24
 11116 0048 FFF7FEFF 		bl	_ZN7daisysp9Overdrive4InitEv
 11117              	.LVL554:
 173:src/main.cpp  **** 	//_overdrive->Init();
 174:src/main.cpp  **** 
 175:src/main.cpp  **** 
 176:src/main.cpp  **** 	// param p[10];
 177:src/main.cpp  **** 	// p[0].label = "Pot1";
 178:src/main.cpp  **** 	// p[0].val = 1.0f;
 179:src/main.cpp  **** 	// p[0].type = param_type::kPot;
 180:src/main.cpp  **** 	// p[0].index = 1;
 181:src/main.cpp  **** 	// parameterMap.insert(p[0]);
 182:src/main.cpp  **** 	// parameterMap.setValueAtIndex(0.4f, p[0].index);
 183:src/main.cpp  **** 	// float test = 1.2f;
 184:src/main.cpp  **** 	//hw.PrintLine("%f", test);
 185:src/main.cpp  **** 	//hw.PrintLine("INIT %u %u", p[0].index, parameterMap.getValue(p[0].index));	
 186:src/main.cpp  **** 
 187:src/main.cpp  **** 	// parameterMap.insert(p[4]);
 188:src/main.cpp  **** 	// for (int i = 0; i < 10; i++) {
 189:src/main.cpp  **** 	// 	parameterMap.insert(p[i]);
 190:src/main.cpp  **** 	// 	hw.PrintLine("INIT %u %u", i, parameterMap.getValue(i));
 191:src/main.cpp  **** 	// }
 192:src/main.cpp  **** 
 193:src/main.cpp  **** 
 194:src/main.cpp  **** 		
 195:src/main.cpp  **** 
 196:src/main.cpp  **** 	//TIM1_Init(htim1);
 197:src/main.cpp  **** 	//std::vector<uint32_t> paramBuf;
 198:src/main.cpp  **** 	//ParameterTree pt;
 199:src/main.cpp  **** 	//osThreadDef(Task3, Task1_Init, osPriorityBelowNormal, 128);
 200:src/main.cpp  **** 
 201:src/main.cpp  **** 	//osKernelInitialize();
 202:src/main.cpp  **** 	//thread1_id = osThreadCreate(osThread(thread1), NULL);
 203:src/main.cpp  **** 	//osThreadNew(Task1, NULL, &threadAttr_thread1);
 204:src/main.cpp  **** 	//osKernelStart();
 205:src/main.cpp  **** 
 206:src/main.cpp  **** 
 207:src/main.cpp  **** 	std::vector<uint32_t> param_buffer;
 11118              		.loc 18 207 2 is_stmt 1 view .LVU2498
 11119              	.LBB6682:
 11120              	.LBI6682:
 487:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 11121              		.loc 33 487 7 view .LVU2499
 11122              	.LBB6683:
 11123              	.LBB6684:
 11124              	.LBI6684:
 288:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 11125              		.loc 33 288 7 view .LVU2500
 11126              	.LBB6685:
 11127              	.LBI6685:
 131:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    is_nothrow_default_constructible<_Tp_alloc_type>::value)
 11128              		.loc 33 131 2 view .LVU2501
 11129              	.LBB6686:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 504


 11130              	.LBI6686:
 144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 11131              		.loc 17 144 7 view .LVU2502
 11132              	.LBB6687:
 11133              	.LBI6687:
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11134              		.loc 16 79 7 view .LVU2503
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11135              		.loc 16 79 7 is_stmt 0 view .LVU2504
 11136              	.LBE6687:
 11137              	.LBE6686:
 11138              	.LBB6688:
 11139              	.LBI6688:
  97:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 11140              		.loc 33 97 2 is_stmt 1 view .LVU2505
 11141              	.LBB6689:
 11142              	.LBB6690:
  98:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 11143              		.loc 33 98 47 is_stmt 0 view .LVU2506
 11144 004c 8DED018A 		vstr.32	s16, [sp, #4]	@ int
 11145 0050 8DED028A 		vstr.32	s16, [sp, #8]	@ int
 11146 0054 8DED038A 		vstr.32	s16, [sp, #12]	@ int
 11147              	.LVL555:
 11148              	.L320:
  98:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 11149              		.loc 33 98 47 view .LVU2507
 11150              	.LBE6690:
 11151              	.LBE6689:
 11152              	.LBE6688:
 11153              	.LBE6685:
 11154              	.LBE6684:
 11155              	.LBE6683:
 11156              	.LBE6682:
 208:src/main.cpp  **** 
 209:src/main.cpp  **** 	while (true) {
 11157              		.loc 18 209 2 is_stmt 1 view .LVU2508
 11158              	.LBB6691:
 210:src/main.cpp  **** 
 211:src/main.cpp  **** 		// POLL BLE
 212:src/main.cpp  **** 		 while (usart1.Readable()) {
 11159              		.loc 18 212 4 view .LVU2509
 11160              		.loc 18 212 26 view .LVU2510
 11161 0058 1E48     		ldr	r0, .L334+12
 11162 005a FFF7FEFF 		bl	_ZN5daisy11UartHandler8ReadableEv
 11163              	.LVL556:
 11164 005e 0028     		cmp	r0, #0
 11165 0060 FAD0     		beq	.L320
 11166              	.LBB6692:
 213:src/main.cpp  **** 			
 214:src/main.cpp  **** 			uint32_t curr_val = usart1.PopRx();
 11167              		.loc 18 214 4 view .LVU2511
 11168              		.loc 18 214 36 is_stmt 0 view .LVU2512
 11169 0062 1C48     		ldr	r0, .L334+12
 11170 0064 FFF7FEFF 		bl	_ZN5daisy11UartHandler5PopRxEv
 11171              	.LVL557:
 11172              		.loc 18 214 37 view .LVU2513
 11173 0068 0090     		str	r0, [sp]
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 505


 215:src/main.cpp  **** 			param_buffer.push_back(curr_val);
 11174              		.loc 18 215 4 is_stmt 1 view .LVU2514
 11175              	.LVL558:
 11176              	.LBB6693:
 11177              	.LBI6693:
1187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 11178              		.loc 33 1187 7 view .LVU2515
 11179              	.LBB6694:
1189:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 11180              		.loc 33 1189 2 is_stmt 0 view .LVU2516
 11181 006a DDE90213 		ldrd	r1, r3, [sp, #8]
 11182 006e 9942     		cmp	r1, r3
 11183 0070 25D0     		beq	.L321
 11184              	.LVL559:
 11185              	.LBB6695:
 11186              	.LBI6695:
 507:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 11187              		.loc 15 507 2 is_stmt 1 view .LVU2517
 11188              	.LBB6696:
 11189              	.LBI6696:
 148:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 11190              		.loc 16 148 2 view .LVU2518
 148:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 11191              		.loc 16 148 2 is_stmt 0 view .LVU2519
 11192              	.LBE6696:
 11193              	.LBE6695:
 11194              	.LBE6694:
 11195              	.LBE6693:
 11196              	.LBE6692:
 11197              	.LBE6691:
 11198              		.loc 26 175 3 is_stmt 1 view .LVU2520
 11199              	.LBB6786:
 11200              	.LBB6782:
 11201              	.LBB6704:
 11202              	.LBB6702:
 11203              	.LBB6699:
 11204              	.LBB6698:
 11205              	.LBB6697:
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11206              		.loc 16 150 4 is_stmt 0 view .LVU2521
 11207 0072 41F8040B 		str	r0, [r1], #4
 11208              	.LVL560:
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11209              		.loc 16 150 4 view .LVU2522
 11210              	.LBE6697:
 11211              	.LBE6698:
 11212              	.LBE6699:
1194:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 11213              		.loc 33 1194 6 view .LVU2523
 11214 0076 0291     		str	r1, [sp, #8]
 11215              	.L322:
 11216              	.LVL561:
1194:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 11217              		.loc 33 1194 6 view .LVU2524
 11218              	.LBE6702:
 11219              	.LBE6704:
 216:src/main.cpp  **** 	
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 506


 217:src/main.cpp  **** 			if (!usart1.Readable()) {
 11220              		.loc 18 217 4 is_stmt 1 view .LVU2525
 11221              	.LBB6705:
 11222              		.loc 18 217 24 is_stmt 0 view .LVU2526
 11223 0078 1648     		ldr	r0, .L334+12
 11224 007a FFF7FEFF 		bl	_ZN5daisy11UartHandler8ReadableEv
 11225              	.LVL562:
 11226              		.loc 18 217 4 view .LVU2527
 11227 007e 0446     		mov	r4, r0
 11228 0080 0028     		cmp	r0, #0
 11229 0082 E9D1     		bne	.L320
 11230              	.LBB6706:
 218:src/main.cpp  **** 				usart1.FlushRx();
 11231              		.loc 18 218 5 is_stmt 1 view .LVU2528
 11232              		.loc 18 218 19 is_stmt 0 view .LVU2529
 11233 0084 1348     		ldr	r0, .L334+12
 11234 0086 FFF7FEFF 		bl	_ZN5daisy11UartHandler7FlushRxEv
 11235              	.LVL563:
 219:src/main.cpp  **** 
 220:src/main.cpp  **** 				uint16_t val;
 11236              		.loc 18 220 5 is_stmt 1 view .LVU2530
 221:src/main.cpp  **** 				uint16_t index;
 11237              		.loc 18 221 5 view .LVU2531
 222:src/main.cpp  **** 				for (int i = 0; i < param_buffer.size(); i++) {
 11238              		.loc 18 222 5 view .LVU2532
 11239              	.LBB6707:
 11240              		.loc 18 222 23 view .LVU2533
 11241              	.LBB6708:
 11242              	.LBI6708:
 918:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 11243              		.loc 33 918 7 view .LVU2534
 11244              	.LBB6709:
 919:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 11245              		.loc 33 919 66 is_stmt 0 view .LVU2535
 11246 008a DDE90131 		ldrd	r3, r1, [sp, #4]
 919:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 11247              		.loc 33 919 50 view .LVU2536
 11248 008e CA1A     		subs	r2, r1, r3
 11249              	.LBE6709:
 11250              	.LBE6708:
 11251              		.loc 18 222 23 view .LVU2537
 11252 0090 8B42     		cmp	r3, r1
 11253              	.LBB6711:
 11254              	.LBB6710:
 919:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 11255              		.loc 33 919 50 view .LVU2538
 11256 0092 4FEAA202 		asr	r2, r2, #2
 11257              	.LVL564:
 919:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 11258              		.loc 33 919 50 view .LVU2539
 11259              	.LBE6710:
 11260              	.LBE6711:
 11261              		.loc 18 222 23 view .LVU2540
 11262 0096 DFD0     		beq	.L320
 11263              	.LVL565:
 11264              	.LBB6712:
 223:src/main.cpp  **** 			 		//hw.PrintLine("%x", param_buffer[i]);
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 507


 224:src/main.cpp  **** 					if (i % 2 == 0)
 11265              		.loc 18 224 6 is_stmt 1 view .LVU2541
 225:src/main.cpp  **** 						val = param_buffer[i];
 11266              		.loc 18 225 7 view .LVU2542
 226:src/main.cpp  **** 					else if (i % 2 == 1)
 11267              		.loc 18 226 11 view .LVU2543
 227:src/main.cpp  **** 						index = param_buffer[i];
 11268              		.loc 18 227 7 view .LVU2544
 224:src/main.cpp  **** 						val = param_buffer[i];
 11269              		.loc 18 224 6 is_stmt 0 view .LVU2545
 11270 0098 E107     		lsls	r1, r4, #31
 11271 009a 0ED4     		bmi	.L324
 11272              	.LVL566:
 11273              	.L333:
 225:src/main.cpp  **** 					else if (i % 2 == 1)
 11274              		.loc 18 225 11 view .LVU2546
 11275 009c 1988     		ldrh	r1, [r3]
 11276 009e 08EE101A 		vmov	s16, r1	@ int
 11277              	.L325:
 228:src/main.cpp  **** 
 229:src/main.cpp  **** 					param curr;
 11278              		.loc 18 229 6 is_stmt 1 view .LVU2547
 11279              	.LVL567:
 11280              	.LBB6713:
 11281              	.LBI6713:
  38:src/parameter_controller.h **** 	std::string label;
 11282              		.loc 19 38 8 view .LVU2548
 11283              	.LBB6714:
 11284              	.LBI6714:
 431:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(is_nothrow_default_constructible<_Alloc>::value)
 11285              		.loc 20 431 7 view .LVU2549
 11286              	.LBB6715:
 11287              	.LBI6715:
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11288              		.loc 20 190 7 view .LVU2550
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11289              		.loc 20 190 7 is_stmt 0 view .LVU2551
 11290              	.LBE6715:
 11291              	.LBB6716:
 11292              	.LBI6716:
 144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 11293              		.loc 17 144 7 is_stmt 1 view .LVU2552
 11294              	.LBB6717:
 11295              	.LBI6717:
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11296              		.loc 16 79 7 view .LVU2553
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11297              		.loc 16 79 7 is_stmt 0 view .LVU2554
 11298              	.LBE6717:
 11299              	.LBE6716:
 11300              	.LBB6718:
 11301              	.LBI6718:
 159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 11302              		.loc 20 159 2 is_stmt 1 view .LVU2555
 11303              	.LBB6719:
 11304              	.LBI6719:
 11305              		.loc 22 101 5 view .LVU2556
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 508


 11306              		.loc 22 101 5 is_stmt 0 view .LVU2557
 11307              	.LBE6719:
 11308              	.LBB6720:
 11309              	.LBI6720:
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 11310              		.loc 17 147 7 is_stmt 1 view .LVU2558
 11311              	.LBB6721:
 11312              	.LBI6721:
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11313              		.loc 16 82 7 view .LVU2559
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11314              		.loc 16 82 7 is_stmt 0 view .LVU2560
 11315              	.LBE6721:
 11316              	.LBE6720:
 11317              	.LBE6718:
 11318              	.LBB6722:
 11319              	.LBI6722:
 11320              		.loc 17 162 7 is_stmt 1 view .LVU2561
 11321              	.LBB6723:
 11322              	.LBI6723:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11323              		.loc 16 89 7 view .LVU2562
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11324              		.loc 16 89 7 is_stmt 0 view .LVU2563
 11325              	.LBE6723:
 11326              	.LBE6722:
 11327              	.LBB6724:
 11328              	.LBI6724:
 214:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11329              		.loc 20 214 7 is_stmt 1 view .LVU2564
 214:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11330              		.loc 20 214 7 is_stmt 0 view .LVU2565
 11331              	.LBE6724:
 11332              	.LBE6714:
 11333              	.LBE6713:
 11334              	.LBE6712:
 11335              	.LBE6707:
 11336              	.LBE6706:
 11337              	.LBE6705:
 11338              	.LBE6782:
 11339              	.LBE6786:
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 11340              		.loc 24 322 9 is_stmt 1 view .LVU2566
 11341              	.LBB6787:
 11342              	.LBB6783:
 11343              	.LBB6778:
 11344              	.LBB6775:
 11345              	.LBB6772:
 11346              	.LBB6765:
 11347              	.LBB6747:
 11348              	.LBB6725:
 11349              	.LBI6725:
 431:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(is_nothrow_default_constructible<_Alloc>::value)
 11350              		.loc 20 431 7 view .LVU2567
 11351              	.LBB6726:
 11352              	.LBI6726:
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 509


 11353              		.loc 20 190 7 view .LVU2568
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11354              		.loc 20 190 7 is_stmt 0 view .LVU2569
 11355              	.LBE6726:
 11356              	.LBB6727:
 11357              	.LBI6727:
 144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 11358              		.loc 17 144 7 is_stmt 1 view .LVU2570
 11359              	.LBB6728:
 11360              	.LBI6728:
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11361              		.loc 16 79 7 view .LVU2571
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11362              		.loc 16 79 7 is_stmt 0 view .LVU2572
 11363              	.LBE6728:
 11364              	.LBE6727:
 11365              	.LBB6729:
 11366              	.LBI6729:
 159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 11367              		.loc 20 159 2 is_stmt 1 view .LVU2573
 11368              	.LBB6730:
 11369              	.LBI6730:
 11370              		.loc 22 101 5 view .LVU2574
 11371              		.loc 22 101 5 is_stmt 0 view .LVU2575
 11372              	.LBE6730:
 11373              	.LBB6731:
 11374              	.LBI6731:
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 11375              		.loc 17 147 7 is_stmt 1 view .LVU2576
 11376              	.LBB6732:
 11377              	.LBI6732:
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11378              		.loc 16 82 7 view .LVU2577
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11379              		.loc 16 82 7 is_stmt 0 view .LVU2578
 11380              	.LBE6732:
 11381              	.LBE6731:
 11382              	.LBE6729:
 11383              	.LBB6733:
 11384              	.LBI6733:
 11385              		.loc 17 162 7 is_stmt 1 view .LVU2579
 11386              	.LBB6734:
 11387              	.LBI6734:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11388              		.loc 16 89 7 view .LVU2580
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11389              		.loc 16 89 7 is_stmt 0 view .LVU2581
 11390              	.LBE6734:
 11391              	.LBE6733:
 11392              	.LBB6735:
 11393              	.LBI6735:
 214:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11394              		.loc 20 214 7 is_stmt 1 view .LVU2582
 214:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11395              		.loc 20 214 7 is_stmt 0 view .LVU2583
 11396              	.LBE6735:
 11397              	.LBE6725:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 510


 11398              	.LBE6747:
 11399              	.LBE6765:
 11400              	.LBE6772:
 11401              	.LBE6775:
 11402              	.LBE6778:
 11403              	.LBE6783:
 11404              	.LBE6787:
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 11405              		.loc 24 322 9 is_stmt 1 view .LVU2584
 11406              	.LBB6788:
 11407              	.LBB6784:
 11408              	.LBB6779:
 11409              	.LBB6776:
 11410              	.LBB6773:
 11411              	.LBB6766:
 11412              	.LBB6748:
 11413              	.LBB6736:
 11414              	.LBI6736:
 431:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(is_nothrow_default_constructible<_Alloc>::value)
 11415              		.loc 20 431 7 view .LVU2585
 11416              	.LBB6737:
 11417              	.LBI6737:
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11418              		.loc 20 190 7 view .LVU2586
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11419              		.loc 20 190 7 is_stmt 0 view .LVU2587
 11420              	.LBE6737:
 11421              	.LBB6738:
 11422              	.LBI6738:
 144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 11423              		.loc 17 144 7 is_stmt 1 view .LVU2588
 11424              	.LBB6739:
 11425              	.LBI6739:
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11426              		.loc 16 79 7 view .LVU2589
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11427              		.loc 16 79 7 is_stmt 0 view .LVU2590
 11428              	.LBE6739:
 11429              	.LBE6738:
 11430              	.LBB6740:
 11431              	.LBI6740:
 159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 11432              		.loc 20 159 2 is_stmt 1 view .LVU2591
 11433              	.LBB6741:
 11434              	.LBI6741:
 11435              		.loc 22 101 5 view .LVU2592
 11436              		.loc 22 101 5 is_stmt 0 view .LVU2593
 11437              	.LBE6741:
 11438              	.LBB6742:
 11439              	.LBI6742:
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 11440              		.loc 17 147 7 is_stmt 1 view .LVU2594
 11441              	.LBB6743:
 11442              	.LBI6743:
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11443              		.loc 16 82 7 view .LVU2595
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 511


 11444              		.loc 16 82 7 is_stmt 0 view .LVU2596
 11445              	.LBE6743:
 11446              	.LBE6742:
 11447              	.LBE6740:
 11448              	.LBB6744:
 11449              	.LBI6744:
 11450              		.loc 17 162 7 is_stmt 1 view .LVU2597
 11451              	.LBB6745:
 11452              	.LBI6745:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11453              		.loc 16 89 7 view .LVU2598
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11454              		.loc 16 89 7 is_stmt 0 view .LVU2599
 11455              	.LBE6745:
 11456              	.LBE6744:
 11457              	.LBB6746:
 11458              	.LBI6746:
 214:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11459              		.loc 20 214 7 is_stmt 1 view .LVU2600
 214:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11460              		.loc 20 214 7 is_stmt 0 view .LVU2601
 11461              	.LBE6746:
 11462              	.LBE6736:
 11463              	.LBE6748:
 11464              	.LBE6766:
 11465              	.LBE6773:
 11466              	.LBE6776:
 11467              	.LBE6779:
 11468              	.LBE6784:
 11469              	.LBE6788:
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 11470              		.loc 24 322 9 is_stmt 1 view .LVU2602
 11471              	.LBB6789:
 11472              	.LBB6785:
 11473              	.LBB6780:
 11474              	.LBB6777:
 11475              	.LBB6774:
 11476              	.LBB6767:
 230:src/main.cpp  **** 					curr.val = val;
 11477              		.loc 18 230 6 view .LVU2603
 231:src/main.cpp  **** 					if (curr.index == index) {
 11478              		.loc 18 231 6 view .LVU2604
 232:src/main.cpp  **** 						curr.index = index;
 233:src/main.cpp  **** 					}
 234:src/main.cpp  **** 					params[index] = (float)val;
 11479              		.loc 18 234 6 view .LVU2605
 11480              	.LBE6767:
 222:src/main.cpp  **** 			 		//hw.PrintLine("%x", param_buffer[i]);
 11481              		.loc 18 222 5 is_stmt 0 view .LVU2606
 11482 00a2 0134     		adds	r4, r4, #1
 11483              	.LVL568:
 11484              	.LBB6768:
 230:src/main.cpp  **** 					if (curr.index == index) {
 11485              		.loc 18 230 15 view .LVU2607
 11486 00a4 F8EE487A 		vcvt.f32.u32	s15, s16
 11487              		.loc 18 234 20 view .LVU2608
 11488 00a8 06EB8501 		add	r1, r6, r5, lsl #2
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 512


 11489              	.LBE6768:
 222:src/main.cpp  **** 			 		//hw.PrintLine("%x", param_buffer[i]);
 11490              		.loc 18 222 23 view .LVU2609
 11491 00ac 0433     		adds	r3, r3, #4
 11492 00ae 9442     		cmp	r4, r2
 11493              	.LBB6769:
 230:src/main.cpp  **** 					if (curr.index == index) {
 11494              		.loc 18 230 15 view .LVU2610
 11495 00b0 C1ED007A 		vstr.32	s15, [r1]
 11496              	.LVL569:
 11497              	.LBB6749:
 11498              	.LBI6749:
  38:src/parameter_controller.h **** 	std::string label;
 11499              		.loc 19 38 8 is_stmt 1 view .LVU2611
 11500              	.LBB6750:
 11501              	.LBI6750:
 657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 11502              		.loc 20 657 7 view .LVU2612
 11503              	.LBB6751:
 11504              	.LBI6751:
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11505              		.loc 20 229 7 view .LVU2613
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11506              		.loc 20 229 7 is_stmt 0 view .LVU2614
 11507              	.LBE6751:
 11508              	.LBB6752:
 11509              	.LBI6752:
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11510              		.loc 20 150 14 is_stmt 1 view .LVU2615
 11511              	.LBB6753:
 11512              	.LBI6753:
 11513              		.loc 17 162 7 view .LVU2616
 11514              	.LBB6754:
 11515              	.LBI6754:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11516              		.loc 16 89 7 view .LVU2617
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11517              		.loc 16 89 7 is_stmt 0 view .LVU2618
 11518              	.LBE6754:
 11519              	.LBE6753:
 11520              	.LBE6752:
 11521              	.LBE6750:
 11522              	.LBB6755:
 11523              	.LBI6755:
 657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 11524              		.loc 20 657 7 is_stmt 1 view .LVU2619
 11525              	.LBB6756:
 11526              	.LBI6756:
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11527              		.loc 20 229 7 view .LVU2620
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11528              		.loc 20 229 7 is_stmt 0 view .LVU2621
 11529              	.LBE6756:
 11530              	.LBB6757:
 11531              	.LBI6757:
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11532              		.loc 20 150 14 is_stmt 1 view .LVU2622
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 513


 11533              	.LBB6758:
 11534              	.LBI6758:
 11535              		.loc 17 162 7 view .LVU2623
 11536              	.LBB6759:
 11537              	.LBI6759:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11538              		.loc 16 89 7 view .LVU2624
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11539              		.loc 16 89 7 is_stmt 0 view .LVU2625
 11540              	.LBE6759:
 11541              	.LBE6758:
 11542              	.LBE6757:
 11543              	.LBE6755:
 11544              	.LBB6760:
 11545              	.LBI6760:
 657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 11546              		.loc 20 657 7 is_stmt 1 view .LVU2626
 11547              	.LBB6761:
 11548              	.LBI6761:
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11549              		.loc 20 229 7 view .LVU2627
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11550              		.loc 20 229 7 is_stmt 0 view .LVU2628
 11551              	.LBE6761:
 11552              	.LBB6762:
 11553              	.LBI6762:
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11554              		.loc 20 150 14 is_stmt 1 view .LVU2629
 11555              	.LBB6763:
 11556              	.LBI6763:
 11557              		.loc 17 162 7 view .LVU2630
 11558              	.LBB6764:
 11559              	.LBI6764:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11560              		.loc 16 89 7 view .LVU2631
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11561              		.loc 16 89 7 is_stmt 0 view .LVU2632
 11562              	.LBE6764:
 11563              	.LBE6763:
 11564              	.LBE6762:
 11565              	.LBE6760:
 11566              	.LBE6749:
 11567              	.LBE6769:
 222:src/main.cpp  **** 			 		//hw.PrintLine("%x", param_buffer[i]);
 11568              		.loc 18 222 5 is_stmt 1 view .LVU2633
 222:src/main.cpp  **** 			 		//hw.PrintLine("%x", param_buffer[i]);
 11569              		.loc 18 222 23 view .LVU2634
 11570              	.LBB6770:
 918:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 11571              		.loc 33 918 7 view .LVU2635
 918:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 11572              		.loc 33 918 7 is_stmt 0 view .LVU2636
 11573              	.LBE6770:
 222:src/main.cpp  **** 			 		//hw.PrintLine("%x", param_buffer[i]);
 11574              		.loc 18 222 23 view .LVU2637
 11575 00b4 D0D0     		beq	.L320
 11576              	.LBB6771:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 514


 224:src/main.cpp  **** 						val = param_buffer[i];
 11577              		.loc 18 224 6 is_stmt 1 view .LVU2638
 225:src/main.cpp  **** 					else if (i % 2 == 1)
 11578              		.loc 18 225 7 view .LVU2639
 11579              	.LVL570:
 226:src/main.cpp  **** 						index = param_buffer[i];
 11580              		.loc 18 226 11 view .LVU2640
 227:src/main.cpp  **** 
 11581              		.loc 18 227 7 view .LVU2641
 224:src/main.cpp  **** 						val = param_buffer[i];
 11582              		.loc 18 224 6 is_stmt 0 view .LVU2642
 11583 00b6 E107     		lsls	r1, r4, #31
 11584 00b8 F0D5     		bpl	.L333
 11585              	.LVL571:
 11586              	.L324:
 227:src/main.cpp  **** 
 11587              		.loc 18 227 13 view .LVU2643
 11588 00ba 1D88     		ldrh	r5, [r3]
 11589              	.LVL572:
 227:src/main.cpp  **** 
 11590              		.loc 18 227 13 view .LVU2644
 11591 00bc F1E7     		b	.L325
 11592              	.LVL573:
 11593              	.L321:
 227:src/main.cpp  **** 
 11594              		.loc 18 227 13 view .LVU2645
 11595              	.LBE6771:
 11596              	.LBE6774:
 11597              	.LBE6777:
 11598              	.LBE6780:
 11599              	.LBB6781:
 11600              	.LBB6703:
 11601              	.LBB6700:
 11602              	.LBI6700:
 829:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 11603              		.loc 33 829 7 is_stmt 1 view .LVU2646
 11604              	.LBB6701:
 11605              	.LBI6701:
 978:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 11606              		.loc 34 978 7 view .LVU2647
 978:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 11607              		.loc 34 978 7 is_stmt 0 view .LVU2648
 11608              	.LBE6701:
 11609              	.LBE6700:
1198:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 11610              		.loc 33 1198 21 view .LVU2649
 11611 00be 6A46     		mov	r2, sp
 11612 00c0 01A8     		add	r0, sp, #4
 11613              	.LVL574:
1198:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 11614              		.loc 33 1198 21 view .LVU2650
 11615 00c2 FFF7FEFF 		bl	_ZNSt6vectorImSaImEE17_M_realloc_insertIJRKmEEEvN9__gnu_cxx17__normal_iteratorIPmS1_EEDpOT_
 11616              	.LVL575:
1198:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 11617              		.loc 33 1198 21 view .LVU2651
 11618 00c6 D7E7     		b	.L322
 11619              	.L335:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 515


 11620              		.align	2
 11621              	.L334:
 11622 00c8 00000000 		.word	0
 11623 00cc 00000000 		.word	.LANCHOR3
 11624 00d0 00000000 		.word	_Z13AudioCallbackPKPKfPPfj
 11625 00d4 00000000 		.word	.LANCHOR4
 11626 00d8 00000000 		.word	.LANCHOR0
 11627 00dc 00000000 		.word	.LANCHOR5
 11628 00e0 00000000 		.word	.LANCHOR1
 11629              	.LBE6703:
 11630              	.LBE6781:
 11631              	.LBE6785:
 11632              	.LBE6789:
 11633              		.cfi_endproc
 11634              	.LFE5483:
 11636              		.section	.text.startup._GLOBAL__sub_I_stateManager,"ax",%progbits
 11637              		.align	1
 11638              		.p2align 2,,3
 11639              		.syntax unified
 11640              		.thumb
 11641              		.thumb_func
 11642              		.fpu fpv5-d16
 11644              	_GLOBAL__sub_I_stateManager:
 11645              	.LFB6603:
 235:src/main.cpp  **** 					//hw.PrintLine("%u", params[index]);
 236:src/main.cpp  **** 					//hw.PrintLine("SET: %u %u", val, index);
 237:src/main.cpp  **** 					//parameterMap.setValueAtIndex(val, index);
 238:src/main.cpp  **** 					//hw.PrintLine("%f", parameterMap.getValue(0));	
 239:src/main.cpp  **** 					//gain = parameterMap.getValue(1) / 100;
 240:src/main.cpp  **** 					//paramRamper.set(gain);
 241:src/main.cpp  **** 					//paramRamper.startRamp(gain, 1);
 242:src/main.cpp  **** 					//gain = paramRamper.getStep();
 243:src/main.cpp  **** 					//gain.setTargetValue(parameterMap.getValue(1) / 100);
 244:src/main.cpp  **** 					//hw.PrintLine("%u", gain);
 245:src/main.cpp  **** 					//hw.PrintLine("GET: %f %u", parameterMap.getValue(index), index);
 246:src/main.cpp  **** 	
 247:src/main.cpp  **** 			 	}
 248:src/main.cpp  **** 			}
 249:src/main.cpp  **** 
 250:src/main.cpp  **** 		 }
 251:src/main.cpp  **** 		 
 252:src/main.cpp  **** 
 253:src/main.cpp  **** 		//  for (int i = 0; i < param_buffer_size; i++) {
 254:src/main.cpp  **** 		// 	 hw.Print("%c", param_buffer[i]);
 255:src/main.cpp  **** 		// 	 if (i == param_buffer_size) {
 256:src/main.cpp  **** 		// 	 	param_buffer_size = 0;
 257:src/main.cpp  **** 		// 	 }
 258:src/main.cpp  **** 		//  }
 259:src/main.cpp  **** 
 260:src/main.cpp  **** 		// while (!paramBuf.empty()) {
 261:src/main.cpp  **** 		// 	uint32_t curr = paramBuf.back();
 262:src/main.cpp  **** 		// 	paramBuf.pop_back();
 263:src/main.cpp  **** 		// }
 264:src/main.cpp  **** 
 265:src/main.cpp  **** 	}
 266:src/main.cpp  **** }
 11646              		.loc 18 266 1 is_stmt 1 view -0
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 516


 11647              		.cfi_startproc
 11648              		@ args = 0, pretend = 0, frame = 0
 11649              		@ frame_needed = 0, uses_anonymous_args = 0
 11650              	.LBB6943:
 11651              	.LBI6943:
 11652              		.loc 18 266 1 view .LVU2653
 11653              	.LVL576:
 11654              	.LBB6944:
 11655              	.LBB6945:
 11656              	.LBI6945:
  47:src/statemanager.h ****     ~StateManager() {};
 11657              		.loc 11 47 5 view .LVU2654
 11658              	.LBB6946:
 11659              	.LBB6947:
 11660              	.LBI6947:
 141:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 11661              		.loc 13 141 7 view .LVU2655
 11662              	.LBB6948:
 11663              	.LBI6948:
 451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(size_type __bkt_count_hint,
 11664              		.loc 12 451 7 view .LVU2656
 11665              	.LBB6949:
 11666              	.LBB6950:
 11667              	.LBI6950:
1982:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Hashtable_alloc(const _Hashtable_alloc&) = default;
 11668              		.loc 14 1982 7 view .LVU2657
 11669              	.LBB6951:
 11670              	.LBI6951:
1112:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 11671              		.loc 14 1112 7 view .LVU2658
 11672              	.LBB6952:
 11673              	.LBI6952:
 144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 11674              		.loc 17 144 7 view .LVU2659
 11675              	.LBB6953:
 11676              	.LBI6953:
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11677              		.loc 16 79 7 view .LVU2660
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11678              		.loc 16 79 7 is_stmt 0 view .LVU2661
 11679              	.LBE6953:
 11680              	.LBE6952:
 11681              	.LBE6951:
 11682              	.LBE6950:
 451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(size_type __bkt_count_hint,
 11683              		.loc 12 451 7 view .LVU2662
 11684 0000 3E48     		ldr	r0, .L340
 11685 0002 0122     		movs	r2, #1
 11686              	.LBE6949:
 11687              	.LBE6948:
 11688              	.LBE6947:
 11689              	.LBE6946:
 11690              	.LBE6945:
 11691              	.LBE6944:
 11692              	.LBE6943:
 11693              		.loc 18 266 1 view .LVU2663
 11694 0004 F8B5     		push	{r3, r4, r5, r6, r7, lr}
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 517


 11695              		.cfi_def_cfa_offset 24
 11696              		.cfi_offset 3, -24
 11697              		.cfi_offset 4, -20
 11698              		.cfi_offset 5, -16
 11699              		.cfi_offset 6, -12
 11700              		.cfi_offset 7, -8
 11701              		.cfi_offset 14, -4
 11702              	.LBB7167:
 11703              	.LBB7164:
 11704              	.LBB6973:
 11705              	.LBB6971:
 11706              	.LBB6969:
 11707              	.LBB6967:
 11708              	.LBB6965:
 451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(size_type __bkt_count_hint,
 11709              		.loc 12 451 7 view .LVU2664
 11710 0006 00F11C01 		add	r1, r0, #28
 11711              	.LBB6954:
 11712              	.LBB6955:
 11713              	.LBB6956:
 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 11714              		.loc 14 218 41 view .LVU2665
 11715 000a 0024     		movs	r4, #0
 11716              	.LBE6956:
 11717              	.LBE6955:
 11718              	.LBE6954:
 11719              	.LBB6957:
 11720              	.LBB6958:
 11721              	.LBB6959:
 450:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 11722              		.loc 14 450 48 view .LVU2666
 11723 000c 4FF07E53 		mov	r3, #1065353216
 11724              	.LBE6959:
 11725              	.LBE6958:
 11726              	.LBE6957:
 451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(size_type __bkt_count_hint,
 11727              		.loc 12 451 7 view .LVU2667
 11728 0010 8260     		str	r2, [r0, #8]
 11729              	.LVL577:
 11730              	.LBB6962:
 11731              	.LBI6954:
 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 11732              		.loc 14 218 5 is_stmt 1 view .LVU2668
 11733              	.LBE6962:
 451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(size_type __bkt_count_hint,
 11734              		.loc 12 451 7 is_stmt 0 view .LVU2669
 11735 0012 4160     		str	r1, [r0, #4]
 11736              	.LBB6963:
 11737              	.LBB6961:
 11738              	.LBB6960:
 450:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 11739              		.loc 14 450 48 view .LVU2670
 11740 0014 4361     		str	r3, [r0, #20]	@ float
 11741              	.LBE6960:
 11742              	.LBE6961:
 11743              	.LBE6963:
 11744              	.LBE6965:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 518


 11745              	.LBE6967:
 11746              	.LBE6969:
 11747              	.LBE6971:
 11748              	.LBE6973:
  13:src/audiohandler.hpp **** 
 11749              		.loc 31 13 14 view .LVU2671
 11750 0016 3A4A     		ldr	r2, .L340+4
 11751 0018 3A49     		ldr	r1, .L340+8
 11752              	.LBB6974:
 11753              	.LBB6975:
  92:src/parameter_controller.h **** 
 11754              		.loc 19 92 7 view .LVU2672
 11755 001a 3B4D     		ldr	r5, .L340+12
 11756              	.LBE6975:
 11757              	.LBE6974:
 11758              	.LBB7082:
 11759              	.LBB6972:
 11760              	.LBB6970:
 11761              	.LBB6968:
 11762              	.LBB6966:
 451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(size_type __bkt_count_hint,
 11763              		.loc 12 451 7 view .LVU2673
 11764 001c C0E90344 		strd	r4, r4, [r0, #12]
 11765              	.LVL578:
 11766              	.LBB6964:
 11767              	.LBI6957:
 449:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : _M_max_load_factor(__z), _M_next_resize(0) { }
 11768              		.loc 14 449 5 is_stmt 1 view .LVU2674
 11769              	.LBE6964:
 451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(size_type __bkt_count_hint,
 11770              		.loc 12 451 7 is_stmt 0 view .LVU2675
 11771 0020 C0E90644 		strd	r4, r4, [r0, #24]
 11772              	.LVL579:
 451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(size_type __bkt_count_hint,
 11773              		.loc 12 451 7 view .LVU2676
 11774              	.LBE6966:
 11775              	.LBE6968:
 11776              	.LBE6970:
 11777              	.LBE6972:
 11778              	.LBE7082:
  13:src/audiohandler.hpp **** 
 11779              		.loc 31 13 14 view .LVU2677
 11780 0024 FFF7FEFF 		bl	__aeabi_atexit
 11781              	.LVL580:
 11782              	.LBB7083:
 11783              	.LBI7083:
  21:../../libdaisy//src/daisy_seed.h ****     ~DaisySeed() {}
 11784              		.loc 6 21 5 is_stmt 1 view .LVU2678
 11785              	.LBB7084:
 11786              	.LBB7085:
 11787              	.LBI7085:
 11788              		.file 36 "../../libdaisy//src/per/qspi.h"
   1:../../libdaisy//src/per/qspi.h **** #ifndef DSY_QSPI
   2:../../libdaisy//src/per/qspi.h **** #define DSY_QSPI /**< Macro */
   3:../../libdaisy//src/per/qspi.h **** 
   4:../../libdaisy//src/per/qspi.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation
   5:../../libdaisy//src/per/qspi.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 519


   6:../../libdaisy//src/per/qspi.h **** #include <cstdint>
   7:../../libdaisy//src/per/qspi.h **** #include "daisy_core.h" // Added for dsy_gpio_pin typedef
   8:../../libdaisy//src/per/qspi.h **** 
   9:../../libdaisy//src/per/qspi.h **** #define DSY_QSPI_TEXT       \
  10:../../libdaisy//src/per/qspi.h ****     __attribute__((section( \
  11:../../libdaisy//src/per/qspi.h ****         ".qspiflash_text"))) /**< used for reading memory in memory_mapped mode. */
  12:../../libdaisy//src/per/qspi.h **** #define DSY_QSPI_DATA       \
  13:../../libdaisy//src/per/qspi.h ****     __attribute__((section( \
  14:../../libdaisy//src/per/qspi.h ****         ".qspiflash_data"))) /**< used for reading memory in memory_mapped mode. */
  15:../../libdaisy//src/per/qspi.h **** #define DSY_QSPI_BSS        \
  16:../../libdaisy//src/per/qspi.h ****     __attribute__((section( \
  17:../../libdaisy//src/per/qspi.h ****         ".qspiflash_bss"))) /**< used for reading memory in memory_mapped mode. */
  18:../../libdaisy//src/per/qspi.h **** 
  19:../../libdaisy//src/per/qspi.h **** namespace daisy
  20:../../libdaisy//src/per/qspi.h **** {
  21:../../libdaisy//src/per/qspi.h **** /** @addtogroup serial
  22:../../libdaisy//src/per/qspi.h **** @{
  23:../../libdaisy//src/per/qspi.h **** */
  24:../../libdaisy//src/per/qspi.h **** 
  25:../../libdaisy//src/per/qspi.h **** /** 
  26:../../libdaisy//src/per/qspi.h ****  Driver for QSPI peripheral to interface with external flash memory. \n 
  27:../../libdaisy//src/per/qspi.h ****     Currently supported QSPI Devices: \n 
  28:../../libdaisy//src/per/qspi.h ****     * IS25LP080D
  29:../../libdaisy//src/per/qspi.h **** */
  30:../../libdaisy//src/per/qspi.h **** class QSPIHandle
  31:../../libdaisy//src/per/qspi.h **** {
  32:../../libdaisy//src/per/qspi.h ****   public:
  33:../../libdaisy//src/per/qspi.h ****     enum Result
  34:../../libdaisy//src/per/qspi.h ****     {
  35:../../libdaisy//src/per/qspi.h ****         OK = 0,
  36:../../libdaisy//src/per/qspi.h ****         ERR
  37:../../libdaisy//src/per/qspi.h ****     };
  38:../../libdaisy//src/per/qspi.h **** 
  39:../../libdaisy//src/per/qspi.h ****     /** Indicates the current status of the module. 
  40:../../libdaisy//src/per/qspi.h ****          *  Warnings are indicated by a leading W.
  41:../../libdaisy//src/per/qspi.h ****          *  Errors are indicated by a leading E and cause an immediate exit.
  42:../../libdaisy//src/per/qspi.h ****          * 
  43:../../libdaisy//src/per/qspi.h ****          *  \param GOOD - No errors have been reported.
  44:../../libdaisy//src/per/qspi.h ****          *  \param E_HAL_ERROR - HAL code did not return HAL_OK.
  45:../../libdaisy//src/per/qspi.h ****          *  \param E_SWITCHING_MODES - An error was encountered while switching QSPI peripheral mod
  46:../../libdaisy//src/per/qspi.h ****          *  \param E_INVALID_MODE - QSPI should not be written to while the program is executing fr
  47:../../libdaisy//src/per/qspi.h ****          */
  48:../../libdaisy//src/per/qspi.h ****     enum Status
  49:../../libdaisy//src/per/qspi.h ****     {
  50:../../libdaisy//src/per/qspi.h ****         GOOD = 0,
  51:../../libdaisy//src/per/qspi.h ****         E_HAL_ERROR,
  52:../../libdaisy//src/per/qspi.h ****         E_SWITCHING_MODES,
  53:../../libdaisy//src/per/qspi.h ****         E_INVALID_MODE,
  54:../../libdaisy//src/per/qspi.h ****     };
  55:../../libdaisy//src/per/qspi.h **** 
  56:../../libdaisy//src/per/qspi.h ****     /** Configuration structure for interfacing with QSPI Driver */
  57:../../libdaisy//src/per/qspi.h ****     struct Config
  58:../../libdaisy//src/per/qspi.h ****     {
  59:../../libdaisy//src/per/qspi.h ****         /** Flash Devices supported. (Both of these are more-or-less the same, just different sizes
  60:../../libdaisy//src/per/qspi.h ****         enum Device
  61:../../libdaisy//src/per/qspi.h ****         {
  62:../../libdaisy//src/per/qspi.h ****             IS25LP080D,  /**< & */
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 520


  63:../../libdaisy//src/per/qspi.h ****             IS25LP064A,  /**< & */
  64:../../libdaisy//src/per/qspi.h ****             DEVICE_LAST, /**< & */
  65:../../libdaisy//src/per/qspi.h ****         };
  66:../../libdaisy//src/per/qspi.h **** 
  67:../../libdaisy//src/per/qspi.h ****         /** 
  68:../../libdaisy//src/per/qspi.h ****         Modes of operation.
  69:../../libdaisy//src/per/qspi.h ****         Memory Mapped mode: QSPI configured so that the QSPI can be
  70:../../libdaisy//src/per/qspi.h ****         read from starting address 0x90000000. Writing is not
  71:../../libdaisy//src/per/qspi.h ****         possible in this mode. \n 
  72:../../libdaisy//src/per/qspi.h ****         Indirect Polling mode: Device driver enabled. 
  73:../../libdaisy//src/per/qspi.h ****         */
  74:../../libdaisy//src/per/qspi.h ****         enum Mode
  75:../../libdaisy//src/per/qspi.h ****         {
  76:../../libdaisy//src/per/qspi.h ****             MEMORY_MAPPED,    /**< & */
  77:../../libdaisy//src/per/qspi.h ****             INDIRECT_POLLING, /**< & */
  78:../../libdaisy//src/per/qspi.h ****             MODE_LAST,
  79:../../libdaisy//src/per/qspi.h ****         };
  80:../../libdaisy//src/per/qspi.h **** 
  81:../../libdaisy//src/per/qspi.h ****         //SCK,  CE# (active low)
  82:../../libdaisy//src/per/qspi.h ****         struct
  83:../../libdaisy//src/per/qspi.h ****         {
  84:../../libdaisy//src/per/qspi.h ****             dsy_gpio_pin io0; /**< & */
  85:../../libdaisy//src/per/qspi.h ****             dsy_gpio_pin io1; /**< & */
  86:../../libdaisy//src/per/qspi.h ****             dsy_gpio_pin io2; /**< & */
  87:../../libdaisy//src/per/qspi.h ****             dsy_gpio_pin io3; /**< & */
  88:../../libdaisy//src/per/qspi.h ****             dsy_gpio_pin clk; /**< & */
  89:../../libdaisy//src/per/qspi.h ****             dsy_gpio_pin ncs; /**< & */
  90:../../libdaisy//src/per/qspi.h ****         } pin_config;
  91:../../libdaisy//src/per/qspi.h **** 
  92:../../libdaisy//src/per/qspi.h ****         Device device;
  93:../../libdaisy//src/per/qspi.h ****         Mode   mode;
  94:../../libdaisy//src/per/qspi.h ****     };
  95:../../libdaisy//src/per/qspi.h **** 
  96:../../libdaisy//src/per/qspi.h ****     /** 
  97:../../libdaisy//src/per/qspi.h ****         Initializes QSPI peripheral, and Resets, and prepares memory for access.
  98:../../libdaisy//src/per/qspi.h ****         \param config should be populated with the mode, device and pin_config before calling this 
  99:../../libdaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 100:../../libdaisy//src/per/qspi.h ****         */
 101:../../libdaisy//src/per/qspi.h ****     Result Init(const Config& config);
 102:../../libdaisy//src/per/qspi.h **** 
 103:../../libdaisy//src/per/qspi.h ****     /** Returns the current config. */
 104:../../libdaisy//src/per/qspi.h ****     const Config& GetConfig() const;
 105:../../libdaisy//src/per/qspi.h **** 
 106:../../libdaisy//src/per/qspi.h ****     // Couldn't this just be called before anything else in init? That
 107:../../libdaisy//src/per/qspi.h ****     // would make manually calling it unnecessary.
 108:../../libdaisy//src/per/qspi.h ****     /** 
 109:../../libdaisy//src/per/qspi.h ****         Deinitializes the peripheral
 110:../../libdaisy//src/per/qspi.h ****         This should be called before reinitializing QSPI in a different mode.
 111:../../libdaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 112:../../libdaisy//src/per/qspi.h ****         */
 113:../../libdaisy//src/per/qspi.h ****     Result DeInit();
 114:../../libdaisy//src/per/qspi.h **** 
 115:../../libdaisy//src/per/qspi.h ****     /** 
 116:../../libdaisy//src/per/qspi.h ****         Writes a single page to to the specified address on the QSPI chip.
 117:../../libdaisy//src/per/qspi.h ****         For IS25LP*, page size is 256 bytes.
 118:../../libdaisy//src/per/qspi.h ****         \param address Address to write to
 119:../../libdaisy//src/per/qspi.h ****         \param size Buffer size
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 521


 120:../../libdaisy//src/per/qspi.h ****         \param buffer Buffer to write
 121:../../libdaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 122:../../libdaisy//src/per/qspi.h ****         */
 123:../../libdaisy//src/per/qspi.h ****     Result WritePage(uint32_t address, uint32_t size, uint8_t* buffer);
 124:../../libdaisy//src/per/qspi.h **** 
 125:../../libdaisy//src/per/qspi.h ****     /** 
 126:../../libdaisy//src/per/qspi.h ****         Writes data in buffer to to the QSPI. Starting at address to address+size 
 127:../../libdaisy//src/per/qspi.h ****         \param address Address to write to
 128:../../libdaisy//src/per/qspi.h ****         \param size Buffer size
 129:../../libdaisy//src/per/qspi.h ****         \param buffer Buffer to write
 130:../../libdaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 131:../../libdaisy//src/per/qspi.h ****         */
 132:../../libdaisy//src/per/qspi.h ****     Result Write(uint32_t address, uint32_t size, uint8_t* buffer);
 133:../../libdaisy//src/per/qspi.h **** 
 134:../../libdaisy//src/per/qspi.h ****     /** 
 135:../../libdaisy//src/per/qspi.h ****         Erases the area specified on the chip.
 136:../../libdaisy//src/per/qspi.h ****         Erasures will happen by 4K, 32K or 64K increments.
 137:../../libdaisy//src/per/qspi.h ****         Smallest erase possible is 4kB at a time. (on IS25LP*)
 138:../../libdaisy//src/per/qspi.h ****         \param start_addr Address to begin erasing from
 139:../../libdaisy//src/per/qspi.h ****         \param end_addr  Address to stop erasing at
 140:../../libdaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 141:../../libdaisy//src/per/qspi.h ****         */
 142:../../libdaisy//src/per/qspi.h ****     Result Erase(uint32_t start_addr, uint32_t end_addr);
 143:../../libdaisy//src/per/qspi.h **** 
 144:../../libdaisy//src/per/qspi.h ****     /**  
 145:../../libdaisy//src/per/qspi.h ****          Erases a single sector of the chip.  
 146:../../libdaisy//src/per/qspi.h ****         TODO: Document the size of this function. 
 147:../../libdaisy//src/per/qspi.h ****         \param address Address of sector to erase
 148:../../libdaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 149:../../libdaisy//src/per/qspi.h ****         */
 150:../../libdaisy//src/per/qspi.h ****     Result EraseSector(uint32_t address);
 151:../../libdaisy//src/per/qspi.h **** 
 152:../../libdaisy//src/per/qspi.h ****     /** Returns the current class status. Useful for debugging.
 153:../../libdaisy//src/per/qspi.h ****      *  \returns Status
 154:../../libdaisy//src/per/qspi.h ****      */
 155:../../libdaisy//src/per/qspi.h ****     Status GetStatus();
 156:../../libdaisy//src/per/qspi.h **** 
 157:../../libdaisy//src/per/qspi.h ****     /** Returns a pointer to the actual memory used 
 158:../../libdaisy//src/per/qspi.h ****      *  The memory at this address is read-only
 159:../../libdaisy//src/per/qspi.h ****      *  to write to it use the Write function.
 160:../../libdaisy//src/per/qspi.h ****      * 
 161:../../libdaisy//src/per/qspi.h ****      *  \param offset returns the pointer starting this 
 162:../../libdaisy//src/per/qspi.h ****      *                many bytes into the memory
 163:../../libdaisy//src/per/qspi.h ****     */
 164:../../libdaisy//src/per/qspi.h ****     void* GetData(uint32_t offset = 0);
 165:../../libdaisy//src/per/qspi.h **** 
 166:../../libdaisy//src/per/qspi.h ****     QSPIHandle() : pimpl_(nullptr) {}
 11789              		.loc 36 166 5 view .LVU2679
 11790              	.LBB7086:
 11791              	.LBB7087:
 11792              		.loc 36 166 34 is_stmt 0 view .LVU2680
 11793 0028 3848     		ldr	r0, .L340+16
 11794              	.LBE7087:
 11795              	.LBE7086:
 11796              	.LBE7085:
 11797              	.LBE7084:
 11798              	.LBE7083:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 522


  19:src/main.cpp  **** 
 11799              		.loc 18 19 18 view .LVU2681
 11800 002a 354A     		ldr	r2, .L340+4
 11801 002c 3849     		ldr	r1, .L340+20
 11802              	.LBB7101:
 11803              	.LBB7100:
 11804              	.LBB7090:
 11805              	.LBB7089:
 11806              	.LBB7088:
 11807              		.loc 36 166 34 view .LVU2682
 11808 002e 0460     		str	r4, [r0]
 11809              	.LVL581:
 11810              		.loc 36 166 34 view .LVU2683
 11811              	.LBE7088:
 11812              	.LBE7089:
 11813              	.LBE7090:
 11814              	.LBB7091:
 11815              	.LBI7091:
  76:../../libdaisy//src/hid/audio.h ****     ~AudioHandle() {}
 11816              		.loc 10 76 5 is_stmt 1 view .LVU2684
 11817              	.LBB7092:
 11818              	.LBB7093:
  76:../../libdaisy//src/hid/audio.h ****     ~AudioHandle() {}
 11819              		.loc 10 76 35 is_stmt 0 view .LVU2685
 11820 0030 4461     		str	r4, [r0, #20]
 11821              	.LVL582:
  76:../../libdaisy//src/hid/audio.h ****     ~AudioHandle() {}
 11822              		.loc 10 76 35 view .LVU2686
 11823              	.LBE7093:
 11824              	.LBE7092:
 11825              	.LBE7091:
 11826              	.LBB7094:
 11827              	.LBI7094:
  92:../../libdaisy//src/per/adc.h ****     ~AdcHandle() {}
 11828              		.loc 9 92 5 is_stmt 1 view .LVU2687
  92:../../libdaisy//src/per/adc.h ****     ~AdcHandle() {}
 11829              		.loc 9 92 5 is_stmt 0 view .LVU2688
 11830              	.LBE7094:
 11831              	.LBB7095:
 11832              	.LBI7095:
 11833              		.file 37 "../../libdaisy//src/per/dac.h"
   1:../../libdaisy//src/per/dac.h **** #pragma once
   2:../../libdaisy//src/per/dac.h **** #ifndef DSY_DAC_H
   3:../../libdaisy//src/per/dac.h **** #define DSY_DAC_H
   4:../../libdaisy//src/per/dac.h **** 
   5:../../libdaisy//src/per/dac.h **** #include "daisy_core.h"
   6:../../libdaisy//src/per/dac.h **** 
   7:../../libdaisy//src/per/dac.h **** namespace daisy
   8:../../libdaisy//src/per/dac.h **** {
   9:../../libdaisy//src/per/dac.h **** /** @brief DAC handle for Built-in DAC Peripheral 
  10:../../libdaisy//src/per/dac.h ****  *  @ingroup per_analog
  11:../../libdaisy//src/per/dac.h ****  ** 
  12:../../libdaisy//src/per/dac.h ****  ** For now only Normal Mode is supported,
  13:../../libdaisy//src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  14:../../libdaisy//src/per/dac.h ****  **
  15:../../libdaisy//src/per/dac.h ****  ** For now connecting the DAC through other internal peripherals is also not supported.
  16:../../libdaisy//src/per/dac.h ****  **
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 523


  17:../../libdaisy//src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  18:../../libdaisy//src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  19:../../libdaisy//src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  20:../../libdaisy//src/per/dac.h ****  ***/
  21:../../libdaisy//src/per/dac.h **** class DacHandle
  22:../../libdaisy//src/per/dac.h **** {
  23:../../libdaisy//src/per/dac.h ****   public:
  24:../../libdaisy//src/per/dac.h ****     /** Return Values for the DacHandle class */
  25:../../libdaisy//src/per/dac.h ****     enum class Result
  26:../../libdaisy//src/per/dac.h ****     {
  27:../../libdaisy//src/per/dac.h ****         OK,
  28:../../libdaisy//src/per/dac.h ****         ERR,
  29:../../libdaisy//src/per/dac.h ****     };
  30:../../libdaisy//src/per/dac.h **** 
  31:../../libdaisy//src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  32:../../libdaisy//src/per/dac.h ****     enum class Channel
  33:../../libdaisy//src/per/dac.h ****     {
  34:../../libdaisy//src/per/dac.h ****         ONE,
  35:../../libdaisy//src/per/dac.h ****         TWO,
  36:../../libdaisy//src/per/dac.h ****         BOTH,
  37:../../libdaisy//src/per/dac.h ****     };
  38:../../libdaisy//src/per/dac.h **** 
  39:../../libdaisy//src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  40:../../libdaisy//src/per/dac.h ****      **
  41:../../libdaisy//src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  42:../../libdaisy//src/per/dac.h ****      **
  43:../../libdaisy//src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  44:../../libdaisy//src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  45:../../libdaisy//src/per/dac.h ****      ***/
  46:../../libdaisy//src/per/dac.h ****     enum class Mode
  47:../../libdaisy//src/per/dac.h ****     {
  48:../../libdaisy//src/per/dac.h ****         POLLING,
  49:../../libdaisy//src/per/dac.h ****         DMA,
  50:../../libdaisy//src/per/dac.h ****     };
  51:../../libdaisy//src/per/dac.h **** 
  52:../../libdaisy//src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  53:../../libdaisy//src/per/dac.h ****      ** The output range will be: 0V - VDDA
  54:../../libdaisy//src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  55:../../libdaisy//src/per/dac.h ****      ***/
  56:../../libdaisy//src/per/dac.h ****     enum class BitDepth
  57:../../libdaisy//src/per/dac.h ****     {
  58:../../libdaisy//src/per/dac.h ****         BITS_8,
  59:../../libdaisy//src/per/dac.h ****         BITS_12
  60:../../libdaisy//src/per/dac.h ****     };
  61:../../libdaisy//src/per/dac.h **** 
  62:../../libdaisy//src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  63:../../libdaisy//src/per/dac.h ****     enum class BufferState
  64:../../libdaisy//src/per/dac.h ****     {
  65:../../libdaisy//src/per/dac.h ****         ENABLED,
  66:../../libdaisy//src/per/dac.h ****         DISABLED,
  67:../../libdaisy//src/per/dac.h ****     };
  68:../../libdaisy//src/per/dac.h **** 
  69:../../libdaisy//src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  70:../../libdaisy//src/per/dac.h ****     struct Config
  71:../../libdaisy//src/per/dac.h ****     {
  72:../../libdaisy//src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  73:../../libdaisy//src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 524


  74:../../libdaisy//src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  75:../../libdaisy//src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  76:../../libdaisy//src/per/dac.h ****         uint32_t target_samplerate;
  77:../../libdaisy//src/per/dac.h **** 
  78:../../libdaisy//src/per/dac.h ****         Channel     chn;
  79:../../libdaisy//src/per/dac.h ****         Mode        mode;
  80:../../libdaisy//src/per/dac.h ****         BitDepth    bitdepth;
  81:../../libdaisy//src/per/dac.h ****         BufferState buff_state;
  82:../../libdaisy//src/per/dac.h ****     };
  83:../../libdaisy//src/per/dac.h **** 
  84:../../libdaisy//src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 11834              		.loc 37 84 5 is_stmt 1 view .LVU2689
 11835              	.LBB7096:
 11836              	.LBB7097:
 11837              		.loc 37 84 33 is_stmt 0 view .LVU2690
 11838 0032 0462     		str	r4, [r0, #32]
 11839              	.LVL583:
 11840              		.loc 37 84 33 view .LVU2691
 11841              	.LBE7097:
 11842              	.LBE7096:
 11843              	.LBE7095:
 11844              	.LBB7098:
 11845              	.LBI7098:
  40:../../libdaisy//src/hid/usb.h **** 
 11846              		.loc 8 40 5 is_stmt 1 view .LVU2692
  40:../../libdaisy//src/hid/usb.h **** 
 11847              		.loc 8 40 5 is_stmt 0 view .LVU2693
 11848              	.LBE7098:
 11849              	.LBB7099:
 11850              	.LBI7099:
  77:../../libdaisy//src/sys/system.h ****     ~System() {}
 11851              		.loc 7 77 5 is_stmt 1 view .LVU2694
  77:../../libdaisy//src/sys/system.h ****     ~System() {}
 11852              		.loc 7 77 5 is_stmt 0 view .LVU2695
 11853              	.LBE7099:
 11854              	.LBE7100:
 11855              	.LBE7101:
  19:src/main.cpp  **** 
 11856              		.loc 18 19 18 view .LVU2696
 11857 0034 FFF7FEFF 		bl	__aeabi_atexit
 11858              	.LVL584:
 11859              	.LBB7102:
 11860              	.LBI7102:
  85:../../libdaisy//src/per/uart.h ****         }
  86:../../libdaisy//src/per/uart.h **** 
  87:../../libdaisy//src/per/uart.h ****         Peripheral periph;
  88:../../libdaisy//src/per/uart.h ****         StopBits   stopbits;
  89:../../libdaisy//src/per/uart.h ****         Parity     parity;
  90:../../libdaisy//src/per/uart.h ****         Mode       mode;
  91:../../libdaisy//src/per/uart.h ****         WordLength wordlength;
  92:../../libdaisy//src/per/uart.h ****         uint32_t   baudrate;
  93:../../libdaisy//src/per/uart.h ****     };
  94:../../libdaisy//src/per/uart.h **** 
  95:../../libdaisy//src/per/uart.h **** 
  96:../../libdaisy//src/per/uart.h ****     UartHandler() : pimpl_(nullptr) {}
 11861              		.loc 29 96 5 is_stmt 1 view .LVU2697
 11862              	.LBB7103:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 525


 11863              	.LBB7104:
 11864              		.loc 29 96 35 is_stmt 0 view .LVU2698
 11865 0038 364B     		ldr	r3, .L340+24
 11866              	.LBE7104:
 11867              	.LBE7103:
 11868              	.LBE7102:
 11869              	.LBB7107:
 11870              	.LBB7108:
 11871              	.LBB7109:
  70:../../libdaisy//src/per/tim.h ****     TimerHandle(const TimerHandle& other) = default;
 11872              		.loc 5 70 35 view .LVU2699
 11873 003a 3748     		ldr	r0, .L340+28
 11874              	.LBE7109:
 11875              	.LBE7108:
 11876              	.LBE7107:
  22:src/main.cpp  **** daisy::GPIO gpio;
 11877              		.loc 18 22 20 view .LVU2700
 11878 003c 304A     		ldr	r2, .L340+4
 11879 003e 3749     		ldr	r1, .L340+32
 11880              	.LBB7112:
 11881              	.LBB7106:
 11882              	.LBB7105:
 11883              		.loc 29 96 35 view .LVU2701
 11884 0040 1C60     		str	r4, [r3]
 11885              	.LVL585:
 11886              		.loc 29 96 35 view .LVU2702
 11887              	.LBE7105:
 11888              	.LBE7106:
 11889              	.LBE7112:
 11890              	.LBB7113:
 11891              	.LBI7107:
  70:../../libdaisy//src/per/tim.h ****     TimerHandle(const TimerHandle& other) = default;
 11892              		.loc 5 70 5 is_stmt 1 view .LVU2703
 11893              	.LBB7111:
 11894              	.LBB7110:
  70:../../libdaisy//src/per/tim.h ****     TimerHandle(const TimerHandle& other) = default;
 11895              		.loc 5 70 35 is_stmt 0 view .LVU2704
 11896 0042 0460     		str	r4, [r0]
 11897              	.LBE7110:
 11898              	.LBE7111:
 11899              	.LBE7113:
  22:src/main.cpp  **** daisy::GPIO gpio;
 11900              		.loc 18 22 20 view .LVU2705
 11901 0044 FFF7FEFF 		bl	__aeabi_atexit
 11902              	.LVL586:
 11903              	.LBB7114:
 11904              	.LBI7114:
 11905              		.file 38 "../../libdaisy//src/per/gpio.h"
   1:../../libdaisy//src/per/gpio.h **** #pragma once
   2:../../libdaisy//src/per/gpio.h **** #ifndef DSY_GPIO_H
   3:../../libdaisy//src/per/gpio.h **** #define DSY_GPIO_H
   4:../../libdaisy//src/per/gpio.h **** #include "daisy_core.h"
   5:../../libdaisy//src/per/gpio.h **** 
   6:../../libdaisy//src/per/gpio.h **** #ifdef __cplusplus
   7:../../libdaisy//src/per/gpio.h **** 
   8:../../libdaisy//src/per/gpio.h **** namespace daisy
   9:../../libdaisy//src/per/gpio.h **** {
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 526


  10:../../libdaisy//src/per/gpio.h **** /** @brief General Purpose I/O control 
  11:../../libdaisy//src/per/gpio.h ****  *  @details peripheral control over a single GPIO
  12:../../libdaisy//src/per/gpio.h ****  *  @ingroup peripheral
  13:../../libdaisy//src/per/gpio.h ****  *   
  14:../../libdaisy//src/per/gpio.h ****  *  Button Input (with internal Pullup resistor)
  15:../../libdaisy//src/per/gpio.h ****  *  @include GPIO_Input.cpp 
  16:../../libdaisy//src/per/gpio.h ****  * 
  17:../../libdaisy//src/per/gpio.h ****  *  Output Example (perfect for blinking an LED)
  18:../../libdaisy//src/per/gpio.h ****  *  @include GPIO_Output.cpp
  19:../../libdaisy//src/per/gpio.h ****  * 
  20:../../libdaisy//src/per/gpio.h **** */
  21:../../libdaisy//src/per/gpio.h **** class GPIO
  22:../../libdaisy//src/per/gpio.h **** {
  23:../../libdaisy//src/per/gpio.h ****   public:
  24:../../libdaisy//src/per/gpio.h ****     /** @brief Mode of operation for the specified GPIO */
  25:../../libdaisy//src/per/gpio.h ****     enum class Mode
  26:../../libdaisy//src/per/gpio.h ****     {
  27:../../libdaisy//src/per/gpio.h ****         INPUT,     /**< Input for reading state of pin */
  28:../../libdaisy//src/per/gpio.h ****         OUTPUT,    /**< Output w/ push-pull configuration */
  29:../../libdaisy//src/per/gpio.h ****         OUTPUT_OD, /**< Output w/ open-drain configuration */
  30:../../libdaisy//src/per/gpio.h ****         ANALOG,    /**< Analog for connection to ADC or DAC peripheral */
  31:../../libdaisy//src/per/gpio.h ****     };
  32:../../libdaisy//src/per/gpio.h **** 
  33:../../libdaisy//src/per/gpio.h ****     /** @brief Configures whether an internal Pull up or Pull down resistor is used. 
  34:../../libdaisy//src/per/gpio.h ****      *  
  35:../../libdaisy//src/per/gpio.h ****      * Internal Pull up/down resistors are typically 40k ohms, and will be between
  36:../../libdaisy//src/per/gpio.h ****      * 30k and 50k
  37:../../libdaisy//src/per/gpio.h ****      * 
  38:../../libdaisy//src/per/gpio.h ****      * When the Pin is configured in Analog mode, the pull up/down resistors are
  39:../../libdaisy//src/per/gpio.h ****      * disabled by hardware. 
  40:../../libdaisy//src/per/gpio.h ****      */
  41:../../libdaisy//src/per/gpio.h ****     enum class Pull
  42:../../libdaisy//src/per/gpio.h ****     {
  43:../../libdaisy//src/per/gpio.h ****         NOPULL,   /**< No pull up resistor */
  44:../../libdaisy//src/per/gpio.h ****         PULLUP,   /**< Internal pull up enabled */
  45:../../libdaisy//src/per/gpio.h ****         PULLDOWN, /**< Internal pull down enabled*/
  46:../../libdaisy//src/per/gpio.h ****     };
  47:../../libdaisy//src/per/gpio.h **** 
  48:../../libdaisy//src/per/gpio.h ****     /** @brief Output speed controls the drive strength, and slew rate of the pin */
  49:../../libdaisy//src/per/gpio.h ****     enum class Speed
  50:../../libdaisy//src/per/gpio.h ****     {
  51:../../libdaisy//src/per/gpio.h ****         LOW,
  52:../../libdaisy//src/per/gpio.h ****         MEDIUM,
  53:../../libdaisy//src/per/gpio.h ****         HIGH,
  54:../../libdaisy//src/per/gpio.h ****         VERY_HIGH,
  55:../../libdaisy//src/per/gpio.h ****     };
  56:../../libdaisy//src/per/gpio.h **** 
  57:../../libdaisy//src/per/gpio.h ****     /** @brief Configuration for a given GPIO */
  58:../../libdaisy//src/per/gpio.h ****     struct Config
  59:../../libdaisy//src/per/gpio.h ****     {
  60:../../libdaisy//src/per/gpio.h ****         Pin   pin;
  61:../../libdaisy//src/per/gpio.h ****         Mode  mode;
  62:../../libdaisy//src/per/gpio.h ****         Pull  pull;
  63:../../libdaisy//src/per/gpio.h ****         Speed speed;
  64:../../libdaisy//src/per/gpio.h **** 
  65:../../libdaisy//src/per/gpio.h ****         /** Constructor with no arguments will prepare an invalid GPIO set as
  66:../../libdaisy//src/per/gpio.h ****          *  an input, with no pullup. 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 527


  67:../../libdaisy//src/per/gpio.h ****          */
  68:../../libdaisy//src/per/gpio.h ****         Config()
  69:../../libdaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
  70:../../libdaisy//src/per/gpio.h ****         {
  71:../../libdaisy//src/per/gpio.h ****         }
  72:../../libdaisy//src/per/gpio.h ****     };
  73:../../libdaisy//src/per/gpio.h **** 
  74:../../libdaisy//src/per/gpio.h ****     GPIO() {}
 11906              		.loc 38 74 5 is_stmt 1 view .LVU2706
 11907              	.LBB7115:
 11908              	.LBB7116:
 11909              	.LBI7116:
  68:../../libdaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 11910              		.loc 38 68 9 view .LVU2707
 11911              	.LBB7117:
 11912              	.LBB7118:
 11913              	.LBB7119:
 11914              	.LBI7119:
 272:../../libdaisy//src/daisy_core.h **** 
 11915              		.loc 30 272 15 view .LVU2708
 272:../../libdaisy//src/daisy_core.h **** 
 11916              		.loc 30 272 15 is_stmt 0 view .LVU2709
 11917              	.LBE7119:
 11918              	.LBE7118:
 11919              	.LBE7117:
 11920              	.LBE7116:
 11921              		.loc 38 74 12 view .LVU2710
 11922 0048 354B     		ldr	r3, .L340+36
 11923 004a 4FF60B71 		movw	r1, #65291
 11924              	.LBE7115:
 11925              	.LBE7114:
 11926              	.LBB7124:
 11927              	.LBB7078:
  92:src/parameter_controller.h **** 
 11928              		.loc 19 92 7 view .LVU2711
 11929 004e 354A     		ldr	r2, .L340+40
 11930 0050 05F55C7C 		add	ip, r5, #880
 11931 0054 2A60     		str	r2, [r5]
 11932              	.LBE7078:
 11933              	.LBE7124:
 11934              	.LBB7125:
 11935              	.LBB7123:
 11936              	.LBB7122:
 11937              	.LBB7121:
 11938              	.LBB7120:
  69:../../libdaisy//src/per/gpio.h ****         {
 11939              		.loc 38 69 73 view .LVU2712
 11940 0056 C3E90014 		strd	r1, r4, [r3]
 11941 005a C3E90244 		strd	r4, r4, [r3, #8]
 11942              	.LVL587:
  69:../../libdaisy//src/per/gpio.h ****         {
 11943              		.loc 38 69 73 view .LVU2713
 11944              	.LBE7120:
 11945              	.LBE7121:
 11946              	.LBE7122:
 11947              	.LBE7123:
 11948              	.LBE7125:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 528


 11949              	.LBB7126:
 11950              	.LBI6974:
  92:src/parameter_controller.h **** 
 11951              		.loc 19 92 7 is_stmt 1 view .LVU2714
 11952              	.LBB7079:
  92:src/parameter_controller.h **** 
 11953              		.loc 19 92 7 view .LVU2715
 11954 005e 2B46     		mov	r3, r5
 11955              	.L337:
 11956              	.LVL588:
 11957              	.LBB6976:
 11958              	.LBI6976:
  38:src/parameter_controller.h **** 	std::string label;
 11959              		.loc 19 38 8 view .LVU2716
 11960              	.LBB6977:
 11961              	.LBI6977:
 431:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(is_nothrow_default_constructible<_Alloc>::value)
 11962              		.loc 20 431 7 view .LVU2717
 11963              	.LBB6978:
 11964              	.LBI6978:
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11965              		.loc 20 190 7 view .LVU2718
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 11966              		.loc 20 190 7 is_stmt 0 view .LVU2719
 11967              	.LBE6978:
 11968              	.LBB6979:
 11969              	.LBI6979:
 144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 11970              		.loc 17 144 7 is_stmt 1 view .LVU2720
 11971              	.LBB6980:
 11972              	.LBI6980:
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11973              		.loc 16 79 7 view .LVU2721
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11974              		.loc 16 79 7 is_stmt 0 view .LVU2722
 11975              	.LBE6980:
 11976              	.LBE6979:
 11977              	.LBB6981:
 11978              	.LBI6981:
 159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 11979              		.loc 20 159 2 is_stmt 1 view .LVU2723
 11980              	.LBB6982:
 11981              	.LBB6983:
 11982              	.LBI6983:
 11983              		.loc 22 101 5 view .LVU2724
 11984              		.loc 22 101 5 is_stmt 0 view .LVU2725
 11985              	.LBE6983:
 11986              	.LBB6984:
 11987              	.LBI6984:
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 11988              		.loc 17 147 7 is_stmt 1 view .LVU2726
 11989              	.LBB6985:
 11990              	.LBI6985:
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11991              		.loc 16 82 7 view .LVU2727
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 11992              		.loc 16 82 7 is_stmt 0 view .LVU2728
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 529


 11993              	.LBE6985:
 11994              	.LBE6984:
 11995              	.LBE6982:
 11996              	.LBE6981:
 11997              	.LBB6987:
 11998              	.LBB6988:
 11999              	.LBB6989:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12000              		.loc 20 183 26 view .LVU2729
 12001 0060 0024     		movs	r4, #0
 12002              	.LBE6989:
 12003              	.LBE6988:
 12004              	.LBE6987:
 12005              	.LBB6996:
 12006              	.LBB6986:
 160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 12007              		.loc 20 160 46 view .LVU2730
 12008 0062 03F10C00 		add	r0, r3, #12
 12009              	.LVL589:
 160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 12010              		.loc 20 160 46 view .LVU2731
 12011              	.LBE6986:
 12012              	.LBE6996:
 12013              	.LBE6977:
 12014              	.LBB6999:
 12015              	.LBB7000:
 12016              	.LBB7001:
 12017 0066 03F12401 		add	r1, r3, #36
 12018              	.LBE7001:
 12019              	.LBE7000:
 12020              	.LBE6999:
 12021              	.LBB7018:
 12022              	.LBB7019:
 12023              	.LBB7020:
 12024 006a 03F13C02 		add	r2, r3, #60
 12025              	.LBE7020:
 12026              	.LBE7019:
 12027              	.LBE7018:
 12028              	.LBB7037:
 12029              	.LBB6997:
 12030              	.LBB6991:
 12031              	.LBB6992:
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 12032              		.loc 24 322 14 view .LVU2732
 12033 006e 1C73     		strb	r4, [r3, #12]
 12034              	.LBE6992:
 12035              	.LBE6991:
 12036              	.LBE6997:
 12037              	.LBE7037:
 12038              	.LBB7038:
 12039              	.LBB7006:
 12040              	.LBB7007:
 12041              	.LBB7008:
 12042 0070 83F82440 		strb	r4, [r3, #36]
 12043              	.LBE7008:
 12044              	.LBE7007:
 12045              	.LBE7006:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 530


 12046              	.LBE7038:
 12047              	.LBB7039:
 12048              	.LBB7025:
 12049              	.LBB7026:
 12050              	.LBB7027:
 12051 0074 83F83C40 		strb	r4, [r3, #60]
 12052              	.LBE7027:
 12053              	.LBE7026:
 12054              	.LBE7025:
 12055              	.LBE7039:
 12056              	.LBB7040:
 12057              	.LBB6998:
 12058              	.LBB6994:
 12059              	.LBB6990:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12060              		.loc 20 183 26 view .LVU2733
 12061 0078 C3E90104 		strd	r0, r4, [r3, #4]
 12062              	.LVL590:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12063              		.loc 20 183 26 view .LVU2734
 12064              	.LBE6990:
 12065              	.LBE6994:
 12066              	.LBB6995:
 12067              	.LBI6991:
 321:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 12068              		.loc 24 321 7 is_stmt 1 view .LVU2735
 12069              	.LBB6993:
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 12070              		.loc 24 322 9 view .LVU2736
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 12071              		.loc 24 322 9 is_stmt 0 view .LVU2737
 12072              	.LBE6993:
 12073              	.LBE6995:
 12074              	.LBE6998:
 12075              	.LBE7040:
 12076              	.LBB7041:
 12077              	.LBI6999:
 431:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(is_nothrow_default_constructible<_Alloc>::value)
 12078              		.loc 20 431 7 is_stmt 1 view .LVU2738
 12079              	.LBB7013:
 12080              	.LBI7013:
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12081              		.loc 20 190 7 view .LVU2739
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12082              		.loc 20 190 7 is_stmt 0 view .LVU2740
 12083              	.LBE7013:
 12084              	.LBB7014:
 12085              	.LBI7014:
 144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 12086              		.loc 17 144 7 is_stmt 1 view .LVU2741
 12087              	.LBB7015:
 12088              	.LBI7015:
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12089              		.loc 16 79 7 view .LVU2742
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12090              		.loc 16 79 7 is_stmt 0 view .LVU2743
 12091              	.LBE7015:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 531


 12092              	.LBE7014:
 12093              	.LBB7016:
 12094              	.LBI7000:
 159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 12095              		.loc 20 159 2 is_stmt 1 view .LVU2744
 12096              	.LBB7005:
 12097              	.LBB7002:
 12098              	.LBI7002:
 12099              		.loc 22 101 5 view .LVU2745
 12100              		.loc 22 101 5 is_stmt 0 view .LVU2746
 12101              	.LBE7002:
 12102              	.LBB7003:
 12103              	.LBI7003:
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 12104              		.loc 17 147 7 is_stmt 1 view .LVU2747
 12105              	.LBB7004:
 12106              	.LBI7004:
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12107              		.loc 16 82 7 view .LVU2748
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12108              		.loc 16 82 7 is_stmt 0 view .LVU2749
 12109              	.LBE7004:
 12110              	.LBE7003:
 12111              	.LBE7005:
 12112              	.LBE7016:
 12113              	.LBB7017:
 12114              	.LBB7010:
 12115              	.LBB7011:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12116              		.loc 20 183 26 view .LVU2750
 12117 007c C3E90714 		strd	r1, r4, [r3, #28]
 12118              	.LVL591:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12119              		.loc 20 183 26 view .LVU2751
 12120              	.LBE7011:
 12121              	.LBE7010:
 12122              	.LBB7012:
 12123              	.LBI7007:
 321:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 12124              		.loc 24 321 7 is_stmt 1 view .LVU2752
 12125              	.LBB7009:
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 12126              		.loc 24 322 9 view .LVU2753
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 12127              		.loc 24 322 9 is_stmt 0 view .LVU2754
 12128              	.LBE7009:
 12129              	.LBE7012:
 12130              	.LBE7017:
 12131              	.LBE7041:
 12132              	.LBB7042:
 12133              	.LBI7018:
 431:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(is_nothrow_default_constructible<_Alloc>::value)
 12134              		.loc 20 431 7 is_stmt 1 view .LVU2755
 12135              	.LBB7032:
 12136              	.LBI7032:
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12137              		.loc 20 190 7 view .LVU2756
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 532


 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 12138              		.loc 20 190 7 is_stmt 0 view .LVU2757
 12139              	.LBE7032:
 12140              	.LBB7033:
 12141              	.LBI7033:
 144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 12142              		.loc 17 144 7 is_stmt 1 view .LVU2758
 12143              	.LBB7034:
 12144              	.LBI7034:
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12145              		.loc 16 79 7 view .LVU2759
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12146              		.loc 16 79 7 is_stmt 0 view .LVU2760
 12147              	.LBE7034:
 12148              	.LBE7033:
 12149              	.LBB7035:
 12150              	.LBI7019:
 159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 12151              		.loc 20 159 2 is_stmt 1 view .LVU2761
 12152              	.LBB7024:
 12153              	.LBB7021:
 12154              	.LBI7021:
 12155              		.loc 22 101 5 view .LVU2762
 12156              		.loc 22 101 5 is_stmt 0 view .LVU2763
 12157              	.LBE7021:
 12158              	.LBB7022:
 12159              	.LBI7022:
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 12160              		.loc 17 147 7 is_stmt 1 view .LVU2764
 12161              	.LBB7023:
 12162              	.LBI7023:
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12163              		.loc 16 82 7 view .LVU2765
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12164              		.loc 16 82 7 is_stmt 0 view .LVU2766
 12165              	.LBE7023:
 12166              	.LBE7022:
 12167              	.LBE7024:
 12168              	.LBE7035:
 12169              	.LBB7036:
 12170              	.LBB7029:
 12171              	.LBB7030:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12172              		.loc 20 183 26 view .LVU2767
 12173 0080 C3E90D24 		strd	r2, r4, [r3, #52]
 12174              	.LVL592:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 12175              		.loc 20 183 26 view .LVU2768
 12176              	.LBE7030:
 12177              	.LBE7029:
 12178              	.LBB7031:
 12179              	.LBI7026:
 321:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 12180              		.loc 24 321 7 is_stmt 1 view .LVU2769
 12181              	.LBB7028:
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 12182              		.loc 24 322 9 view .LVU2770
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 533


 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 12183              		.loc 24 322 9 is_stmt 0 view .LVU2771
 12184              	.LBE7028:
 12185              	.LBE7031:
 12186              	.LBE7036:
 12187              	.LBE7042:
 12188              	.LBE6976:
  92:src/parameter_controller.h **** 
 12189              		.loc 19 92 7 is_stmt 1 view .LVU2772
  92:src/parameter_controller.h **** 
 12190              		.loc 19 92 7 view .LVU2773
 12191 0084 5833     		adds	r3, r3, #88
 12192              	.LVL593:
  92:src/parameter_controller.h **** 
 12193              		.loc 19 92 7 is_stmt 0 view .LVU2774
 12194 0086 6345     		cmp	r3, ip
 12195 0088 EAD1     		bne	.L337
 12196              	.LVL594:
 12197              	.LBB7043:
 12198              	.LBI7043:
  66:src/parameter_controller.h ****     ~ParameterMap() {};
 12199              		.loc 19 66 5 is_stmt 1 view .LVU2775
 12200              	.LBB7044:
 12201              	.LBI7044:
 141:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 12202              		.loc 13 141 7 view .LVU2776
 12203              	.LBB7045:
 12204              	.LBI7045:
 451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(size_type __bkt_count_hint,
 12205              		.loc 12 451 7 view .LVU2777
 12206              	.LBB7046:
 12207              	.LBB7047:
 12208              	.LBI7047:
1982:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Hashtable_alloc(const _Hashtable_alloc&) = default;
 12209              		.loc 14 1982 7 view .LVU2778
 12210              	.LBB7048:
 12211              	.LBI7048:
1112:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 12212              		.loc 14 1112 7 view .LVU2779
 12213              	.LBB7049:
 12214              	.LBI7049:
 144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 12215              		.loc 17 144 7 view .LVU2780
 12216              	.LBB7050:
 12217              	.LBI7050:
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12218              		.loc 16 79 7 view .LVU2781
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12219              		.loc 16 79 7 is_stmt 0 view .LVU2782
 12220              	.LBE7050:
 12221              	.LBE7049:
 12222              	.LBE7048:
 12223              	.LBE7047:
 451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(size_type __bkt_count_hint,
 12224              		.loc 12 451 7 view .LVU2783
 12225 008a 2748     		ldr	r0, .L340+44
 12226              	.LVL595:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 534


 12227              	.LBB7051:
 12228              	.LBB7052:
 12229              	.LBB7053:
 450:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 12230              		.loc 14 450 48 view .LVU2784
 12231 008c 4FF07E56 		mov	r6, #1065353216
 12232              	.LBE7053:
 12233              	.LBE7052:
 12234              	.LBE7051:
 451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(size_type __bkt_count_hint,
 12235              		.loc 12 451 7 view .LVU2785
 12236 0090 0127     		movs	r7, #1
 12237              	.LBE7046:
 12238              	.LBE7045:
 12239              	.LBE7044:
 12240              	.LBE7043:
 12241              	.LBE7079:
 12242              	.LBE7126:
  97:src/main.cpp  **** 
 12243              		.loc 18 97 17 view .LVU2786
 12244 0092 1B4A     		ldr	r2, .L340+4
 12245              	.LVL596:
 12246              	.LBB7127:
 12247              	.LBB7080:
 12248              	.LBB7076:
 12249              	.LBB7067:
 12250              	.LBB7064:
 12251              	.LBB7061:
 451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(size_type __bkt_count_hint,
 12252              		.loc 12 451 7 view .LVU2787
 12253 0094 C5F87403 		str	r0, [r5, #884]
 12254              	.LBE7061:
 12255              	.LBE7064:
 12256              	.LBE7067:
 12257              	.LBE7076:
 12258              	.LBE7080:
 12259              	.LBE7127:
  97:src/main.cpp  **** 
 12260              		.loc 18 97 17 view .LVU2788
 12261 0098 A0F56370 		sub	r0, r0, #908
 12262 009c 2349     		ldr	r1, .L340+48
 12263              	.LVL597:
 12264              	.LBB7128:
 12265              	.LBB7081:
 12266              	.LBB7077:
 12267              	.LBB7068:
 12268              	.LBB7065:
 12269              	.LBB7062:
 12270              	.LBB7056:
 12271              	.LBB7057:
 12272              	.LBB7058:
 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 12273              		.loc 14 218 41 view .LVU2789
 12274 009e C5F87C43 		str	r4, [r5, #892]
 12275              	.LBE7058:
 12276              	.LBE7057:
 12277              	.LBE7056:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 535


 451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(size_type __bkt_count_hint,
 12278              		.loc 12 451 7 view .LVU2790
 12279 00a2 C5F87873 		str	r7, [r5, #888]
 12280              	.LVL598:
 12281              	.LBB7059:
 12282              	.LBI7056:
 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 12283              		.loc 14 218 5 is_stmt 1 view .LVU2791
 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 12284              		.loc 14 218 5 is_stmt 0 view .LVU2792
 12285              	.LBE7059:
 451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(size_type __bkt_count_hint,
 12286              		.loc 12 451 7 view .LVU2793
 12287 00a6 C5F88043 		str	r4, [r5, #896]
 12288              	.LVL599:
 12289              	.LBB7060:
 12290              	.LBI7051:
 449:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : _M_max_load_factor(__z), _M_next_resize(0) { }
 12291              		.loc 14 449 5 is_stmt 1 view .LVU2794
 12292              	.LBB7055:
 12293              	.LBB7054:
 450:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 12294              		.loc 14 450 48 is_stmt 0 view .LVU2795
 12295 00aa C5F88463 		str	r6, [r5, #900]	@ float
 12296              	.LBE7054:
 12297              	.LBE7055:
 12298              	.LBE7060:
 12299              	.LBE7062:
 12300              	.LBE7065:
 12301              	.LBE7068:
 12302              	.LBB7069:
 12303              	.LBB7070:
 12304              	.LBB7071:
 12305              	.LBB7072:
 295:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 12306              		.loc 14 295 19 view .LVU2796
 12307 00ae C5F89043 		str	r4, [r5, #912]
 12308              	.LBE7072:
 12309              	.LBE7071:
 12310              	.LBE7070:
 12311              	.LBE7069:
 12312              	.LBB7074:
 12313              	.LBB7066:
 12314              	.LBB7063:
 451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(size_type __bkt_count_hint,
 12315              		.loc 12 451 7 view .LVU2797
 12316 00b2 C5E9E244 		strd	r4, r4, [r5, #904]
 12317              	.LVL600:
 451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(size_type __bkt_count_hint,
 12318              		.loc 12 451 7 view .LVU2798
 12319              	.LBE7063:
 12320              	.LBE7066:
 12321              	.LBE7074:
 12322              	.LBB7075:
 12323              	.LBI7069:
 336:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : __base_type(0) { }
 12324              		.loc 14 336 7 is_stmt 1 view .LVU2799
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 536


 12325              	.LBB7073:
 12326              	.LBI7070:
 294:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : _M_cur(__p) { }
 12327              		.loc 14 294 7 view .LVU2800
 294:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : _M_cur(__p) { }
 12328              		.loc 14 294 7 is_stmt 0 view .LVU2801
 12329              	.LBE7073:
 12330              	.LBE7075:
 12331              	.LBE7077:
 12332              	.LBE7081:
 12333              	.LBE7128:
  97:src/main.cpp  **** 
 12334              		.loc 18 97 17 view .LVU2802
 12335 00b6 FFF7FEFF 		bl	__aeabi_atexit
 12336              	.LVL601:
 12337              	.LBB7129:
 12338              	.LBI7129:
  85:../../DaisySP//Source/Effects/phaser.h ****     ~Phaser() {}
 12339              		.loc 4 85 5 is_stmt 1 view .LVU2803
 12340              	.LBE7129:
 12341              	.LBE7164:
 12342              	.LBE7167:
  85:../../DaisySP//Source/Effects/phaser.h ****     ~Phaser() {}
 12343              		.loc 4 85 14 view .LVU2804
 12344              	.LBB7168:
 12345              	.LBB7165:
 108:src/main.cpp  **** //float gain = 0.0f;
 12346              		.loc 18 108 17 is_stmt 0 view .LVU2805
 12347 00ba 114A     		ldr	r2, .L340+4
 12348 00bc 1C49     		ldr	r1, .L340+52
 12349 00be 1D48     		ldr	r0, .L340+56
 12350 00c0 FFF7FEFF 		bl	__aeabi_atexit
 12351              	.LVL602:
 12352              	.LBB7130:
 12353              	.LBI7130:
  66:src/parameter_controller.h ****     ~ParameterMap() {};
 12354              		.loc 19 66 5 is_stmt 1 view .LVU2806
 12355              	.LBB7131:
 12356              	.LBI7131:
 141:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 12357              		.loc 13 141 7 view .LVU2807
 12358              	.LBB7132:
 12359              	.LBI7132:
 451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(size_type __bkt_count_hint,
 12360              		.loc 12 451 7 view .LVU2808
 12361              	.LBB7133:
 12362              	.LBB7134:
 12363              	.LBI7134:
1982:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Hashtable_alloc(const _Hashtable_alloc&) = default;
 12364              		.loc 14 1982 7 view .LVU2809
 12365              	.LBB7135:
 12366              	.LBI7135:
1112:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 12367              		.loc 14 1112 7 view .LVU2810
 12368              	.LBB7136:
 12369              	.LBI7136:
 144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 537


 12370              		.loc 17 144 7 view .LVU2811
 12371              	.LBB7137:
 12372              	.LBI7137:
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12373              		.loc 16 79 7 view .LVU2812
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 12374              		.loc 16 79 7 is_stmt 0 view .LVU2813
 12375              	.LBE7137:
 12376              	.LBE7136:
 12377              	.LBE7135:
 12378              	.LBE7134:
 451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(size_type __bkt_count_hint,
 12379              		.loc 12 451 7 view .LVU2814
 12380 00c4 1C48     		ldr	r0, .L340+60
 12381              	.LBE7133:
 12382              	.LBE7132:
 12383              	.LBE7131:
 12384              	.LBE7130:
 114:src/main.cpp  **** static daisysp::Autowah _autowah;
 12385              		.loc 18 114 14 view .LVU2815
 12386 00c6 0E4A     		ldr	r2, .L340+4
 12387              	.LBB7160:
 12388              	.LBB7151:
 12389              	.LBB7148:
 12390              	.LBB7145:
 451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(size_type __bkt_count_hint,
 12391              		.loc 12 451 7 view .LVU2816
 12392 00c8 00F11803 		add	r3, r0, #24
 12393              	.LBE7145:
 12394              	.LBE7148:
 12395              	.LBE7151:
 12396              	.LBE7160:
 114:src/main.cpp  **** static daisysp::Autowah _autowah;
 12397              		.loc 18 114 14 view .LVU2817
 12398 00cc 1B49     		ldr	r1, .L340+64
 12399              	.LBB7161:
 12400              	.LBB7152:
 12401              	.LBB7149:
 12402              	.LBB7146:
 451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(size_type __bkt_count_hint,
 12403              		.loc 12 451 7 view .LVU2818
 12404 00ce 4760     		str	r7, [r0, #4]
 12405              	.LVL603:
 12406              	.LBB7138:
 12407              	.LBI7138:
 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 12408              		.loc 14 218 5 is_stmt 1 view .LVU2819
 12409              	.LBE7138:
 451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(size_type __bkt_count_hint,
 12410              		.loc 12 451 7 is_stmt 0 view .LVU2820
 12411 00d0 0360     		str	r3, [r0]
 12412              	.LBB7141:
 12413              	.LBB7139:
 12414              	.LBB7140:
 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 12415              		.loc 14 218 41 view .LVU2821
 12416 00d2 8460     		str	r4, [r0, #8]
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 538


 12417              	.LVL604:
 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 12418              		.loc 14 218 41 view .LVU2822
 12419              	.LBE7140:
 12420              	.LBE7139:
 12421              	.LBE7141:
 451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(size_type __bkt_count_hint,
 12422              		.loc 12 451 7 view .LVU2823
 12423 00d4 C460     		str	r4, [r0, #12]
 12424              	.LVL605:
 12425              	.LBB7142:
 12426              	.LBI7142:
 449:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : _M_max_load_factor(__z), _M_next_resize(0) { }
 12427              		.loc 14 449 5 is_stmt 1 view .LVU2824
 12428              	.LBB7143:
 12429              	.LBB7144:
 450:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 12430              		.loc 14 450 48 is_stmt 0 view .LVU2825
 12431 00d6 0661     		str	r6, [r0, #16]	@ float
 12432              	.LBE7144:
 12433              	.LBE7143:
 12434              	.LBE7142:
 12435              	.LBE7146:
 12436              	.LBE7149:
 12437              	.LBE7152:
 12438              	.LBB7153:
 12439              	.LBB7154:
 12440              	.LBB7155:
 12441              	.LBB7156:
 295:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 12442              		.loc 14 295 19 view .LVU2826
 12443 00d8 C461     		str	r4, [r0, #28]
 12444              	.LBE7156:
 12445              	.LBE7155:
 12446              	.LBE7154:
 12447              	.LBE7153:
 12448              	.LBB7158:
 12449              	.LBB7150:
 12450              	.LBB7147:
 451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(size_type __bkt_count_hint,
 12451              		.loc 12 451 7 view .LVU2827
 12452 00da C0E90544 		strd	r4, r4, [r0, #20]
 12453              	.LVL606:
 451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(size_type __bkt_count_hint,
 12454              		.loc 12 451 7 view .LVU2828
 12455              	.LBE7147:
 12456              	.LBE7150:
 12457              	.LBE7158:
 12458              	.LBB7159:
 12459              	.LBI7153:
 336:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : __base_type(0) { }
 12460              		.loc 14 336 7 is_stmt 1 view .LVU2829
 12461              	.LBB7157:
 12462              	.LBI7154:
 294:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : _M_cur(__p) { }
 12463              		.loc 14 294 7 view .LVU2830
 294:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : _M_cur(__p) { }
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 539


 12464              		.loc 14 294 7 is_stmt 0 view .LVU2831
 12465              	.LBE7157:
 12466              	.LBE7159:
 12467              	.LBE7161:
 114:src/main.cpp  **** static daisysp::Autowah _autowah;
 12468              		.loc 18 114 14 view .LVU2832
 12469 00de FFF7FEFF 		bl	__aeabi_atexit
 12470              	.LVL607:
 12471              	.LBB7162:
 12472              	.LBI7162:
  19:../../DaisySP//Source/Effects/autowah.h ****     ~Autowah() {}
 12473              		.loc 2 19 5 is_stmt 1 view .LVU2833
  19:../../DaisySP//Source/Effects/autowah.h ****     ~Autowah() {}
 12474              		.loc 2 19 5 is_stmt 0 view .LVU2834
 12475              	.LBE7162:
 115:src/main.cpp  **** static daisysp::Overdrive _overdrive;
 12476              		.loc 18 115 25 view .LVU2835
 12477 00e2 074A     		ldr	r2, .L340+4
 12478 00e4 1649     		ldr	r1, .L340+68
 12479 00e6 1748     		ldr	r0, .L340+72
 12480 00e8 FFF7FEFF 		bl	__aeabi_atexit
 12481              	.LVL608:
 12482              	.LBB7163:
 12483              	.LBI7163:
  23:../../DaisySP//Source/Effects/overdrive.h ****     ~Overdrive() {}
 12484              		.loc 3 23 5 is_stmt 1 view .LVU2836
  23:../../DaisySP//Source/Effects/overdrive.h ****     ~Overdrive() {}
 12485              		.loc 3 23 5 is_stmt 0 view .LVU2837
 12486              	.LBE7163:
 116:src/main.cpp  **** 
 12487              		.loc 18 116 27 view .LVU2838
 12488 00ec 044A     		ldr	r2, .L340+4
 12489 00ee 1649     		ldr	r1, .L340+76
 12490 00f0 1648     		ldr	r0, .L340+80
 12491              	.LBE7165:
 12492              	.LBE7168:
 12493              		.loc 18 266 1 view .LVU2839
 12494 00f2 BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 12495              		.cfi_restore 14
 12496              		.cfi_restore 7
 12497              		.cfi_restore 6
 12498              		.cfi_restore 5
 12499              		.cfi_restore 4
 12500              		.cfi_restore 3
 12501              		.cfi_def_cfa_offset 0
 12502              	.LBB7169:
 12503              	.LBB7166:
 116:src/main.cpp  **** 
 12504              		.loc 18 116 27 view .LVU2840
 12505 00f6 FFF7FEBF 		b	__aeabi_atexit
 12506              	.LVL609:
 12507              	.L341:
 12508 00fa 00BF     		.align	2
 12509              	.L340:
 12510 00fc 00000000 		.word	.LANCHOR2
 12511 0100 00000000 		.word	__dso_handle
 12512 0104 00000000 		.word	_ZN12StateManagerD1Ev
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 540


 12513 0108 00000000 		.word	.LANCHOR8
 12514 010c 00000000 		.word	.LANCHOR3
 12515 0110 00000000 		.word	_ZN5daisy9DaisySeedD1Ev
 12516 0114 00000000 		.word	.LANCHOR4
 12517 0118 00000000 		.word	.LANCHOR6
 12518 011c 00000000 		.word	_ZN5daisy11TimerHandleD1Ev
 12519 0120 00000000 		.word	.LANCHOR7
 12520 0124 08000000 		.word	_ZTV15ParameterConfig+8
 12521 0128 8C030000 		.word	.LANCHOR8+908
 12522 012c 00000000 		.word	_ZN15ParameterConfigD1Ev
 12523 0130 00000000 		.word	_ZN7daisysp6PhaserD1Ev
 12524 0134 00000000 		.word	phaser
 12525 0138 00000000 		.word	.LANCHOR9
 12526 013c 00000000 		.word	_ZN12ParameterMapD1Ev
 12527 0140 00000000 		.word	_ZN7daisysp7AutowahD1Ev
 12528 0144 00000000 		.word	.LANCHOR5
 12529 0148 00000000 		.word	_ZN7daisysp9OverdriveD1Ev
 12530 014c 00000000 		.word	.LANCHOR1
 12531              	.LBE7166:
 12532              	.LBE7169:
 12533              		.cfi_endproc
 12534              	.LFE6603:
 12536              		.section	.init_array,"aw",%init_array
 12537              		.align	2
 12538 0000 00000000 		.word	_GLOBAL__sub_I_stateManager(target1)
 12539              		.weak	_ZTS15ParameterConfig
 12540              		.section	.rodata._ZTS15ParameterConfig,"aG",%progbits,_ZTS15ParameterConfig,comdat
 12541              		.align	2
 12544              	_ZTS15ParameterConfig:
 12545 0000 31355061 		.ascii	"15ParameterConfig\000"
 12545      72616D65 
 12545      74657243 
 12545      6F6E6669 
 12545      6700
 12546              		.weak	_ZTI15ParameterConfig
 12547              		.section	.rodata._ZTI15ParameterConfig,"aG",%progbits,_ZTI15ParameterConfig,comdat
 12548              		.align	2
 12551              	_ZTI15ParameterConfig:
 12552 0000 08000000 		.word	_ZTVN10__cxxabiv117__class_type_infoE+8
 12553 0004 00000000 		.word	_ZTS15ParameterConfig
 12554              		.weak	_ZTS22LMAudioSignalProcessor
 12555              		.section	.rodata._ZTS22LMAudioSignalProcessor,"aG",%progbits,_ZTS22LMAudioSignalProcessor,comdat
 12556              		.align	2
 12559              	_ZTS22LMAudioSignalProcessor:
 12560 0000 32324C4D 		.ascii	"22LMAudioSignalProcessor\000"
 12560      41756469 
 12560      6F536967 
 12560      6E616C50 
 12560      726F6365 
 12561              		.weak	_ZTI22LMAudioSignalProcessor
 12562              		.section	.rodata._ZTI22LMAudioSignalProcessor,"aG",%progbits,_ZTI22LMAudioSignalProcessor,comdat
 12563              		.align	2
 12566              	_ZTI22LMAudioSignalProcessor:
 12567 0000 08000000 		.word	_ZTVN10__cxxabiv117__class_type_infoE+8
 12568 0004 00000000 		.word	_ZTS22LMAudioSignalProcessor
 12569              		.weak	_ZTS11Passthrough
 12570              		.section	.rodata._ZTS11Passthrough,"aG",%progbits,_ZTS11Passthrough,comdat
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 541


 12571              		.align	2
 12574              	_ZTS11Passthrough:
 12575 0000 31315061 		.ascii	"11Passthrough\000"
 12575      73737468 
 12575      726F7567 
 12575      6800
 12576              		.weak	_ZTI11Passthrough
 12577              		.section	.rodata._ZTI11Passthrough,"aG",%progbits,_ZTI11Passthrough,comdat
 12578              		.align	2
 12581              	_ZTI11Passthrough:
 12582 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 12583 0004 00000000 		.word	_ZTS11Passthrough
 12584 0008 00000000 		.word	_ZTI22LMAudioSignalProcessor
 12585              		.weak	_ZTS9GainStage
 12586              		.section	.rodata._ZTS9GainStage,"aG",%progbits,_ZTS9GainStage,comdat
 12587              		.align	2
 12590              	_ZTS9GainStage:
 12591 0000 39476169 		.ascii	"9GainStage\000"
 12591      6E537461 
 12591      676500
 12592              		.weak	_ZTI9GainStage
 12593              		.section	.rodata._ZTI9GainStage,"aG",%progbits,_ZTI9GainStage,comdat
 12594              		.align	2
 12597              	_ZTI9GainStage:
 12598 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 12599 0004 00000000 		.word	_ZTS9GainStage
 12600 0008 00000000 		.word	_ZTI22LMAudioSignalProcessor
 12601              		.weak	_ZTV15ParameterConfig
 12602              		.section	.rodata._ZTV15ParameterConfig,"aG",%progbits,_ZTV15ParameterConfig,comdat
 12603              		.align	2
 12606              	_ZTV15ParameterConfig:
 12607 0000 00000000 		.word	0
 12608 0004 00000000 		.word	_ZTI15ParameterConfig
 12609 0008 00000000 		.word	_ZN15ParameterConfig14initParametersEP12param_config
 12610              		.weak	_ZTV11Passthrough
 12611              		.section	.rodata._ZTV11Passthrough,"aG",%progbits,_ZTV11Passthrough,comdat
 12612              		.align	2
 12615              	_ZTV11Passthrough:
 12616 0000 00000000 		.word	0
 12617 0004 00000000 		.word	_ZTI11Passthrough
 12618 0008 00000000 		.word	_ZN11PassthroughD1Ev
 12619 000c 00000000 		.word	_ZN11PassthroughD0Ev
 12620 0010 00000000 		.word	_ZN11Passthrough18processAudioSampleEf
 12621 0014 00000000 		.word	_ZN11Passthrough17processAudioFrameEPKfPfmm
 12622              		.weak	_ZTV9GainStage
 12623              		.section	.rodata._ZTV9GainStage,"aG",%progbits,_ZTV9GainStage,comdat
 12624              		.align	2
 12627              	_ZTV9GainStage:
 12628 0000 00000000 		.word	0
 12629 0004 00000000 		.word	_ZTI9GainStage
 12630 0008 00000000 		.word	_ZN9GainStageD1Ev
 12631 000c 00000000 		.word	_ZN9GainStageD0Ev
 12632 0010 00000000 		.word	_ZN9GainStage18processAudioSampleEf
 12633 0014 00000000 		.word	_ZN9GainStage17processAudioFrameEPKfPfmm
 12634              		.global	parameterMap
 12635              		.global	params
 12636              		.global	phaser
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 542


 12637              		.global	paramConf
 12638              		.global	paramVal
 12639              		.global	gpio
 12640              		.global	htim1
 12641              		.global	usart1
 12642              		.global	hw
 12643              		.global	stateManager
 12644              		.section	.bss._ZL10_overdrive,"aw",%nobits
 12645              		.align	2
 12646              		.set	.LANCHOR1,. + 0
 12649              	_ZL10_overdrive:
 12650 0000 00000000 		.space	12
 12650      00000000 
 12650      00000000 
 12651              		.section	.bss._ZL8_autowah,"aw",%nobits
 12652              		.align	2
 12653              		.set	.LANCHOR5,. + 0
 12656              	_ZL8_autowah:
 12657 0000 00000000 		.space	80
 12657      00000000 
 12657      00000000 
 12657      00000000 
 12657      00000000 
 12658              		.section	.bss.gpio,"aw",%nobits
 12659              		.align	2
 12660              		.set	.LANCHOR7,. + 0
 12663              	gpio:
 12664 0000 00000000 		.space	20
 12664      00000000 
 12664      00000000 
 12664      00000000 
 12664      00000000 
 12665              		.section	.bss.htim1,"aw",%nobits
 12666              		.align	2
 12667              		.set	.LANCHOR6,. + 0
 12670              	htim1:
 12671 0000 00000000 		.space	4
 12672              		.section	.bss.hw,"aw",%nobits
 12673              		.align	2
 12674              		.set	.LANCHOR3,. + 0
 12677              	hw:
 12678 0000 00000000 		.space	60
 12678      00000000 
 12678      00000000 
 12678      00000000 
 12678      00000000 
 12679              		.section	.bss.paramConf,"aw",%nobits
 12680              		.align	2
 12681              		.set	.LANCHOR8,. + 0
 12684              	paramConf:
 12685 0000 00000000 		.space	916
 12685      00000000 
 12685      00000000 
 12685      00000000 
 12685      00000000 
 12686              		.section	.bss.paramVal,"aw",%nobits
 12687              		.align	2
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 543


 12690              	paramVal:
 12691 0000 00000000 		.space	4
 12692              		.section	.bss.parameterMap,"aw",%nobits
 12693              		.align	2
 12694              		.set	.LANCHOR9,. + 0
 12697              	parameterMap:
 12698 0000 00000000 		.space	32
 12698      00000000 
 12698      00000000 
 12698      00000000 
 12698      00000000 
 12699              		.section	.bss.params,"aw",%nobits
 12700              		.align	2
 12701              		.set	.LANCHOR0,. + 0
 12704              	params:
 12705 0000 00000000 		.space	40
 12705      00000000 
 12705      00000000 
 12705      00000000 
 12705      00000000 
 12706              		.section	.bss.phaser,"aw",%nobits
 12707              		.align	2
 12710              	phaser:
 12711 0000 00000000 		.space	77192
 12711      00000000 
 12711      00000000 
 12711      00000000 
 12711      00000000 
 12712              		.section	.bss.stateManager,"aw",%nobits
 12713              		.align	2
 12714              		.set	.LANCHOR2,. + 0
 12717              	stateManager:
 12718 0000 00000000 		.space	32
 12718      00000000 
 12718      00000000 
 12718      00000000 
 12718      00000000 
 12719              		.section	.bss.usart1,"aw",%nobits
 12720              		.align	2
 12721              		.set	.LANCHOR4,. + 0
 12724              	usart1:
 12725 0000 00000000 		.space	4
 12726              		.text
 12727              	.Letext0:
 12728              		.file 39 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 12729              		.file 40 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 12730              		.file 41 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 12731              		.file 42 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\lib\\gcc\\ar
 12732              		.file 43 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 12733              		.file 44 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 12734              		.file 45 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 12735              		.file 46 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 12736              		.file 47 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 12737              		.file 48 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 12738              		.file 49 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 12739              		.file 50 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 12740              		.file 51 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 544


 12741              		.file 52 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 12742              		.file 53 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 12743              		.file 54 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 12744              		.file 55 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 12745              		.file 56 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 12746              		.file 57 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 12747              		.file 58 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 12748              		.file 59 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 12749              		.file 60 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 12750              		.file 61 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 12751              		.file 62 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 12752              		.file 63 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 12753              		.file 64 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 12754              		.file 65 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 12755              		.file 66 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 12756              		.file 67 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 12757              		.file 68 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 12758              		.file 69 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 12759              		.file 70 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 12760              		.file 71 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 12761              		.file 72 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 12762              		.file 73 "<built-in>"
 12763              		.file 74 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 12764              		.file 75 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 12765              		.file 76 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 12766              		.file 77 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 12767              		.file 78 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 12768              		.file 79 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 12769              		.file 80 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\lib\\gcc\\ar
 12770              		.file 81 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 12771              		.file 82 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 12772              		.file 83 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 12773              		.file 84 "../../DaisySP//Source/Control/adenv.h"
 12774              		.file 85 "../../DaisySP//Source/Utility/dsp.h"
 12775              		.file 86 "../../DaisySP//Source/Utility/delayline.h"
 12776              		.file 87 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 12777              		.file 88 "../../libdaisy//src/per/sai.h"
 12778              		.file 89 "../../libdaisy//src/hid/logger_impl.h"
 12779              		.file 90 "../../libdaisy//src/util/wav_format.h"
 12780              		.file 91 "../../libdaisy//src/dev/max11300.h"
 12781              		.file 92 "../../libdaisy//src/hid/logger.h"
 12782              		.file 93 "../../libdaisy//src/dev/sdram.h"
 12783              		.file 94 "../../libdaisy//src/dev/sr_595.h"
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 545


DEFINED SYMBOLS
                            *ABS*:00000000 main.cpp
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:17     .text._ZN11Passthrough18processAudioSampleEf:00000000 $t
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:26     .text._ZN11Passthrough18processAudioSampleEf:00000000 _ZN11Passthrough18processAudioSampleEf
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:42     .text._ZN11Passthrough17processAudioFrameEPKfPfmm:00000000 $t
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:50     .text._ZN11Passthrough17processAudioFrameEPKfPfmm:00000000 _ZN11Passthrough17processAudioFrameEPKfPfmm
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:68     .text._ZN9GainStage18processAudioSampleEf:00000000 $t
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:76     .text._ZN9GainStage18processAudioSampleEf:00000000 _ZN9GainStage18processAudioSampleEf
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:97     .text._ZN9GainStage17processAudioFrameEPKfPfmm:00000000 $t
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:105    .text._ZN9GainStage17processAudioFrameEPKfPfmm:00000000 _ZN9GainStage17processAudioFrameEPKfPfmm
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:123    .text._ZN7daisysp7AutowahD2Ev:00000000 $t
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:131    .text._ZN7daisysp7AutowahD2Ev:00000000 _ZN7daisysp7AutowahD2Ev
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:131    .text._ZN7daisysp7AutowahD2Ev:00000000 _ZN7daisysp7AutowahD1Ev
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:148    .text._ZN7daisysp9OverdriveD2Ev:00000000 $t
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:156    .text._ZN7daisysp9OverdriveD2Ev:00000000 _ZN7daisysp9OverdriveD2Ev
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:156    .text._ZN7daisysp9OverdriveD2Ev:00000000 _ZN7daisysp9OverdriveD1Ev
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:173    .text._ZN7daisysp6PhaserD2Ev:00000000 $t
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:181    .text._ZN7daisysp6PhaserD2Ev:00000000 _ZN7daisysp6PhaserD2Ev
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:181    .text._ZN7daisysp6PhaserD2Ev:00000000 _ZN7daisysp6PhaserD1Ev
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:198    .text._ZN5daisy11TimerHandleD2Ev:00000000 $t
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:206    .text._ZN5daisy11TimerHandleD2Ev:00000000 _ZN5daisy11TimerHandleD2Ev
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:206    .text._ZN5daisy11TimerHandleD2Ev:00000000 _ZN5daisy11TimerHandleD1Ev
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:223    .text._ZN5daisy9DaisySeedD2Ev:00000000 $t
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:231    .text._ZN5daisy9DaisySeedD2Ev:00000000 _ZN5daisy9DaisySeedD2Ev
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:231    .text._ZN5daisy9DaisySeedD2Ev:00000000 _ZN5daisy9DaisySeedD1Ev
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:272    .text._ZN12StateManagerD2Ev:00000000 $t
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:280    .text._ZN12StateManagerD2Ev:00000000 _ZN12StateManagerD2Ev
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:280    .text._ZN12StateManagerD2Ev:00000000 _ZN12StateManagerD1Ev
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:529    .text._Z13AudioCallbackPKPKfPPfj:00000000 $t
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:537    .text._Z13AudioCallbackPKPKfPPfj:00000000 _Z13AudioCallbackPKPKfPPfj
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:642    .text._Z13AudioCallbackPKPKfPPfj:0000005c $d
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:649    .rodata._ZN5paramC2ERKS_.str1.4:00000000 $d
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:653    .text._ZN5paramC2ERKS_:00000000 $t
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:661    .text._ZN5paramC2ERKS_:00000000 _ZN5paramC2ERKS_
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:1801   .text._ZN5paramC2ERKS_:00000108 $d
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:661    .text._ZN5paramC2ERKS_:00000000 _ZN5paramC1ERKS_
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:1817   .text._ZN15ParameterConfig14initParametersEP12param_config:00000000 $t
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:1825   .text._ZN15ParameterConfig14initParametersEP12param_config:00000000 _ZN15ParameterConfig14initParametersEP12param_config
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:4474   .rodata._Z9UART_InitRN5daisy11UartHandlerE.str1.4:00000000 $d
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:4481   .text._Z9UART_InitRN5daisy11UartHandlerE:00000000 $t
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:4489   .text._Z9UART_InitRN5daisy11UartHandlerE:00000000 _Z9UART_InitRN5daisy11UartHandlerE
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:4656   .text._Z9UART_InitRN5daisy11UartHandlerE:00000054 $d
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:4663   .text._ZNSt10_HashtableIiSt4pairIKi5paramESaIS3_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb0ELb0ELb1EEEEC2ERKSG_:00000000 $t
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:4671   .text._ZNSt10_HashtableIiSt4pairIKi5paramESaIS3_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb0ELb0ELb1EEEEC2ERKSG_:00000000 _ZNSt10_HashtableIiSt4pairIKi5paramESaIS3_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb0ELb0ELb1EEEEC2ERKSG_
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:4671   .text._ZNSt10_HashtableIiSt4pairIKi5paramESaIS3_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb0ELb0ELb1EEEEC2ERKSG_:00000000 _ZNSt10_HashtableIiSt4pairIKi5paramESaIS3_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb0ELb0ELb1EEEEC1ERKSG_
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:5397   .text._ZNSt10_HashtableIiSt4pairIKi5paramESaIS3_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb0ELb0ELb1EEEE5clearEv:00000000 $t
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:5405   .text._ZNSt10_HashtableIiSt4pairIKi5paramESaIS3_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb0ELb0ELb1EEEE5clearEv:00000000 _ZNSt10_HashtableIiSt4pairIKi5paramESaIS3_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb0ELb0ELb1EEEE5clearEv
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:5830   .text._ZN12ParameterMapD2Ev:00000000 $t
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:5838   .text._ZN12ParameterMapD2Ev:00000000 _ZN12ParameterMapD2Ev
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:5838   .text._ZN12ParameterMapD2Ev:00000000 _ZN12ParameterMapD1Ev
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:5973   .text._ZN11PassthroughD2Ev:00000000 $t
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:5981   .text._ZN11PassthroughD2Ev:00000000 _ZN11PassthroughD2Ev
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:6131   .text._ZN11PassthroughD2Ev:00000024 $d
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:12615  .rodata._ZTV11Passthrough:00000000 _ZTV11Passthrough
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:5981   .text._ZN11PassthroughD2Ev:00000000 _ZN11PassthroughD1Ev
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:6138   .text._ZN9GainStageD2Ev:00000000 $t
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:6146   .text._ZN9GainStageD2Ev:00000000 _ZN9GainStageD2Ev
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 546


C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:6296   .text._ZN9GainStageD2Ev:00000024 $d
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:12627  .rodata._ZTV9GainStage:00000000 _ZTV9GainStage
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:6146   .text._ZN9GainStageD2Ev:00000000 _ZN9GainStageD1Ev
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:6303   .text._ZN15ParameterConfigD2Ev:00000000 $t
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:6311   .text._ZN15ParameterConfigD2Ev:00000000 _ZN15ParameterConfigD2Ev
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:6732   .text._ZN15ParameterConfigD2Ev:0000006c $d
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:12606  .rodata._ZTV15ParameterConfig:00000000 _ZTV15ParameterConfig
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:6311   .text._ZN15ParameterConfigD2Ev:00000000 _ZN15ParameterConfigD1Ev
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:6739   .text._ZN11PassthroughD0Ev:00000000 $t
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:6747   .text._ZN11PassthroughD0Ev:00000000 _ZN11PassthroughD0Ev
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:6908   .text._ZN11PassthroughD0Ev:0000002c $d
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:6913   .text._ZN9GainStageD0Ev:00000000 $t
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:6921   .text._ZN9GainStageD0Ev:00000000 _ZN9GainStageD0Ev
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:7082   .text._ZN9GainStageD0Ev:0000002c $d
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:7087   .text._ZNSt10_HashtableIiSt4pairIKi5paramESaIS3_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb0ELb0ELb1EEEE18_M_assign_elementsIRKSG_EEvOT_:00000000 $t
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:7095   .text._ZNSt10_HashtableIiSt4pairIKi5paramESaIS3_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb0ELb0ELb1EEEE18_M_assign_elementsIRKSG_EEvOT_:00000000 _ZNSt10_HashtableIiSt4pairIKi5paramESaIS3_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb0ELb0ELb1EEEE18_M_assign_elementsIRKSG_EEvOT_
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:9137   .rodata._Z12processAudiofP12ParameterMap.str1.4:00000000 $d
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:9141   .text._Z12processAudiofP12ParameterMap:00000000 $t
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:9149   .text._Z12processAudiofP12ParameterMap:00000000 _Z12processAudiofP12ParameterMap
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:10493  .text._Z12processAudiofP12ParameterMap:0000015c $d
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:10509  .rodata._ZNSt6vectorImSaImEE17_M_realloc_insertIJRKmEEEvN9__gnu_cxx17__normal_iteratorIPmS1_EEDpOT_.str1.4:00000000 $d
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:10513  .text._ZNSt6vectorImSaImEE17_M_realloc_insertIJRKmEEEvN9__gnu_cxx17__normal_iteratorIPmS1_EEDpOT_:00000000 $t
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:10521  .text._ZNSt6vectorImSaImEE17_M_realloc_insertIJRKmEEEvN9__gnu_cxx17__normal_iteratorIPmS1_EEDpOT_:00000000 _ZNSt6vectorImSaImEE17_M_realloc_insertIJRKmEEEvN9__gnu_cxx17__normal_iteratorIPmS1_EEDpOT_
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:11034  .text._ZNSt6vectorImSaImEE17_M_realloc_insertIJRKmEEEvN9__gnu_cxx17__normal_iteratorIPmS1_EEDpOT_:000000cc $d
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:11042  .text.startup.main:00000000 $t
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:11050  .text.startup.main:00000000 main
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:11622  .text.startup.main:000000c8 $d
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:11637  .text.startup._GLOBAL__sub_I_stateManager:00000000 $t
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:11644  .text.startup._GLOBAL__sub_I_stateManager:00000000 _GLOBAL__sub_I_stateManager
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:12510  .text.startup._GLOBAL__sub_I_stateManager:000000fc $d
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:12710  .bss.phaser:00000000 phaser
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:12537  .init_array:00000000 $d
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:12544  .rodata._ZTS15ParameterConfig:00000000 _ZTS15ParameterConfig
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:12541  .rodata._ZTS15ParameterConfig:00000000 $d
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:12551  .rodata._ZTI15ParameterConfig:00000000 _ZTI15ParameterConfig
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:12548  .rodata._ZTI15ParameterConfig:00000000 $d
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:12559  .rodata._ZTS22LMAudioSignalProcessor:00000000 _ZTS22LMAudioSignalProcessor
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:12556  .rodata._ZTS22LMAudioSignalProcessor:00000000 $d
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:12566  .rodata._ZTI22LMAudioSignalProcessor:00000000 _ZTI22LMAudioSignalProcessor
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:12563  .rodata._ZTI22LMAudioSignalProcessor:00000000 $d
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:12574  .rodata._ZTS11Passthrough:00000000 _ZTS11Passthrough
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:12571  .rodata._ZTS11Passthrough:00000000 $d
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:12581  .rodata._ZTI11Passthrough:00000000 _ZTI11Passthrough
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:12578  .rodata._ZTI11Passthrough:00000000 $d
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:12590  .rodata._ZTS9GainStage:00000000 _ZTS9GainStage
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:12587  .rodata._ZTS9GainStage:00000000 $d
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:12597  .rodata._ZTI9GainStage:00000000 _ZTI9GainStage
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:12594  .rodata._ZTI9GainStage:00000000 $d
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:12603  .rodata._ZTV15ParameterConfig:00000000 $d
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:12612  .rodata._ZTV11Passthrough:00000000 $d
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:12624  .rodata._ZTV9GainStage:00000000 $d
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:12697  .bss.parameterMap:00000000 parameterMap
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:12704  .bss.params:00000000 params
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:12684  .bss.paramConf:00000000 paramConf
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:12690  .bss.paramVal:00000000 paramVal
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:12663  .bss.gpio:00000000 gpio
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:12670  .bss.htim1:00000000 htim1
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 547


C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:12724  .bss.usart1:00000000 usart1
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:12677  .bss.hw:00000000 hw
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:12717  .bss.stateManager:00000000 stateManager
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:12645  .bss._ZL10_overdrive:00000000 $d
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:12649  .bss._ZL10_overdrive:00000000 _ZL10_overdrive
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:12652  .bss._ZL8_autowah:00000000 $d
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:12656  .bss._ZL8_autowah:00000000 _ZL8_autowah
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:12659  .bss.gpio:00000000 $d
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:12666  .bss.htim1:00000000 $d
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:12673  .bss.hw:00000000 $d
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:12680  .bss.paramConf:00000000 $d
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:12687  .bss.paramVal:00000000 $d
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:12693  .bss.parameterMap:00000000 $d
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:12700  .bss.params:00000000 $d
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:12707  .bss.phaser:00000000 $d
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:12713  .bss.stateManager:00000000 $d
C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s:12720  .bss.usart1:00000000 $d
                           .group:00000000 _ZN7daisysp7AutowahD5Ev
                           .group:00000000 _ZN7daisysp9OverdriveD5Ev
                           .group:00000000 _ZN7daisysp6PhaserD5Ev
                           .group:00000000 _ZN5daisy11TimerHandleD5Ev
                           .group:00000000 _ZN5daisy9DaisySeedD5Ev
                           .group:00000000 _ZN12StateManagerD5Ev
                           .group:00000000 _ZN5paramC5ERKS_
                           .group:00000000 _ZNSt10_HashtableIiSt4pairIKi5paramESaIS3_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb0ELb0ELb1EEEEC5ERKSG_
                           .group:00000000 _ZN12ParameterMapD5Ev
                           .group:00000000 _ZN11PassthroughD5Ev
                           .group:00000000 _ZN9GainStageD5Ev
                           .group:00000000 _ZN15ParameterConfigD5Ev

UNDEFINED SYMBOLS
_ZdlPvj
memset
_ZN7daisysp9Overdrive8SetDriveEf
_ZN7daisysp9Overdrive7ProcessEf
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
memcpy
_ZSt19__throw_logic_errorPKc
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_
_Znwj
_ZNKSt8__detail20_Prime_rehash_policy14_M_need_rehashEjjj
_ZSt17__throw_bad_allocv
_ZN5daisy11UartHandler4InitERKNS0_6ConfigE
_ZN5daisy11UartHandler7StartRxEv
_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
_ZSt20__throw_out_of_rangePKc
memmove
_ZSt20__throw_length_errorPKc
_ZN5daisy9DaisySeed4InitEb
_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
_ZN5daisy9DaisySeed18SetAudioSampleRateENS_9SaiHandle6Config10SampleRateE
_ZN5daisy9DaisySeed10StartAudioEPFvPKPKfPPfjE
_ZN5daisy9DaisySeed15AudioSampleRateEv
_ZN7daisysp7Autowah4InitEf
_ZN7daisysp9Overdrive4InitEv
_ZN5daisy11UartHandler8ReadableEv
_ZN5daisy11UartHandler5PopRxEv
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\cciN5JQQ.s 			page 548


_ZN5daisy11UartHandler7FlushRxEv
__aeabi_atexit
__dso_handle
_ZTVN10__cxxabiv117__class_type_infoE
_ZTVN10__cxxabiv120__si_class_type_infoE
