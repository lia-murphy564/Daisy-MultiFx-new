ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"main.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN5daisy11TimerHandleD2Ev,"axG",%progbits,_ZN5daisy11TimerHandleD5Ev,comdat
  17              		.align	1
  18              		.p2align 2,,3
  19              		.weak	_ZN5daisy11TimerHandleD2Ev
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN5daisy11TimerHandleD2Ev:
  27              	.LVL0:
  28              	.LFB573:
  29              		.file 1 "../../libdaisy//src/per/tim.h"
   1:../../libdaisy//src/per/tim.h **** #pragma once
   2:../../libdaisy//src/per/tim.h **** #ifndef DSY_TIM_H
   3:../../libdaisy//src/per/tim.h **** #define DSY_TIM_H
   4:../../libdaisy//src/per/tim.h **** 
   5:../../libdaisy//src/per/tim.h **** #include <cstdint>
   6:../../libdaisy//src/per/tim.h **** 
   7:../../libdaisy//src/per/tim.h **** namespace daisy
   8:../../libdaisy//src/per/tim.h **** {
   9:../../libdaisy//src/per/tim.h **** /** Hardare timer peripheral support.
  10:../../libdaisy//src/per/tim.h ****  ** 
  11:../../libdaisy//src/per/tim.h ****  ** Supports general-function TIM peripherals:
  12:../../libdaisy//src/per/tim.h ****  ** - TIM2, TIM3, TIM4, TIM5
  13:../../libdaisy//src/per/tim.h ****  **
  14:../../libdaisy//src/per/tim.h ****  ** DaisySeed, and many internal peripherals utilize TIM2 for timing/delay purposes.
  15:../../libdaisy//src/per/tim.h ****  ** It is configured to be at the maximum frequency: typically 200MHz or 240MHz (boost) 
  16:../../libdaisy//src/per/tim.h ****  ** for measuring/delaying for very short periods. 
  17:../../libdaisy//src/per/tim.h ****  **
  18:../../libdaisy//src/per/tim.h ****  ** The GetUs/GetMs functions are available for convenience (and backwards compatibility),
  19:../../libdaisy//src/per/tim.h ****  ** but to avoid wrapping errors on math when doing time-delta calculations, using ticks is 
  20:../../libdaisy//src/per/tim.h ****  ** recommended. The data can be converted to the final time-base after getting the difference in t
  21:../../libdaisy//src/per/tim.h ****  ** (Using GetFreq() can be used for these time-base calculations).
  22:../../libdaisy//src/per/tim.h ****  **
  23:../../libdaisy//src/per/tim.h ****  ** TODO:
  24:../../libdaisy//src/per/tim.h ****  ** - Fix issues with realtime getters, and wrapping of the timer(s).
  25:../../libdaisy//src/per/tim.h ****  **     - This very noticeable with default settings for the 16-bit counters.
  26:../../libdaisy//src/per/tim.h ****  ** - Dispatch periodic callback(s)
  27:../../libdaisy//src/per/tim.h ****  ** - Other General purpose timers
  28:../../libdaisy//src/per/tim.h ****  ** - Non-internal clock sources
  29:../../libdaisy//src/per/tim.h ****  ** - Use of the four-tim channels per tim
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 2


  30:../../libdaisy//src/per/tim.h ****  **     - PWM, etc.
  31:../../libdaisy//src/per/tim.h ****  **     - InputCapture/OutputCompare, etc.
  32:../../libdaisy//src/per/tim.h ****  ** - HRTIM
  33:../../libdaisy//src/per/tim.h ****  ** - Advanced timers (TIM1/TIM8)
  34:../../libdaisy//src/per/tim.h ****  ** */
  35:../../libdaisy//src/per/tim.h **** class TimerHandle
  36:../../libdaisy//src/per/tim.h **** {
  37:../../libdaisy//src/per/tim.h ****   public:
  38:../../libdaisy//src/per/tim.h ****     struct Config
  39:../../libdaisy//src/per/tim.h ****     {
  40:../../libdaisy//src/per/tim.h ****         /** Hardwaare Timer to configure, and use. */
  41:../../libdaisy//src/per/tim.h ****         enum class Peripheral
  42:../../libdaisy//src/per/tim.h ****         {
  43:../../libdaisy//src/per/tim.h ****             TIM_2 = 0, /**< 32-bit counter */
  44:../../libdaisy//src/per/tim.h ****             TIM_3,     /**< 16-bit counter */
  45:../../libdaisy//src/per/tim.h ****             TIM_4,     /**< 16-bit counter */
  46:../../libdaisy//src/per/tim.h ****             TIM_5,     /**< 32-bit counter*/
  47:../../libdaisy//src/per/tim.h ****         };
  48:../../libdaisy//src/per/tim.h **** 
  49:../../libdaisy//src/per/tim.h ****         /** Direction of the auto-reload counter. 
  50:../../libdaisy//src/per/tim.h ****          ** TODO: Add support for the various  
  51:../../libdaisy//src/per/tim.h ****          ** versions of Up/Down counters.
  52:../../libdaisy//src/per/tim.h ****          ** */
  53:../../libdaisy//src/per/tim.h ****         enum class CounterDir
  54:../../libdaisy//src/per/tim.h ****         {
  55:../../libdaisy//src/per/tim.h ****             UP = 0,
  56:../../libdaisy//src/per/tim.h ****             DOWN,
  57:../../libdaisy//src/per/tim.h ****         };
  58:../../libdaisy//src/per/tim.h **** 
  59:../../libdaisy//src/per/tim.h ****         Peripheral periph;
  60:../../libdaisy//src/per/tim.h ****         CounterDir dir;
  61:../../libdaisy//src/per/tim.h ****     };
  62:../../libdaisy//src/per/tim.h **** 
  63:../../libdaisy//src/per/tim.h ****     /** Return values for TIM funcitons. */
  64:../../libdaisy//src/per/tim.h ****     enum class Result
  65:../../libdaisy//src/per/tim.h ****     {
  66:../../libdaisy//src/per/tim.h ****         OK,
  67:../../libdaisy//src/per/tim.h ****         ERR,
  68:../../libdaisy//src/per/tim.h ****     };
  69:../../libdaisy//src/per/tim.h **** 
  70:../../libdaisy//src/per/tim.h ****     TimerHandle() : pimpl_(nullptr) {}
  71:../../libdaisy//src/per/tim.h ****     TimerHandle(const TimerHandle& other) = default;
  72:../../libdaisy//src/per/tim.h ****     TimerHandle& operator=(const TimerHandle& other) = default;
  73:../../libdaisy//src/per/tim.h ****     ~TimerHandle() {}
  30              		.loc 1 73 5 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              		.loc 1 73 21 is_stmt 0 view .LVU1
  36 0000 7047     		bx	lr
  37              		.cfi_endproc
  38              	.LFE573:
  40              		.weak	_ZN5daisy11TimerHandleD1Ev
  41              		.thumb_set _ZN5daisy11TimerHandleD1Ev,_ZN5daisy11TimerHandleD2Ev
  42 0002 00BF     		.section	.text._ZN7daisysp6PhaserD2Ev,"axG",%progbits,_ZN7daisysp6PhaserD5Ev,comdat
  43              		.align	1
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 3


  44              		.p2align 2,,3
  45              		.weak	_ZN7daisysp6PhaserD2Ev
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  49              		.fpu fpv5-d16
  51              	_ZN7daisysp6PhaserD2Ev:
  52              	.LVL1:
  53              	.LFB4064:
  54              		.file 2 "../../DaisySP//Source/Effects/phaser.h"
   1:../../DaisySP//Source/Effects/phaser.h **** #pragma once
   2:../../DaisySP//Source/Effects/phaser.h **** #ifndef DSY_PHASER_H
   3:../../DaisySP//Source/Effects/phaser.h **** #define DSY_PHASER_H
   4:../../DaisySP//Source/Effects/phaser.h **** #ifdef __cplusplus
   5:../../DaisySP//Source/Effects/phaser.h **** 
   6:../../DaisySP//Source/Effects/phaser.h **** #include <stdint.h>
   7:../../DaisySP//Source/Effects/phaser.h **** #include "Utility/delayline.h"
   8:../../DaisySP//Source/Effects/phaser.h **** 
   9:../../DaisySP//Source/Effects/phaser.h **** /** @file phaser.h */
  10:../../DaisySP//Source/Effects/phaser.h **** 
  11:../../DaisySP//Source/Effects/phaser.h **** namespace daisysp
  12:../../DaisySP//Source/Effects/phaser.h **** {
  13:../../DaisySP//Source/Effects/phaser.h **** /**  
  14:../../DaisySP//Source/Effects/phaser.h ****     @brief Single Phaser engine. Used in Phaser.
  15:../../DaisySP//Source/Effects/phaser.h ****     @author Ben Sergentanis
  16:../../DaisySP//Source/Effects/phaser.h **** */
  17:../../DaisySP//Source/Effects/phaser.h **** class PhaserEngine
  18:../../DaisySP//Source/Effects/phaser.h **** {
  19:../../DaisySP//Source/Effects/phaser.h ****   public:
  20:../../DaisySP//Source/Effects/phaser.h ****     PhaserEngine() {}
  21:../../DaisySP//Source/Effects/phaser.h ****     ~PhaserEngine() {}
  22:../../DaisySP//Source/Effects/phaser.h **** 
  23:../../DaisySP//Source/Effects/phaser.h ****     /** Initialize the module
  24:../../DaisySP//Source/Effects/phaser.h ****         \param sample_rate Audio engine sample rate.
  25:../../DaisySP//Source/Effects/phaser.h ****     */
  26:../../DaisySP//Source/Effects/phaser.h ****     void Init(float sample_rate);
  27:../../DaisySP//Source/Effects/phaser.h **** 
  28:../../DaisySP//Source/Effects/phaser.h ****     /** Get the next sample
  29:../../DaisySP//Source/Effects/phaser.h ****         \param in Sample to process
  30:../../DaisySP//Source/Effects/phaser.h ****     */
  31:../../DaisySP//Source/Effects/phaser.h ****     float Process(float in);
  32:../../DaisySP//Source/Effects/phaser.h **** 
  33:../../DaisySP//Source/Effects/phaser.h ****     /** How much to modulate the allpass filter by.
  34:../../DaisySP//Source/Effects/phaser.h ****         \param depth Works 0-1.
  35:../../DaisySP//Source/Effects/phaser.h ****     */
  36:../../DaisySP//Source/Effects/phaser.h ****     void SetLfoDepth(float depth);
  37:../../DaisySP//Source/Effects/phaser.h **** 
  38:../../DaisySP//Source/Effects/phaser.h ****     /** Set lfo frequency.
  39:../../DaisySP//Source/Effects/phaser.h ****         \param lfo_freq Frequency in Hz
  40:../../DaisySP//Source/Effects/phaser.h ****     */
  41:../../DaisySP//Source/Effects/phaser.h ****     void SetLfoFreq(float lfo_freq);
  42:../../DaisySP//Source/Effects/phaser.h **** 
  43:../../DaisySP//Source/Effects/phaser.h ****     /** Set the allpass frequency
  44:../../DaisySP//Source/Effects/phaser.h ****         \param ap_freq Frequency in Hz.
  45:../../DaisySP//Source/Effects/phaser.h ****     */
  46:../../DaisySP//Source/Effects/phaser.h ****     void SetFreq(float ap_freq);
  47:../../DaisySP//Source/Effects/phaser.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 4


  48:../../DaisySP//Source/Effects/phaser.h ****     /** Set the feedback amount.
  49:../../DaisySP//Source/Effects/phaser.h ****         \param feedback Amount from 0-1.
  50:../../DaisySP//Source/Effects/phaser.h ****     */
  51:../../DaisySP//Source/Effects/phaser.h ****     void SetFeedback(float feedback);
  52:../../DaisySP//Source/Effects/phaser.h **** 
  53:../../DaisySP//Source/Effects/phaser.h ****   private:
  54:../../DaisySP//Source/Effects/phaser.h ****     float                    sample_rate_;
  55:../../DaisySP//Source/Effects/phaser.h ****     static constexpr int32_t kDelayLength
  56:../../DaisySP//Source/Effects/phaser.h ****         = 2400; // 50 ms at 48kHz = .05 * 48000
  57:../../DaisySP//Source/Effects/phaser.h **** 
  58:../../DaisySP//Source/Effects/phaser.h ****     //triangle lfo
  59:../../DaisySP//Source/Effects/phaser.h ****     float lfo_phase_;
  60:../../DaisySP//Source/Effects/phaser.h ****     float lfo_freq_;
  61:../../DaisySP//Source/Effects/phaser.h ****     float lfo_amp_;
  62:../../DaisySP//Source/Effects/phaser.h **** 
  63:../../DaisySP//Source/Effects/phaser.h ****     float os_;
  64:../../DaisySP//Source/Effects/phaser.h **** 
  65:../../DaisySP//Source/Effects/phaser.h ****     float feedback_;
  66:../../DaisySP//Source/Effects/phaser.h ****     float ap_freq_;
  67:../../DaisySP//Source/Effects/phaser.h **** 
  68:../../DaisySP//Source/Effects/phaser.h ****     float deltime_;
  69:../../DaisySP//Source/Effects/phaser.h ****     float last_sample_;
  70:../../DaisySP//Source/Effects/phaser.h **** 
  71:../../DaisySP//Source/Effects/phaser.h ****     DelayLine<float, kDelayLength> del_;
  72:../../DaisySP//Source/Effects/phaser.h **** 
  73:../../DaisySP//Source/Effects/phaser.h ****     float ProcessLfo();
  74:../../DaisySP//Source/Effects/phaser.h **** };
  75:../../DaisySP//Source/Effects/phaser.h **** 
  76:../../DaisySP//Source/Effects/phaser.h **** //wraps up all of the phaser engines
  77:../../DaisySP//Source/Effects/phaser.h **** /**  
  78:../../DaisySP//Source/Effects/phaser.h ****     @brief Phaser Effect.
  79:../../DaisySP//Source/Effects/phaser.h ****     @author Ben Sergentanis
  80:../../DaisySP//Source/Effects/phaser.h ****     @date Jan 2021
  81:../../DaisySP//Source/Effects/phaser.h **** */
  82:../../DaisySP//Source/Effects/phaser.h **** class Phaser
  83:../../DaisySP//Source/Effects/phaser.h **** {
  84:../../DaisySP//Source/Effects/phaser.h ****   public:
  85:../../DaisySP//Source/Effects/phaser.h ****     Phaser() {}
  86:../../DaisySP//Source/Effects/phaser.h ****     ~Phaser() {}
  55              		.loc 2 86 5 is_stmt 1 view -0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              		.loc 2 86 16 is_stmt 0 view .LVU3
  61 0000 7047     		bx	lr
  62              		.cfi_endproc
  63              	.LFE4064:
  65              		.weak	_ZN7daisysp6PhaserD1Ev
  66              		.thumb_set _ZN7daisysp6PhaserD1Ev,_ZN7daisysp6PhaserD2Ev
  67              		.section	.text._ZN5daisy9DaisySeedD2Ev,"axG",%progbits,_ZN5daisy9DaisySeedD5Ev,comdat
  68              		.align	1
  69              		.p2align 2,,3
  70              		.weak	_ZN5daisy9DaisySeedD2Ev
  71              		.syntax unified
  72              		.thumb
  73              		.thumb_func
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 5


  74              		.fpu fpv5-d16
  76              	_ZN5daisy9DaisySeedD2Ev:
  77              	.LVL2:
  78              	.LFB4412:
  79              		.file 3 "../../libdaisy//src/daisy_seed.h"
   1:../../libdaisy//src/daisy_seed.h **** #pragma once
   2:../../libdaisy//src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../../libdaisy//src/daisy_seed.h **** #define DSY_SEED_H
   4:../../libdaisy//src/daisy_seed.h **** 
   5:../../libdaisy//src/daisy_seed.h **** #include "daisy.h"
   6:../../libdaisy//src/daisy_seed.h **** 
   7:../../libdaisy//src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../../libdaisy//src/daisy_seed.h **** //#define SEED_REV2
   9:../../libdaisy//src/daisy_seed.h **** 
  10:../../libdaisy//src/daisy_seed.h **** namespace daisy
  11:../../libdaisy//src/daisy_seed.h **** {
  12:../../libdaisy//src/daisy_seed.h **** /**
  13:../../libdaisy//src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../../libdaisy//src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../../libdaisy//src/daisy_seed.h **** 
  16:../../libdaisy//src/daisy_seed.h ****    @ingroup boards
  17:../../libdaisy//src/daisy_seed.h **** */
  18:../../libdaisy//src/daisy_seed.h **** class DaisySeed
  19:../../libdaisy//src/daisy_seed.h **** {
  20:../../libdaisy//src/daisy_seed.h ****   public:
  21:../../libdaisy//src/daisy_seed.h ****     DaisySeed() {}
  22:../../libdaisy//src/daisy_seed.h ****     ~DaisySeed() {}
  80              		.loc 3 22 5 is_stmt 1 view -0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  85              	.LBB2404:
  86              	.LBI2404:
  87              		.file 4 "../../libdaisy//src/sys/system.h"
   1:../../libdaisy//src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../../libdaisy//src/sys/system.h **** #define DSY_SYSTEM_H
   3:../../libdaisy//src/sys/system.h **** 
   4:../../libdaisy//src/sys/system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:../../libdaisy//src/sys/system.h **** 
   6:../../libdaisy//src/sys/system.h **** #include <cstdint>
   7:../../libdaisy//src/sys/system.h **** #include "per/tim.h"
   8:../../libdaisy//src/sys/system.h **** 
   9:../../libdaisy//src/sys/system.h **** namespace daisy
  10:../../libdaisy//src/sys/system.h **** {
  11:../../libdaisy//src/sys/system.h **** /** A handle for interacting with the Core System. 
  12:../../libdaisy//src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  13:../../libdaisy//src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  14:../../libdaisy//src/sys/system.h ****  **
  15:../../libdaisy//src/sys/system.h ****  ** @author shensley
  16:../../libdaisy//src/sys/system.h ****  ** @ingroup system
  17:../../libdaisy//src/sys/system.h ****  */
  18:../../libdaisy//src/sys/system.h **** class System
  19:../../libdaisy//src/sys/system.h **** {
  20:../../libdaisy//src/sys/system.h ****   public:
  21:../../libdaisy//src/sys/system.h ****     /** Contains settings for initializing the System */
  22:../../libdaisy//src/sys/system.h ****     struct Config
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 6


  23:../../libdaisy//src/sys/system.h ****     {
  24:../../libdaisy//src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:../../libdaisy//src/sys/system.h ****         enum class SysClkFreq
  26:../../libdaisy//src/sys/system.h ****         {
  27:../../libdaisy//src/sys/system.h ****             FREQ_400MHZ,
  28:../../libdaisy//src/sys/system.h ****             FREQ_480MHZ,
  29:../../libdaisy//src/sys/system.h ****         };
  30:../../libdaisy//src/sys/system.h **** 
  31:../../libdaisy//src/sys/system.h ****         /** Method to call on the struct to set to defaults
  32:../../libdaisy//src/sys/system.h ****          ** CPU Freq set to 400MHz
  33:../../libdaisy//src/sys/system.h ****          ** Cache Enabled 
  34:../../libdaisy//src/sys/system.h ****          ** */
  35:../../libdaisy//src/sys/system.h ****         void Defaults()
  36:../../libdaisy//src/sys/system.h ****         {
  37:../../libdaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_400MHZ;
  38:../../libdaisy//src/sys/system.h ****             use_dcache  = true;
  39:../../libdaisy//src/sys/system.h ****             use_icache  = true;
  40:../../libdaisy//src/sys/system.h ****             skip_clocks = false;
  41:../../libdaisy//src/sys/system.h ****         }
  42:../../libdaisy//src/sys/system.h **** 
  43:../../libdaisy//src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  44:../../libdaisy//src/sys/system.h ****          ** CPU Freq set to 480MHz
  45:../../libdaisy//src/sys/system.h ****          ** Cache Enabled 
  46:../../libdaisy//src/sys/system.h ****          ** */
  47:../../libdaisy//src/sys/system.h ****         void Boost()
  48:../../libdaisy//src/sys/system.h ****         {
  49:../../libdaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_480MHZ;
  50:../../libdaisy//src/sys/system.h ****             use_dcache  = true;
  51:../../libdaisy//src/sys/system.h ****             use_icache  = true;
  52:../../libdaisy//src/sys/system.h ****             skip_clocks = false;
  53:../../libdaisy//src/sys/system.h ****         }
  54:../../libdaisy//src/sys/system.h **** 
  55:../../libdaisy//src/sys/system.h ****         SysClkFreq cpu_freq;
  56:../../libdaisy//src/sys/system.h ****         bool       use_dcache;
  57:../../libdaisy//src/sys/system.h ****         bool       use_icache;
  58:../../libdaisy//src/sys/system.h ****         bool       skip_clocks;
  59:../../libdaisy//src/sys/system.h ****     };
  60:../../libdaisy//src/sys/system.h **** 
  61:../../libdaisy//src/sys/system.h ****     /** Describes the different regions of memory available to the Daisy
  62:../../libdaisy//src/sys/system.h ****      * 
  63:../../libdaisy//src/sys/system.h ****      */
  64:../../libdaisy//src/sys/system.h ****     enum MemoryRegion
  65:../../libdaisy//src/sys/system.h ****     {
  66:../../libdaisy//src/sys/system.h ****         INTERNAL_FLASH = 0,
  67:../../libdaisy//src/sys/system.h ****         ITCMRAM,
  68:../../libdaisy//src/sys/system.h ****         DTCMRAM,
  69:../../libdaisy//src/sys/system.h ****         SRAM_D1,
  70:../../libdaisy//src/sys/system.h ****         SRAM_D2,
  71:../../libdaisy//src/sys/system.h ****         SRAM_D3,
  72:../../libdaisy//src/sys/system.h ****         SDRAM,
  73:../../libdaisy//src/sys/system.h ****         QSPI,
  74:../../libdaisy//src/sys/system.h ****         INVALID_ADDRESS,
  75:../../libdaisy//src/sys/system.h ****     };
  76:../../libdaisy//src/sys/system.h **** 
  77:../../libdaisy//src/sys/system.h ****     System() {}
  78:../../libdaisy//src/sys/system.h ****     ~System() {}
  88              		.loc 4 78 5 view .LVU5
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 7


  89              		.loc 4 78 5 is_stmt 0 view .LVU6
  90              	.LBE2404:
  91              	.LBB2405:
  92              	.LBI2405:
  93              		.file 5 "../../libdaisy//src/hid/usb.h"
   1:../../libdaisy//src/hid/usb.h **** #pragma once
   2:../../libdaisy//src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../../libdaisy//src/hid/usb.h **** #define DSY_HID_USB_H
   4:../../libdaisy//src/hid/usb.h **** #include <stdint.h>
   5:../../libdaisy//src/hid/usb.h **** #include <stdlib.h>
   6:../../libdaisy//src/hid/usb.h **** 
   7:../../libdaisy//src/hid/usb.h **** namespace daisy
   8:../../libdaisy//src/hid/usb.h **** /** @addtogroup human_interface
   9:../../libdaisy//src/hid/usb.h ****     @{
  10:../../libdaisy//src/hid/usb.h **** */
  11:../../libdaisy//src/hid/usb.h **** 
  12:../../libdaisy//src/hid/usb.h **** {
  13:../../libdaisy//src/hid/usb.h **** /** 
  14:../../libdaisy//src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../../libdaisy//src/hid/usb.h ****     @author Stephen Hensley
  16:../../libdaisy//src/hid/usb.h ****     @date December 2019
  17:../../libdaisy//src/hid/usb.h **** */
  18:../../libdaisy//src/hid/usb.h **** class UsbHandle
  19:../../libdaisy//src/hid/usb.h **** {
  20:../../libdaisy//src/hid/usb.h ****   public:
  21:../../libdaisy//src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../../libdaisy//src/hid/usb.h ****     enum class Result
  23:../../libdaisy//src/hid/usb.h ****     {
  24:../../libdaisy//src/hid/usb.h ****         OK,
  25:../../libdaisy//src/hid/usb.h ****         ERR,
  26:../../libdaisy//src/hid/usb.h ****     };
  27:../../libdaisy//src/hid/usb.h **** 
  28:../../libdaisy//src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../../libdaisy//src/hid/usb.h ****     enum UsbPeriph
  30:../../libdaisy//src/hid/usb.h ****     {
  31:../../libdaisy//src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../../libdaisy//src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../../libdaisy//src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../../libdaisy//src/hid/usb.h ****     };
  35:../../libdaisy//src/hid/usb.h **** 
  36:../../libdaisy//src/hid/usb.h **** 
  37:../../libdaisy//src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../../libdaisy//src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../../libdaisy//src/hid/usb.h **** 
  40:../../libdaisy//src/hid/usb.h ****     UsbHandle() {}
  41:../../libdaisy//src/hid/usb.h **** 
  42:../../libdaisy//src/hid/usb.h ****     ~UsbHandle() {}
  94              		.loc 5 42 5 is_stmt 1 view .LVU7
  95              		.loc 5 42 5 is_stmt 0 view .LVU8
  96              	.LBE2405:
  97              	.LBB2406:
  98              	.LBI2406:
  99              		.file 6 "../../libdaisy//src/per/adc.h"
   1:../../libdaisy//src/per/adc.h **** #pragma once
   2:../../libdaisy//src/per/adc.h **** #ifndef DSY_ADC_H
   3:../../libdaisy//src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../../libdaisy//src/per/adc.h **** #include <stdint.h>
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 8


   5:../../libdaisy//src/per/adc.h **** #include <stdlib.h>
   6:../../libdaisy//src/per/adc.h **** #include "daisy_core.h"
   7:../../libdaisy//src/per/adc.h **** #include "per/gpio.h"
   8:../../libdaisy//src/per/adc.h **** 
   9:../../libdaisy//src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 16 /**< Maximum number of ADC channels */
  10:../../libdaisy//src/per/adc.h **** 
  11:../../libdaisy//src/per/adc.h **** namespace daisy
  12:../../libdaisy//src/per/adc.h **** {
  13:../../libdaisy//src/per/adc.h **** /** @addtogroup per_analog
  14:../../libdaisy//src/per/adc.h ****     @{
  15:../../libdaisy//src/per/adc.h **** */
  16:../../libdaisy//src/per/adc.h **** 
  17:../../libdaisy//src/per/adc.h **** /* While there may not be many configuration options here,
  18:../../libdaisy//src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../../libdaisy//src/per/adc.h **** later without breaking existing functionality.
  20:../../libdaisy//src/per/adc.h **** */
  21:../../libdaisy//src/per/adc.h **** 
  22:../../libdaisy//src/per/adc.h **** /** @brief   Configuration Structure for an ADC Channel 
  23:../../libdaisy//src/per/adc.h ****  *  @details This can be used to configure a a single input, 
  24:../../libdaisy//src/per/adc.h ****  *           or a multiplexed input, allowing up to 8 inputs on 
  25:../../libdaisy//src/per/adc.h ****  *           one channel.
  26:../../libdaisy//src/per/adc.h ****  *  @note    Sharing data lines to multiple muxes _is_ possible, but
  27:../../libdaisy//src/per/adc.h ****  *           each channel sharing data lines must be set to the maximum
  28:../../libdaisy//src/per/adc.h ****  *           number of channels, even if some multiplexers have fewer
  29:../../libdaisy//src/per/adc.h ****  *           inputs connected.
  30:../../libdaisy//src/per/adc.h **** */
  31:../../libdaisy//src/per/adc.h **** struct AdcChannelConfig
  32:../../libdaisy//src/per/adc.h **** {
  33:../../libdaisy//src/per/adc.h ****     /** Which pin to use for multiplexing */
  34:../../libdaisy//src/per/adc.h ****     enum MuxPin
  35:../../libdaisy//src/per/adc.h ****     {
  36:../../libdaisy//src/per/adc.h ****         MUX_SEL_0,    /**< & */
  37:../../libdaisy//src/per/adc.h ****         MUX_SEL_1,    /**< & */
  38:../../libdaisy//src/per/adc.h ****         MUX_SEL_2,    /**< & */
  39:../../libdaisy//src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  40:../../libdaisy//src/per/adc.h ****     };
  41:../../libdaisy//src/per/adc.h **** 
  42:../../libdaisy//src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  43:../../libdaisy//src/per/adc.h ****     \param pin Pin to init.
  44:../../libdaisy//src/per/adc.h ****      */
  45:../../libdaisy//src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin);
  46:../../libdaisy//src/per/adc.h **** 
  47:../../libdaisy//src/per/adc.h ****     /** 
  48:../../libdaisy//src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  49:../../libdaisy//src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  50:../../libdaisy//src/per/adc.h ****     You only need to supply the mux pins that are required,
  51:../../libdaisy//src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  52:../../libdaisy//src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  53:../../libdaisy//src/per/adc.h ****     \param mux_channels must be 1-8
  54:../../libdaisy//src/per/adc.h ****     \param mux_0 First mux pin
  55:../../libdaisy//src/per/adc.h ****     \param mux_1 Second mux pin
  56:../../libdaisy//src/per/adc.h ****     \param mux_2 Third mux pin
  57:../../libdaisy//src/per/adc.h ****     \param adc_pin &
  58:../../libdaisy//src/per/adc.h ****     */
  59:../../libdaisy//src/per/adc.h ****     void InitMux(dsy_gpio_pin adc_pin,
  60:../../libdaisy//src/per/adc.h ****                  size_t       mux_channels,
  61:../../libdaisy//src/per/adc.h ****                  dsy_gpio_pin mux_0,
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 9


  62:../../libdaisy//src/per/adc.h ****                  dsy_gpio_pin mux_1 = {DSY_GPIOX, 0},
  63:../../libdaisy//src/per/adc.h ****                  dsy_gpio_pin mux_2 = {DSY_GPIOX, 0});
  64:../../libdaisy//src/per/adc.h **** 
  65:../../libdaisy//src/per/adc.h ****     dsy_gpio pin_;                   /**< & */
  66:../../libdaisy//src/per/adc.h ****     dsy_gpio mux_pin_[MUX_SEL_LAST]; /**< & */
  67:../../libdaisy//src/per/adc.h ****     uint8_t  mux_channels_;          /**< & */
  68:../../libdaisy//src/per/adc.h **** };
  69:../../libdaisy//src/per/adc.h **** 
  70:../../libdaisy//src/per/adc.h **** /**
  71:../../libdaisy//src/per/adc.h ****    @brief Handler for analog to digital conversion
  72:../../libdaisy//src/per/adc.h **** */
  73:../../libdaisy//src/per/adc.h **** class AdcHandle
  74:../../libdaisy//src/per/adc.h **** {
  75:../../libdaisy//src/per/adc.h ****   public:
  76:../../libdaisy//src/per/adc.h ****     /** Supported oversampling amounts */
  77:../../libdaisy//src/per/adc.h ****     enum OverSampling
  78:../../libdaisy//src/per/adc.h ****     {
  79:../../libdaisy//src/per/adc.h ****         OVS_NONE, /**< & */
  80:../../libdaisy//src/per/adc.h ****         OVS_4,    /**< & */
  81:../../libdaisy//src/per/adc.h ****         OVS_8,    /**< & */
  82:../../libdaisy//src/per/adc.h ****         OVS_16,   /**< & */
  83:../../libdaisy//src/per/adc.h ****         OVS_32,   /**< & */
  84:../../libdaisy//src/per/adc.h ****         OVS_64,   /**< & */
  85:../../libdaisy//src/per/adc.h ****         OVS_128,  /**< & */
  86:../../libdaisy//src/per/adc.h ****         OVS_256,  /**< & */
  87:../../libdaisy//src/per/adc.h ****         OVS_512,  /**< & */
  88:../../libdaisy//src/per/adc.h ****         OVS_1024, /**< & */
  89:../../libdaisy//src/per/adc.h ****         OVS_LAST, /**< & */
  90:../../libdaisy//src/per/adc.h ****     };
  91:../../libdaisy//src/per/adc.h **** 
  92:../../libdaisy//src/per/adc.h ****     AdcHandle() {}
  93:../../libdaisy//src/per/adc.h ****     ~AdcHandle() {}
 100              		.loc 6 93 5 is_stmt 1 view .LVU9
 101              		.loc 6 93 5 is_stmt 0 view .LVU10
 102              	.LBE2406:
 103              	.LBB2407:
 104              	.LBI2407:
 105              		.file 7 "../../libdaisy//src/hid/audio.h"
   1:../../libdaisy//src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../../libdaisy//src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../../libdaisy//src/hid/audio.h **** 
   4:../../libdaisy//src/hid/audio.h **** #include "per/sai.h"
   5:../../libdaisy//src/hid/audio.h **** 
   6:../../libdaisy//src/hid/audio.h **** namespace daisy
   7:../../libdaisy//src/hid/audio.h **** {
   8:../../libdaisy//src/hid/audio.h **** /** @brief Audio Engine Handle
   9:../../libdaisy//src/hid/audio.h ****  *  @ingroup audio 
  10:../../libdaisy//src/hid/audio.h ****  *  @details This class allows for higher level access to an audio engine.
  11:../../libdaisy//src/hid/audio.h ****  *           If you're using a SOM like the DaisySeed or DaisyPatchSM (or any 
  12:../../libdaisy//src/hid/audio.h ****  *            board that includes one of those objects) then the intialization
  13:../../libdaisy//src/hid/audio.h ****  *            is already taken  care of.
  14:../../libdaisy//src/hid/audio.h ****  *           If you're setting up your own custom hardware, or need to make changes
  15:../../libdaisy//src/hid/audio.h ****  *           you will have to take the following steps:
  16:../../libdaisy//src/hid/audio.h ****  *             1. Create and Initialize an SaiHandle or two depending on your requirements
  17:../../libdaisy//src/hid/audio.h ****  *             2. Initialize the Audio Handle with the desired settings and the Initialized SaiHand
  18:../../libdaisy//src/hid/audio.h ****  *             3. If the connected codec requires special configuration or initialization, do so
  19:../../libdaisy//src/hid/audio.h ****  *             4. Write a callback method using either the AudioCallback or the InterleavingAudioCa
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 10


  20:../../libdaisy//src/hid/audio.h ****  *             5. Start the Audio using one of the StartAudio function
  21:../../libdaisy//src/hid/audio.h ****  */
  22:../../libdaisy//src/hid/audio.h **** class AudioHandle
  23:../../libdaisy//src/hid/audio.h **** {
  24:../../libdaisy//src/hid/audio.h ****   public:
  25:../../libdaisy//src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  26:../../libdaisy//src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  27:../../libdaisy//src/hid/audio.h ****     struct Config
  28:../../libdaisy//src/hid/audio.h ****     {
  29:../../libdaisy//src/hid/audio.h ****         size_t                        blocksize;
  30:../../libdaisy//src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  31:../../libdaisy//src/hid/audio.h ****         float                         postgain;
  32:../../libdaisy//src/hid/audio.h ****     };
  33:../../libdaisy//src/hid/audio.h **** 
  34:../../libdaisy//src/hid/audio.h ****     enum class Result
  35:../../libdaisy//src/hid/audio.h ****     {
  36:../../libdaisy//src/hid/audio.h ****         OK,
  37:../../libdaisy//src/hid/audio.h ****         ERR,
  38:../../libdaisy//src/hid/audio.h ****     };
  39:../../libdaisy//src/hid/audio.h **** 
  40:../../libdaisy//src/hid/audio.h ****     /** Non-Interleaving input buffer
  41:../../libdaisy//src/hid/audio.h ****      * Buffer arranged by float[chn][sample] 
  42:../../libdaisy//src/hid/audio.h ****      * const so that the user can't modify the input
  43:../../libdaisy//src/hid/audio.h ****      */
  44:../../libdaisy//src/hid/audio.h ****     typedef const float* const* InputBuffer;
  45:../../libdaisy//src/hid/audio.h **** 
  46:../../libdaisy//src/hid/audio.h ****     /** Non-Interleaving output buffer
  47:../../libdaisy//src/hid/audio.h ****      * Arranged by float[chn][sample] 
  48:../../libdaisy//src/hid/audio.h ****      */
  49:../../libdaisy//src/hid/audio.h ****     typedef float** OutputBuffer;
  50:../../libdaisy//src/hid/audio.h **** 
  51:../../libdaisy//src/hid/audio.h ****     /** Type for a Non-Interleaving audio callback 
  52:../../libdaisy//src/hid/audio.h ****      * Non-Interleaving audio callbacks in daisy will be of this type
  53:../../libdaisy//src/hid/audio.h ****      */
  54:../../libdaisy//src/hid/audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
  55:../../libdaisy//src/hid/audio.h ****                                   OutputBuffer out,
  56:../../libdaisy//src/hid/audio.h ****                                   size_t       size);
  57:../../libdaisy//src/hid/audio.h **** 
  58:../../libdaisy//src/hid/audio.h ****     /** Interleaving Input buffer
  59:../../libdaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  60:../../libdaisy//src/hid/audio.h ****      ** this is const, as the user shouldn't modify it
  61:../../libdaisy//src/hid/audio.h ****     */
  62:../../libdaisy//src/hid/audio.h ****     typedef const float* InterleavingInputBuffer;
  63:../../libdaisy//src/hid/audio.h **** 
  64:../../libdaisy//src/hid/audio.h ****     /** Interleaving Output buffer 
  65:../../libdaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  66:../../libdaisy//src/hid/audio.h ****     */
  67:../../libdaisy//src/hid/audio.h ****     typedef float* InterleavingOutputBuffer;
  68:../../libdaisy//src/hid/audio.h **** 
  69:../../libdaisy//src/hid/audio.h ****     /** Interleaving Audio Callback 
  70:../../libdaisy//src/hid/audio.h ****      * Interleaving audio callbacks in daisy must be of this type
  71:../../libdaisy//src/hid/audio.h ****      */
  72:../../libdaisy//src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  73:../../libdaisy//src/hid/audio.h ****                                               InterleavingOutputBuffer out,
  74:../../libdaisy//src/hid/audio.h ****                                               size_t                   size);
  75:../../libdaisy//src/hid/audio.h **** 
  76:../../libdaisy//src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 11


  77:../../libdaisy//src/hid/audio.h ****     ~AudioHandle() {}
 106              		.loc 7 77 5 is_stmt 1 view .LVU11
 107              		.loc 7 77 5 is_stmt 0 view .LVU12
 108              	.LBE2407:
 109              		.loc 3 22 19 view .LVU13
 110 0000 7047     		bx	lr
 111              		.cfi_endproc
 112              	.LFE4412:
 114              		.weak	_ZN5daisy9DaisySeedD1Ev
 115              		.thumb_set _ZN5daisy9DaisySeedD1Ev,_ZN5daisy9DaisySeedD2Ev
 116 0002 00BF     		.section	.text._Z13AudioCallbackPKPKfPPfj,"ax",%progbits
 117              		.align	1
 118              		.p2align 2,,3
 119              		.global	_Z13AudioCallbackPKPKfPPfj
 120              		.syntax unified
 121              		.thumb
 122              		.thumb_func
 123              		.fpu fpv5-d16
 125              	_Z13AudioCallbackPKPKfPPfj:
 126              	.LVL3:
 127              	.LFB5456:
 128              		.file 8 "src/main.cpp"
   1:src/main.cpp  **** #include "daisy.h"
   2:src/main.cpp  **** #include "daisysp.h"
   3:src/main.cpp  **** #include "daisy_seed.h"
   4:src/main.cpp  **** //#include "stm32h7xx_hal.h
   5:src/main.cpp  **** //#include "parameter.h"
   6:src/main.cpp  **** #include "parameter_controller.h"
   7:src/main.cpp  **** #include "audiohandler.h"
   8:src/main.cpp  **** #include "statemanager.h"
   9:src/main.cpp  **** #include "lmdsp.hpp"
  10:src/main.cpp  **** 
  11:src/main.cpp  **** //#include "libDaisy/Drivers/CMSIS/RTOS/Template/cmsis_os.h"
  12:src/main.cpp  **** //#include "CMSIS/RTOS2/Template/cmsis_os.h"
  13:src/main.cpp  **** 
  14:src/main.cpp  **** using namespace daisy;
  15:src/main.cpp  **** using namespace daisy::seed;
  16:src/main.cpp  **** 
  17:src/main.cpp  **** #define PARAM_BUFFER_SIZE	10
  18:src/main.cpp  **** #define AUDIO_BUFFER_SIZE	128
  19:src/main.cpp  **** #define HTIM1_MS	100
  20:src/main.cpp  **** 
  21:src/main.cpp  **** daisy::DaisySeed hw;
  22:src/main.cpp  **** 
  23:src/main.cpp  **** daisy::UartHandler usart1;
  24:src/main.cpp  **** daisy::TimerHandle htim1;
  25:src/main.cpp  **** daisy::GPIO gpio;
  26:src/main.cpp  **** 
  27:src/main.cpp  **** //static uint32_t DSY_SDRAM_BSS audio_buffer[AUDIO_BUFFER_SIZE];
  28:src/main.cpp  **** //static uint16_t DSY_SDRAM_BSS param_buffer[PARAM_BUFFER_SIZE];
  29:src/main.cpp  **** 
  30:src/main.cpp  **** //AudioHandler audio;
  31:src/main.cpp  **** 
  32:src/main.cpp  **** // void AudioCallback(daisy::AudioHandle::InputBuffer in, daisy::AudioHandle::OutputBuffer out, siz
  33:src/main.cpp  **** // {
  34:src/main.cpp  **** // 	for (size_t i = 0; i < size; i++)
  35:src/main.cpp  **** // 	{
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 12


  36:src/main.cpp  **** // 		out[0][i] = in[0][i];
  37:src/main.cpp  **** // 		out[1][i] = in[1][i];
  38:src/main.cpp  **** // 	}
  39:src/main.cpp  **** // }
  40:src/main.cpp  **** 
  41:src/main.cpp  **** // void TIM1_Init(daisy::TimerHandle& tim) {
  42:src/main.cpp  **** // 	daisy::TimerHandle::Config conf;
  43:src/main.cpp  **** // 	conf.periph = daisy::TimerHandle::Config::Peripheral::TIM_2;
  44:src/main.cpp  **** // 	conf.dir = daisy::TimerHandle::Config::CounterDir::UP;
  45:src/main.cpp  **** // 	tim.Init(conf);
  46:src/main.cpp  **** // 	tim.DelayMs(HTIM1_MS);
  47:src/main.cpp  **** // 	tim.Start();
  48:src/main.cpp  **** // }
  49:src/main.cpp  **** 
  50:src/main.cpp  **** 
  51:src/main.cpp  **** void UART_Init(daisy::UartHandler &uart) {
  52:src/main.cpp  **** 	daisy::UartHandler::Config usart1_conf;
  53:src/main.cpp  **** 	usart1_conf.periph = UartHandler::Config::Peripheral::USART_1;
  54:src/main.cpp  **** 	usart1_conf.mode = UartHandler::Config::Mode::TX_RX;
  55:src/main.cpp  **** 	usart1_conf.wordlength = UartHandler::Config::WordLength::BITS_8;
  56:src/main.cpp  **** 	usart1_conf.parity = UartHandler::Config::Parity::NONE;
  57:src/main.cpp  **** 	usart1_conf.stopbits = UartHandler::Config::StopBits::BITS_1;
  58:src/main.cpp  **** 	usart1_conf.baudrate = (uint32_t)9600;
  59:src/main.cpp  **** 	usart1_conf.pin_config.rx = Pin(PORTB, 7); // (USART_1 RX) Daisy pin 15
  60:src/main.cpp  **** 	usart1_conf.pin_config.tx = Pin(PORTB, 6); // (USART_1 TX) Daisy pin 14
  61:src/main.cpp  **** 
  62:src/main.cpp  **** 	if (uart.Init(usart1_conf) == UartHandler::Result::ERR) {
  63:src/main.cpp  **** 		hw.PrintLine("Init error");
  64:src/main.cpp  **** 		//return daisy::UartHandler::CheckError	
  65:src/main.cpp  **** 	}
  66:src/main.cpp  **** 
  67:src/main.cpp  **** 	if (uart.StartRx() == UartHandler::Result::ERR) {
  68:src/main.cpp  **** 		hw.PrintLine("StartRx error");
  69:src/main.cpp  **** 	}
  70:src/main.cpp  **** }
  71:src/main.cpp  **** 
  72:src/main.cpp  **** float paramVal;
  73:src/main.cpp  **** 
  74:src/main.cpp  **** //osThreadId Task1Handle;
  75:src/main.cpp  **** 
  76:src/main.cpp  **** // void Task1(void *arg) {
  77:src/main.cpp  **** // 	while (true) {
  78:src/main.cpp  **** // 		hw.PrintLine("hello from task1");
  79:src/main.cpp  **** // 		//hw.DelayMs(10);
  80:src/main.cpp  **** // 		//osDelay(10);
  81:src/main.cpp  **** // 	}
  82:src/main.cpp  **** // }
  83:src/main.cpp  **** 
  84:src/main.cpp  **** // osThreadDef(Task1, osPriorityNormal, 0, 128);
  85:src/main.cpp  **** 
  86:src/main.cpp  **** // osThreadId thread1_id;
  87:src/main.cpp  **** 
  88:src/main.cpp  **** // void thread1(void const *args) {
  89:src/main.cpp  **** //     while (true) {
  90:src/main.cpp  **** //         hw.PrintLine("hello from thread1");
  91:src/main.cpp  **** //     }
  92:src/main.cpp  **** // }
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 13


  93:src/main.cpp  **** 
  94:src/main.cpp  **** // osThreadDef(thread1, osPriorityNormal, 1, 128);
  95:src/main.cpp  **** 
  96:src/main.cpp  **** //static ParameterMap DSY_QSPI_BSS params;
  97:src/main.cpp  **** 
  98:src/main.cpp  **** //stateId state;
  99:src/main.cpp  **** ParameterConfig paramConf;
 100:src/main.cpp  **** ParameterMap parameterMap;
 101:src/main.cpp  **** 
 102:src/main.cpp  **** constexpr const float clamp( const float v, const float lo, const float hi )
 103:src/main.cpp  **** {
 104:src/main.cpp  ****     int outputLimit = 256;
 105:src/main.cpp  ****     float range = (hi - lo);// - float.Epsilon;
 106:src/main.cpp  ****     float rangedValue = (v - lo) / range;
 107:src/main.cpp  ****     return lo + (int)(outputLimit * rangedValue);
 108:src/main.cpp  **** }
 109:src/main.cpp  **** 
 110:src/main.cpp  **** daisysp::Phaser phaser;
 111:src/main.cpp  **** 
 112:src/main.cpp  **** void AudioCallback(daisy::AudioHandle::InputBuffer in, daisy::AudioHandle::OutputBuffer out, size_t
 113:src/main.cpp  **** { 
 129              		.loc 8 113 1 is_stmt 1 view -0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		@ link register save eliminated.
 114:src/main.cpp  ****     for (size_t i = 0; i < size; i++)
 134              		.loc 8 114 5 view .LVU15
 135              	.LBB2408:
 136              		.loc 8 114 26 view .LVU16
 137 0000 9AB1     		cbz	r2, .L13
 138 0002 0368     		ldr	r3, [r0]
 139 0004 4068     		ldr	r0, [r0, #4]
 140              	.LVL4:
 141              		.loc 8 114 26 is_stmt 0 view .LVU17
 142 0006 03EB820C 		add	ip, r3, r2, lsl #2
 143              	.LBE2408:
 113:src/main.cpp  ****     for (size_t i = 0; i < size; i++)
 144              		.loc 8 113 1 view .LVU18
 145 000a 10B4     		push	{r4}
 146              		.cfi_def_cfa_offset 4
 147              		.cfi_offset 4, -4
 148 000c 0C68     		ldr	r4, [r1]
 149 000e 4968     		ldr	r1, [r1, #4]
 150              	.LVL5:
 151              	.L7:
 152              	.LBB2409:
 115:src/main.cpp  ****     {
 116:src/main.cpp  **** 		out[0][i] = in[0][i];// * gain;
 153              		.loc 8 116 3 is_stmt 1 discriminator 2 view .LVU19
 154              		.loc 8 116 22 is_stmt 0 discriminator 2 view .LVU20
 155 0010 53F8042B 		ldr	r2, [r3], #4	@ float
 156              		.loc 8 116 13 discriminator 2 view .LVU21
 157 0014 44F8042B 		str	r2, [r4], #4	@ float
 117:src/main.cpp  **** 		out[1][i] = in[1][i];// * gain;
 158              		.loc 8 117 3 is_stmt 1 discriminator 2 view .LVU22
 114:src/main.cpp  ****     {
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 14


 159              		.loc 8 114 26 is_stmt 0 discriminator 2 view .LVU23
 160 0018 6345     		cmp	r3, ip
 161              		.loc 8 117 22 discriminator 2 view .LVU24
 162 001a 50F8042B 		ldr	r2, [r0], #4	@ float
 163              		.loc 8 117 13 discriminator 2 view .LVU25
 164 001e 41F8042B 		str	r2, [r1], #4	@ float
 114:src/main.cpp  ****     {
 165              		.loc 8 114 5 is_stmt 1 discriminator 2 view .LVU26
 114:src/main.cpp  ****     {
 166              		.loc 8 114 26 discriminator 2 view .LVU27
 167 0022 F5D1     		bne	.L7
 168              	.LBE2409:
 118:src/main.cpp  ****     }
 119:src/main.cpp  **** } 
 169              		.loc 8 119 1 is_stmt 0 view .LVU28
 170 0024 5DF8044B 		ldr	r4, [sp], #4
 171              		.cfi_restore 4
 172              		.cfi_def_cfa_offset 0
 173 0028 7047     		bx	lr
 174              	.LVL6:
 175              	.L13:
 176              		.loc 8 119 1 view .LVU29
 177 002a 7047     		bx	lr
 178              		.cfi_endproc
 179              	.LFE5456:
 181              		.section	.text._ZNSt10_HashtableIiSt4pairIKi5paramESaIS3_ENSt8__detail10_Select1stESt8equal_toIiES
 182              		.align	1
 183              		.p2align 2,,3
 184              		.syntax unified
 185              		.thumb
 186              		.thumb_func
 187              		.fpu fpv5-d16
 189              	_ZNSt10_HashtableIiSt4pairIKi5paramESaIS3_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS5_18_
 190              	.LVL7:
 191              	.LFB6585:
 192              		.file 9 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eabi
   1:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // hashtable.h header -*- C++ -*-
   2:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
   3:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // Copyright (C) 2007-2020 Free Software Foundation, Inc.
   4:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** //
   5:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // software; you can redistribute it and/or modify it under the
   7:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // terms of the GNU General Public License as published by the
   8:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // any later version.
  10:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
  11:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // This library is distributed in the hope that it will be useful,
  12:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // GNU General Public License for more details.
  15:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
  16:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
  20:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // You should have received a copy of the GNU General Public License and
  21:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // a copy of the GCC Runtime Library Exception along with this program;
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 15


  22:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** // <http://www.gnu.org/licenses/>.
  24:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
  25:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** /** @file bits/hashtable.h
  26:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****  *  This is an internal header file, included by other library headers.
  27:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****  *  Do not attempt to use it directly. @headername{unordered_map, unordered_set}
  28:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****  */
  29:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
  30:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** #ifndef _HASHTABLE_H
  31:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** #define _HASHTABLE_H 1
  32:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
  33:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** #pragma GCC system_header
  34:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
  35:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** #include <bits/hashtable_policy.h>
  36:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** #if __cplusplus > 201402L
  37:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** # include <bits/node_handle.h>
  38:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** #endif
  39:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
  40:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** namespace std _GLIBCXX_VISIBILITY(default)
  41:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** {
  42:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  43:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
  44:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Tp, typename _Hash>
  45:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     using __cache_default
  46:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       =  __not_<__and_<// Do not cache for fast hasher.
  47:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		       __is_fast_hash<_Hash>,
  48:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		       // Mandatory to have erase not throwing.
  49:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		       __is_nothrow_invocable<const _Hash&, const _Tp&>>>;
  50:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
  51:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   /**
  52:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  Primary class template _Hashtable.
  53:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
  54:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  @ingroup hashtable-detail
  55:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
  56:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  @tparam _Value  CopyConstructible type.
  57:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
  58:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  @tparam _Key    CopyConstructible type.
  59:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
  60:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  @tparam _Alloc  An allocator type
  61:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  ([lib.allocator.requirements]) whose _Alloc::value_type is
  62:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  _Value.  As a conforming extension, we allow for
  63:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  _Alloc::value_type != _Value.
  64:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
  65:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  @tparam _ExtractKey  Function object that takes an object of type
  66:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  _Value and returns a value of type _Key.
  67:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
  68:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  @tparam _Equal  Function object that takes two objects of type k
  69:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  and returns a bool-like value that is true if the two objects
  70:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  are considered equal.
  71:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
  72:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  @tparam _H1  The hash function. A unary function object with
  73:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  argument type _Key and result type size_t. Return values should
  74:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  be distributed over the entire range [0, numeric_limits<size_t>:::max()].
  75:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  @tparam _H2  The range-hashing function (in the terminology of
  77:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  Tavori and Dreizin).  A binary function object whose argument
  78:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  types and result type are all size_t.  Given arguments r and N,
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 16


  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  the return value is in the range [0, N).
  80:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
  81:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  @tparam _Hash  The ranged hash function (Tavori and Dreizin). A
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  binary function whose argument types are _Key and size_t and
  83:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  whose result type is size_t.  Given arguments k and N, the
  84:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  return value is in the range [0, N).  Default: hash(k, N) =
  85:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  h2(h1(k), N).  If _Hash is anything other than the default, _H1
  86:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  and _H2 are ignored.
  87:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
  88:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  @tparam _RehashPolicy  Policy class with three members, all of
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  which govern the bucket count. _M_next_bkt(n) returns a bucket
  90:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  count no smaller than n.  _M_bkt_for_elements(n) returns a
  91:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  bucket count appropriate for an element count of n.
  92:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  _M_need_rehash(n_bkt, n_elt, n_ins) determines whether, if the
  93:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  current bucket count is n_bkt and the current element count is
  94:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  n_elt, we need to increase the bucket count.  If so, returns
  95:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  make_pair(true, n), where n is the new bucket count.  If not,
  96:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  returns make_pair(false, <anything>)
  97:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
  98:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  @tparam _Traits  Compile-time class with three boolean
  99:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  std::integral_constant members:  __cache_hash_code, __constant_iterators,
 100:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *   __unique_keys.
 101:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
 102:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  Each _Hashtable data structure has:
 103:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
 104:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  - _Bucket[]       _M_buckets
 105:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  - _Hash_node_base _M_before_begin
 106:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  - size_type       _M_bucket_count
 107:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  - size_type       _M_element_count
 108:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
 109:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  with _Bucket being _Hash_node* and _Hash_node containing:
 110:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
 111:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  - _Hash_node*   _M_next
 112:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  - Tp            _M_value
 113:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  - size_t        _M_hash_code if cache_hash_code is true
 114:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  In terms of Standard containers the hashtable is like the aggregation of:
 116:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
 117:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  - std::forward_list<_Node> containing the elements
 118:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  - std::vector<std::forward_list<_Node>::iterator> representing the buckets
 119:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  The non-empty buckets contain the node before the first node in the
 121:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  bucket. This design makes it possible to implement something like a
 122:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  std::forward_list::insert_after on container insertion and
 123:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  std::forward_list::erase_after on container erase
 124:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  calls. _M_before_begin is equivalent to
 125:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  std::forward_list::before_begin. Empty buckets contain
 126:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  nullptr.  Note that one of the non-empty buckets contains
 127:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  &_M_before_begin which is not a dereferenceable node so the
 128:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  node pointer in a bucket shall never be dereferenced, only its
 129:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  next node can be.
 130:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
 131:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  Walking through a bucket's nodes requires a check on the hash code to
 132:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  see if each node is still in the bucket. Such a design assumes a
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  quite efficient hash functor and is one of the reasons it is
 134:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  highly advisable to set __cache_hash_code to true.
 135:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 17


 136:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  The container iterators are simply built from nodes. This way
 137:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  incrementing the iterator is perfectly efficient independent of
 138:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  how many empty buckets there are in the container.
 139:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
 140:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  On insert we compute the element's hash code and use it to find the
 141:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  bucket index. If the element must be inserted in an empty bucket
 142:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  we add it at the beginning of the singly linked list and make the
 143:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  bucket point to _M_before_begin. The bucket that used to point to
 144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  _M_before_begin, if any, is updated to point to its new before
 145:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  begin node.
 146:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  On erase, the simple iterator design requires using the hash
 148:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  functor to get the index of the bucket to update. For this
 149:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  reason, when __cache_hash_code is set to false the hash functor must
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  not throw and this is enforced by a static assertion.
 151:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
 152:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  Functionality is implemented by decomposition into base classes,
 153:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  where the derived _Hashtable class is used in _Map_base,
 154:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  _Insert, _Rehash_base, and _Equality base classes to access the
 155:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  "this" pointer. _Hashtable_base is used in the base classes as a
 156:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  non-recursive, fully-completed-type so that detailed nested type
 157:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  information, such as iterator type and node type, can be
 158:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  used. This is similar to the "Curiously Recurring Template
 159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  Pattern" (CRTP) technique, but uses a reconstructed, not
 160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  explicitly passed, template pattern.
 161:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *
 162:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *  Base class templates are: 
 163:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *    - __detail::_Hashtable_base
 164:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *    - __detail::_Map_base
 165:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *    - __detail::_Insert
 166:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *    - __detail::_Rehash_base
 167:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    *    - __detail::_Equality
 168:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****    */
 169:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value, typename _Alloc,
 170:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _ExtractKey, typename _Equal,
 171:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash,
 172:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _RehashPolicy, typename _Traits>
 173:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     class _Hashtable
 174:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     : public __detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal,
 175:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 				       _H1, _H2, _Hash, _Traits>,
 176:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       public __detail::_Map_base<_Key, _Value, _Alloc, _ExtractKey, _Equal,
 177:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 				 _H1, _H2, _Hash, _RehashPolicy, _Traits>,
 178:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       public __detail::_Insert<_Key, _Value, _Alloc, _ExtractKey, _Equal,
 179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			       _H1, _H2, _Hash, _RehashPolicy, _Traits>,
 180:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       public __detail::_Rehash_base<_Key, _Value, _Alloc, _ExtractKey, _Equal,
 181:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 				    _H1, _H2, _Hash, _RehashPolicy, _Traits>,
 182:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       public __detail::_Equality<_Key, _Value, _Alloc, _ExtractKey, _Equal,
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 				 _H1, _H2, _Hash, _RehashPolicy, _Traits>,
 184:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       private __detail::_Hashtable_alloc<
 185:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__alloc_rebind<_Alloc,
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		       __detail::_Hash_node<_Value,
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 					    _Traits::__hash_cached::value>>>
 188:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
 189:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       static_assert(is_same<typename remove_cv<_Value>::type, _Value>::value,
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  "unordered container must have a non-const, non-volatile value_type");
 191:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** #if __cplusplus > 201703L || defined __STRICT_ANSI__
 192:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       static_assert(is_same<typename _Alloc::value_type, _Value>{},
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 18


 193:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  "unordered container must have the same value_type as its allocator");
 194:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** #endif
 195:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 196:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __traits_type = _Traits;
 197:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __hash_cached = typename __traits_type::__hash_cached;
 198:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __node_type = __detail::_Hash_node<_Value, __hash_cached::value>;
 199:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __node_alloc_type = __alloc_rebind<_Alloc, __node_type>;
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 201:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __hashtable_alloc = __detail::_Hashtable_alloc<__node_alloc_type>;
 202:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 203:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __value_alloc_traits =
 204:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	typename __hashtable_alloc::__value_alloc_traits;
 205:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __node_alloc_traits =
 206:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	typename __hashtable_alloc::__node_alloc_traits;
 207:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __node_base = typename __hashtable_alloc::__node_base;
 208:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __bucket_type = typename __hashtable_alloc::__bucket_type;
 209:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 210:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     public:
 211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       typedef _Key						key_type;
 212:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       typedef _Value						value_type;
 213:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       typedef _Alloc						allocator_type;
 214:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       typedef _Equal						key_equal;
 215:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 216:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // mapped_type, if present, comes from _Map_base.
 217:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // hasher, if present, comes from _Hash_code_base/_Hashtable_base.
 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       typedef typename __value_alloc_traits::pointer		pointer;
 219:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       typedef typename __value_alloc_traits::const_pointer	const_pointer;
 220:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       typedef value_type&					reference;
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       typedef const value_type&					const_reference;
 222:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 223:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     private:
 224:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __rehash_type = _RehashPolicy;
 225:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __rehash_state = typename __rehash_type::_State;
 226:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 227:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __constant_iterators = typename __traits_type::__constant_iterators;
 228:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __unique_keys = typename __traits_type::__unique_keys;
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 230:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __key_extract = typename std::conditional<
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 					     __constant_iterators::value,
 232:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 				       	     __detail::_Identity,
 233:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 					     __detail::_Select1st>::type;
 234:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 235:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __hashtable_base = __detail::
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			       _Hashtable_base<_Key, _Value, _ExtractKey,
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 					      _Equal, _H1, _H2, _Hash, _Traits>;
 238:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 239:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __hash_code_base =  typename __hashtable_base::__hash_code_base;
 240:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __hash_code =  typename __hashtable_base::__hash_code;
 241:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __ireturn_type = typename __hashtable_base::__ireturn_type;
 242:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 243:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __map_base = __detail::_Map_base<_Key, _Value, _Alloc, _ExtractKey,
 244:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 					     _Equal, _H1, _H2, _Hash,
 245:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 					     _RehashPolicy, _Traits>;
 246:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 247:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __rehash_base = __detail::_Rehash_base<_Key, _Value, _Alloc,
 248:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 						   _ExtractKey, _Equal,
 249:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 						   _H1, _H2, _Hash,
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 19


 250:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 						   _RehashPolicy, _Traits>;
 251:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 252:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __eq_base = __detail::_Equality<_Key, _Value, _Alloc, _ExtractKey,
 253:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 					    _Equal, _H1, _H2, _Hash,
 254:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 					    _RehashPolicy, _Traits>;
 255:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 256:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __reuse_or_alloc_node_gen_t =
 257:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__detail::_ReuseOrAllocNode<__node_alloc_type>;
 258:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using __alloc_node_gen_t =
 259:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__detail::_AllocNode<__node_alloc_type>;
 260:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 261:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Simple RAII type for managing a node containing an element
 262:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       struct _Scoped_node
 263:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 264:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	// Take ownership of a node with a constructed element.
 265:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_Scoped_node(__node_type* __n, __hashtable_alloc* __h)
 266:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	: _M_h(__h), _M_node(__n) { }
 267:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 268:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	// Allocate a node and construct an element within it.
 269:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	template<typename... _Args>
 270:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _Scoped_node(__hashtable_alloc* __h, _Args&&... __args)
 271:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  : _M_h(__h),
 272:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_node(__h->_M_allocate_node(std::forward<_Args>(__args)...))
 273:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  { }
 274:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 275:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	// Destroy element and deallocate node.
 276:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	~_Scoped_node() { if (_M_node) _M_h->_M_deallocate_node(_M_node); };
 277:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 278:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_Scoped_node(const _Scoped_node&) = delete;
 279:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_Scoped_node& operator=(const _Scoped_node&) = delete;
 280:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 281:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__hashtable_alloc* _M_h;
 282:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__node_type* _M_node;
 283:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       };
 284:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 285:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename _Ht>
 286:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	static constexpr
 287:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	typename conditional<std::is_lvalue_reference<_Ht>::value,
 288:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			     const value_type&, value_type&&>::type
 289:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__fwd_value_for(value_type& __val) noexcept
 290:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{ return std::move(__val); }
 291:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 292:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Metaprogramming for picking apart hash caching.
 293:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename _Cond>
 294:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	using __if_hash_cached = __or_<__not_<__hash_cached>, _Cond>;
 295:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 296:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename _Cond>
 297:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	using __if_hash_not_cached = __or_<__hash_cached, _Cond>;
 298:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 299:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Compile-time diagnostics.
 300:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 301:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // _Hash_code_base has everything protected, so use this derived type to
 302:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // access it.
 303:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       struct __hash_code_base_access : __hash_code_base
 304:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { using __hash_code_base::_M_bucket_index; };
 305:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 306:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Getting a bucket index from a node shall not throw because it is used
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 20


 307:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // in methods (erase, swap...) that shall not throw.
 308:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       static_assert(noexcept(declval<const __hash_code_base_access&>()
 309:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			     ._M_bucket_index((const __node_type*)nullptr,
 310:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 					      (std::size_t)0)),
 311:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		    "Cache the hash code or qualify your functors involved"
 312:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		    " in hash code and bucket index computation with noexcept");
 313:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 314:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // When hash codes are cached local iterator inherits from H2 functor
 315:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // which must then be default constructible.
 316:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       static_assert(__if_hash_cached<is_default_constructible<_H2>>::value,
 317:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		    "Functor used to map hash code to bucket index"
 318:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		    " must be default constructible");
 319:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 320:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename _Keya, typename _Valuea, typename _Alloca,
 321:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       typename _ExtractKeya, typename _Equala,
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       typename _H1a, typename _H2a, typename _Hasha,
 323:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       typename _RehashPolicya, typename _Traitsa,
 324:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       bool _Unique_keysa>
 325:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	friend struct __detail::_Map_base;
 326:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 327:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename _Keya, typename _Valuea, typename _Alloca,
 328:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       typename _ExtractKeya, typename _Equala,
 329:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       typename _H1a, typename _H2a, typename _Hasha,
 330:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       typename _RehashPolicya, typename _Traitsa>
 331:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	friend struct __detail::_Insert_base;
 332:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 333:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename _Keya, typename _Valuea, typename _Alloca,
 334:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       typename _ExtractKeya, typename _Equala,
 335:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       typename _H1a, typename _H2a, typename _Hasha,
 336:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       typename _RehashPolicya, typename _Traitsa,
 337:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       bool _Constant_iteratorsa>
 338:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	friend struct __detail::_Insert;
 339:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 340:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename _Keya, typename _Valuea, typename _Alloca,
 341:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       typename _ExtractKeya, typename _Equala,
 342:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       typename _H1a, typename _H2a, typename _Hasha,
 343:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       typename _RehashPolicya, typename _Traitsa,
 344:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       bool _Unique_keysa>
 345:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	friend struct __detail::_Equality;
 346:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 347:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     public:
 348:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using size_type = typename __hashtable_base::size_type;
 349:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using difference_type = typename __hashtable_base::difference_type;
 350:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 351:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using iterator = typename __hashtable_base::iterator;
 352:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using const_iterator = typename __hashtable_base::const_iterator;
 353:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 354:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using local_iterator = typename __hashtable_base::local_iterator;
 355:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using const_local_iterator = typename __hashtable_base::
 356:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 				   const_local_iterator;
 357:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 358:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** #if __cplusplus > 201402L
 359:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using node_type = _Node_handle<_Key, _Value, __node_alloc_type>;
 360:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       using insert_return_type = _Node_insert_return<iterator, node_type>;
 361:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** #endif
 362:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 363:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     private:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 21


 364:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __bucket_type*		_M_buckets		= &_M_single_bucket;
 365:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       size_type			_M_bucket_count		= 1;
 366:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_base		_M_before_begin;
 367:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       size_type			_M_element_count	= 0;
 368:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _RehashPolicy		_M_rehash_policy;
 369:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 370:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // A single bucket used when only need for 1 bucket. Especially
 371:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // interesting in move semantic to leave hashtable with only 1 bucket
 372:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // which is not allocated so that we can have those operations noexcept
 373:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // qualified.
 374:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Note that we can't leave hashtable with 0 bucket without adding
 375:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // numerous checks in the code to avoid 0 modulus.
 376:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __bucket_type		_M_single_bucket	= nullptr;
 377:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 378:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       bool
 379:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_uses_single_bucket(__bucket_type* __bkts) const
 380:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __builtin_expect(__bkts == &_M_single_bucket, false); }
 381:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 382:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       bool
 383:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_uses_single_bucket() const
 384:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return _M_uses_single_bucket(_M_buckets); }
 385:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 386:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __hashtable_alloc&
 387:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_base_alloc() { return *this; }
 388:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 389:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __bucket_type*
 390:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_allocate_buckets(size_type __bkt_count)
 391:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 392:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	if (__builtin_expect(__bkt_count == 1, false))
 393:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  {
 394:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_single_bucket = nullptr;
 395:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    return &_M_single_bucket;
 396:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  }
 397:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 398:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return __hashtable_alloc::_M_allocate_buckets(__bkt_count);
 399:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
 400:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 401:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       void
 402:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_deallocate_buckets(__bucket_type* __bkts, size_type __bkt_count)
 403:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 404:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	if (_M_uses_single_bucket(__bkts))
 405:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return;
 406:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 407:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__hashtable_alloc::_M_deallocate_buckets(__bkts, __bkt_count);
 408:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
 409:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 410:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       void
 411:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_deallocate_buckets()
 412:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { _M_deallocate_buckets(_M_buckets, _M_bucket_count); }
 413:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 414:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Gets bucket begin, deals with the fact that non-empty buckets contain
 415:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // their before begin node.
 416:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_type*
 417:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_bucket_begin(size_type __bkt) const;
 418:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 419:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_type*
 420:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_begin() const
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 22


 421:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return static_cast<__node_type*>(_M_before_begin._M_nxt); }
 422:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 423:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Assign *this using another _Hashtable instance. Whether elements
 424:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // are copied or moved depends on the _Ht reference.
 425:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename _Ht>
 426:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	void
 427:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_assign_elements(_Ht&&);
 428:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 429:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename _Ht, typename _NodeGenerator>
 430:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	void
 431:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_assign(_Ht&&, const _NodeGenerator&);
 432:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       void
 434:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_move_assign(_Hashtable&&, true_type);
 435:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 436:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       void
 437:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_move_assign(_Hashtable&&, false_type);
 438:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 439:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       void
 440:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_reset() noexcept;
 441:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 442:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(const _H1& __h1, const _H2& __h2, const _Hash& __h,
 443:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 const _Equal& __eq, const _ExtractKey& __exk,
 444:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 const allocator_type& __a)
 445:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       : __hashtable_base(__exk, __h1, __h2, __h, __eq),
 446:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__hashtable_alloc(__node_alloc_type(__a))
 447:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { }
 448:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 449:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     public:
 450:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Constructor, destructor, assignment, swap
 451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable() = default;
 452:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(size_type __bkt_count_hint,
 453:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 const _H1&, const _H2&, const _Hash&,
 454:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 const _Equal&, const _ExtractKey&,
 455:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 const allocator_type&);
 456:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 457:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename _InputIterator>
 458:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_Hashtable(_InputIterator __first, _InputIterator __last,
 459:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		   size_type __bkt_count_hint,
 460:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		   const _H1&, const _H2&, const _Hash&,
 461:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		   const _Equal&, const _ExtractKey&,
 462:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		   const allocator_type&);
 463:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 464:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(const _Hashtable&);
 465:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 466:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(_Hashtable&&) noexcept;
 467:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 468:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(const _Hashtable&, const allocator_type&);
 469:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 470:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(_Hashtable&&, const allocator_type&);
 471:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 472:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Use delegating constructors.
 473:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       explicit
 474:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(const allocator_type& __a)
 475:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       : __hashtable_alloc(__node_alloc_type(__a))
 476:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { }
 477:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 23


 478:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       explicit
 479:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(size_type __bkt_count_hint,
 480:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 const _H1& __hf = _H1(),
 481:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 const key_equal& __eql = key_equal(),
 482:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 const allocator_type& __a = allocator_type())
 483:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       : _Hashtable(__bkt_count_hint, __hf, _H2(), _Hash(), __eql,
 484:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		   __key_extract(), __a)
 485:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { }
 486:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 487:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename _InputIterator>
 488:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_Hashtable(_InputIterator __f, _InputIterator __l,
 489:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		   size_type __bkt_count_hint = 0,
 490:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		   const _H1& __hf = _H1(),
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		   const key_equal& __eql = key_equal(),
 492:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		   const allocator_type& __a = allocator_type())
 493:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	: _Hashtable(__f, __l, __bkt_count_hint, __hf, _H2(), _Hash(), __eql,
 494:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		     __key_extract(), __a)
 495:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{ }
 496:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 497:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(initializer_list<value_type> __l,
 498:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 size_type __bkt_count_hint = 0,
 499:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 const _H1& __hf = _H1(),
 500:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 const key_equal& __eql = key_equal(),
 501:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 const allocator_type& __a = allocator_type())
 502:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       : _Hashtable(__l.begin(), __l.end(), __bkt_count_hint,
 503:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		   __hf, _H2(), _Hash(), __eql,
 504:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		   __key_extract(), __a)
 505:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { }
 506:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 507:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable&
 508:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       operator=(const _Hashtable& __ht);
 509:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 510:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable&
 511:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       operator=(_Hashtable&& __ht)
 512:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       noexcept(__node_alloc_traits::_S_nothrow_move()
 513:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       && is_nothrow_move_assignable<_H1>::value
 514:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       && is_nothrow_move_assignable<_Equal>::value)
 515:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 516:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****         constexpr bool __move_storage =
 517:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __node_alloc_traits::_S_propagate_on_move_assign()
 518:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  || __node_alloc_traits::_S_always_equal();
 519:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_move_assign(std::move(__ht), __bool_constant<__move_storage>());
 520:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return *this;
 521:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
 522:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 523:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable&
 524:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       operator=(initializer_list<value_type> __l)
 525:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 526:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__reuse_or_alloc_node_gen_t __roan(_M_begin(), *this);
 527:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_before_begin._M_nxt = nullptr;
 528:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	clear();
 529:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	this->_M_insert_range(__l.begin(), __l.end(), __roan, __unique_keys());
 530:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return *this;
 531:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
 532:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 533:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       ~_Hashtable() noexcept;
 534:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 24


 535:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       void
 536:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       swap(_Hashtable&)
 537:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       noexcept(__and_<__is_nothrow_swappable<_H1>,
 538:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	                  __is_nothrow_swappable<_Equal>>::value);
 539:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 540:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Basic container operations
 541:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       iterator
 542:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       begin() noexcept
 543:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return iterator(_M_begin()); }
 544:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 545:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       const_iterator
 546:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       begin() const noexcept
 547:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return const_iterator(_M_begin()); }
 548:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 549:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       iterator
 550:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       end() noexcept
 551:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return iterator(nullptr); }
 552:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 553:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       const_iterator
 554:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       end() const noexcept
 555:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return const_iterator(nullptr); }
 556:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 557:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       const_iterator
 558:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       cbegin() const noexcept
 559:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return const_iterator(_M_begin()); }
 560:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 561:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       const_iterator
 562:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       cend() const noexcept
 563:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return const_iterator(nullptr); }
 564:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 565:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       size_type
 566:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       size() const noexcept
 567:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return _M_element_count; }
 568:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 569:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _GLIBCXX_NODISCARD bool
 570:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       empty() const noexcept
 571:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return size() == 0; }
 572:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 573:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       allocator_type
 574:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       get_allocator() const noexcept
 575:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return allocator_type(this->_M_node_allocator()); }
 576:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 577:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       size_type
 578:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       max_size() const noexcept
 579:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __node_alloc_traits::max_size(this->_M_node_allocator()); }
 580:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 581:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Observers
 582:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       key_equal
 583:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       key_eq() const
 584:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return this->_M_eq(); }
 585:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 586:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // hash_function, if present, comes from _Hash_code_base.
 587:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 588:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Bucket operations
 589:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       size_type
 590:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       bucket_count() const noexcept
 591:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return _M_bucket_count; }
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 25


 592:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 593:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       size_type
 594:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       max_bucket_count() const noexcept
 595:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return max_size(); }
 596:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 597:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       size_type
 598:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       bucket_size(size_type __bkt) const
 599:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return std::distance(begin(__bkt), end(__bkt)); }
 600:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 601:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       size_type
 602:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       bucket(const key_type& __k) const
 603:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return _M_bucket_index(__k, this->_M_hash_code(__k)); }
 604:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 605:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       local_iterator
 606:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       begin(size_type __bkt)
 607:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 608:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return local_iterator(*this, _M_bucket_begin(__bkt),
 609:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			      __bkt, _M_bucket_count);
 610:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
 611:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 612:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       local_iterator
 613:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       end(size_type __bkt)
 614:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return local_iterator(*this, nullptr, __bkt, _M_bucket_count); }
 615:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 616:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       const_local_iterator
 617:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       begin(size_type __bkt) const
 618:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 619:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return const_local_iterator(*this, _M_bucket_begin(__bkt),
 620:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 				    __bkt, _M_bucket_count);
 621:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
 622:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 623:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       const_local_iterator
 624:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       end(size_type __bkt) const
 625:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return const_local_iterator(*this, nullptr, __bkt, _M_bucket_count); }
 626:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 627:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // DR 691.
 628:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       const_local_iterator
 629:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       cbegin(size_type __bkt) const
 630:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 631:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return const_local_iterator(*this, _M_bucket_begin(__bkt),
 632:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 				    __bkt, _M_bucket_count);
 633:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
 634:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 635:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       const_local_iterator
 636:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       cend(size_type __bkt) const
 637:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return const_local_iterator(*this, nullptr, __bkt, _M_bucket_count); }
 638:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 639:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       float
 640:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       load_factor() const noexcept
 641:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 642:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return static_cast<float>(size()) / static_cast<float>(bucket_count());
 643:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
 644:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 645:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // max_load_factor, if present, comes from _Rehash_base.
 646:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 647:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Generalization of max_load_factor.  Extension, not found in
 648:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // TR1.  Only useful if _RehashPolicy is something other than
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 26


 649:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // the default.
 650:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       const _RehashPolicy&
 651:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __rehash_policy() const
 652:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return _M_rehash_policy; }
 653:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 654:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       void
 655:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __rehash_policy(const _RehashPolicy& __pol)
 656:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { _M_rehash_policy = __pol; }
 657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 658:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Lookup.
 659:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       iterator
 660:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       find(const key_type& __k);
 661:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 662:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       const_iterator
 663:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       find(const key_type& __k) const;
 664:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 665:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       size_type
 666:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       count(const key_type& __k) const;
 667:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 668:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::pair<iterator, iterator>
 669:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       equal_range(const key_type& __k);
 670:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 671:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::pair<const_iterator, const_iterator>
 672:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       equal_range(const key_type& __k) const;
 673:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 674:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     protected:
 675:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Bucket index computation helpers.
 676:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       size_type
 677:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_bucket_index(__node_type* __n) const noexcept
 678:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __hash_code_base::_M_bucket_index(__n, _M_bucket_count); }
 679:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 680:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       size_type
 681:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_bucket_index(const key_type& __k, __hash_code __c) const
 682:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __hash_code_base::_M_bucket_index(__k, __c, _M_bucket_count); }
 683:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 684:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Find and insert helper functions and types
 685:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Find the node before the one matching the criteria.
 686:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_base*
 687:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_find_before_node(size_type, const key_type&, __hash_code) const;
 688:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 689:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_type*
 690:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_find_node(size_type __bkt, const key_type& __key,
 691:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		   __hash_code __c) const
 692:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 693:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__node_base* __before_n = _M_find_before_node(__bkt, __key, __c);
 694:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	if (__before_n)
 695:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return static_cast<__node_type*>(__before_n->_M_nxt);
 696:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return nullptr;
 697:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
 698:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 699:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Insert a node at the beginning of a bucket.
 700:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       void
 701:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_insert_bucket_begin(size_type, __node_type*);
 702:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 703:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Remove the bucket first node
 704:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       void
 705:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_remove_bucket_begin(size_type __bkt, __node_type* __next_n,
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 27


 706:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			     size_type __next_bkt);
 707:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 708:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Get the node before __n in the bucket __bkt
 709:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_base*
 710:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_get_previous_node(size_type __bkt, __node_base* __n);
 711:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 712:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Insert node __n with key __k and hash code __code, in bucket __bkt
 713:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // if no rehash (assumes no element with same key already present).
 714:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Takes ownership of __n if insertion succeeds, throws otherwise.
 715:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       iterator
 716:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_insert_unique_node(const key_type& __k, size_type __bkt,
 717:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			    __hash_code __code, __node_type* __n,
 718:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			    size_type __n_elt = 1);
 719:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 720:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Insert node __n with key __k and hash code __code.
 721:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Takes ownership of __n if insertion succeeds, throws otherwise.
 722:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       iterator
 723:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_insert_multi_node(__node_type* __hint, const key_type& __k,
 724:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			   __hash_code __code, __node_type* __n);
 725:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 726:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename... _Args>
 727:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	std::pair<iterator, bool>
 728:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_emplace(true_type, _Args&&... __args);
 729:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 730:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename... _Args>
 731:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	iterator
 732:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_emplace(false_type __uk, _Args&&... __args)
 733:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{ return _M_emplace(cend(), __uk, std::forward<_Args>(__args)...); }
 734:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 735:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Emplace with hint, useless when keys are unique.
 736:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename... _Args>
 737:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	iterator
 738:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_emplace(const_iterator, true_type __uk, _Args&&... __args)
 739:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{ return _M_emplace(__uk, std::forward<_Args>(__args)...).first; }
 740:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 741:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename... _Args>
 742:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	iterator
 743:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_emplace(const_iterator, false_type, _Args&&... __args);
 744:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 745:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename _Arg, typename _NodeGenerator>
 746:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	std::pair<iterator, bool>
 747:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_insert(_Arg&&, const _NodeGenerator&, true_type, size_type = 1);
 748:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 749:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename _Arg, typename _NodeGenerator>
 750:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	iterator
 751:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_insert(_Arg&& __arg, const _NodeGenerator& __node_gen,
 752:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		  false_type __uk)
 753:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
 754:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return _M_insert(cend(), std::forward<_Arg>(__arg), __node_gen,
 755:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			   __uk);
 756:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
 757:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 758:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Insert with hint, not used when keys are unique.
 759:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename _Arg, typename _NodeGenerator>
 760:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	iterator
 761:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_insert(const_iterator, _Arg&& __arg,
 762:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		  const _NodeGenerator& __node_gen, true_type __uk)
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 28


 763:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
 764:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return
 765:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_insert(std::forward<_Arg>(__arg), __node_gen, __uk).first;
 766:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
 767:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 768:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Insert with hint when keys are not unique.
 769:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename _Arg, typename _NodeGenerator>
 770:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	iterator
 771:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_insert(const_iterator, _Arg&&,
 772:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		  const _NodeGenerator&, false_type);
 773:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 774:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       size_type
 775:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_erase(true_type, const key_type&);
 776:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 777:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       size_type
 778:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_erase(false_type, const key_type&);
 779:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 780:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       iterator
 781:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_erase(size_type __bkt, __node_base* __prev_n, __node_type* __n);
 782:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 783:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     public:
 784:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Emplace
 785:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename... _Args>
 786:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__ireturn_type
 787:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	emplace(_Args&&... __args)
 788:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{ return _M_emplace(__unique_keys(), std::forward<_Args>(__args)...); }
 789:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 790:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename... _Args>
 791:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	iterator
 792:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	emplace_hint(const_iterator __hint, _Args&&... __args)
 793:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
 794:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return _M_emplace(__hint, __unique_keys(),
 795:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			    std::forward<_Args>(__args)...);
 796:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
 797:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 798:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Insert member functions via inheritance.
 799:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 800:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Erase
 801:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       iterator
 802:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       erase(const_iterator);
 803:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 804:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // LWG 2059.
 805:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       iterator
 806:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       erase(iterator __it)
 807:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return erase(const_iterator(__it)); }
 808:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 809:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       size_type
 810:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       erase(const key_type& __k)
 811:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return _M_erase(__unique_keys(), __k); }
 812:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 813:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       iterator
 814:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       erase(const_iterator, const_iterator);
 815:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 816:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       void
 817:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       clear() noexcept;
 818:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 819:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Set number of buckets keeping it appropriate for container's number
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 29


 820:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // of elements.
 821:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       void rehash(size_type __bkt_count);
 822:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 823:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // DR 1189.
 824:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // reserve, if present, comes from _Rehash_base.
 825:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 826:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** #if __cplusplus > 201402L
 827:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       /// Re-insert an extracted node into a container with unique keys.
 828:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       insert_return_type
 829:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_reinsert_node(node_type&& __nh)
 830:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 831:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	insert_return_type __ret;
 832:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	if (__nh.empty())
 833:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __ret.position = end();
 834:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	else
 835:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  {
 836:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    __glibcxx_assert(get_allocator() == __nh.get_allocator());
 837:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 838:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    const key_type& __k = __nh._M_key();
 839:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    __hash_code __code = this->_M_hash_code(__k);
 840:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    size_type __bkt = _M_bucket_index(__k, __code);
 841:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    if (__node_type* __n = _M_find_node(__bkt, __k, __code))
 842:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      {
 843:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		__ret.node = std::move(__nh);
 844:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		__ret.position = iterator(__n);
 845:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		__ret.inserted = false;
 846:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      }
 847:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    else
 848:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      {
 849:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		__ret.position
 850:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		  = _M_insert_unique_node(__k, __bkt, __code, __nh._M_ptr);
 851:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		__nh._M_ptr = nullptr;
 852:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		__ret.inserted = true;
 853:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      }
 854:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  }
 855:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return __ret;
 856:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
 857:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 858:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       /// Re-insert an extracted node into a container with equivalent keys.
 859:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       iterator
 860:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_reinsert_node_multi(const_iterator __hint, node_type&& __nh)
 861:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 862:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	if (__nh.empty())
 863:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return end();
 864:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 865:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__glibcxx_assert(get_allocator() == __nh.get_allocator());
 866:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 867:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	const key_type& __k = __nh._M_key();
 868:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	auto __code = this->_M_hash_code(__k);
 869:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	auto __ret
 870:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  = _M_insert_multi_node(__hint._M_cur, __k, __code, __nh._M_ptr);
 871:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__nh._M_ptr = nullptr;
 872:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return __ret;
 873:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
 874:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 875:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     private:
 876:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       node_type
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 30


 877:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_extract_node(size_t __bkt, __node_base* __prev_n)
 878:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 879:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__node_type* __n = static_cast<__node_type*>(__prev_n->_M_nxt);
 880:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	if (__prev_n == _M_buckets[__bkt])
 881:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_remove_bucket_begin(__bkt, __n->_M_next(),
 882:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	     __n->_M_nxt ? _M_bucket_index(__n->_M_next()) : 0);
 883:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	else if (__n->_M_nxt)
 884:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  {
 885:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    size_type __next_bkt = _M_bucket_index(__n->_M_next());
 886:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    if (__next_bkt != __bkt)
 887:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      _M_buckets[__next_bkt] = __prev_n;
 888:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  }
 889:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 890:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__prev_n->_M_nxt = __n->_M_nxt;
 891:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__n->_M_nxt = nullptr;
 892:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	--_M_element_count;
 893:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return { __n, this->_M_node_allocator() };
 894:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
 895:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 896:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     public:
 897:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Extract a node.
 898:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       node_type
 899:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       extract(const_iterator __pos)
 900:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 901:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	size_t __bkt = _M_bucket_index(__pos._M_cur);
 902:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return _M_extract_node(__bkt,
 903:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			       _M_get_previous_node(__bkt, __pos._M_cur));
 904:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
 905:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 906:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       /// Extract a node.
 907:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       node_type
 908:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       extract(const _Key& __k)
 909:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 910:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	node_type __nh;
 911:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__hash_code __code = this->_M_hash_code(__k);
 912:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	std::size_t __bkt = _M_bucket_index(__k, __code);
 913:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	if (__node_base* __prev_node = _M_find_before_node(__bkt, __k, __code))
 914:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __nh = _M_extract_node(__bkt, __prev_node);
 915:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return __nh;
 916:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
 917:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 918:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       /// Merge from a compatible container into one with unique keys.
 919:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename _Compatible_Hashtable>
 920:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	void
 921:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_merge_unique(_Compatible_Hashtable& __src) noexcept
 922:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
 923:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  static_assert(is_same_v<typename _Compatible_Hashtable::node_type,
 924:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      node_type>, "Node types are compatible");
 925:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __glibcxx_assert(get_allocator() == __src.get_allocator());
 926:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 927:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  auto __n_elt = __src.size();
 928:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  for (auto __i = __src.begin(), __end = __src.end(); __i != __end;)
 929:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    {
 930:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      auto __pos = __i++;
 931:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      const key_type& __k = this->_M_extract()(*__pos);
 932:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      __hash_code __code = this->_M_hash_code(__k);
 933:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      size_type __bkt = _M_bucket_index(__k, __code);
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 31


 934:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      if (_M_find_node(__bkt, __k, __code) == nullptr)
 935:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		{
 936:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		  auto __nh = __src.extract(__pos);
 937:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		  _M_insert_unique_node(__k, __bkt, __code, __nh._M_ptr,
 938:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 					__n_elt);
 939:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		  __nh._M_ptr = nullptr;
 940:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		  __n_elt = 1;
 941:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		}
 942:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      else if (__n_elt != 1)
 943:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		--__n_elt;
 944:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    }
 945:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
 946:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 947:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       /// Merge from a compatible container into one with equivalent keys.
 948:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       template<typename _Compatible_Hashtable>
 949:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	void
 950:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_merge_multi(_Compatible_Hashtable& __src) noexcept
 951:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
 952:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  static_assert(is_same_v<typename _Compatible_Hashtable::node_type,
 953:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      node_type>, "Node types are compatible");
 954:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __glibcxx_assert(get_allocator() == __src.get_allocator());
 955:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 956:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  this->reserve(size() + __src.size());
 957:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  for (auto __i = __src.begin(), __end = __src.end(); __i != __end;)
 958:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_reinsert_node_multi(cend(), __src.extract(__i++));
 959:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
 960:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** #endif // C++17
 961:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 962:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     private:
 963:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Helper rehash method used when keys are unique.
 964:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       void _M_rehash_aux(size_type __bkt_count, true_type);
 965:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 966:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Helper rehash method used when keys can be non-unique.
 967:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       void _M_rehash_aux(size_type __bkt_count, false_type);
 968:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 969:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Unconditionally change size of bucket array to n, restore
 970:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // hash policy state to __state on exception.
 971:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       void _M_rehash(size_type __bkt_count, const __rehash_state& __state);
 972:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     };
 973:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 974:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 975:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   // Definitions of class template _Hashtable's out-of-line member functions.
 976:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
 977:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
 978:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
 979:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
 980:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     auto
 981:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
 982:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 983:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _M_bucket_begin(size_type __bkt) const
 984:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     -> __node_type*
 985:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
 986:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_base* __n = _M_buckets[__bkt];
 987:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return __n ? static_cast<__node_type*>(__n->_M_nxt) : nullptr;
 988:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
 989:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 990:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 32


 991:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
 992:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
 993:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
 994:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
 995:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 996:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable(size_type __bkt_count_hint,
 997:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       const _H1& __h1, const _H2& __h2, const _Hash& __h,
 998:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       const _Equal& __eq, const _ExtractKey& __exk,
 999:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       const allocator_type& __a)
1000:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     : _Hashtable(__h1, __h2, __h, __eq, __exk, __a)
1001:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1002:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       auto __bkt_count = _M_rehash_policy._M_next_bkt(__bkt_count_hint);
1003:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (__bkt_count > _M_bucket_count)
1004:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1005:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_buckets = _M_allocate_buckets(__bkt_count);
1006:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_bucket_count = __bkt_count;
1007:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1008:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1009:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1010:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1011:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1012:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1013:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1014:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     template<typename _InputIterator>
1015:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1016:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1017:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(_InputIterator __f, _InputIterator __l,
1018:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 size_type __bkt_count_hint,
1019:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 const _H1& __h1, const _H2& __h2, const _Hash& __h,
1020:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 const _Equal& __eq, const _ExtractKey& __exk,
1021:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 const allocator_type& __a)
1022:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       : _Hashtable(__h1, __h2, __h, __eq, __exk, __a)
1023:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
1024:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	auto __nb_elems = __detail::__distance_fw(__f, __l);
1025:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	auto __bkt_count =
1026:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_rehash_policy._M_next_bkt(
1027:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    std::max(_M_rehash_policy._M_bkt_for_elements(__nb_elems),
1028:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		     __bkt_count_hint));
1029:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1030:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	if (__bkt_count > _M_bucket_count)
1031:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  {
1032:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_buckets = _M_allocate_buckets(__bkt_count);
1033:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_bucket_count = __bkt_count;
1034:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  }
1035:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1036:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	for (; __f != __l; ++__f)
1037:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  this->insert(*__f);
1038:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
1039:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1040:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1041:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1042:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1043:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1044:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     auto
1045:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1046:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1047:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     operator=(const _Hashtable& __ht)
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 33


1048:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     -> _Hashtable&
1049:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1050:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (&__ht == this)
1051:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return *this;
1052:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1053:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (__node_alloc_traits::_S_propagate_on_copy_assign())
1054:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1055:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  auto& __this_alloc = this->_M_node_allocator();
1056:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  auto& __that_alloc = __ht._M_node_allocator();
1057:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (!__node_alloc_traits::_S_always_equal()
1058:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      && __this_alloc != __that_alloc)
1059:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    {
1060:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      // Replacement allocator cannot free existing storage.
1061:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      this->_M_deallocate_nodes(_M_begin());
1062:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      _M_before_begin._M_nxt = nullptr;
1063:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      _M_deallocate_buckets();
1064:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      _M_buckets = nullptr;
1065:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      std::__alloc_on_copy(__this_alloc, __that_alloc);
1066:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      __hashtable_base::operator=(__ht);
1067:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      _M_bucket_count = __ht._M_bucket_count;
1068:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      _M_element_count = __ht._M_element_count;
1069:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      _M_rehash_policy = __ht._M_rehash_policy;
1070:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      __alloc_node_gen_t __alloc_node_gen(*this);
1071:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      __try
1072:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		{
1073:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		  _M_assign(__ht, __alloc_node_gen);
1074:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		}
1075:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      __catch(...)
1076:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		{
1077:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		  // _M_assign took care of deallocating all memory. Now we
1078:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		  // must make sure this instance remains in a usable state.
1079:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		  _M_reset();
1080:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		  __throw_exception_again;
1081:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		}
1082:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      return *this;
1083:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    }
1084:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  std::__alloc_on_copy(__this_alloc, __that_alloc);
1085:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1086:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1087:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Reuse allocated buckets and nodes.
1088:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_assign_elements(__ht);
1089:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return *this;
1090:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1091:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1092:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1093:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1094:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1095:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1096:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     template<typename _Ht>
1097:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       void
1098:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1099:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1100:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_assign_elements(_Ht&& __ht)
1101:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
1102:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__bucket_type* __former_buckets = nullptr;
1103:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	std::size_t __former_bucket_count = _M_bucket_count;
1104:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	const __rehash_state& __former_state = _M_rehash_policy._M_state();
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 34


1105:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1106:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	if (_M_bucket_count != __ht._M_bucket_count)
1107:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  {
1108:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    __former_buckets = _M_buckets;
1109:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_buckets = _M_allocate_buckets(__ht._M_bucket_count);
1110:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_bucket_count = __ht._M_bucket_count;
1111:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  }
1112:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	else
1113:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __builtin_memset(_M_buckets, 0,
1114:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			   _M_bucket_count * sizeof(__bucket_type));
1115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1116:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__try
1117:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  {
1118:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    __hashtable_base::operator=(std::forward<_Ht>(__ht));
1119:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_element_count = __ht._M_element_count;
1120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_rehash_policy = __ht._M_rehash_policy;
1121:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    __reuse_or_alloc_node_gen_t __roan(_M_begin(), *this);
1122:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_before_begin._M_nxt = nullptr;
1123:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_assign(std::forward<_Ht>(__ht), __roan);
1124:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    if (__former_buckets)
1125:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      _M_deallocate_buckets(__former_buckets, __former_bucket_count);
1126:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  }
1127:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__catch(...)
1128:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  {
1129:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    if (__former_buckets)
1130:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      {
1131:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		// Restore previous buckets.
1132:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		_M_deallocate_buckets();
1133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		_M_rehash_policy._M_reset(__former_state);
1134:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		_M_buckets = __former_buckets;
1135:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		_M_bucket_count = __former_bucket_count;
1136:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      }
1137:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    __builtin_memset(_M_buckets, 0,
1138:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			     _M_bucket_count * sizeof(__bucket_type));
1139:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    __throw_exception_again;
1140:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  }
1141:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
1142:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1143:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1145:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1146:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     template<typename _Ht, typename _NodeGenerator>
1148:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       void
1149:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1151:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_assign(_Ht&& __ht, const _NodeGenerator& __node_gen)
1152:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
1153:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__bucket_type* __buckets = nullptr;
1154:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	if (!_M_buckets)
1155:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_buckets = __buckets = _M_allocate_buckets(_M_bucket_count);
1156:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1157:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__try
1158:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  {
1159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    if (!__ht._M_before_begin._M_nxt)
1160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      return;
1161:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 35


1162:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    // First deal with the special first node pointed to by
1163:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    // _M_before_begin.
1164:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    __node_type* __ht_n = __ht._M_begin();
1165:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    __node_type* __this_n
1166:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      = __node_gen(__fwd_value_for<_Ht>(__ht_n->_M_v()));
1167:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    this->_M_copy_code(__this_n, __ht_n);
1168:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_before_begin._M_nxt = __this_n;
1169:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_buckets[_M_bucket_index(__this_n)] = &_M_before_begin;
1170:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1171:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    // Then deal with other nodes.
1172:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    __node_base* __prev_n = __this_n;
1173:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    for (__ht_n = __ht_n->_M_next(); __ht_n; __ht_n = __ht_n->_M_next())
1174:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      {
1175:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		__this_n = __node_gen(__fwd_value_for<_Ht>(__ht_n->_M_v()));
1176:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		__prev_n->_M_nxt = __this_n;
1177:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		this->_M_copy_code(__this_n, __ht_n);
1178:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		size_type __bkt = _M_bucket_index(__this_n);
1179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		if (!_M_buckets[__bkt])
1180:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		  _M_buckets[__bkt] = __prev_n;
1181:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		__prev_n = __this_n;
1182:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      }
1183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  }
1184:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__catch(...)
1185:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  {
1186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    clear();
1187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    if (__buckets)
1188:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      _M_deallocate_buckets();
1189:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    __throw_exception_again;
1190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  }
1191:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
1192:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1193:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1194:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1195:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1196:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1197:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     void
1198:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1199:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _M_reset() noexcept
1201:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1202:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_rehash_policy._M_reset();
1203:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_bucket_count = 1;
1204:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_single_bucket = nullptr;
1205:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_buckets = &_M_single_bucket;
1206:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_before_begin._M_nxt = nullptr;
1207:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_element_count = 0;
1208:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1209:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1210:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1212:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1213:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1214:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     void
1215:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1216:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1217:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _M_move_assign(_Hashtable&& __ht, true_type)
1218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 36


1219:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       this->_M_deallocate_nodes(_M_begin());
1220:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_deallocate_buckets();
1221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __hashtable_base::operator=(std::move(__ht));
1222:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_rehash_policy = __ht._M_rehash_policy;
1223:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (!__ht._M_uses_single_bucket())
1224:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_buckets = __ht._M_buckets;
1225:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       else
1226:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1227:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_buckets = &_M_single_bucket;
1228:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_single_bucket = __ht._M_single_bucket;
1229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1230:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_bucket_count = __ht._M_bucket_count;
1231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_before_begin._M_nxt = __ht._M_before_begin._M_nxt;
1232:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_element_count = __ht._M_element_count;
1233:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::__alloc_on_move(this->_M_node_allocator(), __ht._M_node_allocator());
1234:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1235:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Fix buckets containing the _M_before_begin pointers that can't be
1236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // moved.
1237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (_M_begin())
1238:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_buckets[_M_bucket_index(_M_begin())] = &_M_before_begin;
1239:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __ht._M_reset();
1240:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1241:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1242:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1243:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1244:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1245:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1246:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     void
1247:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1248:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1249:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _M_move_assign(_Hashtable&& __ht, false_type)
1250:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1251:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (__ht._M_node_allocator() == this->_M_node_allocator())
1252:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_move_assign(std::move(__ht), true_type());
1253:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       else
1254:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1255:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  // Can't move memory, move elements then.
1256:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_assign_elements(std::move(__ht));
1257:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __ht.clear();
1258:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1259:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1260:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1261:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1262:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1263:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1264:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1265:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1266:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1267:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable(const _Hashtable& __ht)
1268:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     : __hashtable_base(__ht),
1269:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __map_base(__ht),
1270:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __rehash_base(__ht),
1271:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __hashtable_alloc(
1272:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__node_alloc_traits::_S_select_on_copy(__ht._M_node_allocator())),
1273:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_buckets(nullptr),
1274:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_bucket_count(__ht._M_bucket_count),
1275:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_element_count(__ht._M_element_count),
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 37


1276:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_rehash_policy(__ht._M_rehash_policy)
1277:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1278:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __alloc_node_gen_t __alloc_node_gen(*this);
1279:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_assign(__ht, __alloc_node_gen);
1280:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1281:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1282:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1283:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1284:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1285:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1286:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1287:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1288:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable(_Hashtable&& __ht) noexcept
1289:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     : __hashtable_base(__ht),
1290:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __map_base(__ht),
1291:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __rehash_base(__ht),
1292:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __hashtable_alloc(std::move(__ht._M_base_alloc())),
1293:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_buckets(__ht._M_buckets),
1294:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_bucket_count(__ht._M_bucket_count),
1295:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_before_begin(__ht._M_before_begin._M_nxt),
1296:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_element_count(__ht._M_element_count),
1297:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_rehash_policy(__ht._M_rehash_policy)
1298:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1299:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Update, if necessary, buckets if __ht is using its single bucket.
1300:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (__ht._M_uses_single_bucket())
1301:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1302:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_buckets = &_M_single_bucket;
1303:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_single_bucket = __ht._M_single_bucket;
1304:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1305:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1306:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Update, if necessary, bucket pointing to before begin that hasn't
1307:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // moved.
1308:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (_M_begin())
1309:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_buckets[_M_bucket_index(_M_begin())] = &_M_before_begin;
1310:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1311:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __ht._M_reset();
1312:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1313:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1314:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1315:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1316:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1317:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1318:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1319:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1320:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable(const _Hashtable& __ht, const allocator_type& __a)
1321:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     : __hashtable_base(__ht),
1322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __map_base(__ht),
1323:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __rehash_base(__ht),
1324:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __hashtable_alloc(__node_alloc_type(__a)),
1325:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_buckets(),
1326:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_bucket_count(__ht._M_bucket_count),
1327:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_element_count(__ht._M_element_count),
1328:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_rehash_policy(__ht._M_rehash_policy)
1329:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1330:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __alloc_node_gen_t __alloc_node_gen(*this);
1331:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_assign(__ht, __alloc_node_gen);
1332:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 38


1333:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1334:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1335:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1336:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1337:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1338:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1339:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1340:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable(_Hashtable&& __ht, const allocator_type& __a)
1341:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     : __hashtable_base(__ht),
1342:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __map_base(__ht),
1343:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __rehash_base(__ht),
1344:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __hashtable_alloc(__node_alloc_type(__a)),
1345:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_buckets(nullptr),
1346:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_bucket_count(__ht._M_bucket_count),
1347:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_element_count(__ht._M_element_count),
1348:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_rehash_policy(__ht._M_rehash_policy)
1349:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1350:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (__ht._M_node_allocator() == this->_M_node_allocator())
1351:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1352:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (__ht._M_uses_single_bucket())
1353:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    {
1354:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      _M_buckets = &_M_single_bucket;
1355:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      _M_single_bucket = __ht._M_single_bucket;
1356:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    }
1357:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  else
1358:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_buckets = __ht._M_buckets;
1359:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1360:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_before_begin._M_nxt = __ht._M_before_begin._M_nxt;
1361:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  // Update, if necessary, bucket pointing to before begin that hasn't
1362:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  // moved.
1363:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (_M_begin())
1364:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_buckets[_M_bucket_index(_M_begin())] = &_M_before_begin;
1365:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __ht._M_reset();
1366:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1367:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       else
1368:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1369:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __alloc_node_gen_t __alloc_gen(*this);
1370:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1371:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  using _Fwd_Ht = typename
1372:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    conditional<__move_if_noexcept_cond<value_type>::value,
1373:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			const _Hashtable&, _Hashtable&&>::type;
1374:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_assign(std::forward<_Fwd_Ht>(__ht), __alloc_gen);
1375:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __ht.clear();
1376:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1377:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1378:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1379:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1380:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1381:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1382:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1383:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1384:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1385:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     ~_Hashtable() noexcept
1386:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1387:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       clear();
1388:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_deallocate_buckets();
1389:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 39


1390:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1391:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1392:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1393:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1394:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1395:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     void
1396:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1397:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1398:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     swap(_Hashtable& __x)
1399:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     noexcept(__and_<__is_nothrow_swappable<_H1>,
1400:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	                __is_nothrow_swappable<_Equal>>::value)
1401:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1402:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // The only base class with member variables is hash_code_base.
1403:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // We define _Hash_code_base::_M_swap because different
1404:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // specializations have different members.
1405:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       this->_M_swap(__x);
1406:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1407:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::__alloc_on_swap(this->_M_node_allocator(), __x._M_node_allocator());
1408:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::swap(_M_rehash_policy, __x._M_rehash_policy);
1409:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1410:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Deal properly with potentially moved instances.
1411:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (this->_M_uses_single_bucket())
1412:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1413:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (!__x._M_uses_single_bucket())
1414:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    {
1415:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      _M_buckets = __x._M_buckets;
1416:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      __x._M_buckets = &__x._M_single_bucket;
1417:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    }
1418:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1419:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       else if (__x._M_uses_single_bucket())
1420:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1421:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __x._M_buckets = _M_buckets;
1422:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_buckets = &_M_single_bucket;
1423:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}	
1424:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       else
1425:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	std::swap(_M_buckets, __x._M_buckets);
1426:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1427:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::swap(_M_bucket_count, __x._M_bucket_count);
1428:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::swap(_M_before_begin._M_nxt, __x._M_before_begin._M_nxt);
1429:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::swap(_M_element_count, __x._M_element_count);
1430:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::swap(_M_single_bucket, __x._M_single_bucket);
1431:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1432:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Fix buckets containing the _M_before_begin pointers that can't be
1433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // swapped.
1434:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (_M_begin())
1435:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_buckets[_M_bucket_index(_M_begin())] = &_M_before_begin;
1436:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1437:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (__x._M_begin())
1438:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__x._M_buckets[__x._M_bucket_index(__x._M_begin())]
1439:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  = &__x._M_before_begin;
1440:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1441:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1442:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1443:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1444:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1445:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1446:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     auto
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 40


1447:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1448:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1449:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     find(const key_type& __k)
1450:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     -> iterator
1451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1452:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __hash_code __code = this->_M_hash_code(__k);
1453:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::size_t __bkt = _M_bucket_index(__k, __code);
1454:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_type* __p = _M_find_node(__bkt, __k, __code);
1455:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return __p ? iterator(__p) : end();
1456:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1457:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1458:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1459:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1460:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1461:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1462:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     auto
1463:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1464:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1465:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     find(const key_type& __k) const
1466:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     -> const_iterator
1467:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1468:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __hash_code __code = this->_M_hash_code(__k);
1469:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::size_t __bkt = _M_bucket_index(__k, __code);
1470:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_type* __p = _M_find_node(__bkt, __k, __code);
1471:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return __p ? const_iterator(__p) : end();
1472:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1473:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1474:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1475:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1476:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1477:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1478:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     auto
1479:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1480:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1481:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     count(const key_type& __k) const
1482:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     -> size_type
1483:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1484:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __hash_code __code = this->_M_hash_code(__k);
1485:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::size_t __bkt = _M_bucket_index(__k, __code);
1486:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_type* __p = _M_bucket_begin(__bkt);
1487:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (!__p)
1488:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return 0;
1489:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1490:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::size_t __result = 0;
1491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       for (;; __p = __p->_M_next())
1492:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1493:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (this->_M_equals(__k, __code, __p))
1494:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    ++__result;
1495:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  else if (__result)
1496:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    // All equivalent values are next to each other, if we
1497:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    // found a non-equivalent value after an equivalent one it
1498:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    // means that we won't find any new equivalent value.
1499:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    break;
1500:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (!__p->_M_nxt || _M_bucket_index(__p->_M_next()) != __bkt)
1501:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    break;
1502:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1503:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return __result;
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 41


1504:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1505:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1506:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1507:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1508:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1509:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1510:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     auto
1511:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1512:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1513:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     equal_range(const key_type& __k)
1514:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     -> pair<iterator, iterator>
1515:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1516:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __hash_code __code = this->_M_hash_code(__k);
1517:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::size_t __bkt = _M_bucket_index(__k, __code);
1518:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_type* __p = _M_find_node(__bkt, __k, __code);
1519:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1520:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (__p)
1521:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1522:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __node_type* __p1 = __p->_M_next();
1523:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  while (__p1 && _M_bucket_index(__p1) == __bkt
1524:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 && this->_M_equals(__k, __code, __p1))
1525:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    __p1 = __p1->_M_next();
1526:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1527:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return std::make_pair(iterator(__p), iterator(__p1));
1528:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1529:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       else
1530:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return std::make_pair(end(), end());
1531:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1532:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1533:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1534:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1535:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1536:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1537:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     auto
1538:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1539:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1540:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     equal_range(const key_type& __k) const
1541:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     -> pair<const_iterator, const_iterator>
1542:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1543:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __hash_code __code = this->_M_hash_code(__k);
1544:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::size_t __bkt = _M_bucket_index(__k, __code);
1545:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_type* __p = _M_find_node(__bkt, __k, __code);
1546:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1547:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (__p)
1548:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1549:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __node_type* __p1 = __p->_M_next();
1550:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  while (__p1 && _M_bucket_index(__p1) == __bkt
1551:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 && this->_M_equals(__k, __code, __p1))
1552:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    __p1 = __p1->_M_next();
1553:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1554:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return std::make_pair(const_iterator(__p), const_iterator(__p1));
1555:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1556:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       else
1557:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return std::make_pair(end(), end());
1558:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1559:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1560:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   // Find the node whose key compares equal to k in the bucket bkt.
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 42


1561:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   // Return nullptr if no node is found.
1562:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1563:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1564:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1565:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1566:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     auto
1567:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1568:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1569:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _M_find_before_node(size_type __bkt, const key_type& __k,
1570:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			__hash_code __code) const
1571:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     -> __node_base*
1572:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1573:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_base* __prev_p = _M_buckets[__bkt];
1574:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (!__prev_p)
1575:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return nullptr;
1576:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1577:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       for (__node_type* __p = static_cast<__node_type*>(__prev_p->_M_nxt);;
1578:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   __p = __p->_M_next())
1579:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1580:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (this->_M_equals(__k, __code, __p))
1581:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    return __prev_p;
1582:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1583:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (!__p->_M_nxt || _M_bucket_index(__p->_M_next()) != __bkt)
1584:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    break;
1585:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __prev_p = __p;
1586:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1587:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return nullptr;
1588:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1589:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1590:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1591:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1592:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1593:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1594:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     void
1595:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1596:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1597:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _M_insert_bucket_begin(size_type __bkt, __node_type* __node)
1598:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1599:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (_M_buckets[__bkt])
1600:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1601:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  // Bucket is not empty, we just need to insert the new node
1602:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  // after the bucket before begin.
1603:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __node->_M_nxt = _M_buckets[__bkt]->_M_nxt;
1604:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_buckets[__bkt]->_M_nxt = __node;
1605:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1606:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       else
1607:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1608:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  // The bucket is empty, the new node is inserted at the
1609:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  // beginning of the singly-linked list and the bucket will
1610:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  // contain _M_before_begin pointer.
1611:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __node->_M_nxt = _M_before_begin._M_nxt;
1612:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_before_begin._M_nxt = __node;
1613:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (__node->_M_nxt)
1614:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    // We must update former begin bucket that is pointing to
1615:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    // _M_before_begin.
1616:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_buckets[_M_bucket_index(__node->_M_next())] = __node;
1617:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_buckets[__bkt] = &_M_before_begin;
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 43


1618:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1619:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1620:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1621:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1622:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1623:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1624:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1625:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     void
1626:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1627:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1628:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _M_remove_bucket_begin(size_type __bkt, __node_type* __next,
1629:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			   size_type __next_bkt)
1630:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1631:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (!__next || __next_bkt != __bkt)
1632:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1633:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  // Bucket is now empty
1634:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  // First update next bucket if any
1635:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (__next)
1636:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_buckets[__next_bkt] = _M_buckets[__bkt];
1637:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1638:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  // Second update before begin node if necessary
1639:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (&_M_before_begin == _M_buckets[__bkt])
1640:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_before_begin._M_nxt = __next;
1641:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_buckets[__bkt] = nullptr;
1642:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1643:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1644:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1645:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1646:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1647:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1648:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1649:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     auto
1650:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1651:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1652:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _M_get_previous_node(size_type __bkt, __node_base* __n)
1653:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     -> __node_base*
1654:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1655:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_base* __prev_n = _M_buckets[__bkt];
1656:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       while (__prev_n->_M_nxt != __n)
1657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__prev_n = __prev_n->_M_nxt;
1658:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return __prev_n;
1659:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1660:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1661:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1662:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1663:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1664:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1665:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     template<typename... _Args>
1666:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       auto
1667:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1668:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1669:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_emplace(true_type, _Args&&... __args)
1670:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       -> pair<iterator, bool>
1671:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
1672:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	// First build the node to get access to the hash code
1673:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_Scoped_node __node { this, std::forward<_Args>(__args)...  };
1674:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	const key_type& __k = this->_M_extract()(__node._M_node->_M_v());
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 44


1675:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__hash_code __code = this->_M_hash_code(__k);
1676:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	size_type __bkt = _M_bucket_index(__k, __code);
1677:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	if (__node_type* __p = _M_find_node(__bkt, __k, __code))
1678:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  // There is already an equivalent node, no insertion
1679:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return std::make_pair(iterator(__p), false);
1680:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1681:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	// Insert the node
1682:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	auto __pos = _M_insert_unique_node(__k, __bkt, __code, __node._M_node);
1683:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__node._M_node = nullptr;
1684:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return { __pos, true };
1685:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
1686:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1687:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1688:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1689:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1690:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1691:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     template<typename... _Args>
1692:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       auto
1693:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1694:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1695:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_emplace(const_iterator __hint, false_type, _Args&&... __args)
1696:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       -> iterator
1697:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
1698:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	// First build the node to get its hash code.
1699:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_Scoped_node __node { this, std::forward<_Args>(__args)...  };
1700:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	const key_type& __k = this->_M_extract()(__node._M_node->_M_v());
1701:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1702:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__hash_code __code = this->_M_hash_code(__k);
1703:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	auto __pos
1704:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  = _M_insert_multi_node(__hint._M_cur, __k, __code, __node._M_node);
1705:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__node._M_node = nullptr;
1706:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return __pos;
1707:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
1708:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1709:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1710:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1711:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1712:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1713:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     auto
1714:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
 193              		.loc 9 1714 5 is_stmt 1 view -0
 194              		.cfi_startproc
 195              		@ args = 4, pretend = 0, frame = 16
 196              		@ frame_needed = 0, uses_anonymous_args = 0
 197              		.loc 9 1714 5 is_stmt 0 view .LVU31
 198 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 199              		.cfi_def_cfa_offset 28
 200              		.cfi_offset 4, -28
 201              		.cfi_offset 5, -24
 202              		.cfi_offset 6, -20
 203              		.cfi_offset 7, -16
 204              		.cfi_offset 8, -12
 205              		.cfi_offset 9, -8
 206              		.cfi_offset 14, -4
 207 0004 87B0     		sub	sp, sp, #28
 208              		.cfi_def_cfa_offset 56
 209              		.loc 9 1714 5 view .LVU32
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 45


 210 0006 0446     		mov	r4, r0
 211              	.LVL8:
 212              		.file 10 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
   1:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // Internal policy header for unordered_set and unordered_map -*- C++ -*-
   2:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
   3:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // Copyright (C) 2010-2020 Free Software Foundation, Inc.
   4:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** //
   5:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // software; you can redistribute it and/or modify it under the
   7:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // terms of the GNU General Public License as published by the
   8:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // any later version.
  10:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
  11:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // This library is distributed in the hope that it will be useful,
  12:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // GNU General Public License for more details.
  15:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
  16:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
  20:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // You should have received a copy of the GNU General Public License and
  21:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** // <http://www.gnu.org/licenses/>.
  24:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
  25:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** /** @file bits/hashtable_policy.h
  26:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****  *  This is an internal header file, included by other library headers.
  27:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****  *  Do not attempt to use it directly.
  28:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****  *  @headername{unordered_map,unordered_set}
  29:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****  */
  30:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
  31:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** #ifndef _HASHTABLE_POLICY_H
  32:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** #define _HASHTABLE_POLICY_H 1
  33:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
  34:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** #include <tuple>		// for std::tuple, std::forward_as_tuple
  35:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** #include <limits>		// for std::numeric_limits
  36:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** #include <bits/stl_algobase.h>	// for std::min, std::is_permutation.
  37:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
  38:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** namespace std _GLIBCXX_VISIBILITY(default)
  39:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** {
  40:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  41:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
  42:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _Alloc,
  43:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
  44:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
  45:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
  46:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     class _Hashtable;
  47:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
  48:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** namespace __detail
  49:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** {
  50:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /**
  51:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  @defgroup hashtable-detail Base and Implementation Classes
  52:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  @ingroup unordered_associative_containers
  53:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  @{
  54:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    */
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 46


  55:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value,
  56:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
  57:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash, typename _Traits>
  58:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hashtable_base;
  59:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
  60:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // Helper function: return distance(first, last) for forward
  61:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // iterators, or 0/1 for input iterators.
  62:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<class _Iterator>
  63:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     inline typename std::iterator_traits<_Iterator>::difference_type
  64:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     __distance_fw(_Iterator __first, _Iterator __last,
  65:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		  std::input_iterator_tag)
  66:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { return __first != __last ? 1 : 0; }
  67:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
  68:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<class _Iterator>
  69:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     inline typename std::iterator_traits<_Iterator>::difference_type
  70:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     __distance_fw(_Iterator __first, _Iterator __last,
  71:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		  std::forward_iterator_tag)
  72:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { return std::distance(__first, __last); }
  73:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
  74:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<class _Iterator>
  75:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     inline typename std::iterator_traits<_Iterator>::difference_type
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     __distance_fw(_Iterator __first, _Iterator __last)
  77:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { return __distance_fw(__first, __last,
  78:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			   std::__iterator_category(__first)); }
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
  80:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   struct _Identity
  81:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   {
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     template<typename _Tp>
  83:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Tp&&
  84:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator()(_Tp&& __x) const
  85:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return std::forward<_Tp>(__x); }
  86:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
  87:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
  88:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   struct _Select1st
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   {
  90:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     template<typename _Tp>
  91:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       auto
  92:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator()(_Tp&& __x) const
  93:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       -> decltype(std::get<0>(std::forward<_Tp>(__x)))
  94:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return std::get<0>(std::forward<_Tp>(__x)); }
  95:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
  96:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
  97:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _NodeAlloc>
  98:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hashtable_alloc;
  99:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 100:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // Functor recycling a pool of nodes and using allocation once the pool is
 101:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // empty.
 102:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _NodeAlloc>
 103:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _ReuseOrAllocNode
 104:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 105:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     private:
 106:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_alloc_type = _NodeAlloc;
 107:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hashtable_alloc = _Hashtable_alloc<__node_alloc_type>;
 108:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_alloc_traits =
 109:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	typename __hashtable_alloc::__node_alloc_traits;
 110:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_type = typename __hashtable_alloc::__node_type;
 111:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 47


 112:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     public:
 113:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _ReuseOrAllocNode(__node_type* __nodes, __hashtable_alloc& __h)
 114:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : _M_nodes(__nodes), _M_h(__h) { }
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _ReuseOrAllocNode(const _ReuseOrAllocNode&) = delete;
 116:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 117:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       ~_ReuseOrAllocNode()
 118:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { _M_h._M_deallocate_nodes(_M_nodes); }
 119:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       template<typename _Arg>
 121:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__node_type*
 122:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	operator()(_Arg&& __arg) const
 123:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	{
 124:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  if (_M_nodes)
 125:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    {
 126:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      __node_type* __node = _M_nodes;
 127:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      _M_nodes = _M_nodes->_M_next();
 128:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      __node->_M_nxt = nullptr;
 129:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      auto& __a = _M_h._M_node_allocator();
 130:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      __node_alloc_traits::destroy(__a, __node->_M_valptr());
 131:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      __try
 132:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		{
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		  __node_alloc_traits::construct(__a, __node->_M_valptr(),
 134:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						 std::forward<_Arg>(__arg));
 135:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		}
 136:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      __catch(...)
 137:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		{
 138:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		  _M_h._M_deallocate_node_ptr(__node);
 139:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		  __throw_exception_again;
 140:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		}
 141:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      return __node;
 142:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    }
 143:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  return _M_h._M_allocate_node(std::forward<_Arg>(__arg));
 144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	}
 145:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 146:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     private:
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       mutable __node_type* _M_nodes;
 148:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __hashtable_alloc& _M_h;
 149:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 151:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // Functor similar to the previous one but without any pool of nodes to
 152:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // recycle.
 153:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _NodeAlloc>
 154:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _AllocNode
 155:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 156:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     private:
 157:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hashtable_alloc = _Hashtable_alloc<_NodeAlloc>;
 158:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_type = typename __hashtable_alloc::__node_type;
 159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     public:
 161:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _AllocNode(__hashtable_alloc& __h)
 162:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : _M_h(__h) { }
 163:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 164:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       template<typename _Arg>
 165:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__node_type*
 166:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	operator()(_Arg&& __arg) const
 167:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	{ return _M_h._M_allocate_node(std::forward<_Arg>(__arg)); }
 168:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 48


 169:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     private:
 170:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __hashtable_alloc& _M_h;
 171:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 172:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 173:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // Auxiliary types used for all instantiations of _Hashtable nodes
 174:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // and iterators.
 175:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 176:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /**
 177:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  struct _Hashtable_traits
 178:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
 179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Important traits for hash tables.
 180:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
 181:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  @tparam _Cache_hash_code  Boolean value. True if the value of
 182:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  the hash function is stored along with the value. This is a
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  time-space tradeoff.  Storing it may improve lookup speed by
 184:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  reducing the number of times we need to call the _Hash or _Equal
 185:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  functors.
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  @tparam _Constant_iterators  Boolean value. True if iterator and
 188:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  const_iterator are both constant iterator types. This is true
 189:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  for unordered_set and unordered_multiset, false for
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  unordered_map and unordered_multimap.
 191:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
 192:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  @tparam _Unique_keys  Boolean value. True if the return value
 193:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  of _Hashtable::count(k) is always at most one, false if it may
 194:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  be an arbitrary number. This is true for unordered_set and
 195:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  unordered_map, false for unordered_multiset and
 196:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  unordered_multimap.
 197:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    */
 198:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<bool _Cache_hash_code, bool _Constant_iterators, bool _Unique_keys>
 199:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hashtable_traits
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 201:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hash_cached = __bool_constant<_Cache_hash_code>;
 202:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __constant_iterators = __bool_constant<_Constant_iterators>;
 203:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __unique_keys = __bool_constant<_Unique_keys>;
 204:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 205:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 206:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /**
 207:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  struct _Hash_node_base
 208:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
 209:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Nodes, used to wrap elements stored in the hash table.  A policy
 210:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  template parameter of class template _Hashtable controls whether
 211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  nodes also store a hash code. In some cases (e.g. strings) this
 212:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  may be a performance win.
 213:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    */
 214:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   struct _Hash_node_base
 215:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   {
 216:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Hash_node_base* _M_nxt;
 217:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Hash_node_base() noexcept : _M_nxt() { }
 219:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 220:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Hash_node_base(_Hash_node_base* __next) noexcept : _M_nxt(__next) { }
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 222:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 223:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /**
 224:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  struct _Hash_node_value_base
 225:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 49


 226:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Node type with the value to store.
 227:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    */
 228:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Value>
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hash_node_value_base : _Hash_node_base
 230:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef _Value value_type;
 232:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 233:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __gnu_cxx::__aligned_buffer<_Value> _M_storage;
 234:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 235:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Value*
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_valptr() noexcept
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return _M_storage._M_ptr(); }
 238:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 239:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const _Value*
 240:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_valptr() const noexcept
 241:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return _M_storage._M_ptr(); }
 242:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 243:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Value&
 244:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_v() noexcept
 245:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return *_M_valptr(); }
 246:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 247:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const _Value&
 248:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_v() const noexcept
 249:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return *_M_valptr(); }
 250:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 251:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 252:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /**
 253:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Primary template struct _Hash_node.
 254:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    */
 255:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Value, bool _Cache_hash_code>
 256:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hash_node;
 257:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 258:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /**
 259:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Specialization for nodes with caches, struct _Hash_node.
 260:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
 261:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Base class is __detail::_Hash_node_value_base.
 262:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    */
 263:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Value>
 264:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hash_node<_Value, true> : _Hash_node_value_base<_Value>
 265:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 266:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t  _M_hash_code;
 267:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 268:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Hash_node*
 269:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_next() const noexcept
 270:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return static_cast<_Hash_node*>(this->_M_nxt); }
 271:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 272:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 273:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /**
 274:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Specialization for nodes without caches, struct _Hash_node.
 275:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
 276:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Base class is __detail::_Hash_node_value_base.
 277:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    */
 278:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Value>
 279:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hash_node<_Value, false> : _Hash_node_value_base<_Value>
 280:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 281:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Hash_node*
 282:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_next() const noexcept
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 50


 283:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return static_cast<_Hash_node*>(this->_M_nxt); }
 284:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 285:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 286:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Base class for node iterators.
 287:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Value, bool _Cache_hash_code>
 288:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Node_iterator_base
 289:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 290:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_type = _Hash_node<_Value, _Cache_hash_code>;
 291:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 292:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __node_type*  _M_cur;
 293:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 294:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Node_iterator_base(__node_type* __p) noexcept
 295:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : _M_cur(__p) { }
 296:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 297:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
 298:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_incr() noexcept
 299:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { _M_cur = _M_cur->_M_next(); }
 300:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 301:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 302:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Value, bool _Cache_hash_code>
 303:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     inline bool
 304:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     operator==(const _Node_iterator_base<_Value, _Cache_hash_code>& __x,
 305:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	       const _Node_iterator_base<_Value, _Cache_hash_code >& __y)
 306:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     noexcept
 307:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { return __x._M_cur == __y._M_cur; }
 308:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 309:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Value, bool _Cache_hash_code>
 310:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     inline bool
 311:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     operator!=(const _Node_iterator_base<_Value, _Cache_hash_code>& __x,
 312:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	       const _Node_iterator_base<_Value, _Cache_hash_code>& __y)
 313:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     noexcept
 314:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { return __x._M_cur != __y._M_cur; }
 315:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 316:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Node iterators, used to iterate through all the hashtable.
 317:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Value, bool __constant_iterators, bool __cache>
 318:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Node_iterator
 319:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : public _Node_iterator_base<_Value, __cache>
 320:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 321:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     private:
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __base_type = _Node_iterator_base<_Value, __cache>;
 323:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_type = typename __base_type::__node_type;
 324:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 325:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     public:
 326:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef _Value					value_type;
 327:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef std::ptrdiff_t				difference_type;
 328:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef std::forward_iterator_tag			iterator_category;
 329:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 330:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using pointer = typename std::conditional<__constant_iterators,
 331:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						const _Value*, _Value*>::type;
 332:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 333:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using reference = typename std::conditional<__constant_iterators,
 334:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						  const _Value&, _Value&>::type;
 335:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 336:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Node_iterator() noexcept
 337:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : __base_type(0) { }
 338:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 339:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       explicit
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 51


 340:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Node_iterator(__node_type* __p) noexcept
 341:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : __base_type(__p) { }
 342:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 343:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       reference
 344:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator*() const noexcept
 345:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return this->_M_cur->_M_v(); }
 346:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 347:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       pointer
 348:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator->() const noexcept
 349:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return this->_M_cur->_M_valptr(); }
 350:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 351:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Node_iterator&
 352:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator++() noexcept
 353:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
 354:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	this->_M_incr();
 355:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return *this;
 356:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
 357:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 358:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Node_iterator
 359:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator++(int) noexcept
 360:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
 361:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_Node_iterator __tmp(*this);
 362:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	this->_M_incr();
 363:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return __tmp;
 364:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
 365:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 366:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 367:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Node const_iterators, used to iterate through all the hashtable.
 368:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Value, bool __constant_iterators, bool __cache>
 369:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Node_const_iterator
 370:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : public _Node_iterator_base<_Value, __cache>
 371:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 372:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     private:
 373:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __base_type = _Node_iterator_base<_Value, __cache>;
 374:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_type = typename __base_type::__node_type;
 375:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 376:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     public:
 377:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef _Value					value_type;
 378:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef std::ptrdiff_t				difference_type;
 379:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef std::forward_iterator_tag			iterator_category;
 380:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 381:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef const _Value*				pointer;
 382:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef const _Value&				reference;
 383:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 384:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Node_const_iterator() noexcept
 385:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : __base_type(0) { }
 386:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 387:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       explicit
 388:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Node_const_iterator(__node_type* __p) noexcept
 389:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : __base_type(__p) { }
 390:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 391:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Node_const_iterator(const _Node_iterator<_Value, __constant_iterators,
 392:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			   __cache>& __x) noexcept
 393:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : __base_type(__x._M_cur) { }
 394:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 395:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       reference
 396:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator*() const noexcept
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 52


 397:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return this->_M_cur->_M_v(); }
 398:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 399:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       pointer
 400:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator->() const noexcept
 401:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return this->_M_cur->_M_valptr(); }
 402:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 403:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Node_const_iterator&
 404:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator++() noexcept
 405:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
 406:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	this->_M_incr();
 407:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return *this;
 408:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
 409:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 410:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Node_const_iterator
 411:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator++(int) noexcept
 412:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
 413:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_Node_const_iterator __tmp(*this);
 414:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	this->_M_incr();
 415:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return __tmp;
 416:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
 417:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 418:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 419:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // Many of class template _Hashtable's template parameters are policy
 420:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // classes.  These are defaults for the policies.
 421:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 422:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Default range hashing function: use division to fold a large number
 423:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// into the range [0, N).
 424:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   struct _Mod_range_hashing
 425:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   {
 426:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     typedef std::size_t first_argument_type;
 427:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     typedef std::size_t second_argument_type;
 428:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     typedef std::size_t result_type;
 429:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 430:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     result_type
 431:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     operator()(first_argument_type __num,
 432:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	       second_argument_type __den) const noexcept
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { return __num % __den; }
 434:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 435:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 436:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Default ranged hash function H.  In principle it should be a
 437:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// function object composed from objects of type H1 and H2 such that
 438:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// h(k, N) = h2(h1(k), N), but that would mean making extra copies of
 439:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// h1 and h2.  So instead we'll just use a tag to tell class template
 440:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// hashtable to do that composition.
 441:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   struct _Default_ranged_hash { };
 442:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 443:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Default value for rehash policy.  Bucket size is (usually) the
 444:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// smallest prime that keeps the load factor small enough.
 445:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   struct _Prime_rehash_policy
 446:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   {
 447:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     using __has_load_factor = true_type;
 448:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 449:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Prime_rehash_policy(float __z = 1.0) noexcept
 450:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : _M_max_load_factor(__z), _M_next_resize(0) { }
 451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 452:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     float
 453:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     max_load_factor() const noexcept
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 53


 454:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { return _M_max_load_factor; }
 455:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 456:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     // Return a bucket size no smaller than n.
 457:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     std::size_t
 458:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _M_next_bkt(std::size_t __n) const;
 459:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 460:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     // Return a bucket count appropriate for n elements
 461:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     std::size_t
 462:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _M_bkt_for_elements(std::size_t __n) const
 463:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { return __builtin_ceill(__n / (long double)_M_max_load_factor); }
 464:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 465:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     // __n_bkt is current bucket count, __n_elt is current element count,
 466:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     // and __n_ins is number of elements to be inserted.  Do we need to
 467:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     // increase bucket count?  If so, return make_pair(true, n), where n
 468:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     // is the new bucket count.  If not, return make_pair(false, 0).
 469:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     std::pair<bool, std::size_t>
 470:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _M_need_rehash(std::size_t __n_bkt, std::size_t __n_elt,
 471:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		   std::size_t __n_ins) const;
 472:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 473:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     typedef std::size_t _State;
 474:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 475:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _State
 476:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _M_state() const
 477:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { return _M_next_resize; }
 213              		.loc 10 477 7 is_stmt 1 view .LVU33
 214              		.loc 9 1714 5 is_stmt 0 view .LVU34
 215 0008 9846     		mov	r8, r3
 216 000a 0F46     		mov	r7, r1
 217 000c 0E9D     		ldr	r5, [sp, #56]
1715:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1716:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _M_insert_unique_node(const key_type& __k, size_type __bkt,
1717:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			  __hash_code __code, __node_type* __node,
1718:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			  size_type __n_elt)
1719:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     -> iterator
1720:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1721:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       const __rehash_state& __saved_state = _M_rehash_policy._M_state();
1722:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::pair<bool, std::size_t> __do_rehash
1723:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	= _M_rehash_policy._M_need_rehash(_M_bucket_count, _M_element_count,
 218              		.loc 9 1723 35 view .LVU35
 219 000e 00F11001 		add	r1, r0, #16
 220              	.LVL9:
1714:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 221              		.loc 9 1714 5 view .LVU36
 222 0012 9146     		mov	r9, r2
 223              		.loc 9 1723 35 view .LVU37
 224 0014 0095     		str	r5, [sp]
 225 0016 C368     		ldr	r3, [r0, #12]
 226              	.LVL10:
 227              		.loc 9 1723 35 view .LVU38
 228 0018 4268     		ldr	r2, [r0, #4]
 229              	.LVL11:
 230              		.loc 9 1723 35 view .LVU39
 231 001a 04A8     		add	r0, sp, #16
 232              	.LVL12:
 233              		.loc 9 1723 35 view .LVU40
 234 001c FFF7FEFF 		bl	_ZNKSt8__detail20_Prime_rehash_policy14_M_need_rehashEjjj
 235              	.LVL13:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 54


1724:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 					  __n_elt);
1725:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1726:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (__do_rehash.first)
 236              		.loc 9 1726 7 view .LVU41
 237 0020 9DF81030 		ldrb	r3, [sp, #16]	@ zero_extendqisi2
 238 0024 A3B9     		cbnz	r3, .L17
 239              	.LVL14:
 240              	.LBB2469:
 241              	.LBI2469:
1595:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 242              		.loc 9 1595 5 is_stmt 1 view .LVU42
 243              	.LBB2470:
1599:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
 244              		.loc 9 1599 11 is_stmt 0 view .LVU43
 245 0026 2668     		ldr	r6, [r4]
1599:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
 246              		.loc 9 1599 21 view .LVU44
 247 0028 56F82730 		ldr	r3, [r6, r7, lsl #2]
 248 002c 06EB8702 		add	r2, r6, r7, lsl #2
1599:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
 249              		.loc 9 1599 7 view .LVU45
 250 0030 002B     		cmp	r3, #0
 251 0032 47D0     		beq	.L27
 252              	.L44:
1603:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_buckets[__bkt]->_M_nxt = __node;
 253              		.loc 9 1603 40 view .LVU46
 254 0034 1B68     		ldr	r3, [r3]
1603:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_buckets[__bkt]->_M_nxt = __node;
 255              		.loc 9 1603 19 view .LVU47
 256 0036 C8F80030 		str	r3, [r8]
1604:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
 257              		.loc 9 1604 14 view .LVU48
 258 003a 56F82730 		ldr	r3, [r6, r7, lsl #2]
1604:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
 259              		.loc 9 1604 30 view .LVU49
 260 003e C3F80080 		str	r8, [r3]
 261              	.L28:
 262              	.LVL15:
1604:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
 263              		.loc 9 1604 30 view .LVU50
 264              	.LBE2470:
 265              	.LBE2469:
1727:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1728:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_rehash(__do_rehash.second, __saved_state);
1729:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __bkt = _M_bucket_index(__k, __code);
1730:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1731:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1732:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       this->_M_store_code(__node, __code);
1733:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1734:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Always insert at the beginning of the bucket.
1735:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_insert_bucket_begin(__bkt, __node);
1736:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       ++_M_element_count;
 266              		.loc 9 1736 7 view .LVU51
 267 0042 E368     		ldr	r3, [r4, #12]
1737:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return iterator(__node);
1738:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
 268              		.loc 9 1738 5 view .LVU52
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 55


 269 0044 4046     		mov	r0, r8
1736:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return iterator(__node);
 270              		.loc 9 1736 7 view .LVU53
 271 0046 0133     		adds	r3, r3, #1
 272 0048 E360     		str	r3, [r4, #12]
 273              	.LVL16:
 274              	.LBB2480:
 275              	.LBI2480:
 340:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : __base_type(__p) { }
 276              		.loc 10 340 7 is_stmt 1 view .LVU54
 277              	.LBB2481:
 278              	.LBI2481:
 294:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : _M_cur(__p) { }
 279              		.loc 10 294 7 view .LVU55
 294:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : _M_cur(__p) { }
 280              		.loc 10 294 7 is_stmt 0 view .LVU56
 281              	.LBE2481:
 282              	.LBE2480:
 283              		.loc 9 1738 5 view .LVU57
 284 004a 07B0     		add	sp, sp, #28
 285              		.cfi_remember_state
 286              		.cfi_def_cfa_offset 28
 287              		@ sp needed
 288 004c BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 289              	.LVL17:
 290              	.L17:
 291              		.cfi_restore_state
1728:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __bkt = _M_bucket_index(__k, __code);
 292              		.loc 9 1728 13 view .LVU58
 293 0050 059F     		ldr	r7, [sp, #20]
 294              	.LVL18:
 295              	.LBB2482:
 296              	.LBI2482:
1739:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1740:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1741:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1742:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1743:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1744:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     auto
1745:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1746:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1747:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _M_insert_multi_node(__node_type* __hint, const key_type& __k,
1748:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 			 __hash_code __code, __node_type* __node)
1749:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     -> iterator
1750:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1751:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       const __rehash_state& __saved_state = _M_rehash_policy._M_state();
1752:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::pair<bool, std::size_t> __do_rehash
1753:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	= _M_rehash_policy._M_need_rehash(_M_bucket_count, _M_element_count, 1);
1754:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1755:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (__do_rehash.first)
1756:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_rehash(__do_rehash.second, __saved_state);
1757:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1758:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       this->_M_store_code(__node, __code);
1759:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       size_type __bkt = _M_bucket_index(__k, __code);
1760:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1761:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Find the node before an equivalent one or use hint if it exists and
1762:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // if it is equivalent.
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 56


1763:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_base* __prev
1764:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	= __builtin_expect(__hint != nullptr, false)
1765:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  && this->_M_equals(__k, __code, __hint)
1766:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    ? __hint
1767:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    : _M_find_before_node(__bkt, __k, __code);
1768:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (__prev)
1769:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1770:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  // Insert after the node before the equivalent one.
1771:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __node->_M_nxt = __prev->_M_nxt;
1772:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __prev->_M_nxt = __node;
1773:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (__builtin_expect(__prev == __hint, false))
1774:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    // hint might be the last bucket node, in this case we need to
1775:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    // update next bucket.
1776:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    if (__node->_M_nxt
1777:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		&& !this->_M_equals(__k, __code, __node->_M_next()))
1778:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      {
1779:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		size_type __next_bkt = _M_bucket_index(__node->_M_next());
1780:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		if (__next_bkt != __bkt)
1781:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		  _M_buckets[__next_bkt] = __node;
1782:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      }
1783:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1784:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       else
1785:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	// The inserted node has no equivalent in the hashtable. We must
1786:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	// insert the new node at the beginning of the bucket to preserve
1787:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	// equivalent elements' relative positions.
1788:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_insert_bucket_begin(__bkt, __node);
1789:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       ++_M_element_count;
1790:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return iterator(__node);
1791:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1792:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1793:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   // Insert v if no element with its key is already present.
1794:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1795:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1796:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1797:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1798:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     template<typename _Arg, typename _NodeGenerator>
1799:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       auto
1800:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1801:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1802:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_insert(_Arg&& __v, const _NodeGenerator& __node_gen, true_type,
1803:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		size_type __n_elt)
1804:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       -> pair<iterator, bool>
1805:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
1806:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	const key_type& __k = this->_M_extract()(__v);
1807:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__hash_code __code = this->_M_hash_code(__k);
1808:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	size_type __bkt = _M_bucket_index(__k, __code);
1809:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1810:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	if (__node_type* __node = _M_find_node(__bkt, __k, __code))
1811:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return { iterator(__node), false };
1812:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1813:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_Scoped_node __node{ __node_gen(std::forward<_Arg>(__v)), this };
1814:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	auto __pos
1815:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  = _M_insert_unique_node(__k, __bkt, __code, __node._M_node, __n_elt);
1816:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__node._M_node = nullptr;
1817:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return { __pos, true };
1818:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
1819:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 57


1820:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   // Insert v unconditionally.
1821:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1822:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1823:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1824:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1825:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     template<typename _Arg, typename _NodeGenerator>
1826:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       auto
1827:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1828:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1829:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_insert(const_iterator __hint, _Arg&& __v,
1830:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		const _NodeGenerator& __node_gen, false_type)
1831:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       -> iterator
1832:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
1833:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	// First compute the hash code so that we don't do anything if it
1834:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	// throws.
1835:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__hash_code __code = this->_M_hash_code(this->_M_extract()(__v));
1836:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1837:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	// Second allocate new node so that we don't rehash if it throws.
1838:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_Scoped_node __node{ __node_gen(std::forward<_Arg>(__v)), this };
1839:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	const key_type& __k = this->_M_extract()(__node._M_node->_M_v());
1840:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	auto __pos
1841:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  = _M_insert_multi_node(__hint._M_cur, __k, __code, __node._M_node);
1842:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__node._M_node = nullptr;
1843:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return __pos;
1844:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       }
1845:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1846:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1847:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1848:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1849:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1850:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     auto
1851:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1852:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1853:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     erase(const_iterator __it)
1854:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     -> iterator
1855:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1856:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_type* __n = __it._M_cur;
1857:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::size_t __bkt = _M_bucket_index(__n);
1858:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1859:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Look for previous node to unlink it from the erased one, this
1860:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // is why we need buckets to contain the before begin to make
1861:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // this search fast.
1862:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_base* __prev_n = _M_get_previous_node(__bkt, __n);
1863:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return _M_erase(__bkt, __prev_n, __n);
1864:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1865:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1866:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1867:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1868:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1869:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1870:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     auto
1871:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1872:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1873:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _M_erase(size_type __bkt, __node_base* __prev_n, __node_type* __n)
1874:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     -> iterator
1875:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1876:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (__prev_n == _M_buckets[__bkt])
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 58


1877:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_remove_bucket_begin(__bkt, __n->_M_next(),
1878:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   __n->_M_nxt ? _M_bucket_index(__n->_M_next()) : 0);
1879:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       else if (__n->_M_nxt)
1880:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1881:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  size_type __next_bkt = _M_bucket_index(__n->_M_next());
1882:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (__next_bkt != __bkt)
1883:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_buckets[__next_bkt] = __prev_n;
1884:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1885:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1886:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __prev_n->_M_nxt = __n->_M_nxt;
1887:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       iterator __result(__n->_M_next());
1888:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       this->_M_deallocate_node(__n);
1889:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       --_M_element_count;
1890:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1891:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return __result;
1892:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1893:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1894:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1895:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1896:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1897:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1898:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     auto
1899:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1900:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1901:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _M_erase(true_type, const key_type& __k)
1902:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     -> size_type
1903:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1904:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __hash_code __code = this->_M_hash_code(__k);
1905:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::size_t __bkt = _M_bucket_index(__k, __code);
1906:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1907:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Look for the node before the first matching node.
1908:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_base* __prev_n = _M_find_before_node(__bkt, __k, __code);
1909:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (!__prev_n)
1910:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return 0;
1911:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1912:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // We found a matching node, erase it.
1913:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_type* __n = static_cast<__node_type*>(__prev_n->_M_nxt);
1914:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_erase(__bkt, __prev_n, __n);
1915:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return 1;
1916:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1917:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1918:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1919:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1920:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1921:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1922:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     auto
1923:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1924:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1925:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _M_erase(false_type, const key_type& __k)
1926:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     -> size_type
1927:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1928:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __hash_code __code = this->_M_hash_code(__k);
1929:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::size_t __bkt = _M_bucket_index(__k, __code);
1930:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1931:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Look for the node before the first matching node.
1932:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_base* __prev_n = _M_find_before_node(__bkt, __k, __code);
1933:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (!__prev_n)
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 59


1934:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return 0;
1935:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1936:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1937:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // 526. Is it undefined if a function in the standard changes
1938:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // in parameters?
1939:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // We use one loop to find all matching nodes and another to deallocate
1940:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // them so that the key stays valid during the first loop. It might be
1941:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // invalidated indirectly when destroying nodes.
1942:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_type* __n = static_cast<__node_type*>(__prev_n->_M_nxt);
1943:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_type* __n_last = __n;
1944:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::size_t __n_last_bkt = __bkt;
1945:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       do
1946:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1947:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __n_last = __n_last->_M_next();
1948:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (!__n_last)
1949:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    break;
1950:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __n_last_bkt = _M_bucket_index(__n_last);
1951:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1952:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       while (__n_last_bkt == __bkt && this->_M_equals(__k, __code, __n_last));
1953:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1954:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       // Deallocate nodes.
1955:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       size_type __result = 0;
1956:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       do
1957:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1958:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __node_type* __p = __n->_M_next();
1959:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  this->_M_deallocate_node(__n);
1960:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __n = __p;
1961:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  ++__result;
1962:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  --_M_element_count;
1963:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
1964:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       while (__n != __n_last);
1965:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1966:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (__prev_n == _M_buckets[__bkt])
1967:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_remove_bucket_begin(__bkt, __n_last, __n_last_bkt);
1968:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       else if (__n_last && __n_last_bkt != __bkt)
1969:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_buckets[__n_last_bkt] = __prev_n;
1970:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __prev_n->_M_nxt = __n_last;
1971:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return __result;
1972:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
1973:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1974:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
1975:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
1976:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
1977:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
1978:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     auto
1979:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1980:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
1981:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     erase(const_iterator __first, const_iterator __last)
1982:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     -> iterator
1983:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
1984:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_type* __n = __first._M_cur;
1985:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_type* __last_n = __last._M_cur;
1986:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (__n == __last_n)
1987:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return iterator(__n);
1988:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
1989:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::size_t __bkt = _M_bucket_index(__n);
1990:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 60


1991:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_base* __prev_n = _M_get_previous_node(__bkt, __n);
1992:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       bool __is_bucket_begin = __n == _M_bucket_begin(__bkt);
1993:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::size_t __n_bkt = __bkt;
1994:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       for (;;)
1995:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
1996:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  do
1997:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    {
1998:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      __node_type* __tmp = __n;
1999:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      __n = __n->_M_next();
2000:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      this->_M_deallocate_node(__tmp);
2001:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      --_M_element_count;
2002:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      if (!__n)
2003:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		break;
2004:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      __n_bkt = _M_bucket_index(__n);
2005:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    }
2006:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  while (__n != __last_n && __n_bkt == __bkt);
2007:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (__is_bucket_begin)
2008:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    _M_remove_bucket_begin(__bkt, __n, __n_bkt);
2009:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (__n == __last_n)
2010:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    break;
2011:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __is_bucket_begin = true;
2012:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __bkt = __n_bkt;
2013:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
2014:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
2015:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (__n && (__n_bkt != __bkt || __is_bucket_begin))
2016:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_buckets[__n_bkt] = __prev_n;
2017:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __prev_n->_M_nxt = __n;
2018:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       return iterator(__n);
2019:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
2020:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
2021:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
2022:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
2023:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
2024:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
2025:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     void
2026:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
2027:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
2028:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     clear() noexcept
2029:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
2030:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       this->_M_deallocate_nodes(_M_begin());
2031:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __builtin_memset(_M_buckets, 0, _M_bucket_count * sizeof(__bucket_type));
2032:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_element_count = 0;
2033:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_before_begin._M_nxt = nullptr;
2034:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
2035:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
2036:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
2037:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
2038:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
2039:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
2040:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     void
2041:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
2042:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
2043:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     rehash(size_type __bkt_count)
2044:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
2045:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       const __rehash_state& __saved_state = _M_rehash_policy._M_state();
2046:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __bkt_count
2047:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	= std::max(_M_rehash_policy._M_bkt_for_elements(_M_element_count + 1),
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 61


2048:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		   __bkt_count);
2049:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __bkt_count = _M_rehash_policy._M_next_bkt(__bkt_count);
2050:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
2051:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (__bkt_count != _M_bucket_count)
2052:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_rehash(__bkt_count, __saved_state);
2053:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       else
2054:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	// No rehash, restore previous state to keep it consistent with
2055:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	// container state.
2056:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	_M_rehash_policy._M_reset(__saved_state);
2057:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
2058:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
2059:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
2060:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
2061:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
2062:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
2063:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     void
2064:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
 297              		.loc 9 2064 5 is_stmt 1 view .LVU59
 298              	.LBB2483:
 299              	.LBI2483:
2065:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
2066:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _M_rehash(size_type __bkt_count, const __rehash_state& __state)
2067:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
2068:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __try
2069:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
2070:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_rehash_aux(__bkt_count, __unique_keys());
2071:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
2072:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __catch(...)
2073:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
2074:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  // A failure here means that buckets allocation failed.  We only
2075:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  // have to restore hash policy previous state.
2076:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_rehash_policy._M_reset(__state);
2077:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __throw_exception_again;
2078:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
2079:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
2080:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
2081:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   // Rehash when there is no equivalent elements.
2082:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****   template<typename _Key, typename _Value,
2083:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Alloc, typename _ExtractKey, typename _Equal,
2084:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _H1, typename _H2, typename _Hash, typename _RehashPolicy,
2085:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   typename _Traits>
2086:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     void
2087:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
 300              		.loc 9 2087 5 view .LVU60
 301              	.LBB2484:
 302              	.LBB2485:
 303              	.LBI2485:
 390:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 304              		.loc 9 390 7 view .LVU61
 305              	.LBB2486:
 392:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  {
 306              		.loc 9 392 2 is_stmt 0 view .LVU62
 307 0052 012F     		cmp	r7, #1
 308 0054 5DD0     		beq	.L41
 309              	.LVL19:
 310              	.LBB2487:
 311              	.LBI2487:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 62


 478:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 479:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     void
 480:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _M_reset() noexcept
 481:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { _M_next_resize = 0; }
 482:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 483:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     void
 484:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _M_reset(_State __state)
 485:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { _M_next_resize = __state; }
 486:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 487:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     static const std::size_t _S_growth_factor = 2;
 488:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 489:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     float		_M_max_load_factor;
 490:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     mutable std::size_t	_M_next_resize;
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 492:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 493:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Range hashing function assuming that second arg is a power of 2.
 494:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   struct _Mask_range_hashing
 495:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   {
 496:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     typedef std::size_t first_argument_type;
 497:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     typedef std::size_t second_argument_type;
 498:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     typedef std::size_t result_type;
 499:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 500:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     result_type
 501:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     operator()(first_argument_type __num,
 502:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	       second_argument_type __den) const noexcept
 503:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { return __num & (__den - 1); }
 504:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 505:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 506:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Compute closest power of 2 not less than __n
 507:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   inline std::size_t
 508:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   __clp2(std::size_t __n) noexcept
 509:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   {
 510:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     // Equivalent to return __n ? std::bit_ceil(__n) : 0;
 511:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     if (__n < 2)
 512:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       return __n;
 513:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     const unsigned __lz = sizeof(size_t) > sizeof(long)
 514:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       ? __builtin_clzll(__n - 1ull)
 515:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : __builtin_clzl(__n - 1ul);
 516:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     // Doing two shifts avoids undefined behaviour when __lz == 0.
 517:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     return (size_t(1) << (numeric_limits<size_t>::digits - __lz - 1)) << 1;
 518:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   }
 519:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 520:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Rehash policy providing power of 2 bucket numbers. Avoids modulo
 521:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// operations.
 522:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   struct _Power2_rehash_policy
 523:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   {
 524:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     using __has_load_factor = true_type;
 525:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 526:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Power2_rehash_policy(float __z = 1.0) noexcept
 527:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : _M_max_load_factor(__z), _M_next_resize(0) { }
 528:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 529:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     float
 530:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     max_load_factor() const noexcept
 531:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { return _M_max_load_factor; }
 532:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 533:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     // Return a bucket size no smaller than n (as long as n is not above the
 534:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     // highest power of 2).
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 63


 535:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     std::size_t
 536:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _M_next_bkt(std::size_t __n) noexcept
 537:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 538:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       if (__n == 0)
 539:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	// Special case on container 1st initialization with 0 bucket count
 540:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	// hint. We keep _M_next_resize to 0 to make sure that next time we
 541:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	// want to add an element allocation will take place.
 542:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return 1;
 543:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 544:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const auto __max_width = std::min<size_t>(sizeof(size_t), 8);
 545:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const auto __max_bkt = size_t(1) << (__max_width * __CHAR_BIT__ - 1);
 546:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t __res = __clp2(__n);
 547:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 548:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       if (__res == 0)
 549:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__res = __max_bkt;
 550:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       else if (__res == 1)
 551:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	// If __res is 1 we force it to 2 to make sure there will be an
 552:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	// allocation so that nothing need to be stored in the initial
 553:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	// single bucket
 554:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__res = 2;
 555:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 556:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       if (__res == __max_bkt)
 557:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	// Set next resize to the max value so that we never try to rehash again
 558:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	// as we already reach the biggest possible bucket number.
 559:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	// Note that it might result in max_load_factor not being respected.
 560:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_M_next_resize = numeric_limits<size_t>::max();
 561:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       else
 562:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_M_next_resize
 563:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  = __builtin_floorl(__res * (long double)_M_max_load_factor);
 564:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 565:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       return __res;
 566:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
 567:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 568:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     // Return a bucket count appropriate for n elements
 569:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     std::size_t
 570:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _M_bkt_for_elements(std::size_t __n) const noexcept
 571:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { return __builtin_ceill(__n / (long double)_M_max_load_factor); }
 572:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 573:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     // __n_bkt is current bucket count, __n_elt is current element count,
 574:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     // and __n_ins is number of elements to be inserted.  Do we need to
 575:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     // increase bucket count?  If so, return make_pair(true, n), where n
 576:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     // is the new bucket count.  If not, return make_pair(false, 0).
 577:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     std::pair<bool, std::size_t>
 578:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _M_need_rehash(std::size_t __n_bkt, std::size_t __n_elt,
 579:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		   std::size_t __n_ins) noexcept
 580:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 581:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       if (__n_elt + __n_ins > _M_next_resize)
 582:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	{
 583:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  // If _M_next_resize is 0 it means that we have nothing allocated so
 584:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  // far and that we start inserting elements. In this case we start
 585:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  // with an initial bucket size of 11.
 586:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  long double __min_bkts
 587:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    = std::max<std::size_t>(__n_elt + __n_ins, _M_next_resize ? 0 : 11)
 588:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      / (long double)_M_max_load_factor;
 589:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  if (__min_bkts >= __n_bkt)
 590:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    return { true,
 591:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      _M_next_bkt(std::max<std::size_t>(__builtin_floorl(__min_bkts) + 1,
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 64


 592:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						__n_bkt * _S_growth_factor)) };
 593:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 594:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  _M_next_resize
 595:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    = __builtin_floorl(__n_bkt * (long double)_M_max_load_factor);
 596:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  return { false, 0 };
 597:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	}
 598:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       else
 599:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return { false, 0 };
 600:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
 601:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 602:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     typedef std::size_t _State;
 603:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 604:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _State
 605:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _M_state() const noexcept
 606:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { return _M_next_resize; }
 607:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 608:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     void
 609:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _M_reset() noexcept
 610:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { _M_next_resize = 0; }
 611:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 612:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     void
 613:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _M_reset(_State __state) noexcept
 614:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { _M_next_resize = __state; }
 615:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 616:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     static const std::size_t _S_growth_factor = 2;
 617:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 618:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     float	_M_max_load_factor;
 619:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     std::size_t	_M_next_resize;
 620:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 621:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 622:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // Base classes for std::_Hashtable.  We define these base classes
 623:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // because in some cases we want to do different things depending on
 624:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // the value of a policy class.  In some cases the policy class
 625:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // affects which member functions and nested typedefs are defined;
 626:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // we handle that by specializing base class templates.  Several of
 627:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // the base class templates need to access other members of class
 628:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // template _Hashtable, so we use a variant of the "Curiously
 629:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // Recurring Template Pattern" (CRTP) technique.
 630:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 631:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /**
 632:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Primary class template _Map_base.
 633:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
 634:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  If the hashtable has a value type of the form pair<T1, T2> and a
 635:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  key extraction policy (_ExtractKey) that returns the first part
 636:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  of the pair, the hashtable gets a mapped_type typedef.  If it
 637:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  satisfies those criteria and also has unique keys, then it also
 638:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  gets an operator[].
 639:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    */
 640:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _Alloc,
 641:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
 642:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
 643:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits,
 644:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   bool _Unique_keys = _Traits::__unique_keys::value>
 645:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Map_base { };
 646:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 647:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Partial specialization, __unique_keys set to false.
 648:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Pair, typename _Alloc, typename _Equal,
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 65


 649:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
 650:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
 651:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Map_base<_Key, _Pair, _Alloc, _Select1st, _Equal,
 652:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		     _H1, _H2, _Hash, _RehashPolicy, _Traits, false>
 653:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 654:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using mapped_type = typename std::tuple_element<1, _Pair>::type;
 655:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 656:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Partial specialization, __unique_keys set to true.
 658:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Pair, typename _Alloc, typename _Equal,
 659:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
 660:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
 661:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Map_base<_Key, _Pair, _Alloc, _Select1st, _Equal,
 662:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		     _H1, _H2, _Hash, _RehashPolicy, _Traits, true>
 663:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 664:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     private:
 665:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hashtable_base = __detail::_Hashtable_base<_Key, _Pair,
 666:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 							 _Select1st,
 667:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 							_Equal, _H1, _H2, _Hash,
 668:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 							  _Traits>;
 669:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 670:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hashtable = _Hashtable<_Key, _Pair, _Alloc,
 671:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 				     _Select1st, _Equal,
 672:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 				     _H1, _H2, _Hash, _RehashPolicy, _Traits>;
 673:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 674:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hash_code = typename __hashtable_base::__hash_code;
 675:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_type = typename __hashtable_base::__node_type;
 676:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 677:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     public:
 678:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using key_type = typename __hashtable_base::key_type;
 679:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using iterator = typename __hashtable_base::iterator;
 680:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using mapped_type = typename std::tuple_element<1, _Pair>::type;
 681:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 682:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       mapped_type&
 683:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator[](const key_type& __k);
 684:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 685:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       mapped_type&
 686:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator[](key_type&& __k);
 687:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 688:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 689:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       // DR 761. unordered_map needs an at() member function.
 690:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       mapped_type&
 691:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       at(const key_type& __k);
 692:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 693:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const mapped_type&
 694:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       at(const key_type& __k) const;
 695:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 696:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 697:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Pair, typename _Alloc, typename _Equal,
 698:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
 699:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
 700:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     auto
 701:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Map_base<_Key, _Pair, _Alloc, _Select1st, _Equal,
 702:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      _H1, _H2, _Hash, _RehashPolicy, _Traits, true>::
 703:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     operator[](const key_type& __k)
 704:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     -> mapped_type&
 705:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 66


 706:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __hashtable* __h = static_cast<__hashtable*>(this);
 707:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __hash_code __code = __h->_M_hash_code(__k);
 708:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t __bkt = __h->_M_bucket_index(__k, __code);
 709:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       if (__node_type* __node = __h->_M_find_node(__bkt, __k, __code))
 710:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return __node->_M_v().second;
 711:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 712:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typename __hashtable::_Scoped_node __node {
 713:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__h,
 714:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	std::piecewise_construct,
 715:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	std::tuple<const key_type&>(__k),
 716:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	std::tuple<>()
 717:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       };
 718:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       auto __pos
 719:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	= __h->_M_insert_unique_node(__k, __bkt, __code, __node._M_node);
 720:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __node._M_node = nullptr;
 721:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       return __pos->second;
 722:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
 723:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 724:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Pair, typename _Alloc, typename _Equal,
 725:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
 726:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
 727:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     auto
 728:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Map_base<_Key, _Pair, _Alloc, _Select1st, _Equal,
 729:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      _H1, _H2, _Hash, _RehashPolicy, _Traits, true>::
 730:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     operator[](key_type&& __k)
 731:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     -> mapped_type&
 732:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 733:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __hashtable* __h = static_cast<__hashtable*>(this);
 734:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __hash_code __code = __h->_M_hash_code(__k);
 735:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t __bkt = __h->_M_bucket_index(__k, __code);
 736:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       if (__node_type* __node = __h->_M_find_node(__bkt, __k, __code))
 737:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return __node->_M_v().second;
 738:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 739:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typename __hashtable::_Scoped_node __node {
 740:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__h,
 741:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	std::piecewise_construct,
 742:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	std::forward_as_tuple(std::move(__k)),
 743:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	std::tuple<>()
 744:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       };
 745:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       auto __pos
 746:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	= __h->_M_insert_unique_node(__k, __bkt, __code, __node._M_node);
 747:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __node._M_node = nullptr;
 748:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       return __pos->second;
 749:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
 750:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 751:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Pair, typename _Alloc, typename _Equal,
 752:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
 753:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
 754:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     auto
 755:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Map_base<_Key, _Pair, _Alloc, _Select1st, _Equal,
 756:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      _H1, _H2, _Hash, _RehashPolicy, _Traits, true>::
 757:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     at(const key_type& __k)
 758:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     -> mapped_type&
 759:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 760:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __hashtable* __h = static_cast<__hashtable*>(this);
 761:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __hash_code __code = __h->_M_hash_code(__k);
 762:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t __bkt = __h->_M_bucket_index(__k, __code);
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 67


 763:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __node_type* __p = __h->_M_find_node(__bkt, __k, __code);
 764:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 765:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       if (!__p)
 766:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__throw_out_of_range(__N("_Map_base::at"));
 767:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       return __p->_M_v().second;
 768:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
 769:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 770:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Pair, typename _Alloc, typename _Equal,
 771:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
 772:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
 773:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     auto
 774:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Map_base<_Key, _Pair, _Alloc, _Select1st, _Equal,
 775:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      _H1, _H2, _Hash, _RehashPolicy, _Traits, true>::
 776:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     at(const key_type& __k) const
 777:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     -> const mapped_type&
 778:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 779:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const __hashtable* __h = static_cast<const __hashtable*>(this);
 780:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __hash_code __code = __h->_M_hash_code(__k);
 781:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t __bkt = __h->_M_bucket_index(__k, __code);
 782:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __node_type* __p = __h->_M_find_node(__bkt, __k, __code);
 783:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 784:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       if (!__p)
 785:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__throw_out_of_range(__N("_Map_base::at"));
 786:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       return __p->_M_v().second;
 787:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
 788:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 789:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /**
 790:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Primary class template _Insert_base.
 791:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
 792:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Defines @c insert member functions appropriate to all _Hashtables.
 793:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    */
 794:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _Alloc,
 795:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
 796:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
 797:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
 798:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Insert_base
 799:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 800:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     protected:
 801:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hashtable = _Hashtable<_Key, _Value, _Alloc, _ExtractKey,
 802:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 				     _Equal, _H1, _H2, _Hash,
 803:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 				     _RehashPolicy, _Traits>;
 804:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 805:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hashtable_base = _Hashtable_base<_Key, _Value, _ExtractKey,
 806:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					       _Equal, _H1, _H2, _Hash,
 807:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					       _Traits>;
 808:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 809:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using value_type = typename __hashtable_base::value_type;
 810:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using iterator = typename __hashtable_base::iterator;
 811:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using const_iterator =  typename __hashtable_base::const_iterator;
 812:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using size_type = typename __hashtable_base::size_type;
 813:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 814:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __unique_keys = typename __hashtable_base::__unique_keys;
 815:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __ireturn_type = typename __hashtable_base::__ireturn_type;
 816:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_type = _Hash_node<_Value, _Traits::__hash_cached::value>;
 817:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_alloc_type = __alloc_rebind<_Alloc, __node_type>;
 818:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_gen_type = _AllocNode<__node_alloc_type>;
 819:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 68


 820:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __hashtable&
 821:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_conjure_hashtable()
 822:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return *(static_cast<__hashtable*>(this)); }
 823:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 824:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       template<typename _InputIterator, typename _NodeGetter>
 825:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	void
 826:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_M_insert_range(_InputIterator __first, _InputIterator __last,
 827:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			const _NodeGetter&, true_type);
 828:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 829:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       template<typename _InputIterator, typename _NodeGetter>
 830:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	void
 831:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_M_insert_range(_InputIterator __first, _InputIterator __last,
 832:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			const _NodeGetter&, false_type);
 833:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 834:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     public:
 835:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __ireturn_type
 836:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       insert(const value_type& __v)
 837:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
 838:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__hashtable& __h = _M_conjure_hashtable();
 839:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__node_gen_type __node_gen(__h);
 840:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return __h._M_insert(__v, __node_gen, __unique_keys());
 841:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
 842:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 843:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       iterator
 844:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       insert(const_iterator __hint, const value_type& __v)
 845:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
 846:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__hashtable& __h = _M_conjure_hashtable();
 847:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__node_gen_type __node_gen(__h);	
 848:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return __h._M_insert(__hint, __v, __node_gen, __unique_keys());
 849:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
 850:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 851:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
 852:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       insert(initializer_list<value_type> __l)
 853:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { this->insert(__l.begin(), __l.end()); }
 854:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 855:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       template<typename _InputIterator>
 856:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	void
 857:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	insert(_InputIterator __first, _InputIterator __last)
 858:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	{
 859:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  __hashtable& __h = _M_conjure_hashtable();
 860:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  __node_gen_type __node_gen(__h);
 861:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  return _M_insert_range(__first, __last, __node_gen, __unique_keys());
 862:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	}
 863:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 864:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 865:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _Alloc,
 866:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
 867:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
 868:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
 869:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     template<typename _InputIterator, typename _NodeGetter>
 870:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
 871:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash,
 872:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		    _RehashPolicy, _Traits>::
 873:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_insert_range(_InputIterator __first, _InputIterator __last,
 874:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		      const _NodeGetter& __node_gen, true_type)
 875:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
 876:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	size_type __n_elt = __detail::__distance_fw(__first, __last);
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 69


 877:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	if (__n_elt == 0)
 878:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  return;
 879:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 880:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__hashtable& __h = _M_conjure_hashtable();
 881:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	for (; __first != __last; ++__first)
 882:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  {
 883:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    if (__h._M_insert(*__first, __node_gen, __unique_keys(),
 884:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			      __n_elt).second)
 885:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      __n_elt = 1;
 886:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    else if (__n_elt != 1)
 887:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      --__n_elt;
 888:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  }
 889:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
 890:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 891:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _Alloc,
 892:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
 893:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
 894:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
 895:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     template<typename _InputIterator, typename _NodeGetter>
 896:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
 897:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash,
 898:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		    _RehashPolicy, _Traits>::
 899:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_insert_range(_InputIterator __first, _InputIterator __last,
 900:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		      const _NodeGetter& __node_gen, false_type)
 901:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
 902:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	using __rehash_type = typename __hashtable::__rehash_type;
 903:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	using __rehash_state = typename __hashtable::__rehash_state;
 904:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	using pair_type = std::pair<bool, std::size_t>;
 905:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 906:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	size_type __n_elt = __detail::__distance_fw(__first, __last);
 907:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	if (__n_elt == 0)
 908:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  return;
 909:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 910:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__hashtable& __h = _M_conjure_hashtable();
 911:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__rehash_type& __rehash = __h._M_rehash_policy;
 912:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	const __rehash_state& __saved_state = __rehash._M_state();
 913:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	pair_type __do_rehash = __rehash._M_need_rehash(__h._M_bucket_count,
 914:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 							__h._M_element_count,
 915:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 							__n_elt);
 916:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 917:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	if (__do_rehash.first)
 918:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  __h._M_rehash(__do_rehash.second, __saved_state);
 919:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 920:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	for (; __first != __last; ++__first)
 921:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  __h._M_insert(*__first, __node_gen, __unique_keys());
 922:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
 923:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 924:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /**
 925:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Primary class template _Insert.
 926:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
 927:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Defines @c insert member functions that depend on _Hashtable policies,
 928:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  via partial specializations.
 929:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    */
 930:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _Alloc,
 931:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
 932:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
 933:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits,
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 70


 934:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   bool _Constant_iterators = _Traits::__constant_iterators::value>
 935:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Insert;
 936:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 937:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Specialization.
 938:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _Alloc,
 939:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
 940:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
 941:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
 942:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Insert<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash,
 943:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		   _RehashPolicy, _Traits, true>
 944:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : public _Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal,
 945:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			   _H1, _H2, _Hash, _RehashPolicy, _Traits>
 946:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 947:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __base_type = _Insert_base<_Key, _Value, _Alloc, _ExtractKey,
 948:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					_Equal, _H1, _H2, _Hash,
 949:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					_RehashPolicy, _Traits>;
 950:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 951:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hashtable_base = _Hashtable_base<_Key, _Value, _ExtractKey,
 952:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					       _Equal, _H1, _H2, _Hash,
 953:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					       _Traits>;
 954:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 955:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using value_type = typename __base_type::value_type;
 956:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using iterator = typename __base_type::iterator;
 957:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using const_iterator =  typename __base_type::const_iterator;
 958:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 959:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __unique_keys = typename __base_type::__unique_keys;
 960:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __ireturn_type = typename __hashtable_base::__ireturn_type;
 961:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hashtable = typename __base_type::__hashtable;
 962:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_gen_type = typename __base_type::__node_gen_type;
 963:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 964:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __base_type::insert;
 965:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 966:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __ireturn_type
 967:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       insert(value_type&& __v)
 968:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
 969:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__hashtable& __h = this->_M_conjure_hashtable();
 970:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__node_gen_type __node_gen(__h);
 971:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return __h._M_insert(std::move(__v), __node_gen, __unique_keys());
 972:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
 973:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 974:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       iterator
 975:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       insert(const_iterator __hint, value_type&& __v)
 976:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
 977:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__hashtable& __h = this->_M_conjure_hashtable();
 978:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__node_gen_type __node_gen(__h);
 979:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return __h._M_insert(__hint, std::move(__v), __node_gen,
 980:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			     __unique_keys());
 981:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
 982:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 983:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 984:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Specialization.
 985:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _Alloc,
 986:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
 987:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
 988:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
 989:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Insert<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash,
 990:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		   _RehashPolicy, _Traits, false>
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 71


 991:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : public _Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal,
 992:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			   _H1, _H2, _Hash, _RehashPolicy, _Traits>
 993:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 994:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __base_type = _Insert_base<_Key, _Value, _Alloc, _ExtractKey,
 995:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 				       _Equal, _H1, _H2, _Hash,
 996:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 				       _RehashPolicy, _Traits>;
 997:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using value_type = typename __base_type::value_type;
 998:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using iterator = typename __base_type::iterator;
 999:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using const_iterator =  typename __base_type::const_iterator;
1000:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1001:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __unique_keys = typename __base_type::__unique_keys;
1002:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hashtable = typename __base_type::__hashtable;
1003:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __ireturn_type = typename __base_type::__ireturn_type;
1004:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1005:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __base_type::insert;
1006:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1007:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       template<typename _Pair>
1008:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	using __is_cons = std::is_constructible<value_type, _Pair&&>;
1009:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1010:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       template<typename _Pair>
1011:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	using _IFcons = std::enable_if<__is_cons<_Pair>::value>;
1012:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1013:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       template<typename _Pair>
1014:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	using _IFconsp = typename _IFcons<_Pair>::type;
1015:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1016:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       template<typename _Pair, typename = _IFconsp<_Pair>>
1017:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__ireturn_type
1018:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	insert(_Pair&& __v)
1019:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	{
1020:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  __hashtable& __h = this->_M_conjure_hashtable();
1021:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  return __h._M_emplace(__unique_keys(), std::forward<_Pair>(__v));
1022:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	}
1023:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1024:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       template<typename _Pair, typename = _IFconsp<_Pair>>
1025:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	iterator
1026:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	insert(const_iterator __hint, _Pair&& __v)
1027:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	{
1028:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  __hashtable& __h = this->_M_conjure_hashtable();
1029:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  return __h._M_emplace(__hint, __unique_keys(),
1030:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 				std::forward<_Pair>(__v));
1031:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	}
1032:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    };
1033:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1034:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Policy>
1035:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     using __has_load_factor = typename _Policy::__has_load_factor;
1036:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1037:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /**
1038:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Primary class template  _Rehash_base.
1039:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
1040:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Give hashtable the max_load_factor functions and reserve iff the
1041:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  rehash policy supports it.
1042:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   */
1043:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _Alloc,
1044:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
1045:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
1046:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits,
1047:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename =
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 72


1048:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	     __detected_or_t<false_type, __has_load_factor, _RehashPolicy>>
1049:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Rehash_base;
1050:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1051:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Specialization when rehash policy doesn't provide load factor management.
1052:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _Alloc,
1053:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
1054:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
1055:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
1056:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Rehash_base<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1057:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		      _H1, _H2, _Hash, _RehashPolicy, _Traits,
1058:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		      false_type>
1059:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1060:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
1061:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1062:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Specialization when rehash policy provide load factor management.
1063:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _Alloc,
1064:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
1065:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
1066:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
1067:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Rehash_base<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1068:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			_H1, _H2, _Hash, _RehashPolicy, _Traits,
1069:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			true_type>
1070:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1071:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hashtable = _Hashtable<_Key, _Value, _Alloc, _ExtractKey,
1072:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 				     _Equal, _H1, _H2, _Hash,
1073:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 				     _RehashPolicy, _Traits>;
1074:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1075:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       float
1076:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       max_load_factor() const noexcept
1077:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1078:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	const __hashtable* __this = static_cast<const __hashtable*>(this);
1079:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return __this->__rehash_policy().max_load_factor();
1080:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
1081:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1082:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
1083:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       max_load_factor(float __z)
1084:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1085:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__hashtable* __this = static_cast<__hashtable*>(this);
1086:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__this->__rehash_policy(_RehashPolicy(__z));
1087:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
1088:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1089:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
1090:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       reserve(std::size_t __n)
1091:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1092:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__hashtable* __this = static_cast<__hashtable*>(this);
1093:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__this->rehash(__this->__rehash_policy()._M_bkt_for_elements(__n));
1094:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
1095:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
1096:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1097:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /**
1098:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Primary class template _Hashtable_ebo_helper.
1099:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
1100:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Helper class using EBO when it is not forbidden (the type is not
1101:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  final) and when it is worth it (the type is empty.)
1102:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    */
1103:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<int _Nm, typename _Tp,
1104:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   bool __use_ebo = !__is_final(_Tp) && __is_empty(_Tp)>
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 73


1105:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hashtable_ebo_helper;
1106:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1107:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Specialization using EBO.
1108:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<int _Nm, typename _Tp>
1109:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hashtable_ebo_helper<_Nm, _Tp, true>
1110:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : private _Tp
1111:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1112:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Hashtable_ebo_helper() = default;
1113:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1114:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       template<typename _OtherTp>
1115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_Hashtable_ebo_helper(_OtherTp&& __tp)
1116:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	: _Tp(std::forward<_OtherTp>(__tp))
1117:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	{ }
1118:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1119:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const _Tp& _M_cget() const { return static_cast<const _Tp&>(*this); }
1120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Tp& _M_get() { return static_cast<_Tp&>(*this); }
1121:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
1122:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1123:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Specialization not using EBO.
1124:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<int _Nm, typename _Tp>
1125:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hashtable_ebo_helper<_Nm, _Tp, false>
1126:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1127:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Hashtable_ebo_helper() = default;
1128:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1129:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       template<typename _OtherTp>
1130:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_Hashtable_ebo_helper(_OtherTp&& __tp)
1131:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	: _M_tp(std::forward<_OtherTp>(__tp))
1132:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	{ }
1133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1134:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const _Tp& _M_cget() const { return _M_tp; }
1135:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Tp& _M_get() { return _M_tp; }
1136:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1137:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     private:
1138:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Tp _M_tp;
1139:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
1140:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1141:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /**
1142:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Primary class template _Local_iterator_base.
1143:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
1144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Base class for local iterators, used to iterate within a bucket
1145:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  but not between buckets.
1146:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    */
1147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _ExtractKey,
1148:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
1149:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   bool __cache_hash_code>
1150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Local_iterator_base;
1151:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1152:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /**
1153:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Primary class template _Hash_code_base.
1154:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
1155:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Encapsulates two policy issues that aren't quite orthogonal.
1156:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *   (1) the difference between using a ranged hash function and using
1157:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *       the combination of a hash function and a range-hashing function.
1158:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *       In the former case we don't have such things as hash codes, so
1159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *       we have a dummy type as placeholder.
1160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *   (2) Whether or not we cache hash codes.  Caching hash codes is
1161:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *       meaningless if we have a ranged hash function.
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 74


1162:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
1163:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  We also put the key extraction objects here, for convenience.
1164:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Each specialization derives from one or more of the template
1165:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  parameters to benefit from Ebo. This is important as this type
1166:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  is inherited in some cases by the _Local_iterator_base type used
1167:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  to implement local_iterator and const_local_iterator. As with
1168:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  any iterator type we prefer to make it as small as possible.
1169:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
1170:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Primary template is unused except as a hook for specializations.
1171:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    */
1172:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _ExtractKey,
1173:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
1174:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   bool __cache_hash_code>
1175:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hash_code_base;
1176:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1177:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Specialization: ranged hash function, no caching hash codes.  H1
1178:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// and H2 are provided but ignored.  We define a dummy hash code type.
1179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _ExtractKey,
1180:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash>
1181:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, false>
1182:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : private _Hashtable_ebo_helper<0, _ExtractKey>,
1183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       private _Hashtable_ebo_helper<1, _Hash>
1184:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1185:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     private:
1186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __ebo_extract_key = _Hashtable_ebo_helper<0, _ExtractKey>;
1187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __ebo_hash = _Hashtable_ebo_helper<1, _Hash>;
1188:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1189:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     protected:
1190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef void* 					__hash_code;
1191:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef _Hash_node<_Value, false>			__node_type;
1192:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1193:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       // We need the default constructor for the local iterators and _Hashtable
1194:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       // default constructor.
1195:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Hash_code_base() = default;
1196:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1197:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Hash_code_base(const _ExtractKey& __ex, const _H1&, const _H2&,
1198:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		      const _Hash& __h)
1199:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : __ebo_extract_key(__ex), __ebo_hash(__h) { }
1200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1201:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __hash_code
1202:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_hash_code(const _Key& __key) const
1203:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return 0; }
1204:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1205:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t
1206:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_bucket_index(const _Key& __k, __hash_code,
1207:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		      std::size_t __bkt_count) const
1208:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return _M_ranged_hash()(__k, __bkt_count); }
1209:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1210:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t
1211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_bucket_index(const __node_type* __p, std::size_t __bkt_count) const
1212:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	noexcept( noexcept(declval<const _Hash&>()(declval<const _Key&>(),
1213:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						   (std::size_t)0)) )
1214:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return _M_ranged_hash()(_M_extract()(__p->_M_v()), __bkt_count); }
1215:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1216:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
1217:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_store_code(__node_type*, __hash_code) const
1218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { }
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 75


1219:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1220:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
1221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_copy_code(__node_type*, const __node_type*) const
1222:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { }
1223:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1224:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
1225:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_swap(_Hash_code_base& __x)
1226:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1227:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	std::swap(__ebo_extract_key::_M_get(),
1228:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		  __x.__ebo_extract_key::_M_get());
1229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	std::swap(__ebo_hash::_M_get(), __x.__ebo_hash::_M_get());
1230:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
1231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1232:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const _ExtractKey&
1233:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_extract() const { return __ebo_extract_key::_M_cget(); }
1234:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1235:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const _Hash&
1236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_ranged_hash() const { return __ebo_hash::_M_cget(); }
1237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
1238:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1239:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // No specialization for ranged hash function while caching hash codes.
1240:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // That combination is meaningless, and trying to do it is an error.
1241:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1242:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Specialization: ranged hash function, cache hash codes.  This
1243:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// combination is meaningless, so we provide only a declaration
1244:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// and no definition.
1245:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _ExtractKey,
1246:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash>
1247:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, _Hash, true>;
1248:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1249:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Specialization: hash function and range-hashing function, no
1250:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// caching of hash codes.
1251:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Provides typedef and accessor required by C++ 11.
1252:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _ExtractKey,
1253:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2>
1254:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2,
1255:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			   _Default_ranged_hash, false>
1256:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : private _Hashtable_ebo_helper<0, _ExtractKey>,
1257:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       private _Hashtable_ebo_helper<1, _H1>,
1258:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       private _Hashtable_ebo_helper<2, _H2>
1259:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1260:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     private:
1261:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __ebo_extract_key = _Hashtable_ebo_helper<0, _ExtractKey>;
1262:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __ebo_h1 = _Hashtable_ebo_helper<1, _H1>;
1263:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __ebo_h2 = _Hashtable_ebo_helper<2, _H2>;
1264:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1265:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       // Gives the local iterator implementation access to _M_bucket_index().
1266:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       friend struct _Local_iterator_base<_Key, _Value, _ExtractKey, _H1, _H2,
1267:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					 _Default_ranged_hash, false>;
1268:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1269:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     public:
1270:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef _H1 					hasher;
1271:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1272:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       hasher
1273:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       hash_function() const
1274:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return _M_h1(); }
1275:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 76


1276:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     protected:
1277:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef std::size_t 				__hash_code;
1278:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef _Hash_node<_Value, false>			__node_type;
1279:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1280:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       // We need the default constructor for the local iterators and _Hashtable
1281:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       // default constructor.
1282:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Hash_code_base() = default;
1283:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1284:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Hash_code_base(const _ExtractKey& __ex,
1285:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		      const _H1& __h1, const _H2& __h2,
1286:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		      const _Default_ranged_hash&)
1287:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : __ebo_extract_key(__ex), __ebo_h1(__h1), __ebo_h2(__h2) { }
1288:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1289:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __hash_code
1290:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_hash_code(const _Key& __k) const
1291:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1292:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	static_assert(__is_invocable<const _H1&, const _Key&>{},
1293:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    "hash function must be invocable with an argument of key type");
1294:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return _M_h1()(__k);
1295:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
1296:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1297:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t
1298:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_bucket_index(const _Key&, __hash_code __c,
1299:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		      std::size_t __bkt_count) const
1300:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return _M_h2()(__c, __bkt_count); }
1301:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1302:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t
1303:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_bucket_index(const __node_type* __p, std::size_t __bkt_count) const
1304:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	noexcept( noexcept(declval<const _H1&>()(declval<const _Key&>()))
1305:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		  && noexcept(declval<const _H2&>()((__hash_code)0,
1306:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						    (std::size_t)0)) )
1307:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return _M_h2()(_M_h1()(_M_extract()(__p->_M_v())), __bkt_count); }
1308:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1309:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
1310:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_store_code(__node_type*, __hash_code) const
1311:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { }
1312:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1313:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
1314:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_copy_code(__node_type*, const __node_type*) const
1315:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { }
1316:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1317:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
1318:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_swap(_Hash_code_base& __x)
1319:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1320:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	std::swap(__ebo_extract_key::_M_get(),
1321:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		  __x.__ebo_extract_key::_M_get());
1322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	std::swap(__ebo_h1::_M_get(), __x.__ebo_h1::_M_get());
1323:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	std::swap(__ebo_h2::_M_get(), __x.__ebo_h2::_M_get());
1324:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
1325:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1326:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const _ExtractKey&
1327:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_extract() const { return __ebo_extract_key::_M_cget(); }
1328:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1329:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const _H1&
1330:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_h1() const { return __ebo_h1::_M_cget(); }
1331:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1332:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const _H2&
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 77


1333:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_h2() const { return __ebo_h2::_M_cget(); }
1334:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
1335:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1336:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Specialization: hash function and range-hashing function,
1337:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// caching hash codes.  H is provided but ignored.  Provides
1338:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// typedef and accessor required by C++ 11.
1339:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _ExtractKey,
1340:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2>
1341:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2,
1342:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			   _Default_ranged_hash, true>
1343:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : private _Hashtable_ebo_helper<0, _ExtractKey>,
1344:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       private _Hashtable_ebo_helper<1, _H1>,
1345:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       private _Hashtable_ebo_helper<2, _H2>
1346:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1347:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     private:
1348:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       // Gives the local iterator implementation access to _M_h2().
1349:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       friend struct _Local_iterator_base<_Key, _Value, _ExtractKey, _H1, _H2,
1350:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					 _Default_ranged_hash, true>;
1351:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1352:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __ebo_extract_key = _Hashtable_ebo_helper<0, _ExtractKey>;
1353:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __ebo_h1 = _Hashtable_ebo_helper<1, _H1>;
1354:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __ebo_h2 = _Hashtable_ebo_helper<2, _H2>;
1355:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1356:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     public:
1357:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef _H1 					hasher;
1358:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1359:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       hasher
1360:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       hash_function() const
1361:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return _M_h1(); }
1362:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1363:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     protected:
1364:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef std::size_t 				__hash_code;
1365:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef _Hash_node<_Value, true>			__node_type;
1366:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1367:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       // We need the default constructor for _Hashtable default constructor.
1368:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Hash_code_base() = default;
1369:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Hash_code_base(const _ExtractKey& __ex,
1370:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		      const _H1& __h1, const _H2& __h2,
1371:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		      const _Default_ranged_hash&)
1372:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : __ebo_extract_key(__ex), __ebo_h1(__h1), __ebo_h2(__h2) { }
1373:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1374:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __hash_code
1375:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_hash_code(const _Key& __k) const
1376:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1377:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	static_assert(__is_invocable<const _H1&, const _Key&>{},
1378:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    "hash function must be invocable with an argument of key type");
1379:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return _M_h1()(__k);
1380:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
1381:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1382:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t
1383:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_bucket_index(const _Key&, __hash_code __c,
1384:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		      std::size_t __bkt_count) const
1385:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return _M_h2()(__c, __bkt_count); }
1386:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1387:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t
1388:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_bucket_index(const __node_type* __p, std::size_t __bkt_count) const
1389:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	noexcept( noexcept(declval<const _H2&>()((__hash_code)0,
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 78


1390:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						 (std::size_t)0)) )
1391:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return _M_h2()(__p->_M_hash_code, __bkt_count); }
1392:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1393:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
1394:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_store_code(__node_type* __n, __hash_code __c) const
1395:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { __n->_M_hash_code = __c; }
1396:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1397:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
1398:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_copy_code(__node_type* __to, const __node_type* __from) const
1399:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { __to->_M_hash_code = __from->_M_hash_code; }
1400:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1401:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
1402:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_swap(_Hash_code_base& __x)
1403:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1404:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	std::swap(__ebo_extract_key::_M_get(),
1405:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		  __x.__ebo_extract_key::_M_get());
1406:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	std::swap(__ebo_h1::_M_get(), __x.__ebo_h1::_M_get());
1407:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	std::swap(__ebo_h2::_M_get(), __x.__ebo_h2::_M_get());
1408:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
1409:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1410:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const _ExtractKey&
1411:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_extract() const { return __ebo_extract_key::_M_cget(); }
1412:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1413:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const _H1&
1414:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_h1() const { return __ebo_h1::_M_cget(); }
1415:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1416:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const _H2&
1417:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_h2() const { return __ebo_h2::_M_cget(); }
1418:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
1419:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1420:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// Partial specialization used when nodes contain a cached hash code.
1421:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _ExtractKey,
1422:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash>
1423:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Local_iterator_base<_Key, _Value, _ExtractKey,
1424:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 				_H1, _H2, _Hash, true>
1425:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : private _Hashtable_ebo_helper<0, _H2>
1426:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1427:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     protected:
1428:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __base_type = _Hashtable_ebo_helper<0, _H2>;
1429:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hash_code_base = _Hash_code_base<_Key, _Value, _ExtractKey,
1430:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					       _H1, _H2, _Hash, true>;
1431:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1432:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Local_iterator_base() = default;
1433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Local_iterator_base(const __hash_code_base& __base,
1434:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			   _Hash_node<_Value, true>* __p,
1435:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			   std::size_t __bkt, std::size_t __bkt_count)
1436:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : __base_type(__base._M_h2()),
1437:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_M_cur(__p), _M_bucket(__bkt), _M_bucket_count(__bkt_count) { }
1438:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1439:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
1440:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_incr()
1441:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1442:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_M_cur = _M_cur->_M_next();
1443:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	if (_M_cur)
1444:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  {
1445:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    std::size_t __bkt
1446:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      = __base_type::_M_get()(_M_cur->_M_hash_code,
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 79


1447:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					   _M_bucket_count);
1448:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    if (__bkt != _M_bucket)
1449:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      _M_cur = nullptr;
1450:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  }
1451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
1452:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1453:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Hash_node<_Value, true>*  _M_cur;
1454:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t _M_bucket;
1455:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t _M_bucket_count;
1456:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1457:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     public:
1458:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const void*
1459:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_curr() const { return _M_cur; }  // for equality ops
1460:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1461:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t
1462:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_get_bucket() const { return _M_bucket; }  // for debug mode
1463:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
1464:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1465:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // Uninitialized storage for a _Hash_code_base.
1466:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // This type is DefaultConstructible and Assignable even if the
1467:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // _Hash_code_base type isn't, so that _Local_iterator_base<..., false>
1468:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // can be DefaultConstructible and Assignable.
1469:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Tp, bool _IsEmpty = std::is_empty<_Tp>::value>
1470:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hash_code_storage
1471:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1472:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __gnu_cxx::__aligned_buffer<_Tp> _M_storage;
1473:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1474:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Tp*
1475:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_h() { return _M_storage._M_ptr(); }
1476:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1477:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const _Tp*
1478:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_h() const { return _M_storage._M_ptr(); }
1479:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
1480:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1481:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // Empty partial specialization for empty _Hash_code_base types.
1482:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Tp>
1483:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hash_code_storage<_Tp, true>
1484:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1485:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       static_assert( std::is_empty<_Tp>::value, "Type must be empty" );
1486:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1487:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       // As _Tp is an empty type there will be no bytes written/read through
1488:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       // the cast pointer, so no strict-aliasing violation.
1489:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Tp*
1490:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_h() { return reinterpret_cast<_Tp*>(this); }
1491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1492:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const _Tp*
1493:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_h() const { return reinterpret_cast<const _Tp*>(this); }
1494:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
1495:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1496:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _ExtractKey,
1497:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash>
1498:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     using __hash_code_for_local_iter
1499:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       = _Hash_code_storage<_Hash_code_base<_Key, _Value, _ExtractKey,
1500:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					   _H1, _H2, _Hash, false>>;
1501:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1502:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // Partial specialization used when hash codes are not cached
1503:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _ExtractKey,
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 80


1504:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash>
1505:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Local_iterator_base<_Key, _Value, _ExtractKey,
1506:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 				_H1, _H2, _Hash, false>
1507:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : __hash_code_for_local_iter<_Key, _Value, _ExtractKey, _H1, _H2, _Hash>
1508:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1509:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     protected:
1510:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hash_code_base = _Hash_code_base<_Key, _Value, _ExtractKey,
1511:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					       _H1, _H2, _Hash, false>;
1512:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1513:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Local_iterator_base() : _M_bucket_count(-1) { }
1514:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1515:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Local_iterator_base(const __hash_code_base& __base,
1516:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			   _Hash_node<_Value, false>* __p,
1517:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			   std::size_t __bkt, std::size_t __bkt_count)
1518:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : _M_cur(__p), _M_bucket(__bkt), _M_bucket_count(__bkt_count)
1519:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { _M_init(__base); }
1520:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1521:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       ~_Local_iterator_base()
1522:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1523:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	if (_M_bucket_count != -1)
1524:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  _M_destroy();
1525:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
1526:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1527:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Local_iterator_base(const _Local_iterator_base& __iter)
1528:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : _M_cur(__iter._M_cur), _M_bucket(__iter._M_bucket),
1529:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****         _M_bucket_count(__iter._M_bucket_count)
1530:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1531:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	if (_M_bucket_count != -1)
1532:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  _M_init(*__iter._M_h());
1533:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
1534:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1535:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Local_iterator_base&
1536:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator=(const _Local_iterator_base& __iter)
1537:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1538:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	if (_M_bucket_count != -1)
1539:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  _M_destroy();
1540:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_M_cur = __iter._M_cur;
1541:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_M_bucket = __iter._M_bucket;
1542:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_M_bucket_count = __iter._M_bucket_count;
1543:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	if (_M_bucket_count != -1)
1544:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  _M_init(*__iter._M_h());
1545:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return *this;
1546:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
1547:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1548:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
1549:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_incr()
1550:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1551:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_M_cur = _M_cur->_M_next();
1552:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	if (_M_cur)
1553:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  {
1554:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    std::size_t __bkt = this->_M_h()->_M_bucket_index(_M_cur,
1555:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 							      _M_bucket_count);
1556:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    if (__bkt != _M_bucket)
1557:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      _M_cur = nullptr;
1558:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  }
1559:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
1560:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 81


1561:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Hash_node<_Value, false>*  _M_cur;
1562:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t _M_bucket;
1563:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t _M_bucket_count;
1564:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1565:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
1566:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_init(const __hash_code_base& __base)
1567:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { ::new(this->_M_h()) __hash_code_base(__base); }
1568:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1569:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
1570:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_destroy() { this->_M_h()->~__hash_code_base(); }
1571:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1572:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     public:
1573:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const void*
1574:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_curr() const { return _M_cur; }  // for equality ops and debug mode
1575:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1576:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::size_t
1577:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_get_bucket() const { return _M_bucket; }  // for debug mode
1578:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
1579:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1580:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _ExtractKey,
1581:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash, bool __cache>
1582:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     inline bool
1583:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     operator==(const _Local_iterator_base<_Key, _Value, _ExtractKey,
1584:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					  _H1, _H2, _Hash, __cache>& __x,
1585:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	       const _Local_iterator_base<_Key, _Value, _ExtractKey,
1586:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					  _H1, _H2, _Hash, __cache>& __y)
1587:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { return __x._M_curr() == __y._M_curr(); }
1588:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1589:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _ExtractKey,
1590:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash, bool __cache>
1591:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     inline bool
1592:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     operator!=(const _Local_iterator_base<_Key, _Value, _ExtractKey,
1593:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					  _H1, _H2, _Hash, __cache>& __x,
1594:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	       const _Local_iterator_base<_Key, _Value, _ExtractKey,
1595:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					  _H1, _H2, _Hash, __cache>& __y)
1596:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { return __x._M_curr() != __y._M_curr(); }
1597:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1598:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// local iterators
1599:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _ExtractKey,
1600:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
1601:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   bool __constant_iterators, bool __cache>
1602:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Local_iterator
1603:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : public _Local_iterator_base<_Key, _Value, _ExtractKey,
1604:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 				  _H1, _H2, _Hash, __cache>
1605:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1606:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     private:
1607:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __base_type = _Local_iterator_base<_Key, _Value, _ExtractKey,
1608:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					       _H1, _H2, _Hash, __cache>;
1609:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hash_code_base = typename __base_type::__hash_code_base;
1610:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     public:
1611:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef _Value					value_type;
1612:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef typename std::conditional<__constant_iterators,
1613:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					const _Value*, _Value*>::type
1614:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						       pointer;
1615:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef typename std::conditional<__constant_iterators,
1616:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					const _Value&, _Value&>::type
1617:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						       reference;
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 82


1618:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef std::ptrdiff_t				difference_type;
1619:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef std::forward_iterator_tag			iterator_category;
1620:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1621:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Local_iterator() = default;
1622:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1623:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Local_iterator(const __hash_code_base& __base,
1624:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		      _Hash_node<_Value, __cache>* __n,
1625:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		      std::size_t __bkt, std::size_t __bkt_count)
1626:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : __base_type(__base, __n, __bkt, __bkt_count)
1627:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { }
1628:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1629:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       reference
1630:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator*() const
1631:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return this->_M_cur->_M_v(); }
1632:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1633:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       pointer
1634:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator->() const
1635:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return this->_M_cur->_M_valptr(); }
1636:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1637:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Local_iterator&
1638:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator++()
1639:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1640:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	this->_M_incr();
1641:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return *this;
1642:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
1643:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1644:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Local_iterator
1645:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator++(int)
1646:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1647:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_Local_iterator __tmp(*this);
1648:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	this->_M_incr();
1649:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return __tmp;
1650:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
1651:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
1652:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1653:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// local const_iterators
1654:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _ExtractKey,
1655:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
1656:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   bool __constant_iterators, bool __cache>
1657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Local_const_iterator
1658:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : public _Local_iterator_base<_Key, _Value, _ExtractKey,
1659:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 				  _H1, _H2, _Hash, __cache>
1660:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1661:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     private:
1662:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __base_type = _Local_iterator_base<_Key, _Value, _ExtractKey,
1663:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					       _H1, _H2, _Hash, __cache>;
1664:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hash_code_base = typename __base_type::__hash_code_base;
1665:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1666:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     public:
1667:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef _Value					value_type;
1668:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef const _Value*				pointer;
1669:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef const _Value&				reference;
1670:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef std::ptrdiff_t				difference_type;
1671:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef std::forward_iterator_tag			iterator_category;
1672:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1673:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Local_const_iterator() = default;
1674:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 83


1675:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Local_const_iterator(const __hash_code_base& __base,
1676:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			    _Hash_node<_Value, __cache>* __n,
1677:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			    std::size_t __bkt, std::size_t __bkt_count)
1678:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : __base_type(__base, __n, __bkt, __bkt_count)
1679:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { }
1680:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1681:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Local_const_iterator(const _Local_iterator<_Key, _Value, _ExtractKey,
1682:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						  _H1, _H2, _Hash,
1683:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						  __constant_iterators,
1684:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						  __cache>& __x)
1685:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : __base_type(__x)
1686:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { }
1687:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1688:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       reference
1689:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator*() const
1690:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return this->_M_cur->_M_v(); }
1691:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1692:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       pointer
1693:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator->() const
1694:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return this->_M_cur->_M_valptr(); }
1695:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1696:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Local_const_iterator&
1697:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator++()
1698:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1699:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	this->_M_incr();
1700:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return *this;
1701:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
1702:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1703:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Local_const_iterator
1704:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       operator++(int)
1705:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1706:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_Local_const_iterator __tmp(*this);
1707:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	this->_M_incr();
1708:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return __tmp;
1709:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
1710:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
1711:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1712:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /**
1713:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Primary class template _Hashtable_base.
1714:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
1715:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Helper class adding management of _Equal functor to
1716:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  _Hash_code_base type.
1717:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
1718:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Base class templates are:
1719:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *    - __detail::_Hash_code_base
1720:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *    - __detail::_Hashtable_ebo_helper
1721:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    */
1722:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value,
1723:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
1724:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash, typename _Traits>
1725:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   struct _Hashtable_base
1726:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   : public _Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, _Hash,
1727:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 			   _Traits::__hash_cached::value>,
1728:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     private _Hashtable_ebo_helper<0, _Equal>
1729:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   {
1730:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   public:
1731:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     typedef _Key					key_type;
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 84


1732:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     typedef _Value					value_type;
1733:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     typedef _Equal					key_equal;
1734:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     typedef std::size_t					size_type;
1735:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     typedef std::ptrdiff_t				difference_type;
1736:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1737:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     using __traits_type = _Traits;
1738:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     using __hash_cached = typename __traits_type::__hash_cached;
1739:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     using __constant_iterators = typename __traits_type::__constant_iterators;
1740:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     using __unique_keys = typename __traits_type::__unique_keys;
1741:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1742:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     using __hash_code_base = _Hash_code_base<_Key, _Value, _ExtractKey,
1743:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					     _H1, _H2, _Hash,
1744:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					     __hash_cached::value>;
1745:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1746:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     using __hash_code = typename __hash_code_base::__hash_code;
1747:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     using __node_type = typename __hash_code_base::__node_type;
1748:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1749:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     using iterator = __detail::_Node_iterator<value_type,
1750:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					      __constant_iterators::value,
1751:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					      __hash_cached::value>;
1752:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1753:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     using const_iterator = __detail::_Node_const_iterator<value_type,
1754:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						   __constant_iterators::value,
1755:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						   __hash_cached::value>;
1756:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1757:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     using local_iterator = __detail::_Local_iterator<key_type, value_type,
1758:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						  _ExtractKey, _H1, _H2, _Hash,
1759:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						  __constant_iterators::value,
1760:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						     __hash_cached::value>;
1761:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1762:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     using const_local_iterator = __detail::_Local_const_iterator<key_type,
1763:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 								 value_type,
1764:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					_ExtractKey, _H1, _H2, _Hash,
1765:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					__constant_iterators::value,
1766:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					__hash_cached::value>;
1767:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1768:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     using __ireturn_type = typename std::conditional<__unique_keys::value,
1769:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						     std::pair<iterator, bool>,
1770:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 						     iterator>::type;
1771:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   private:
1772:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     using _EqualEBO = _Hashtable_ebo_helper<0, _Equal>;
1773:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1774:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     template<typename _NodeT>
1775:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       struct _Equal_hash_code
1776:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1777:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****        static bool
1778:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****        _S_equals(__hash_code, const _NodeT&)
1779:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****        { return true; }
1780:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       };
1781:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1782:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     template<typename _Ptr2>
1783:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       struct _Equal_hash_code<_Hash_node<_Ptr2, true>>
1784:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
1785:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****        static bool
1786:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****        _S_equals(__hash_code __c, const _Hash_node<_Ptr2, true>& __n)
1787:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****        { return __c == __n._M_hash_code; }
1788:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       };
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 85


1789:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1790:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   protected:
1791:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Hashtable_base() = default;
1792:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Hashtable_base(const _ExtractKey& __ex, const _H1& __h1, const _H2& __h2,
1793:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		    const _Hash& __hash, const _Equal& __eq)
1794:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : __hash_code_base(__ex, __h1, __h2, __hash), _EqualEBO(__eq)
1795:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     { }
1796:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1797:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     bool
1798:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _M_equals(const _Key& __k, __hash_code __c, __node_type* __n) const
1799:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1800:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       static_assert(__is_invocable<const _Equal&, const _Key&, const _Key&>{},
1801:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  "key equality predicate must be invocable with two arguments of "
1802:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  "key type");
1803:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       return _Equal_hash_code<__node_type>::_S_equals(__c, *__n)
1804:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	&& _M_eq()(__k, this->_M_extract()(__n->_M_v()));
1805:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
1806:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1807:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     void
1808:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _M_swap(_Hashtable_base& __x)
1809:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1810:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __hash_code_base::_M_swap(__x);
1811:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       std::swap(_EqualEBO::_M_get(), __x._EqualEBO::_M_get());
1812:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
1813:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1814:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     const _Equal&
1815:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _M_eq() const { return _EqualEBO::_M_cget(); }
1816:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
1817:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1818:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /**
1819:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Primary class template  _Equality.
1820:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *
1821:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  This is for implementing equality comparison for unordered
1822:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  containers, per N3068, by John Lakos and Pablo Halpern.
1823:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  Algorithmically, we follow closely the reference implementations
1824:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    *  therein.
1825:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    */
1826:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _Alloc,
1827:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
1828:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
1829:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits,
1830:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   bool _Unique_keys = _Traits::__unique_keys::value>
1831:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Equality;
1832:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1833:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// unordered_map and unordered_set specializations.
1834:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _Alloc,
1835:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
1836:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
1837:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
1838:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Equality<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1839:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		     _H1, _H2, _Hash, _RehashPolicy, _Traits, true>
1840:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1841:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hashtable = _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1842:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 				     _H1, _H2, _Hash, _RehashPolicy, _Traits>;
1843:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1844:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       bool
1845:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_equal(const __hashtable&) const;
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 86


1846:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
1847:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1848:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _Alloc,
1849:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
1850:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
1851:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
1852:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     bool
1853:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Equality<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1854:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      _H1, _H2, _Hash, _RehashPolicy, _Traits, true>::
1855:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _M_equal(const __hashtable& __other) const
1856:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1857:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_base = typename __hashtable::__node_base;
1858:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_type = typename __hashtable::__node_type;
1859:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const __hashtable* __this = static_cast<const __hashtable*>(this);
1860:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       if (__this->size() != __other.size())
1861:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return false;
1862:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1863:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       for (auto __itx = __this->begin(); __itx != __this->end(); ++__itx)
1864:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	{
1865:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  std::size_t __ybkt = __other._M_bucket_index(__itx._M_cur);
1866:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  __node_base* __prev_n = __other._M_buckets[__ybkt];
1867:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  if (!__prev_n)
1868:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    return false;
1869:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1870:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  for (__node_type* __n = static_cast<__node_type*>(__prev_n->_M_nxt);;
1871:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	       __n = __n->_M_next())
1872:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    {
1873:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      if (__n->_M_v() == *__itx)
1874:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		break;
1875:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1876:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      if (!__n->_M_nxt
1877:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		  || __other._M_bucket_index(__n->_M_next()) != __ybkt)
1878:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		return false;
1879:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    }
1880:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	}
1881:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1882:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       return true;
1883:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
1884:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1885:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /// unordered_multiset and unordered_multimap specializations.
1886:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _Alloc,
1887:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
1888:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
1889:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
1890:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Equality<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1891:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		     _H1, _H2, _Hash, _RehashPolicy, _Traits, false>
1892:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1893:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __hashtable = _Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1894:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 				     _H1, _H2, _Hash, _RehashPolicy, _Traits>;
1895:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1896:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       bool
1897:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_equal(const __hashtable&) const;
1898:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
1899:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1900:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _Key, typename _Value, typename _Alloc,
1901:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _ExtractKey, typename _Equal,
1902:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _H1, typename _H2, typename _Hash,
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 87


1903:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	   typename _RehashPolicy, typename _Traits>
1904:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     bool
1905:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Equality<_Key, _Value, _Alloc, _ExtractKey, _Equal,
1906:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      _H1, _H2, _Hash, _RehashPolicy, _Traits, false>::
1907:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _M_equal(const __hashtable& __other) const
1908:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1909:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_base = typename __hashtable::__node_base;
1910:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_type = typename __hashtable::__node_type;
1911:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const __hashtable* __this = static_cast<const __hashtable*>(this);
1912:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       if (__this->size() != __other.size())
1913:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return false;
1914:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1915:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       for (auto __itx = __this->begin(); __itx != __this->end();)
1916:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	{
1917:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  std::size_t __x_count = 1;
1918:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  auto __itx_end = __itx;
1919:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  for (++__itx_end; __itx_end != __this->end()
1920:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		 && __this->key_eq()(_ExtractKey()(*__itx),
1921:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 				     _ExtractKey()(*__itx_end));
1922:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	       ++__itx_end)
1923:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    ++__x_count;
1924:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1925:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  std::size_t __ybkt = __other._M_bucket_index(__itx._M_cur);
1926:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  __node_base* __y_prev_n = __other._M_buckets[__ybkt];
1927:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  if (!__y_prev_n)
1928:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    return false;
1929:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1930:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  __node_type* __y_n = static_cast<__node_type*>(__y_prev_n->_M_nxt);
1931:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  for (;; __y_n = __y_n->_M_next())
1932:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    {
1933:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      if (__this->key_eq()(_ExtractKey()(__y_n->_M_v()),
1934:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 				   _ExtractKey()(*__itx)))
1935:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		break;
1936:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1937:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      if (!__y_n->_M_nxt
1938:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		  || __other._M_bucket_index(__y_n->_M_next()) != __ybkt)
1939:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		return false;
1940:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    }
1941:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1942:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  typename __hashtable::const_iterator __ity(__y_n);
1943:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  for (auto __ity_end = __ity; __ity_end != __other.end(); ++__ity_end)
1944:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    if (--__x_count == 0)
1945:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      break;
1946:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1947:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  if (__x_count != 0)
1948:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    return false;
1949:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1950:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  if (!std::is_permutation(__itx, __itx_end, __ity))
1951:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    return false;
1952:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1953:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  __itx = __itx_end;
1954:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	}
1955:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       return true;
1956:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
1957:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1958:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   /**
1959:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    * This type deals with all allocation and keeps an allocator instance
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 88


1960:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    * through inheritance to benefit from EBO when possible.
1961:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****    */
1962:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _NodeAlloc>
1963:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     struct _Hashtable_alloc : private _Hashtable_ebo_helper<0, _NodeAlloc>
1964:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
1965:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     private:
1966:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __ebo_node_alloc = _Hashtable_ebo_helper<0, _NodeAlloc>;
1967:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     public:
1968:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_type = typename _NodeAlloc::value_type;
1969:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_alloc_type = _NodeAlloc;
1970:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       // Use __gnu_cxx to benefit from _S_always_equal and al.
1971:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_alloc_traits = __gnu_cxx::__alloc_traits<__node_alloc_type>;
1972:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1973:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __value_alloc_traits = typename __node_alloc_traits::template
1974:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	rebind_traits<typename __node_type::value_type>;
1975:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1976:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __node_base = __detail::_Hash_node_base;
1977:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __bucket_type = __node_base*;      
1978:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __bucket_alloc_type =
1979:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__alloc_rebind<__node_alloc_type, __bucket_type>;
1980:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       using __bucket_alloc_traits = std::allocator_traits<__bucket_alloc_type>;
1981:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1982:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Hashtable_alloc() = default;
1983:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Hashtable_alloc(const _Hashtable_alloc&) = default;
1984:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Hashtable_alloc(_Hashtable_alloc&&) = default;
1985:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1986:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       template<typename _Alloc>
1987:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_Hashtable_alloc(_Alloc&& __a)
1988:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	: __ebo_node_alloc(std::forward<_Alloc>(__a))
1989:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	{ }
1990:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1991:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __node_alloc_type&
1992:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_node_allocator()
1993:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return __ebo_node_alloc::_M_get(); }
1994:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1995:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       const __node_alloc_type&
1996:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_node_allocator() const
1997:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return __ebo_node_alloc::_M_cget(); }
1998:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
1999:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       // Allocate a node and construct an element within it.
2000:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       template<typename... _Args>
2001:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__node_type*
2002:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	_M_allocate_node(_Args&&... __args);
2003:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
2004:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       // Destroy the element within a node and deallocate the node.
2005:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
2006:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_deallocate_node(__node_type* __n);
2007:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
2008:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       // Deallocate a node.
2009:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
2010:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_deallocate_node_ptr(__node_type* __n);
2011:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
2012:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       // Deallocate the linked list of nodes pointed to by __n.
2013:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       // The elements within the nodes are destroyed.
2014:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
2015:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_deallocate_nodes(__node_type* __n);
2016:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 89


2017:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __bucket_type*
2018:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_allocate_buckets(std::size_t __bkt_count);
2019:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
2020:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       void
2021:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_deallocate_buckets(__bucket_type*, std::size_t __bkt_count);
2022:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
2023:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
2024:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // Definitions of class template _Hashtable_alloc's out-of-line member
2025:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   // functions.
2026:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _NodeAlloc>
2027:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     template<typename... _Args>
2028:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       auto
2029:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&&... __args)
2030:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       -> __node_type*
2031:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
2032:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	auto __nptr = __node_alloc_traits::allocate(_M_node_allocator(), 1);
2033:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__node_type* __n = std::__to_address(__nptr);
2034:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__try
2035:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  {
2036:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    ::new ((void*)__n) __node_type;
2037:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    __node_alloc_traits::construct(_M_node_allocator(),
2038:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					   __n->_M_valptr(),
2039:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 					   std::forward<_Args>(__args)...);
2040:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    return __n;
2041:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  }
2042:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	__catch(...)
2043:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  {
2044:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    __node_alloc_traits::deallocate(_M_node_allocator(), __nptr, 1);
2045:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	    __throw_exception_again;
2046:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  }
2047:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
2048:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
2049:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _NodeAlloc>
2050:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     void
2051:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Hashtable_alloc<_NodeAlloc>::_M_deallocate_node(__node_type* __n)
2052:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
2053:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __node_alloc_traits::destroy(_M_node_allocator(), __n->_M_valptr());
2054:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _M_deallocate_node_ptr(__n);
2055:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
2056:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
2057:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _NodeAlloc>
2058:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     void
2059:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Hashtable_alloc<_NodeAlloc>::_M_deallocate_node_ptr(__node_type* __n)
2060:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
2061:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       typedef typename __node_alloc_traits::pointer _Ptr;
2062:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       auto __ptr = std::pointer_traits<_Ptr>::pointer_to(*__n);
2063:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __n->~__node_type();
2064:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __node_alloc_traits::deallocate(_M_node_allocator(), __ptr, 1);
2065:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
2066:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
2067:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _NodeAlloc>
2068:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     void
2069:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Hashtable_alloc<_NodeAlloc>::_M_deallocate_nodes(__node_type* __n)
2070:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
2071:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       while (__n)
2072:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	{
2073:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  __node_type* __tmp = __n;
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 90


2074:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  __n = __n->_M_next();
2075:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	  _M_deallocate_node(__tmp);
2076:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	}
2077:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
2078:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
2079:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _NodeAlloc>
2080:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     typename _Hashtable_alloc<_NodeAlloc>::__bucket_type*
2081:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Hashtable_alloc<_NodeAlloc>::_M_allocate_buckets(std::size_t __bkt_count)
 312              		.loc 10 2081 5 is_stmt 1 view .LVU63
 313              	.LBB2488:
 314              	.LBB2489:
 315              	.LBI2489:
 316              		.file 11 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
   1:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // Allocators -*- C++ -*-
   2:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
   3:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** //
   5:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // software; you can redistribute it and/or modify it under the
   7:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // terms of the GNU General Public License as published by the
   8:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // any later version.
  10:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  11:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // This library is distributed in the hope that it will be useful,
  12:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // GNU General Public License for more details.
  15:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  16:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  20:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // You should have received a copy of the GNU General Public License and
  21:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** // <http://www.gnu.org/licenses/>.
  24:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  25:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** /*
  26:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * Copyright (c) 1996-1997
  27:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * Silicon Graphics Computer Systems, Inc.
  28:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  *
  29:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * Permission to use, copy, modify, distribute and sell this software
  30:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * and its documentation for any purpose is hereby granted without fee,
  31:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * provided that the above copyright notice appear in all copies and
  32:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * that both that copyright notice and this permission notice appear
  33:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * in supporting documentation.  Silicon Graphics makes no
  34:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * representations about the suitability of this software for any
  35:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  36:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  */
  37:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  38:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** /** @file bits/allocator.h
  39:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  *  This is an internal header file, included by other library headers.
  40:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  *  Do not attempt to use it directly. @headername{memory}
  41:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****  */
  42:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  43:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #ifndef _ALLOCATOR_H
  44:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #define _ALLOCATOR_H 1
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 91


  45:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  46:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #include <bits/c++allocator.h> // Define the base class to std::allocator.
  47:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #include <bits/memoryfwd.h>
  48:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus >= 201103L
  49:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #include <type_traits>
  50:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
  51:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  52:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #define __cpp_lib_incomplete_container_elements 201505
  53:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  54:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  55:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** {
  56:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  57:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  58:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   /**
  59:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  @addtogroup allocators
  60:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  @{
  61:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    */
  62:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  63:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   /// allocator<void> specialization.
  64:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   template<>
  65:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     class allocator<void>
  66:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     {
  67:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     public:
  68:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef void        value_type;
  69:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef size_t      size_type;
  70:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef ptrdiff_t   difference_type;
  71:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus <= 201703L
  72:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef void*       pointer;
  73:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef const void* const_pointer;
  74:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  75:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Tp1>
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	struct rebind
  77:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	{ typedef allocator<_Tp1> other; };
  78:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #else
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       allocator() = default;
  80:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  81:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Up>
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	constexpr
  83:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	allocator(const allocator<_Up>&) { }
  84:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif // ! C++20
  85:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  86:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus >= 201103L && __cplusplus <= 201703L
  87:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  88:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef true_type propagate_on_container_move_assignment;
  90:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  91:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef true_type is_always_equal;
  92:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  93:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Up, typename... _Args>
  94:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	void
  95:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	construct(_Up* __p, _Args&&... __args)
  96:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
  97:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
  98:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
  99:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Up>
 100:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	void
 101:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	destroy(_Up* __p)
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 92


 102:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	noexcept(std::is_nothrow_destructible<_Up>::value)
 103:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	{ __p->~_Up(); }
 104:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif // C++11 to C++17
 105:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     };
 106:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 107:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   /**
 108:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    * @brief  The @a standard allocator, as per [20.4].
 109:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *
 110:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/memory.html#std.util.memory.allocator
 111:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  for further details.
 112:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *
 113:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    *  @tparam  _Tp  Type of allocated object.
 114:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****    */
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****   template<typename _Tp>
 116:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     class allocator : public __allocator_base<_Tp>
 117:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     {
 118:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****     public:
 119:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef _Tp        value_type;
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef size_t     size_type;
 121:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef ptrdiff_t  difference_type;
 122:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus <= 201703L
 123:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef _Tp*       pointer;
 124:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef const _Tp* const_pointer;
 125:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef _Tp&       reference;
 126:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef const _Tp& const_reference;
 127:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 128:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Tp1>
 129:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	struct rebind
 130:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	{ typedef allocator<_Tp1> other; };
 131:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
 132:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus >= 201103L
 134:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 135:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
 136:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef true_type propagate_on_container_move_assignment;
 137:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 138:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       typedef true_type is_always_equal;
 139:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
 140:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 141:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 142:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // 3035. std::allocator's constructors should be constexpr
 143:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       _GLIBCXX20_CONSTEXPR
 144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       allocator() _GLIBCXX_NOTHROW { }
 145:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 146:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       _GLIBCXX20_CONSTEXPR
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       allocator(const allocator& __a) _GLIBCXX_NOTHROW
 148:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 149:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cplusplus >= 201103L
 151:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       // Avoid implicit deprecation.
 152:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       allocator& operator=(const allocator&) = default;
 153:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
 154:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 155:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       template<typename _Tp1>
 156:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	_GLIBCXX20_CONSTEXPR
 157:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }
 317              		.loc 11 157 2 view .LVU64
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 93


 318              	.LBB2490:
 319              	.LBI2490:
 320              		.file 12 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
   1:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // Allocator that wraps operator new -*- C++ -*-
   2:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
   3:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** //
   5:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // software; you can redistribute it and/or modify it under the
   7:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // terms of the GNU General Public License as published by the
   8:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // any later version.
  10:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  11:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // This library is distributed in the hope that it will be useful,
  12:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // GNU General Public License for more details.
  15:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  16:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  20:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // You should have received a copy of the GNU General Public License and
  21:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** // <http://www.gnu.org/licenses/>.
  24:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  25:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** /** @file ext/new_allocator.h
  26:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****  */
  28:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  29:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #ifndef _NEW_ALLOCATOR_H
  30:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #define _NEW_ALLOCATOR_H 1
  31:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  32:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <bits/c++config.h>
  33:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <new>
  34:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <bits/functexcept.h>
  35:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <bits/move.h>
  36:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus >= 201103L
  37:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #include <type_traits>
  38:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
  39:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  40:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  41:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** {
  42:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  43:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  44:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****   /**
  45:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *  @brief  An allocator that uses global new, as per [20.4].
  46:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *  @ingroup allocators
  47:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *
  48:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *  This is precisely the allocator defined in the C++ Standard.
  49:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *    - all allocation calls operator new
  50:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *    - all deallocation calls operator delete
  51:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *
  52:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    *  @tparam  _Tp  Type of allocated object.
  53:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****    */
  54:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****   template<typename _Tp>
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 94


  55:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****     class new_allocator
  56:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****     {
  57:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****     public:
  58:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef _Tp        value_type;
  59:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef std::size_t     size_type;
  60:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef std::ptrdiff_t  difference_type;
  61:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus <= 201703L
  62:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef _Tp*       pointer;
  63:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef const _Tp* const_pointer;
  64:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef _Tp&       reference;
  65:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef const _Tp& const_reference;
  66:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  67:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       template<typename _Tp1>
  68:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	struct rebind
  69:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	{ typedef new_allocator<_Tp1> other; };
  70:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
  71:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  72:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus >= 201103L
  73:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  74:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // 2103. propagate_on_container_move_assignment
  75:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       typedef std::true_type propagate_on_container_move_assignment;
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
  77:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  78:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       _GLIBCXX20_CONSTEXPR
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 321              		.loc 12 79 7 view .LVU65
 322              		.loc 12 79 7 is_stmt 0 view .LVU66
 323              	.LBE2490:
 324              	.LBE2489:
 325              	.LBB2491:
 326              	.LBI2491:
 327              		.file 13 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
   1:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // Allocator traits -*- C++ -*-
   2:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
   3:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // Copyright (C) 2011-2020 Free Software Foundation, Inc.
   4:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** //
   5:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // software; you can redistribute it and/or modify it under the
   7:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // terms of the GNU General Public License as published by the
   8:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // any later version.
  10:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  11:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // This library is distributed in the hope that it will be useful,
  12:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // GNU General Public License for more details.
  15:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  16:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  20:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // You should have received a copy of the GNU General Public License and
  21:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** // <http://www.gnu.org/licenses/>.
  24:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  25:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** /** @file bits/alloc_traits.h
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 95


  26:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****  *  This is an internal header file, included by other library headers.
  27:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****  *  Do not attempt to use it directly. @headername{memory}
  28:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****  */
  29:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  30:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #ifndef _ALLOC_TRAITS_H
  31:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #define _ALLOC_TRAITS_H 1
  32:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  33:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #include <bits/stl_construct.h>
  34:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #include <bits/memoryfwd.h>
  35:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus >= 201103L
  36:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** # include <bits/allocator.h>
  37:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** # include <bits/ptr_traits.h>
  38:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** # include <ext/numeric_traits.h>
  39:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
  40:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  41:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** namespace std _GLIBCXX_VISIBILITY(default)
  42:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** {
  43:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  44:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  45:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus >= 201103L
  46:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #define __cpp_lib_allocator_traits_is_always_equal 201411
  47:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  48:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   struct __allocator_traits_base
  49:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   {
  50:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp, typename _Up, typename = void>
  51:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       struct __rebind : __replace_first_arg<_Tp, _Up> { };
  52:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  53:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp, typename _Up>
  54:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       struct __rebind<_Tp, _Up,
  55:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		      __void_t<typename _Tp::template rebind<_Up>::other>>
  56:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { using type = typename _Tp::template rebind<_Up>::other; };
  57:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  58:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   protected:
  59:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  60:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __pointer = typename _Tp::pointer;
  61:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  62:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __c_pointer = typename _Tp::const_pointer;
  63:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  64:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __v_pointer = typename _Tp::void_pointer;
  65:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  66:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __cv_pointer = typename _Tp::const_void_pointer;
  67:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  68:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __pocca = typename _Tp::propagate_on_container_copy_assignment;
  69:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  70:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __pocma = typename _Tp::propagate_on_container_move_assignment;
  71:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  72:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __pocs = typename _Tp::propagate_on_container_swap;
  73:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     template<typename _Tp>
  74:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using __equal = typename _Tp::is_always_equal;
  75:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   };
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  77:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc, typename _Up>
  78:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     using __alloc_rebind
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       = typename __allocator_traits_base::template __rebind<_Alloc, _Up>::type;
  80:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  81:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   /**
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    * @brief  Uniform interface to all allocator types.
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 96


  83:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****    * @ingroup allocators
  84:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   */
  85:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Alloc>
  86:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct allocator_traits : __allocator_traits_base
  87:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
  88:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator type
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef _Alloc allocator_type;
  90:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocated type
  91:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       typedef typename _Alloc::value_type value_type;
  92:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
  93:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
  94:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's pointer type.
  95:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
  96:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::pointer if that type exists, otherwise @c value_type*
  97:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
  98:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using pointer = __detected_or_t<value_type*, __pointer, _Alloc>;
  99:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 100:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     private:
 101:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       // Select _Func<_Alloc> or pointer_traits<pointer>::rebind<_Tp>
 102:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<template<typename> class _Func, typename _Tp, typename = void>
 103:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Ptr
 104:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 105:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  using type = typename pointer_traits<pointer>::template rebind<_Tp>;
 106:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	};
 107:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 108:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<template<typename> class _Func, typename _Tp>
 109:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Ptr<_Func, _Tp, __void_t<_Func<_Alloc>>>
 110:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 111:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  using type = _Func<_Alloc>;
 112:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	};
 113:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 114:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       // Select _A2::difference_type or pointer_traits<_Ptr>::difference_type
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _A2, typename _PtrT, typename = void>
 116:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Diff
 117:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ using type = typename pointer_traits<_PtrT>::difference_type; };
 118:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 119:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _A2, typename _PtrT>
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Diff<_A2, _PtrT, __void_t<typename _A2::difference_type>>
 121:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ using type = typename _A2::difference_type; };
 122:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 123:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       // Select _A2::size_type or make_unsigned<_DiffT>::type
 124:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _A2, typename _DiffT, typename = void>
 125:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Size : make_unsigned<_DiffT> { };
 126:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 127:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _A2, typename _DiffT>
 128:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct _Size<_A2, _DiffT, __void_t<typename _A2::size_type>>
 129:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ using type = typename _A2::size_type; };
 130:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 131:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     public:
 132:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's const pointer type.
 134:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 135:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::const_pointer if that type exists, otherwise
 136:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<const value_type> </tt>
 137:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 138:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using const_pointer = typename _Ptr<__c_pointer, const value_type>::type;
 139:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 97


 140:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 141:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's void pointer type.
 142:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 143:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::void_pointer if that type exists, otherwise
 144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<void> </tt>
 145:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 146:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using void_pointer = typename _Ptr<__v_pointer, void>::type;
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 148:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 149:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's const void pointer type.
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 151:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::const_void_pointer if that type exists, otherwise
 152:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<const void> </tt>
 153:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 154:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using const_void_pointer = typename _Ptr<__cv_pointer, const void>::type;
 155:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 156:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 157:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's difference type
 158:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::difference_type if that type exists, otherwise
 160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> pointer_traits<pointer>::difference_type </tt>
 161:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 162:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using difference_type = typename _Diff<_Alloc, pointer>::type;
 163:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 164:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 165:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   The allocator's size type
 166:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 167:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::size_type if that type exists, otherwise
 168:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * <tt> make_unsigned<difference_type>::type </tt>
 169:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 170:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using size_type = typename _Size<_Alloc, difference_type>::type;
 171:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 172:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 173:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   How the allocator is propagated on copy assignment
 174:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 175:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::propagate_on_container_copy_assignment if that type exists,
 176:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * otherwise @c false_type
 177:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 178:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_copy_assignment
 179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	= __detected_or_t<false_type, __pocca, _Alloc>;
 180:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 181:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 182:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   How the allocator is propagated on move assignment
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 184:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::propagate_on_container_move_assignment if that type exists,
 185:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * otherwise @c false_type
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_move_assignment
 188:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	= __detected_or_t<false_type, __pocma, _Alloc>;
 189:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 191:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   How the allocator is propagated on swap
 192:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 193:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::propagate_on_container_swap if that type exists,
 194:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * otherwise @c false_type
 195:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 196:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_swap
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 98


 197:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	= __detected_or_t<false_type, __pocs, _Alloc>;
 198:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 199:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @brief   Whether all instances of the allocator type compare equal.
 201:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 202:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * @c Alloc::is_always_equal if that type exists,
 203:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        * otherwise @c is_empty<Alloc>::type
 204:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 205:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using is_always_equal
 206:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	= __detected_or_t<typename is_empty<_Alloc>::type, __equal, _Alloc>;
 207:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 208:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp>
 209:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using rebind_alloc = __alloc_rebind<_Alloc, _Tp>;
 210:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp>
 211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using rebind_traits = allocator_traits<rebind_alloc<_Tp>>;
 212:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 213:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     private:
 214:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 215:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr auto
 216:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_allocate(_Alloc2& __a, size_type __n, const_void_pointer __hint, int)
 217:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(__a.allocate(__n, __hint))
 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a.allocate(__n, __hint); }
 219:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 220:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr pointer
 222:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_allocate(_Alloc2& __a, size_type __n, const_void_pointer, ...)
 223:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a.allocate(__n); }
 224:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 225:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 226:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	struct __construct_helper
 227:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 228:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  template<typename _Alloc2,
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	    typename = decltype(std::declval<_Alloc2*>()->construct(
 230:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  std::declval<_Tp*>(), std::declval<_Args>()...))>
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	    static true_type __test(int);
 232:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 233:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  template<typename>
 234:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	    static false_type __test(...);
 235:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  using type = decltype(__test<_Alloc>(0));
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	};
 238:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 239:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 240:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using __has_construct
 241:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  = typename __construct_helper<_Tp, _Args...>::type;
 242:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 243:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 244:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR _Require<__has_construct<_Tp, _Args...>>
 245:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_construct(_Alloc& __a, _Tp* __p, _Args&&... __args)
 246:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(noexcept(__a.construct(__p, std::forward<_Args>(__args)...)))
 247:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 248:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 249:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 250:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR
 251:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_Require<__and_<__not_<__has_construct<_Tp, _Args...>>,
 252:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 			       is_constructible<_Tp, _Args...>>>
 253:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_construct(_Alloc&, _Tp* __p, _Args&&... __args)
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 99


 254:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(std::is_nothrow_constructible<_Tp, _Args...>::value)
 255:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 256:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 257:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
 258:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 259:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  std::construct_at(__p, std::forward<_Args>(__args)...);
 260:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 261:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 262:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 263:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2, typename _Tp>
 264:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR auto
 265:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_destroy(_Alloc2& __a, _Tp* __p, int)
 266:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(noexcept(__a.destroy(__p)))
 267:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(__a.destroy(__p))
 268:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ __a.destroy(__p); }
 269:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 270:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2, typename _Tp>
 271:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX14_CONSTEXPR void
 272:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_destroy(_Alloc2&, _Tp* __p, ...)
 273:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(std::is_nothrow_destructible<_Tp>::value)
 274:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ std::_Destroy(__p); }
 275:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 276:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 277:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr auto
 278:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_max_size(_Alloc2& __a, int)
 279:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(__a.max_size())
 280:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a.max_size(); }
 281:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 282:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 283:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr size_type
 284:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_max_size(_Alloc2&, ...)
 285:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 286:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  // _GLIBCXX_RESOLVE_LIB_DEFECTS
 287:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  // 2466. allocator_traits::max_size() default behavior is incorrect
 288:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  return __gnu_cxx::__numeric_traits<size_type>::__max
 289:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	    / sizeof(value_type);
 290:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 291:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 292:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 293:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr auto
 294:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_select(_Alloc2& __a, int)
 295:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(__a.select_on_container_copy_construction())
 296:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a.select_on_container_copy_construction(); }
 297:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 298:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Alloc2>
 299:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static constexpr _Alloc2
 300:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	_S_select(_Alloc2& __a, ...)
 301:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ return __a; }
 302:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 303:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     public:
 304:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 305:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 306:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Allocate memory.
 307:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 308:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 309:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 310:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls @c a.allocate(n)
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 100


 311:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 312:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 313:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       allocate(_Alloc& __a, size_type __n)
 314:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 315:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 316:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 317:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Allocate memory.
 318:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 319:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 320:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __hint Aid to locality.
 321:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return Memory of suitable size and alignment for @a n objects
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *          of type @c value_type
 323:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 324:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Returns <tt> a.allocate(n, hint) </tt> if that expression is
 325:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  well-formed, otherwise returns @c a.allocate(n)
 326:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 327:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 328:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       allocate(_Alloc& __a, size_type __n, const_void_pointer __hint)
 329:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return _S_allocate(__a, __n, __hint, 0); }
 330:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 331:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 332:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Deallocate memory.
 333:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 334:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to the memory to deallocate.
 335:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects space was allocated for.
 336:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 337:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls <tt> a.deallocate(p, n) </tt>
 338:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 339:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR void
 340:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       deallocate(_Alloc& __a, pointer __p, size_type __n)
 341:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 342:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 343:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 344:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Construct an object of type @a _Tp
 345:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 346:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to memory of suitable size and alignment for Tp
 347:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __args Constructor arguments.
 348:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 349:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls <tt> __a.construct(__p, std::forward<Args>(__args)...) </tt>
 350:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  if that expression is well-formed, otherwise uses placement-new
 351:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  to construct an object of type @a _Tp at location @a __p from the
 352:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  arguments @a __args...
 353:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 354:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp, typename... _Args>
 355:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR auto
 356:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	construct(_Alloc& __a, _Tp* __p, _Args&&... __args)
 357:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(noexcept(_S_construct(__a, __p,
 358:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 				       std::forward<_Args>(__args)...)))
 359:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	-> decltype(_S_construct(__a, __p, std::forward<_Args>(__args)...))
 360:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ _S_construct(__a, __p, std::forward<_Args>(__args)...); }
 361:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 362:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 363:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Destroy an object of type @a _Tp
 364:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 365:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to the object to destroy
 366:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 367:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls @c __a.destroy(__p) if that expression is well-formed,
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 101


 368:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  otherwise calls @c __p->~_Tp()
 369:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 370:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Tp>
 371:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR void
 372:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	destroy(_Alloc& __a, _Tp* __p)
 373:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(noexcept(_S_destroy(__a, __p, 0)))
 374:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{ _S_destroy(__a, __p, 0); }
 375:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 376:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 377:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  The maximum supported allocation size
 378:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 379:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return @c __a.max_size() or @c numeric_limits<size_type>::max()
 380:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 381:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Returns @c __a.max_size() if that expression is well-formed,
 382:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  otherwise returns @c numeric_limits<size_type>::max()
 383:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 384:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR size_type
 385:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       max_size(const _Alloc& __a) noexcept
 386:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return _S_max_size(__a, 0); }
 387:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 388:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 389:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Obtain an allocator to use when copying a container.
 390:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __rhs  An allocator.
 391:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return @c __rhs.select_on_container_copy_construction() or @a __rhs
 392:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 393:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Returns @c __rhs.select_on_container_copy_construction() if that
 394:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  expression is well-formed, otherwise returns @a __rhs
 395:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 396:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR _Alloc
 397:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       select_on_container_copy_construction(const _Alloc& __rhs)
 398:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return _S_select(__rhs, 0); }
 399:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     };
 400:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 401:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus > 201703L
 402:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** # define __cpp_lib_constexpr_dynamic_alloc 201907L
 403:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 404:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 405:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   /// Partial specialization for std::allocator.
 406:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****   template<typename _Tp>
 407:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     struct allocator_traits<allocator<_Tp>>
 408:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****     {
 409:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator type
 410:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using allocator_type = allocator<_Tp>;
 411:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 412:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocated type
 413:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using value_type = _Tp;
 414:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 415:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's pointer type.
 416:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using pointer = _Tp*;
 417:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 418:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's const pointer type.
 419:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using const_pointer = const _Tp*;
 420:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 421:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's void pointer type.
 422:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using void_pointer = void*;
 423:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 424:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's const void pointer type.
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 102


 425:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using const_void_pointer = const void*;
 426:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 427:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's difference type
 428:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using difference_type = std::ptrdiff_t;
 429:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 430:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// The allocator's size type
 431:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using size_type = std::size_t;
 432:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// How the allocator is propagated on copy assignment
 434:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_copy_assignment = false_type;
 435:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 436:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// How the allocator is propagated on move assignment
 437:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_move_assignment = true_type;
 438:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 439:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// How the allocator is propagated on swap
 440:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using propagate_on_container_swap = false_type;
 441:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 442:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /// Whether all instances of the allocator type compare equal.
 443:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       using is_always_equal = true_type;
 444:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 445:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Up>
 446:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using rebind_alloc = allocator<_Up>;
 447:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 448:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Up>
 449:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	using rebind_traits = allocator_traits<allocator<_Up>>;
 450:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 452:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Allocate memory.
 453:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 454:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 455:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 456:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls @c a.allocate(n)
 457:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 458:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 459:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       allocate(allocator_type& __a, size_type __n)
 328              		.loc 13 459 7 is_stmt 1 view .LVU67
 329              	.LBB2492:
 330              	.LBI2492:
  80:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  81:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       _GLIBCXX20_CONSTEXPR
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
  83:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  84:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       template<typename _Tp1>
  85:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	_GLIBCXX20_CONSTEXPR
  86:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }
  87:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  88:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus <= 201703L
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  90:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  91:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       pointer
  92:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       address(reference __x) const _GLIBCXX_NOEXCEPT
  93:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       { return std::__addressof(__x); }
  94:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
  95:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       const_pointer
  96:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       address(const_reference __x) const _GLIBCXX_NOEXCEPT
  97:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       { return std::__addressof(__x); }
  98:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 103


  99:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 100:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // NB: __n is permitted to be 0.  The C++ standard says nothing
 101:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // about what the return value is when __n == 0.
 102:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       _GLIBCXX_NODISCARD _Tp*
 103:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       allocate(size_type __n, const void* = static_cast<const void*>(0))
 331              		.loc 12 103 7 view .LVU68
 332              	.LBB2493:
 104:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 105:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	if (__n > this->_M_max_size())
 333              		.loc 12 105 2 is_stmt 0 view .LVU69
 334 0056 B7F1005F 		cmp	r7, #536870912
 335 005a 60D2     		bcs	.L42
 106:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  std::__throw_bad_alloc();
 107:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 108:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_aligned_new
 109:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
 110:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  {
 111:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
 112:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
 113:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  }
 114:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 336              		.loc 12 115 41 view .LVU70
 337 005c BA00     		lsls	r2, r7, #2
 338 005e 1046     		mov	r0, r2
 339 0060 0392     		str	r2, [sp, #12]
 340 0062 FFF7FEFF 		bl	_Znwj
 341              	.LVL20:
 342              	.LBE2493:
 343              	.LBE2492:
 344              	.LBE2491:
2082:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
2083:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __bucket_alloc_type __alloc(_M_node_allocator());
2084:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
2085:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       auto __ptr = __bucket_alloc_traits::allocate(__alloc, __bkt_count);
2086:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __bucket_type* __p = std::__to_address(__ptr);
2087:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __builtin_memset(__p, 0, __bkt_count * sizeof(__bucket_type));
 345              		.loc 10 2087 23 view .LVU71
 346 0066 039A     		ldr	r2, [sp, #12]
 347 0068 0021     		movs	r1, #0
 348              	.LBB2498:
 349              	.LBB2496:
 350              	.LBB2494:
 351              		.loc 12 115 41 view .LVU72
 352 006a 0646     		mov	r6, r0
 353              	.LVL21:
 354              		.loc 12 115 41 view .LVU73
 355              	.LBE2494:
 356              	.LBE2496:
 357              	.LBE2498:
 358              		.loc 10 2087 23 view .LVU74
 359 006c FFF7FEFF 		bl	memset
 360              	.LVL22:
 361              	.LBB2499:
 362              	.LBI2499:
 158:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #if __cpp_constexpr_dynamic_alloc
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 104


 160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       constexpr
 161:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** #endif
 162:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       ~allocator() _GLIBCXX_NOTHROW { }
 363              		.loc 11 162 7 is_stmt 1 view .LVU75
 364              	.LBB2500:
 365              	.LBI2500:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 366              		.loc 12 89 7 view .LVU76
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 367              		.loc 12 89 7 is_stmt 0 view .LVU77
 368              	.LBE2500:
 369              	.LBE2499:
 370              	.LBE2488:
 371              	.LBE2487:
 395:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  }
 372              		.loc 9 395 14 view .LVU78
 373 0070 04F1180C 		add	ip, r4, #24
 374              	.LVL23:
 375              	.L20:
 395:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  }
 376              		.loc 9 395 14 view .LVU79
 377              	.LBE2486:
 378              	.LBE2485:
 379              	.LBB2505:
 380              	.LBI2505:
 420:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return static_cast<__node_type*>(_M_before_begin._M_nxt); }
 381              		.loc 9 420 7 is_stmt 1 view .LVU80
 382              	.LBB2506:
 421:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 383              		.loc 9 421 64 is_stmt 0 view .LVU81
 384 0074 A268     		ldr	r2, [r4, #8]
 385              	.LVL24:
 421:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 386              		.loc 9 421 64 view .LVU82
 387              	.LBE2506:
 388              	.LBE2505:
2088:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
2089:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     _M_rehash_aux(size_type __bkt_count, true_type)
2090:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     {
2091:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __bucket_type* __new_buckets = _M_allocate_buckets(__bkt_count);
2092:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       __node_type* __p = _M_begin();
2093:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_before_begin._M_nxt = nullptr;
 389              		.loc 9 2093 30 view .LVU83
 390 0076 0020     		movs	r0, #0
 391 0078 A060     		str	r0, [r4, #8]
 392              	.LVL25:
2094:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       std::size_t __bbegin_bkt = 0;
2095:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       while (__p)
 393              		.loc 9 2095 14 is_stmt 1 view .LVU84
 394 007a 82B1     		cbz	r2, .L22
 395              	.LVL26:
 396              	.L23:
 397              	.LBB2507:
 398              	.LBB2508:
 399              	.LBI2508:
 282:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return static_cast<_Hash_node*>(this->_M_nxt); }
 400              		.loc 10 282 7 view .LVU85
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 105


 401 007c 1546     		mov	r5, r2
 402              	.LBB2509:
 283:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 403              		.loc 10 283 53 is_stmt 0 view .LVU86
 404 007e 1268     		ldr	r2, [r2]
 405              	.LVL27:
 283:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 406              		.loc 10 283 53 view .LVU87
 407              	.LBE2509:
 408              	.LBE2508:
 409              	.LBB2510:
 410              	.LBI2510:
1303:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	noexcept( noexcept(declval<const _H1&>()(declval<const _Key&>()))
 411              		.loc 10 1303 7 is_stmt 1 view .LVU88
 412              	.LBB2511:
 413              	.LBB2512:
 414              	.LBI2512:
 415              		.file 14 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
   1:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // functional_hash.h header -*- C++ -*-
   2:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
   3:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // Copyright (C) 2007-2020 Free Software Foundation, Inc.
   4:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** //
   5:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // software; you can redistribute it and/or modify it under the
   7:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // terms of the GNU General Public License as published by the
   8:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // any later version.
  10:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
  11:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // This library is distributed in the hope that it will be useful,
  12:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // GNU General Public License for more details.
  15:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
  16:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
  20:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // You should have received a copy of the GNU General Public License and
  21:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** // <http://www.gnu.org/licenses/>.
  24:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
  25:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** /** @file bits/functional_hash.h
  26:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****  *  This is an internal header file, included by other library headers.
  27:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****  *  Do not attempt to use it directly. @headername{functional}
  28:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****  */
  29:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
  30:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** #ifndef _FUNCTIONAL_HASH_H
  31:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** #define _FUNCTIONAL_HASH_H 1
  32:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
  33:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** #pragma GCC system_header
  34:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
  35:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** #include <bits/hash_bytes.h>
  36:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
  37:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** namespace std _GLIBCXX_VISIBILITY(default)
  38:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** {
  39:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 106


  40:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
  41:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   /** @defgroup hashes Hashes
  42:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****    *  @ingroup functors
  43:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****    *
  44:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****    *   Hashing functors taking a variable type and returning a @c std::size_t.
  45:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****    *
  46:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****    *  @{
  47:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****    */
  48:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
  49:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   template<typename _Result, typename _Arg>
  50:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     struct __hash_base
  51:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     {
  52:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       typedef _Result     result_type _GLIBCXX17_DEPRECATED;
  53:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       typedef _Arg      argument_type _GLIBCXX17_DEPRECATED;
  54:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     };
  55:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
  56:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   /// Primary class template hash.
  57:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   template<typename _Tp>
  58:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     struct hash;
  59:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
  60:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   template<typename _Tp, typename = void>
  61:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     struct __poison_hash
  62:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     {
  63:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       static constexpr bool __enable_hash_call = false;
  64:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     private:
  65:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       // Private rather than deleted to be non-trivially-copyable.
  66:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       __poison_hash(__poison_hash&&);
  67:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       ~__poison_hash();
  68:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     };
  69:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
  70:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   template<typename _Tp>
  71:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     struct __poison_hash<_Tp, __void_t<decltype(hash<_Tp>()(declval<_Tp>()))>>
  72:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     {
  73:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       static constexpr bool __enable_hash_call = true;
  74:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     };
  75:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   // Helper struct for SFINAE-poisoning non-enum types.
  77:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   template<typename _Tp, bool = is_enum<_Tp>::value>
  78:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     struct __hash_enum
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     {
  80:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     private:
  81:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       // Private rather than deleted to be non-trivially-copyable.
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       __hash_enum(__hash_enum&&);
  83:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       ~__hash_enum();
  84:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     };
  85:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
  86:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   // Helper struct for hash with enum types.
  87:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   template<typename _Tp>
  88:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     struct __hash_enum<_Tp, true> : public __hash_base<size_t, _Tp>
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     {
  90:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       size_t
  91:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       operator()(_Tp __val) const noexcept
  92:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       {
  93:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****        using __type = typename underlying_type<_Tp>::type;
  94:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****        return hash<__type>{}(static_cast<__type>(__val));
  95:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       }
  96:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     };
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 107


  97:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
  98:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   /// Primary class template hash, usable for enum types only.
  99:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   // Use with non-enum types still SFINAES.
 100:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   template<typename _Tp>
 101:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     struct hash : __hash_enum<_Tp>
 102:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     { };
 103:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
 104:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   /// Partial specializations for pointer types.
 105:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   template<typename _Tp>
 106:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     struct hash<_Tp*> : public __hash_base<size_t, _Tp*>
 107:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     {
 108:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       size_t
 109:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       operator()(_Tp* __p) const noexcept
 110:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       { return reinterpret_cast<size_t>(__p); }
 111:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     };
 112:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
 113:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   // Explicit specializations for integer types.
 114:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** #define _Cxx_hashtable_define_trivial_hash(_Tp) 	\
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   template<>						\
 116:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     struct hash<_Tp> : public __hash_base<size_t, _Tp>  \
 117:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     {                                                   \
 118:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       size_t                                            \
 119:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       operator()(_Tp __val) const noexcept              \
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****       { return static_cast<size_t>(__val); }            \
 121:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****     };
 122:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
 123:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   /// Explicit specialization for bool.
 124:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   _Cxx_hashtable_define_trivial_hash(bool)
 125:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
 126:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   /// Explicit specialization for char.
 127:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   _Cxx_hashtable_define_trivial_hash(char)
 128:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
 129:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   /// Explicit specialization for signed char.
 130:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   _Cxx_hashtable_define_trivial_hash(signed char)
 131:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
 132:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   /// Explicit specialization for unsigned char.
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   _Cxx_hashtable_define_trivial_hash(unsigned char)
 134:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
 135:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   /// Explicit specialization for wchar_t.
 136:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   _Cxx_hashtable_define_trivial_hash(wchar_t)
 137:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
 138:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** #ifdef _GLIBCXX_USE_CHAR8_T
 139:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   /// Explicit specialization for char8_t.
 140:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   _Cxx_hashtable_define_trivial_hash(char8_t)
 141:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** #endif
 142:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
 143:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   /// Explicit specialization for char16_t.
 144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   _Cxx_hashtable_define_trivial_hash(char16_t)
 145:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
 146:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   /// Explicit specialization for char32_t.
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   _Cxx_hashtable_define_trivial_hash(char32_t)
 148:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
 149:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   /// Explicit specialization for short.
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   _Cxx_hashtable_define_trivial_hash(short)
 151:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h **** 
 152:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   /// Explicit specialization for int.
 153:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\functional_hash.h ****   _Cxx_hashtable_define_trivial_hash(int)
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 108


 416              		.loc 14 153 3 view .LVU89
 417              	.LBB2513:
 418              		.loc 14 153 3 view .LVU90
 419              		.loc 14 153 3 is_stmt 0 view .LVU91
 420              	.LBE2513:
 421              	.LBE2512:
 422              	.LBB2514:
 423              	.LBI2514:
 431:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	       second_argument_type __den) const noexcept
 424              		.loc 10 431 5 is_stmt 1 view .LVU92
 425              	.LBB2515:
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 426              		.loc 10 433 7 view .LVU93
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 427              		.loc 10 433 22 is_stmt 0 view .LVU94
 428 0080 6968     		ldr	r1, [r5, #4]
 429 0082 B1FBF7F3 		udiv	r3, r1, r7
 430 0086 07FB1311 		mls	r1, r7, r3, r1
 431              	.LVL28:
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 432              		.loc 10 433 22 view .LVU95
 433              	.LBE2515:
 434              	.LBE2514:
 435              	.LBE2511:
 436              	.LBE2510:
2096:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
2097:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __node_type* __next = __p->_M_next();
2098:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  std::size_t __bkt
2099:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    = __hash_code_base::_M_bucket_index(__p, __bkt_count);
2100:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (!__new_buckets[__bkt])
 437              		.loc 9 2100 22 view .LVU96
 438 008a 56F82130 		ldr	r3, [r6, r1, lsl #2]
 439              		.loc 9 2100 4 view .LVU97
 440 008e 6BB3     		cbz	r3, .L43
 441              	.LVL29:
 442              		.loc 9 2100 4 view .LVU98
 443              	.LBE2507:
2095:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
 444              		.loc 9 2095 14 is_stmt 1 view .LVU99
 445              	.LBB2516:
2101:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    {
2102:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      __p->_M_nxt = _M_before_begin._M_nxt;
2103:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      _M_before_begin._M_nxt = __p;
2104:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      __new_buckets[__bkt] = &_M_before_begin;
2105:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      if (__p->_M_nxt)
2106:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		__new_buckets[__bbegin_bkt] = __p;
2107:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      __bbegin_bkt = __bkt;
2108:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    }
2109:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  else
2110:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    {
2111:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      __p->_M_nxt = __new_buckets[__bkt]->_M_nxt;
 446              		.loc 9 2111 44 is_stmt 0 view .LVU100
 447 0090 1B68     		ldr	r3, [r3]
 448              		.loc 9 2111 20 view .LVU101
 449 0092 2B60     		str	r3, [r5]
2112:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      __new_buckets[__bkt]->_M_nxt = __p;
 450              		.loc 9 2112 21 view .LVU102
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 109


 451 0094 56F82130 		ldr	r3, [r6, r1, lsl #2]
 452              		.loc 9 2112 37 view .LVU103
 453 0098 1D60     		str	r5, [r3]
 454              	.LBE2516:
2095:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
 455              		.loc 9 2095 14 view .LVU104
 456 009a 002A     		cmp	r2, #0
 457 009c EED1     		bne	.L23
 458              	.LVL30:
 459              	.L22:
 460              	.LBB2517:
 461              	.LBI2517:
 411:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { _M_deallocate_buckets(_M_buckets, _M_bucket_count); }
 462              		.loc 9 411 7 is_stmt 1 view .LVU105
 463              	.LBB2518:
 412:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 464              		.loc 9 412 30 is_stmt 0 view .LVU106
 465 009e D4E90001 		ldrd	r0, r1, [r4]
 466              	.LVL31:
 467              	.LBB2519:
 468              	.LBI2519:
 402:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 469              		.loc 9 402 7 is_stmt 1 view .LVU107
 470              	.LBB2520:
 404:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return;
 471              		.loc 9 404 2 is_stmt 0 view .LVU108
 472 00a2 8445     		cmp	ip, r0
 473 00a4 02D0     		beq	.L26
 474              	.LVL32:
 475              	.LBB2521:
 476              	.LBI2521:
2088:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       return __p;
2089:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
2090:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
2091:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   template<typename _NodeAlloc>
2092:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     void
2093:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     _Hashtable_alloc<_NodeAlloc>::_M_deallocate_buckets(__bucket_type* __bkts,
 477              		.loc 10 2093 5 is_stmt 1 view .LVU109
 478              	.LBB2522:
 479              	.LBB2523:
 480              	.LBI2523:
 157:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 481              		.loc 11 157 2 view .LVU110
 482              	.LBB2524:
 483              	.LBI2524:
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 484              		.loc 12 79 7 view .LVU111
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 485              		.loc 12 79 7 is_stmt 0 view .LVU112
 486              	.LBE2524:
 487              	.LBE2523:
 488              	.LBB2525:
 489              	.LBI2525:
 460:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 461:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 462:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 463:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Allocate memory.
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 110


 464:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 465:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 466:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __hint Aid to locality.
 467:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return Memory of suitable size and alignment for @a n objects
 468:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *          of type @c value_type
 469:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 470:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Returns <tt> a.allocate(n, hint) </tt>
 471:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 472:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       _GLIBCXX_NODISCARD static _GLIBCXX20_CONSTEXPR pointer
 473:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       allocate(allocator_type& __a, size_type __n, const_void_pointer __hint)
 474:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       {
 475:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 476:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	return __a.allocate(__n, __hint);
 477:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 478:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	return __a.allocate(__n);
 479:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 480:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       }
 481:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 482:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 483:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Deallocate memory.
 484:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 485:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to the memory to deallocate.
 486:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __n  The number of objects space was allocated for.
 487:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 488:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls <tt> a.deallocate(p, n) </tt>
 489:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 490:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR void
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       deallocate(allocator_type& __a, pointer __p, size_type __n)
 490              		.loc 13 491 7 is_stmt 1 view .LVU113
 491              	.LBB2526:
 492              	.LBI2526:
 116:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 117:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 118:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       // __p is not permitted to be a null pointer.
 119:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       void
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       deallocate(_Tp* __p, size_type __t)
 493              		.loc 12 120 7 view .LVU114
 494              	.LBB2527:
 121:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 122:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_aligned_new
 123:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
 124:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  {
 125:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	    ::operator delete(__p,
 126:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** # if __cpp_sized_deallocation
 127:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 			      __t * sizeof(_Tp),
 128:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** # endif
 129:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 			      std::align_val_t(alignof(_Tp)));
 130:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	    return;
 131:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	  }
 132:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	::operator delete(__p
 495              		.loc 12 133 19 is_stmt 0 view .LVU115
 496 00a6 8900     		lsls	r1, r1, #2
 497              	.LVL33:
 498              		.loc 12 133 19 view .LVU116
 499 00a8 FFF7FEFF 		bl	_ZdlPvj
 500              	.LVL34:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 111


 501              		.loc 12 133 19 view .LVU117
 502              	.LBE2527:
 503              	.LBE2526:
 504              	.LBE2525:
 505              	.LBB2528:
 506              	.LBI2528:
 507              		.loc 11 162 7 is_stmt 1 view .LVU118
 508              	.LBB2529:
 509              	.LBI2529:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 510              		.loc 12 89 7 view .LVU119
 511              	.L26:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 512              		.loc 12 89 7 is_stmt 0 view .LVU120
 513              	.LBE2529:
 514              	.LBE2528:
 515              	.LBE2522:
 516              	.LBE2521:
 517              	.LBE2520:
 518              	.LBE2519:
 519              	.LBE2518:
 520              	.LBE2517:
 521              	.LBE2484:
 522              	.LBE2483:
 523              	.LBE2482:
 524              	.LBB2537:
 525              	.LBB2538:
 526              	.LBB2539:
 527              	.LBB2540:
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 528              		.loc 10 433 22 view .LVU121
 529 00ac B9FBF7F1 		udiv	r1, r9, r7
 530              	.LBE2540:
 531              	.LBE2539:
 532              	.LBE2538:
 533              	.LBE2537:
 534              	.LBB2544:
 535              	.LBB2535:
 536              	.LBB2533:
2113:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    }
2114:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  __p = __next;
2115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
2116:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
2117:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_deallocate_buckets();
2118:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_bucket_count = __bkt_count;
2119:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_buckets = __new_buckets;
 537              		.loc 9 2119 18 view .LVU122
 538 00b0 C4E90067 		strd	r6, r7, [r4]
 539              	.LVL35:
 540              		.loc 9 2119 18 view .LVU123
 541              	.LBE2533:
 542              	.LBE2535:
 543              	.LBE2544:
 544              	.LBB2545:
 545              	.LBI2537:
 681:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __hash_code_base::_M_bucket_index(__k, __c, _M_bucket_count); }
 546              		.loc 9 681 7 is_stmt 1 view .LVU124
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 112


 547              	.LBB2543:
 548              	.LBI2538:
1298:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		      std::size_t __bkt_count) const
 549              		.loc 10 1298 7 view .LVU125
 550              	.LBB2542:
 551              	.LBI2539:
 431:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	       second_argument_type __den) const noexcept
 552              		.loc 10 431 5 view .LVU126
 553              	.LBB2541:
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 554              		.loc 10 433 7 view .LVU127
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 555              		.loc 10 433 22 is_stmt 0 view .LVU128
 556 00b4 07FB1197 		mls	r7, r7, r1, r9
 557              	.LVL36:
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 558              		.loc 10 433 22 view .LVU129
 559              	.LBE2541:
 560              	.LBE2542:
 561              	.LBE2543:
 562              	.LBE2545:
 563              	.LBB2546:
1595:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 564              		.loc 9 1595 5 is_stmt 1 view .LVU130
 565              	.LBB2479:
1599:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
 566              		.loc 9 1599 21 is_stmt 0 view .LVU131
 567 00b8 56F82730 		ldr	r3, [r6, r7, lsl #2]
 568 00bc 06EB8702 		add	r2, r6, r7, lsl #2
1599:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
 569              		.loc 9 1599 7 view .LVU132
 570 00c0 002B     		cmp	r3, #0
 571 00c2 B7D1     		bne	.L44
 572              	.LVL37:
 573              	.L27:
1611:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_before_begin._M_nxt = __node;
 574              		.loc 9 1611 37 view .LVU133
 575 00c4 A368     		ldr	r3, [r4, #8]
1611:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_before_begin._M_nxt = __node;
 576              		.loc 9 1611 19 view .LVU134
 577 00c6 C8F80030 		str	r3, [r8]
1612:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  if (__node->_M_nxt)
 578              		.loc 9 1612 27 view .LVU135
 579 00ca C4F80880 		str	r8, [r4, #8]
1613:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    // We must update former begin bucket that is pointing to
 580              		.loc 9 1613 16 view .LVU136
 581 00ce D8F80030 		ldr	r3, [r8]
1613:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    // We must update former begin bucket that is pointing to
 582              		.loc 9 1613 4 view .LVU137
 583 00d2 3BB1     		cbz	r3, .L29
 584              	.LVL38:
 585              	.LBB2471:
 586              	.LBI2471:
 677:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __hash_code_base::_M_bucket_index(__n, _M_bucket_count); }
 587              		.loc 9 677 7 is_stmt 1 view .LVU138
 588              	.LBB2472:
 589              	.LBB2473:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 113


 590              	.LBI2473:
1303:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	noexcept( noexcept(declval<const _H1&>()(declval<const _Key&>()))
 591              		.loc 10 1303 7 view .LVU139
 592              	.LBB2474:
 593              	.LBB2475:
 594              	.LBI2475:
 595              		.loc 14 153 3 view .LVU140
 596              	.LBB2476:
 597              		.loc 14 153 3 view .LVU141
 598              		.loc 14 153 3 is_stmt 0 view .LVU142
 599              	.LBE2476:
 600              	.LBE2475:
 601              	.LBB2477:
 602              	.LBI2477:
 431:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	       second_argument_type __den) const noexcept
 603              		.loc 10 431 5 is_stmt 1 view .LVU143
 604              	.LBB2478:
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 605              		.loc 10 433 7 view .LVU144
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 606              		.loc 10 433 22 is_stmt 0 view .LVU145
 607 00d4 5B68     		ldr	r3, [r3, #4]
 608 00d6 6168     		ldr	r1, [r4, #4]
 609 00d8 B3FBF1F0 		udiv	r0, r3, r1
 610 00dc 01FB1033 		mls	r3, r1, r0, r3
 611              	.LBE2478:
 612              	.LBE2477:
 613              	.LBE2474:
 614              	.LBE2473:
 615              	.LBE2472:
 616              	.LBE2471:
1616:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  _M_buckets[__bkt] = &_M_before_begin;
 617              		.loc 9 1616 53 view .LVU146
 618 00e0 46F82380 		str	r8, [r6, r3, lsl #2]
 619              	.L29:
1617:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
 620              		.loc 9 1617 25 view .LVU147
 621 00e4 04F10803 		add	r3, r4, #8
1617:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
 622              		.loc 9 1617 22 view .LVU148
 623 00e8 1360     		str	r3, [r2]
 624 00ea AAE7     		b	.L28
 625              	.LVL39:
 626              	.L43:
1617:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	}
 627              		.loc 9 1617 22 view .LVU149
 628              	.LBE2479:
 629              	.LBE2546:
 630              	.LBB2547:
 631              	.LBB2536:
 632              	.LBB2534:
 633              	.LBB2530:
2102:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      _M_before_begin._M_nxt = __p;
 634              		.loc 9 2102 38 view .LVU150
 635 00ec A368     		ldr	r3, [r4, #8]
2102:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      _M_before_begin._M_nxt = __p;
 636              		.loc 9 2102 20 view .LVU151
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 114


 637 00ee 2B60     		str	r3, [r5]
2103:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      __new_buckets[__bkt] = &_M_before_begin;
 638              		.loc 9 2103 31 view .LVU152
 639 00f0 2346     		mov	r3, r4
 640 00f2 43F8085F 		str	r5, [r3, #8]!
2104:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      if (__p->_M_nxt)
 641              		.loc 9 2104 29 view .LVU153
 642 00f6 46F82130 		str	r3, [r6, r1, lsl #2]
2105:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		__new_buckets[__bbegin_bkt] = __p;
 643              		.loc 9 2105 8 view .LVU154
 644 00fa 2B68     		ldr	r3, [r5]
 645 00fc 2BB1     		cbz	r3, .L30
2106:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	      __bbegin_bkt = __bkt;
 646              		.loc 9 2106 31 view .LVU155
 647 00fe 46F82050 		str	r5, [r6, r0, lsl #2]
2107:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    }
 648              		.loc 9 2107 21 view .LVU156
 649 0102 0846     		mov	r0, r1
 650              	.LVL40:
2107:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    }
 651              		.loc 9 2107 21 view .LVU157
 652              	.LBE2530:
2095:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
 653              		.loc 9 2095 14 is_stmt 1 view .LVU158
 654 0104 002A     		cmp	r2, #0
 655 0106 B9D1     		bne	.L23
 656              	.LVL41:
2095:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
 657              		.loc 9 2095 14 is_stmt 0 view .LVU159
 658 0108 C9E7     		b	.L22
 659              	.LVL42:
 660              	.L30:
 661              	.LBB2531:
2107:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    }
 662              		.loc 9 2107 21 view .LVU160
 663 010a 0846     		mov	r0, r1
 664              	.LVL43:
2107:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    }
 665              		.loc 9 2107 21 view .LVU161
 666              	.LBE2531:
2095:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
 667              		.loc 9 2095 14 is_stmt 1 view .LVU162
 668 010c 002A     		cmp	r2, #0
 669 010e B5D1     		bne	.L23
 670              	.LVL44:
2095:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{
 671              		.loc 9 2095 14 is_stmt 0 view .LVU163
 672 0110 C5E7     		b	.L22
 673              	.LVL45:
 674              	.L41:
 675              	.LBB2532:
 676              	.LBB2504:
 394:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    return &_M_single_bucket;
 677              		.loc 9 394 23 view .LVU164
 678 0112 2646     		mov	r6, r4
 679 0114 0023     		movs	r3, #0
 680 0116 46F8183F 		str	r3, [r6, #24]!
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 115


 395:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  }
 681              		.loc 9 395 14 view .LVU165
 682 011a B446     		mov	ip, r6
 683 011c AAE7     		b	.L20
 684              	.LVL46:
 685              	.L42:
 686              	.LBB2503:
 687              	.LBB2502:
 688              	.LBB2501:
 689              	.LBB2497:
 690              	.LBB2495:
 106:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 691              		.loc 12 106 26 view .LVU166
 692 011e FFF7FEFF 		bl	_ZSt17__throw_bad_allocv
 693              	.LVL47:
 694              	.LBE2495:
 695              	.LBE2497:
 696              	.LBE2501:
 697              	.LBE2502:
 698              	.LBE2503:
 699              	.LBE2504:
 700              	.LBE2532:
 701              	.LBE2534:
 702              	.LBE2536:
 703              	.LBE2547:
 704              		.cfi_endproc
 705              	.LFE6585:
 707 0122 00BF     		.section	.rodata._ZN15ParameterConfig13setParametersEv.str1.4,"aMS",%progbits,1
 708              		.align	2
 709              	.LC0:
 710 0000 506F7420 		.ascii	"Pot 1\000"
 710      3100
 711              		.section	.text._ZN15ParameterConfig13setParametersEv,"axG",%progbits,_ZN15ParameterConfig13setPara
 712              		.align	1
 713              		.p2align 2,,3
 714              		.weak	_ZN15ParameterConfig13setParametersEv
 715              		.syntax unified
 716              		.thumb
 717              		.thumb_func
 718              		.fpu fpv5-d16
 720              	_ZN15ParameterConfig13setParametersEv:
 721              	.LVL48:
 722              	.LFB5383:
 723              		.file 15 "src/parameter_controller.h"
   1:src/parameter_controller.h **** #ifndef _PARAMETER_CONTROLER_H_
   2:src/parameter_controller.h **** #define _PARAMETER_CONTROLER_H_
   3:src/parameter_controller.h **** 
   4:src/parameter_controller.h **** #include <string>
   5:src/parameter_controller.h **** #include <unordered_map>
   6:src/parameter_controller.h **** #include <iterator>
   7:src/parameter_controller.h **** #include <math.h>
   8:src/parameter_controller.h **** #include <algorithm>
   9:src/parameter_controller.h **** 
  10:src/parameter_controller.h **** #include "daisy.h"
  11:src/parameter_controller.h **** #include "daisysp.h"
  12:src/parameter_controller.h **** #include "daisy_seed.h"
  13:src/parameter_controller.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 116


  14:src/parameter_controller.h **** //#include "json.hpp"
  15:src/parameter_controller.h **** 
  16:src/parameter_controller.h **** //using json = nlohmann::json;
  17:src/parameter_controller.h **** 
  18:src/parameter_controller.h **** enum param_type {
  19:src/parameter_controller.h ****     kPot,
  20:src/parameter_controller.h ****     kSwitch,
  21:src/parameter_controller.h ****     kStatus
  22:src/parameter_controller.h **** };
  23:src/parameter_controller.h **** 
  24:src/parameter_controller.h **** enum param_scale {
  25:src/parameter_controller.h ****     kLin,
  26:src/parameter_controller.h ****     kLog,
  27:src/parameter_controller.h ****     kRlog
  28:src/parameter_controller.h **** };
  29:src/parameter_controller.h **** 
  30:src/parameter_controller.h **** struct param_config {
  31:src/parameter_controller.h ****     std::string label;
  32:src/parameter_controller.h ****     std::string type;
  33:src/parameter_controller.h ****     std::string scale;
  34:src/parameter_controller.h ****     float min, max;
  35:src/parameter_controller.h **** };
  36:src/parameter_controller.h **** 
  37:src/parameter_controller.h **** struct param {
  38:src/parameter_controller.h **** 	std::string label;
  39:src/parameter_controller.h **** 	std::string type;
  40:src/parameter_controller.h ****     std::string scale;
  41:src/parameter_controller.h ****     int index;
  42:src/parameter_controller.h **** 	float val;
  43:src/parameter_controller.h ****     float min, max;
  44:src/parameter_controller.h **** 
  45:src/parameter_controller.h ****     bool operator<(const param& p) const
  46:src/parameter_controller.h ****     {
  47:src/parameter_controller.h ****         if (index < p.index)
  48:src/parameter_controller.h ****             return true;
  49:src/parameter_controller.h ****         else return false;
  50:src/parameter_controller.h ****     }
  51:src/parameter_controller.h ****     bool operator==(const param& p) const
  52:src/parameter_controller.h ****     {
  53:src/parameter_controller.h ****         if (label == p.label && type == p.type && val == p.val)
  54:src/parameter_controller.h ****             return true;
  55:src/parameter_controller.h ****         else return false;
  56:src/parameter_controller.h ****     }
  57:src/parameter_controller.h **** };
  58:src/parameter_controller.h **** 
  59:src/parameter_controller.h **** // float normalize(uint16_t value, float min, float max)
  60:src/parameter_controller.h **** //     {
  61:src/parameter_controller.h **** //         int outputLimit = 256;
  62:src/parameter_controller.h **** 
  63:src/parameter_controller.h **** //         float range = (max - min);// - float.Epsilon; // Here we shorten the range slightly
  64:src/parameter_controller.h **** 
  65:src/parameter_controller.h **** //         // Then we build a range such that value >= 0 and value < 1
  66:src/parameter_controller.h **** //         float rangedValue = (value - min) / range;
  67:src/parameter_controller.h **** 
  68:src/parameter_controller.h **** //         return min + (int)(outputLimit * rangedValue);
  69:src/parameter_controller.h **** //     }
  70:src/parameter_controller.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 117


  71:src/parameter_controller.h **** template<class T>
  72:src/parameter_controller.h **** constexpr const T& clamp( const T& v, const T& lo, const T& hi )
  73:src/parameter_controller.h **** {
  74:src/parameter_controller.h ****     int outputLimit = 256;
  75:src/parameter_controller.h ****     float range = (hi - lo);// - float.Epsilon;
  76:src/parameter_controller.h ****     float rangedValue = (v - lo) / range;
  77:src/parameter_controller.h ****     return lo + (int)(outputLimit * rangedValue);
  78:src/parameter_controller.h **** }
  79:src/parameter_controller.h **** 
  80:src/parameter_controller.h **** 
  81:src/parameter_controller.h **** template<class T>
  82:src/parameter_controller.h **** constexpr const float clamp( const float v, const float lo, const float hi )
  83:src/parameter_controller.h **** {
  84:src/parameter_controller.h ****     int outputLimit = 256;
  85:src/parameter_controller.h ****     float range = (hi - lo);// - float.Epsilon;
  86:src/parameter_controller.h ****     float rangedValue = (v - lo) / range;
  87:src/parameter_controller.h ****     return lo + (int)(outputLimit * rangedValue);
  88:src/parameter_controller.h **** }
  89:src/parameter_controller.h **** 
  90:src/parameter_controller.h **** class ParameterMap {
  91:src/parameter_controller.h **** 
  92:src/parameter_controller.h **** private:
  93:src/parameter_controller.h ****     std::unordered_map<int, param> map;
  94:src/parameter_controller.h ****     std::unordered_map<int, param>::iterator map_iter;
  95:src/parameter_controller.h **** 
  96:src/parameter_controller.h **** public: 
  97:src/parameter_controller.h ****     ParameterMap() {};
  98:src/parameter_controller.h ****     ~ParameterMap() {};
  99:src/parameter_controller.h **** 
 100:src/parameter_controller.h ****     void insert(param p) {
 101:src/parameter_controller.h ****         int index = p.index;
 102:src/parameter_controller.h **** 
 103:src/parameter_controller.h ****         map.insert(std::make_pair(index, p));
 104:src/parameter_controller.h ****     }
 105:src/parameter_controller.h **** 
 106:src/parameter_controller.h ****     void updateMap(param p) {
 107:src/parameter_controller.h ****         map[p.index] = p;
 108:src/parameter_controller.h ****     }
 109:src/parameter_controller.h **** 
 110:src/parameter_controller.h ****     void setValueAtIndex(uint16_t val, uint16_t index) {
 111:src/parameter_controller.h ****         param curr = map[index];
 112:src/parameter_controller.h ****         curr.val = val;
 113:src/parameter_controller.h ****         map[index] = curr;
 114:src/parameter_controller.h ****     }
 115:src/parameter_controller.h **** 
 116:src/parameter_controller.h ****     float getValue(int index) {
 117:src/parameter_controller.h ****         float val = map.at(index).val;//map[idx];//map.at(idx).val;
 118:src/parameter_controller.h **** 		return val;
 119:src/parameter_controller.h ****     }  
 120:src/parameter_controller.h **** };
 121:src/parameter_controller.h **** 
 122:src/parameter_controller.h **** class ParameterConfig : public ParameterMap {
 123:src/parameter_controller.h **** 
 124:src/parameter_controller.h ****     protected:
 125:src/parameter_controller.h ****         param_config pconf[10];
 126:src/parameter_controller.h ****         param params[10];
 127:src/parameter_controller.h ****     public:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 118


 128:src/parameter_controller.h **** 
 129:src/parameter_controller.h ****         virtual void setParameters() {
 724              		.loc 15 129 22 is_stmt 1 view -0
 725              		.cfi_startproc
 726              		@ args = 0, pretend = 0, frame = 0
 727              		@ frame_needed = 0, uses_anonymous_args = 0
 130:src/parameter_controller.h **** 
 131:src/parameter_controller.h ****             pconf[0].label = "Pot 1";
 728              		.loc 15 131 13 view .LVU168
 729              	.LBB2580:
 730              	.LBB2581:
 731              	.LBB2582:
 732              		.file 16 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
   1:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // Components for manipulating sequences of characters -*- C++ -*-
   2:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
   3:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** //
   5:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // software; you can redistribute it and/or modify it under the
   7:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // terms of the GNU General Public License as published by the
   8:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // any later version.
  10:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  11:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // This library is distributed in the hope that it will be useful,
  12:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // GNU General Public License for more details.
  15:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  16:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  20:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // You should have received a copy of the GNU General Public License and
  21:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // <http://www.gnu.org/licenses/>.
  24:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  25:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** /** @file bits/basic_string.h
  26:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****  *  This is an internal header file, included by other library headers.
  27:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****  *  Do not attempt to use it directly. @headername{string}
  28:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****  */
  29:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  30:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** //
  31:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** // ISO C++ 14882: 21 Strings library
  32:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** //
  33:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  34:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #ifndef _BASIC_STRING_H
  35:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #define _BASIC_STRING_H 1
  36:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  37:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #pragma GCC system_header
  38:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  39:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #include <ext/atomicity.h>
  40:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #include <ext/alloc_traits.h>
  41:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #include <debug/debug.h>
  42:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  43:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
  44:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #include <initializer_list>
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 119


  45:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
  46:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  47:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
  48:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** # include <string_view>
  49:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
  50:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  51:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  52:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** namespace std _GLIBCXX_VISIBILITY(default)
  53:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** {
  54:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  55:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  56:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if _GLIBCXX_USE_CXX11_ABI
  57:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_CXX11
  58:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   /**
  59:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @class basic_string basic_string.h <string>
  60:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @brief  Managing sequences of characters and character-like objects.
  61:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
  62:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @ingroup strings
  63:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @ingroup sequences
  64:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
  65:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @tparam _CharT  Type of character
  66:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @tparam _Traits  Traits for character type, defaults to
  67:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *                   char_traits<_CharT>.
  68:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_CharT>.
  69:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *
  70:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
  71:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  <a href="tables.html#66">reversible container</a>, and a
  72:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  <a href="tables.html#67">sequence</a>.  Of the
  73:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  <a href="tables.html#68">optional sequence requirements</a>, only
  74:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    *  @c push_back, @c at, and @c %array access are supported.
  75:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****    */
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
  77:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     class basic_string
  78:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     {
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  80:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	rebind<_CharT>::other _Char_alloc_type;
  81:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef __gnu_cxx::__alloc_traits<_Char_alloc_type> _Alloc_traits;
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
  83:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Types:
  84:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
  85:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef _Traits					traits_type;
  86:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Traits::char_type		value_type;
  87:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef _Char_alloc_type				allocator_type;
  88:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Alloc_traits::size_type		size_type;
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Alloc_traits::difference_type	difference_type;
  90:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Alloc_traits::reference		reference;
  91:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Alloc_traits::const_reference	const_reference;
  92:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Alloc_traits::pointer		pointer;
  93:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef typename _Alloc_traits::const_pointer	const_pointer;
  94:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;
  95:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string>
  96:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 							const_iterator;
  97:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
  98:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef std::reverse_iterator<iterator>		reverse_iterator;
  99:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 100:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  Value returned by various member functions when they fail.
 101:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static const size_type	npos = static_cast<size_type>(-1);
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 120


 102:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 103:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     protected:
 104:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // type used for positions in insert, erase etc.
 105:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus < 201103L
 106:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef iterator __const_iterator;
 107:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 108:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef const_iterator __const_iterator;
 109:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 110:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 111:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     private:
 112:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
 113:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // A helper type for avoiding boiler-plate.
 114:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       typedef basic_string_view<_CharT, _Traits> __sv_type;
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 116:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp, typename _Res>
 117:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	using _If_sv = enable_if_t<
 118:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __and_<is_convertible<const _Tp&, __sv_type>,
 119:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		 __not_<is_convertible<const _Tp*, const basic_string*>>,
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		 __not_<is_convertible<const _Tp&, const _CharT*>>>::value,
 121:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _Res>;
 122:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 123:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Allows an implicit conversion to __sv_type.
 124:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static __sv_type
 125:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_to_string_view(__sv_type __svt) noexcept
 126:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __svt; }
 127:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 128:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Wraps a string_view by explicit conversion and thus
 129:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // allows to add an internal constructor that does not
 130:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // participate in overload resolution when a string_view
 131:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // is provided.
 132:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       struct __sv_wrapper
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 134:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	explicit __sv_wrapper(__sv_type __sv) noexcept : _M_sv(__sv) { }
 135:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__sv_type _M_sv;
 136:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       };
 137:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 138:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 139:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Only internally used: Construct string from a string view
 140:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *          wrapper.
 141:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __svw  string view wrapper.
 142:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use.
 143:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       explicit
 145:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(__sv_wrapper __svw, const _Alloc& __a)
 146:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 148:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 149:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       struct _Alloc_hider : allocator_type // TODO check __is_final
 151:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 152:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus < 201103L
 153:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_Alloc_hider(pointer __dat, const _Alloc& __a = _Alloc())
 154:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 155:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 156:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_Alloc_hider(pointer __dat, const _Alloc& __a)
 157:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 158:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 121


 159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_Alloc_hider(pointer __dat, _Alloc&& __a = _Alloc())
 160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 161:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 162:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 163:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	pointer _M_p; // The actual data.
 164:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       };
 165:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 166:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _Alloc_hider	_M_dataplus;
 167:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type		_M_string_length;
 168:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 169:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       enum { _S_local_capacity = 15 / sizeof(_CharT) };
 170:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 171:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       union
 172:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 173:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_CharT           _M_local_buf[_S_local_capacity + 1];
 174:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	size_type        _M_allocated_capacity;
 175:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       };
 176:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 177:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 178:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_data(pointer __p)
 179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 180:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 181:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 182:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_length(size_type __length)
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 184:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 185:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       pointer
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_data() const
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 188:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 189:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       pointer
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_local_data()
 191:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 192:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 193:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return std::pointer_traits<pointer>::pointer_to(*_M_local_buf);
 194:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 195:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return pointer(_M_local_buf);
 196:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 197:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 198:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 199:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_pointer
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_local_data() const
 201:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 202:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 203:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
 204:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 205:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return const_pointer(_M_local_buf);
 206:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 207:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 208:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 209:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 210:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_capacity(size_type __capacity)
 211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 212:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 213:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 214:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_set_length(size_type __n)
 215:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 122


 216:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_length(__n);
 217:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	traits_type::assign(_M_data()[__n], _CharT());
 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 219:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 220:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_is_local() const
 222:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 223:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 224:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Create & Destroy
 225:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       pointer
 226:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_create(size_type&, size_type);
 227:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 228:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_dispose()
 230:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (!_M_is_local())
 232:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 233:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 234:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 235:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_destroy(size_type __size) throw()
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 238:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 239:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _M_construct_aux is used to implement the 21.3.1 para 15 which
 240:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // requires special behaviour if _InIterator is an integral type
 241:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _InIterator>
 242:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
 243:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _M_construct_aux(_InIterator __beg, _InIterator __end,
 244:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 245:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 246:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           typedef typename iterator_traits<_InIterator>::iterator_category _Tag;
 247:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           _M_construct(__beg, __end, _Tag());
 248:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
 249:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 250:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 251:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 438. Ambiguity in the "do the right thing" clause
 252:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Integer>
 253:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
 254:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _M_construct_aux(_Integer __beg, _Integer __end, std::__true_type)
 255:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{ _M_construct_aux_2(static_cast<size_type>(__beg), __end); }
 256:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 257:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 258:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_construct_aux_2(size_type __req, _CharT __c)
 259:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__req, __c); }
 260:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 261:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _InIterator>
 262:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
 263:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _M_construct(_InIterator __beg, _InIterator __end)
 264:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 265:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  typedef typename std::__is_integer<_InIterator>::__type _Integral;
 266:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_construct_aux(__beg, __end, _Integral());
 267:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         }
 268:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 269:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // For Input Iterators, used in istreambuf_iterators, etc.
 270:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _InIterator>
 271:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
 272:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _M_construct(_InIterator __beg, _InIterator __end,
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 123


 273:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     std::input_iterator_tag);
 274:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 275:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // For forward_iterators up to random_access_iterators, used for
 276:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // string::iterator, _CharT*, etc.
 277:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _FwdIterator>
 278:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         void
 279:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _M_construct(_FwdIterator __beg, _FwdIterator __end,
 280:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     std::forward_iterator_tag);
 281:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 282:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 283:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_construct(size_type __req, _CharT __c);
 284:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 285:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       allocator_type&
 286:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_get_allocator()
 287:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 288:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 289:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const allocator_type&
 290:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_get_allocator() const
 291:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 292:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 293:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     private:
 294:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 295:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #ifdef _GLIBCXX_DISAMBIGUATE_REPLACE_INST
 296:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // The explicit instantiations in misc-inst.cc require this due to
 297:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // https://gcc.gnu.org/bugzilla/show_bug.cgi?id=64063
 298:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp, bool _Requires =
 299:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       !__are_same<_Tp, _CharT*>::__value
 300:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       && !__are_same<_Tp, const _CharT*>::__value
 301:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       && !__are_same<_Tp, iterator>::__value
 302:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       && !__are_same<_Tp, const_iterator>::__value>
 303:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	struct __enable_if_not_native_iterator
 304:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{ typedef basic_string& __type; };
 305:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
 306:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	struct __enable_if_not_native_iterator<_Tp, false> { };
 307:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 308:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 309:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
 310:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_check(size_type __pos, const char* __s) const
 311:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 312:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__pos > this->size())
 313:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
 314:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "this->size() (which is %zu)"),
 315:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   __s, __pos, this->size());
 316:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return __pos;
 317:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 318:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 319:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 320:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_check_length(size_type __n1, size_type __n2, const char* __s) const
 321:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (this->max_size() - (this->size() - __n1) < __n2)
 323:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __throw_length_error(__N(__s));
 324:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 325:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 326:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 327:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // NB: _M_limit doesn't check for a bad __pos value.
 328:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
 329:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_limit(size_type __pos, size_type __off) const _GLIBCXX_NOEXCEPT
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 124


 330:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 331:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const bool __testoff =  __off < this->size() - __pos;
 332:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return __testoff ? __off : this->size() - __pos;
 333:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 334:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 335:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // True if _Rep and source do not overlap.
 336:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       bool
 337:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_disjunct(const _CharT* __s) const _GLIBCXX_NOEXCEPT
 338:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 339:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return (less<const _CharT*>()(__s, _M_data())
 340:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		|| less<const _CharT*>()(_M_data() + this->size(), __s));
 341:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 342:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 343:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // When __n = 1 way faster than the general multichar
 344:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // traits_type::copy/move/assign.
 345:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 346:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy(_CharT* __d, const _CharT* __s, size_type __n)
 347:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 348:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n == 1)
 349:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 350:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
 351:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::copy(__d, __s, __n);
 352:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 353:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 354:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 355:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_move(_CharT* __d, const _CharT* __s, size_type __n)
 356:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 357:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n == 1)
 358:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 359:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
 360:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::move(__d, __s, __n);
 361:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 362:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 363:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 364:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_assign(_CharT* __d, size_type __n, _CharT __c)
 365:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 366:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n == 1)
 367:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, __c);
 368:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
 369:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(__d, __n, __c);
 370:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 371:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 372:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _S_copy_chars is a separate template to permit specialization
 373:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // to optimize for the common case of pointers as iterators.
 374:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _Iterator>
 375:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         static void
 376:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _S_copy_chars(_CharT* __p, _Iterator __k1, _Iterator __k2)
 377:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         {
 378:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  for (; __k1 != __k2; ++__k1, (void)++__p)
 379:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    traits_type::assign(*__p, *__k1); // These types are off.
 380:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
 381:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 382:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 383:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, iterator __k1, iterator __k2) _GLIBCXX_NOEXCEPT
 384:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 385:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 386:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 125


 387:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, const_iterator __k1, const_iterator __k2)
 388:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 389:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 390:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 391:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 392:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, _CharT* __k1, _CharT* __k2) _GLIBCXX_NOEXCEPT
 393:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 394:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 395:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static void
 396:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)
 397:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT
 398:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 399:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 400:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       static int
 401:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _S_compare(size_type __n1, size_type __n2) _GLIBCXX_NOEXCEPT
 402:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 403:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const difference_type __d = difference_type(__n1 - __n2);
 404:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 405:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
 406:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__max;
 407:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else if (__d < __gnu_cxx::__numeric_traits<int>::__min)
 408:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__min;
 409:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
 410:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return int(__d);
 411:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 412:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 413:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 414:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_assign(const basic_string&);
 415:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 416:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 417:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_mutate(size_type __pos, size_type __len1, const _CharT* __s,
 418:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		size_type __len2);
 419:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 420:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 421:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _M_erase(size_type __pos, size_type __n);
 422:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 423:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
 424:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Construct/copy/destroy:
 425:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // NB: We overload ctors in some cases instead of using default
 426:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // arguments, per 17.4.4.4 para. 2 item 2.
 427:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 428:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 429:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Default constructor creates an empty string.
 430:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 431:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string()
 432:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(is_nothrow_default_constructible<_Alloc>::value)
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data())
 434:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_set_length(0); }
 435:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 436:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 437:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct an empty string using allocator @a a.
 438:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 439:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       explicit
 440:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const _Alloc& __a) _GLIBCXX_NOEXCEPT
 441:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 442:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_set_length(0); }
 443:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 126


 444:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 445:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string with copy of value of @a __str.
 446:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 447:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 448:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str)
 449:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(),
 450:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _Alloc_traits::_S_select_on_copy(__str._M_get_allocator()))
 451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__str._M_data(), __str._M_data() + __str.length()); }
 452:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 453:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 454:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 2583. no way to supply an allocator for basic_string(str, pos)
 455:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 456:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a substring.
 457:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 458:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 459:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use.
 460:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 461:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 462:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   const _Alloc& __a = _Alloc())
 463:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 464:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 465:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const _CharT* __start = __str._M_data()
 466:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  + __str._M_check(__pos, "basic_string::basic_string");
 467:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, npos));
 468:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 469:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 470:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 471:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a substring.
 472:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 473:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 474:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters to copy.
 475:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 476:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 477:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   size_type __n)
 478:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data())
 479:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 480:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const _CharT* __start = __str._M_data()
 481:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  + __str._M_check(__pos, "basic_string::basic_string");
 482:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, __n));
 483:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 484:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 485:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 486:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a substring.
 487:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 488:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 489:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters to copy.
 490:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use.
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 492:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 493:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   size_type __n, const _Alloc& __a)
 494:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 495:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 496:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const _CharT* __start
 497:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  = __str._M_data() + __str._M_check(__pos, "string::string");
 498:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, __n));
 499:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 500:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 127


 501:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 502:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string initialized by a character %array.
 503:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __s  Source character %array.
 504:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters to copy.
 505:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 506:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 507:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  NB: @a __s must have at least @a __n characters, &apos;\\0&apos;
 508:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  has no special meaning.
 509:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 510:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const _CharT* __s, size_type __n,
 511:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		   const _Alloc& __a = _Alloc())
 512:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 513:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__s, __s + __n); }
 514:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 515:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 516:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a C string.
 517:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __s  Source C string.
 518:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 519:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 520:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cpp_deduction_guides && ! defined _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
 521:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 522:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 3076. basic_string CTAD ambiguity
 523:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename = _RequireAllocator<_Alloc>>
 524:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 525:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
 526:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 527:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
 528:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 529:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 530:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as multiple characters.
 531:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters.
 532:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __c  Character to use.
 533:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 534:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 535:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cpp_deduction_guides && ! defined _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
 536:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 537:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 3076. basic_string CTAD ambiguity
 538:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename = _RequireAllocator<_Alloc>>
 539:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 540:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(size_type __n, _CharT __c, const _Alloc& __a = _Alloc())
 541:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 542:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__n, __c); }
 543:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 544:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 545:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 546:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Move construct string.
 547:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 548:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 549:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The newly-created string contains the exact contents of @a __str.
 550:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __str is a valid, but unspecified string.
 551:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        **/
 552:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(basic_string&& __str) noexcept
 553:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 554:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 555:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__str._M_is_local())
 556:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 557:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    traits_type::copy(_M_local_buf, __str._M_local_buf,
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 128


 558:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			      _S_local_capacity + 1);
 559:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 560:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
 561:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 562:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_data(__str._M_data());
 563:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 564:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 565:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 566:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// Must use _M_length() here not _M_set_length() because
 567:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// basic_stringbuf relies on writing into unallocated capacity so
 568:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// we mess up the contents if we put a '\0' in the string.
 569:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_length(__str.length());
 570:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__str._M_data(__str._M_local_data());
 571:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__str._M_set_length(0);
 572:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 573:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 574:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 575:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string from an initializer %list.
 576:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __l  std::initializer_list of characters.
 577:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 578:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 579:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(initializer_list<_CharT> __l, const _Alloc& __a = _Alloc())
 580:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 581:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__l.begin(), __l.end()); }
 582:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 583:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(const basic_string& __str, const _Alloc& __a)
 584:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 585:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_construct(__str.begin(), __str.end()); }
 586:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 587:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string(basic_string&& __str, const _Alloc& __a)
 588:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       noexcept(_Alloc_traits::_S_always_equal())
 589:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 590:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 591:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__str._M_is_local())
 592:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 593:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    traits_type::copy(_M_local_buf, __str._M_local_buf,
 594:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			      _S_local_capacity + 1);
 595:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_length(__str.length());
 596:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    __str._M_set_length(0);
 597:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 598:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else if (_Alloc_traits::_S_always_equal()
 599:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    || __str.get_allocator() == __a)
 600:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 601:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_data(__str._M_data());
 602:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_length(__str.length());
 603:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 604:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    __str._M_data(__str._M_local_buf);
 605:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    __str._M_set_length(0);
 606:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 607:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else
 608:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_construct(__str.begin(), __str.end());
 609:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 610:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 611:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
 612:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 613:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 614:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string as copy of a range.
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 129


 615:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __beg  Start of range.
 616:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __end  End of range.
 617:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 618:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 619:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 620:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _InputIterator,
 621:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 622:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 623:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _InputIterator>
 624:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 625:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         basic_string(_InputIterator __beg, _InputIterator __end,
 626:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     const _Alloc& __a = _Alloc())
 627:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: _M_dataplus(_M_local_data(), __a)
 628:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{ _M_construct(__beg, __end); }
 629:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 630:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
 631:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 632:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string from a substring of a string_view.
 633:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __t   Source object convertible to string view.
 634:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos The index of the first character to copy from __t.
 635:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n   The number of characters to copy from __t.
 636:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a   Allocator to use.
 637:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 638:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
 639:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	basic_string(const _Tp& __t, size_type __pos, size_type __n,
 640:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		     const _Alloc& __a = _Alloc())
 641:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: basic_string(_S_to_string_view(__t).substr(__pos, __n), __a) { }
 642:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 643:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 644:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Construct string from a string_view.
 645:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __t  Source object convertible to string view.
 646:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 647:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 648:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
 649:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	explicit
 650:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	basic_string(const _Tp& __t, const _Alloc& __a = _Alloc())
 651:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: basic_string(__sv_wrapper(_S_to_string_view(__t)), __a) { }
 652:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
 653:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 654:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 655:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Destroy the string instance.
 656:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ~basic_string()
 658:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 659:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 660:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 661:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Assign the value of @a str to this string.
 662:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 663:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 664:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
 665:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(const basic_string& __str)
 666:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 667:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return this->assign(__str);
 668:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 669:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 670:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 671:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Copy contents of @a s into this string.
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 130


 672:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __s  Source null-terminated string.
 673:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 674:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
 675:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(const _CharT* __s)
 676:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->assign(__s); }
 677:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 678:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 679:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to string of length 1.
 680:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __c  Source character.
 681:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 682:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Assigning to a character makes this string length 1 and
 683:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  (*this)[0] == @a c.
 684:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 685:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
 686:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(_CharT __c)
 687:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 688:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->assign(1, __c);
 689:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
 690:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 691:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 692:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 693:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 694:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Move assign the value of @a str to this string.
 695:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string.
 696:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 697:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The contents of @a str are moved into this string (without copying).
 698:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a str is a valid, but unspecified string.
 699:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        **/
 700:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 701:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // 2063. Contradictory requirements for string move assignment
 702:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
 703:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(basic_string&& __str)
 704:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       noexcept(_Alloc_traits::_S_nothrow_move())
 705:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 706:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (!_M_is_local() && _Alloc_traits::_S_propagate_on_move_assign()
 707:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    && !_Alloc_traits::_S_always_equal()
 708:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    && _M_get_allocator() != __str._M_get_allocator())
 709:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 710:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    // Destroy existing storage before replacing allocator.
 711:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_destroy(_M_allocated_capacity);
 712:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_data(_M_local_data());
 713:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_set_length(0);
 714:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 715:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// Replace allocator if POCMA is true.
 716:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	std::__alloc_on_move(_M_get_allocator(), __str._M_get_allocator());
 717:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 718:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__str._M_is_local())
 719:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 720:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    // We've always got room for a short string, just copy it.
 721:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    if (__str.size())
 722:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      this->_S_copy(_M_data(), __str._M_data(), __str.size());
 723:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_set_length(__str.size());
 724:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 725:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else if (_Alloc_traits::_S_propagate_on_move_assign()
 726:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    || _Alloc_traits::_S_always_equal()
 727:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    || _M_get_allocator() == __str._M_get_allocator())
 728:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 131


 729:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    // Just move the allocated pointer, our allocator can free it.
 730:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    pointer __data = nullptr;
 731:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    size_type __capacity;
 732:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    if (!_M_is_local())
 733:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      {
 734:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		if (_Alloc_traits::_S_always_equal())
 735:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  {
 736:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    // __str can reuse our existing storage.
 737:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    __data = _M_data();
 738:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    __capacity = _M_allocated_capacity;
 739:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  }
 740:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		else // __str can't use it, so free it.
 741:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  _M_destroy(_M_allocated_capacity);
 742:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      }
 743:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 744:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_data(__str._M_data());
 745:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_length(__str.length());
 746:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 747:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    if (__data)
 748:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      {
 749:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		__str._M_data(__data);
 750:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		__str._M_capacity(__capacity);
 751:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      }
 752:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    else
 753:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      __str._M_data(__str._M_local_buf);
 754:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 755:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	else // Need to do a deep copy
 756:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  assign(__str);
 757:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__str.clear();
 758:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
 759:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 760:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 761:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 762:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to string constructed from initializer %list.
 763:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __l  std::initializer_list.
 764:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 765:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
 766:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator=(initializer_list<_CharT> __l)
 767:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 768:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->assign(__l.begin(), __l.size());
 769:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
 770:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 771:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
 772:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 773:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
 774:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 775:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to string constructed from a string_view.
 776:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __svt  An object convertible to string_view.
 777:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 778:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****      template<typename _Tp>
 779:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        _If_sv<_Tp, basic_string&>
 780:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        operator=(const _Tp& __svt)
 781:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        { return this->assign(__svt); }
 782:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 783:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 784:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Convert to a string_view.
 785:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return A string_view.
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 132


 786:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 787:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator __sv_type() const noexcept
 788:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return __sv_type(data(), size()); }
 789:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
 790:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 791:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Iterators:
 792:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 793:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write iterator that points to the first character in
 794:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the %string.
 795:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 796:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
 797:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       begin() _GLIBCXX_NOEXCEPT
 798:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return iterator(_M_data()); }
 799:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 800:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 801:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
 802:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character in the %string.
 803:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 804:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_iterator
 805:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       begin() const _GLIBCXX_NOEXCEPT
 806:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_iterator(_M_data()); }
 807:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 808:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 809:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write iterator that points one past the last
 810:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character in the %string.
 811:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 812:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       iterator
 813:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       end() _GLIBCXX_NOEXCEPT
 814:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return iterator(_M_data() + this->size()); }
 815:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 816:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 817:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
 818:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  last character in the %string.
 819:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 820:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_iterator
 821:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       end() const _GLIBCXX_NOEXCEPT
 822:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_iterator(_M_data() + this->size()); }
 823:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 824:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 825:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write reverse iterator that points to the last
 826:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character in the %string.  Iteration is done in reverse element
 827:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  order.
 828:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 829:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reverse_iterator
 830:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rbegin() _GLIBCXX_NOEXCEPT
 831:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return reverse_iterator(this->end()); }
 832:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 833:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 834:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 835:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to the last character in the %string.  Iteration is done in
 836:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  reverse element order.
 837:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 838:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reverse_iterator
 839:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 840:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_reverse_iterator(this->end()); }
 841:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 842:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 133


 843:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write reverse iterator that points to one before the
 844:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first character in the %string.  Iteration is done in reverse
 845:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  element order.
 846:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 847:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reverse_iterator
 848:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rend() _GLIBCXX_NOEXCEPT
 849:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return reverse_iterator(this->begin()); }
 850:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 851:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 852:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 853:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to one before the first character in the %string.  Iteration
 854:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is done in reverse element order.
 855:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 856:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reverse_iterator
 857:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       rend() const _GLIBCXX_NOEXCEPT
 858:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_reverse_iterator(this->begin()); }
 859:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 860:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 861:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 862:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
 863:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character in the %string.
 864:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 865:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_iterator
 866:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       cbegin() const noexcept
 867:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_iterator(this->_M_data()); }
 868:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 869:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 870:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
 871:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  last character in the %string.
 872:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 873:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_iterator
 874:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       cend() const noexcept
 875:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_iterator(this->_M_data() + this->size()); }
 876:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 877:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 878:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 879:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to the last character in the %string.  Iteration is done in
 880:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  reverse element order.
 881:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 882:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reverse_iterator
 883:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       crbegin() const noexcept
 884:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_reverse_iterator(this->end()); }
 885:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 886:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 887:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 888:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  to one before the first character in the %string.  Iteration
 889:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is done in reverse element order.
 890:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 891:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reverse_iterator
 892:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       crend() const noexcept
 893:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return const_reverse_iterator(this->begin()); }
 894:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 895:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 896:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****     public:
 897:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Capacity:
 898:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  Returns the number of characters in the string, not including any
 899:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  null-termination.
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 134


 900:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
 901:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size() const _GLIBCXX_NOEXCEPT
 902:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 903:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 904:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  Returns the number of characters in the string, not including any
 905:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  null-termination.
 906:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
 907:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       length() const _GLIBCXX_NOEXCEPT
 908:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 909:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 910:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  Returns the size() of the largest possible %string.
 911:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
 912:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       max_size() const _GLIBCXX_NOEXCEPT
 913:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return (_Alloc_traits::max_size(_M_get_allocator()) - 1) / 2; }
 914:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 915:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 916:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
 917:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
 918:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __c  Character to fill any new elements.
 919:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 920:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function will %resize the %string to the specified
 921:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  number of characters.  If the number is smaller than the
 922:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  %string's current size the %string is truncated, otherwise
 923:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the %string is extended and new elements are %set to @a __c.
 924:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 925:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 926:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       resize(size_type __n, _CharT __c);
 927:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 928:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 929:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
 930:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
 931:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 932:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function will resize the %string to the specified length.  If
 933:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  the new size is smaller than the %string's current size the %string
 934:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is truncated, otherwise the %string is extended and new characters
 935:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  are default-constructed.  For basic types such as char, this means
 936:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  setting them to 0.
 937:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 938:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 939:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       resize(size_type __n)
 940:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { this->resize(__n, _CharT()); }
 941:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 942:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
 943:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       ///  A non-binding request to reduce capacity() to size().
 944:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 945:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       shrink_to_fit() noexcept
 946:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 947:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cpp_exceptions
 948:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (capacity() > size())
 949:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 950:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    try
 951:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      { reserve(0); }
 952:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    catch(...)
 953:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      { }
 954:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
 955:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 956:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 135


 957:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 958:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 959:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 960:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns the total number of characters that the %string can hold
 961:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  before needing to allocate more memory.
 962:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 963:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       size_type
 964:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       capacity() const _GLIBCXX_NOEXCEPT
 965:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 966:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_is_local() ? size_type(_S_local_capacity)
 967:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	                     : _M_allocated_capacity;
 968:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
 969:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 970:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 971:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
 972:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *          characters.
 973:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __res_arg  Number of characters required.
 974:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::length_error  If @a __res_arg exceeds @c max_size().
 975:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 976:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function attempts to reserve enough memory for the
 977:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  %string to hold the specified number of characters.  If the
 978:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  number requested is more than max_size(), length_error is
 979:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  thrown.
 980:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
 981:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The advantage of this function is that if optimal code is a
 982:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  necessity and the user can determine the string length that will be
 983:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  required, the user can reserve the memory in %advance, and thus
 984:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  prevent a possible reallocation of memory and copying of %string
 985:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  data.
 986:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 987:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 988:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reserve(size_type __res_arg = 0);
 989:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 990:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 991:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Erases the string, making it empty.
 992:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
 993:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
 994:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       clear() _GLIBCXX_NOEXCEPT
 995:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_set_length(0); }
 996:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 997:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
 998:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns true if the %string is empty.  Equivalent to 
 999:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  <code>*this == ""</code>.
1000:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1001:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NODISCARD bool
1002:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       empty() const _GLIBCXX_NOEXCEPT
1003:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->size() == 0; }
1004:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1005:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Element access:
1006:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1007:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
1008:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  The index of the character to access.
1009:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Read-only (constant) reference to the character.
1010:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1011:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This operator allows for easy, array-style, data access.
1012:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Note that data access with this operator is unchecked and
1013:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 136


1014:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  see at().)
1015:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1016:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reference
1017:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator[] (size_type __pos) const _GLIBCXX_NOEXCEPT
1018:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1019:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(__pos <= size());
1020:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data()[__pos];
1021:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1022:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1023:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1024:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
1025:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __pos  The index of the character to access.
1026:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Read/write reference to the character.
1027:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1028:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This operator allows for easy, array-style, data access.
1029:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Note that data access with this operator is unchecked and
1030:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
1031:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  see at().)
1032:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1033:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reference
1034:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator[](size_type __pos)
1035:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1036:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         // Allow pos == size() both in C++98 mode, as v3 extension,
1037:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// and in C++11 mode.
1038:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(__pos <= size());
1039:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         // In pedantic mode be strict in C++98 mode.
1040:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__cplusplus >= 201103L || __pos < size());
1041:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data()[__pos];
1042:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1043:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1044:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1045:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
1046:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n The index of the character to access.
1047:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Read-only (const) reference to the character.
1048:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
1049:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1050:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function provides for safer data access.  The parameter is
1051:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first checked that it is in the range of the string.  The function
1052:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  throws out_of_range if the check fails.
1053:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1054:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reference
1055:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       at(size_type __n) const
1056:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1057:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n >= this->size())
1058:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
1059:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "(which is %zu) >= this->size() "
1060:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "(which is %zu)"),
1061:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   __n, this->size());
1062:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data()[__n];
1063:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1064:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1065:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1066:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
1067:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n The index of the character to access.
1068:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Read/write reference to the character.
1069:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
1070:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 137


1071:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function provides for safer data access.  The parameter is
1072:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  first checked that it is in the range of the string.  The function
1073:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  throws out_of_range if the check fails.
1074:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1075:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reference
1076:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       at(size_type __n)
1077:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1078:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__n >= size())
1079:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
1080:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "(which is %zu) >= this->size() "
1081:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				       "(which is %zu)"),
1082:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 				   __n, this->size());
1083:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_data()[__n];
1084:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1085:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1086:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1087:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1088:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write reference to the data at the first
1089:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  element of the %string.
1090:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1091:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reference
1092:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       front() noexcept
1093:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1094:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
1095:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return operator[](0);
1096:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1097:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1098:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1099:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reference to the data at the first
1100:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  element of the %string.
1101:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1102:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reference
1103:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       front() const noexcept
1104:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1105:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
1106:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return operator[](0);
1107:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1108:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1109:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1110:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read/write reference to the data at the last
1111:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  element of the %string.
1112:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1113:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       reference
1114:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       back() noexcept
1115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1116:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
1117:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return operator[](this->size() - 1);
1118:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1119:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1121:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Returns a read-only (constant) reference to the data at the
1122:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  last element of the %string.
1123:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1124:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       const_reference
1125:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       back() const noexcept
1126:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1127:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_assert(!empty());
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 138


1128:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return operator[](this->size() - 1);
1129:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1130:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
1131:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1132:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       // Modifiers:
1133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1134:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a string to this string.
1135:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to append.
1136:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1137:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1138:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1139:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator+=(const basic_string& __str)
1140:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->append(__str); }
1141:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1142:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1143:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a C string.
1144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to append.
1145:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1146:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1148:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator+=(const _CharT* __s)
1149:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->append(__s); }
1150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1151:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1152:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a character.
1153:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to append.
1154:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1155:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1156:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1157:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator+=(_CharT __c)
1158:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->push_back(__c);
1160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
1161:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1162:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1163:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1164:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1165:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append an initializer_list of characters.
1166:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to be appended.
1167:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1168:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1169:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1170:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       operator+=(initializer_list<_CharT> __l)
1171:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
1172:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
1173:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1174:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
1175:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1176:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a string_view.
1177:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended.
1178:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1180:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
1181:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_If_sv<_Tp, basic_string&>
1182:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	operator+=(const _Tp& __svt)
1183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{ return this->append(__svt); }
1184:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 139


1185:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a string to this string.
1188:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to append.
1189:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1191:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1192:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(const basic_string& __str)
1193:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_append(__str._M_data(), __str.size()); }
1194:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1195:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1196:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a substring.
1197:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to append.
1198:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of the first character of str to append.
1199:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to append.
1200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1201:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range if @a __pos is not a valid index.
1202:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1203:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function appends @a __n characters from @a __str
1204:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  starting at @a __pos to this string.  If @a __n is is larger
1205:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  than the number of available characters in @a __str, the
1206:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  remainder of @a __str is appended.
1207:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1208:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1209:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(const basic_string& __str, size_type __pos, size_type __n = npos)
1210:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_append(__str._M_data()
1211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 + __str._M_check(__pos, "basic_string::append"),
1212:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 __str._M_limit(__pos, __n)); }
1213:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1214:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1215:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a C substring.
1216:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to append.
1217:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to append.
1218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1219:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1220:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(const _CharT* __s, size_type __n)
1222:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1223:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string_len(__s, __n);
1224:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_check_length(size_type(0), __n, "basic_string::append");
1225:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_append(__s, __n);
1226:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1227:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1228:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a C string.
1230:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to append.
1231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1232:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1233:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1234:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(const _CharT* __s)
1235:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
1237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __n = traits_type::length(__s);
1238:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	_M_check_length(size_type(0), __n, "basic_string::append");
1239:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_append(__s, __n);
1240:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1241:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 140


1242:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1243:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append multiple characters.
1244:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  The number of characters to append.
1245:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to use.
1246:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1247:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1248:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Appends __n copies of __c to this string.
1249:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1250:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1251:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(size_type __n, _CharT __c)
1252:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_replace_aux(this->size(), size_type(0), __n, __c); }
1253:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1254:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1255:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1256:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append an initializer_list of characters.
1257:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __l  The initializer_list of characters to append.
1258:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1259:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1260:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1261:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       append(initializer_list<_CharT> __l)
1262:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
1263:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
1264:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1265:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1266:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a range of characters.
1267:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
1268:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __last  Iterator marking the end of the range.
1269:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1270:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1271:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  Appends characters in the range [__first,__last) to this string.
1272:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1273:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1274:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator,
1275:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1276:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
1277:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<class _InputIterator>
1278:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
1279:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         basic_string&
1280:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         append(_InputIterator __first, _InputIterator __last)
1281:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         { return this->replace(end(), end(), __first, __last); }
1282:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1283:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201703L
1284:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1285:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a string_view.
1286:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended.
1287:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1288:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1289:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
1290:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _If_sv<_Tp, basic_string&>
1291:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         append(const _Tp& __svt)
1292:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         {
1293:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           __sv_type __sv = __svt;
1294:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****           return this->append(__sv.data(), __sv.size());
1295:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         }
1296:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1297:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1298:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a range of characters from a string_view.
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 141


1299:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended from.
1300:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos The position in the string_view to append from.
1301:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n   The number of characters to append from the string_view.
1302:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1303:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1304:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       template<typename _Tp>
1305:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****         _If_sv<_Tp, basic_string&>
1306:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	append(const _Tp& __svt, size_type __pos, size_type __n = npos)
1307:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
1308:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  __sv_type __sv = __svt;
1309:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  return _M_append(__sv.data()
1310:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::append"),
1311:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
1312:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	}
1313:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++17
1314:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1315:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1316:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Append a single character.
1317:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  Character to append.
1318:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1319:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       void
1320:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       push_back(_CharT __c)
1321:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	const size_type __size = this->size();
1323:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (__size + 1 > this->capacity())
1324:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  this->_M_mutate(__size, size_type(0), 0, size_type(1));
1325:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	traits_type::assign(this->_M_data()[__size], __c);
1326:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->_M_set_length(__size + 1);
1327:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1328:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1329:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1330:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to contents of another string.
1331:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string to use.
1332:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1333:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1334:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1335:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(const basic_string& __str)
1336:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1337:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1338:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	if (_Alloc_traits::_S_propagate_on_copy_assign())
1339:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
1340:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    if (!_Alloc_traits::_S_always_equal() && !_M_is_local()
1341:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		&& _M_get_allocator() != __str._M_get_allocator())
1342:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      {
1343:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		// Propagating allocator cannot free existing storage so must
1344:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		// deallocate it before replacing current allocator.
1345:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		if (__str.size() <= _S_local_capacity)
1346:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  {
1347:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _M_destroy(_M_allocated_capacity);
1348:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _M_data(_M_local_data());
1349:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _M_set_length(0);
1350:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  }
1351:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		else
1352:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  {
1353:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    const auto __len = __str.size();
1354:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    auto __alloc = __str._M_get_allocator();
1355:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    // If this allocation throws there are no effects:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 142


1356:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    auto __ptr = _Alloc_traits::allocate(__alloc, __len + 1);
1357:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _M_destroy(_M_allocated_capacity);
1358:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _M_data(__ptr);
1359:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _M_capacity(__len);
1360:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		    _M_set_length(__len);
1361:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 		  }
1362:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	      }
1363:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	    std::__alloc_on_copy(_M_get_allocator(), __str._M_get_allocator());
1364:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  }
1365:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
1366:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	this->_M_assign(__str);
1367:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
1368:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1369:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1370:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #if __cplusplus >= 201103L
1371:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1372:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to contents of another string.
1373:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param  __str  Source string to use.
1374:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1375:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1376:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets this string to the exact contents of @a __str.
1377:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @a __str is a valid, but unspecified string.
1378:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1379:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1380:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(basic_string&& __str)
1381:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       noexcept(_Alloc_traits::_S_nothrow_move())
1382:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1383:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
1384:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	// 2063. Contradictory requirements for string move assignment
1385:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this = std::move(__str);
1386:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1387:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif // C++11
1388:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1389:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1390:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to a substring of a string.
1391:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __str  The string to use.
1392:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __pos  Index of the first character of str.
1393:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to use.
1394:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1395:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @throw  std::out_of_range if @a pos is not a valid index.
1396:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1397:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets this string to the substring of @a __str
1398:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  consisting of @a __n characters at @a __pos.  If @a __n is
1399:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  is larger than the number of available characters in @a
1400:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  __str, the remainder of @a __str is used.
1401:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1402:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1403:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(const basic_string& __str, size_type __pos, size_type __n = npos)
1404:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_replace(size_type(0), this->size(), __str._M_data()
1405:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  + __str._M_check(__pos, "basic_string::assign"),
1406:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  __str._M_limit(__pos, __n)); }
1407:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1408:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1409:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to a C substring.
1410:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to use.
1411:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Number of characters to use.
1412:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 143


1413:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1414:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets the value of this string to the first @a __n
1415:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  characters of @a __s.  If @a __n is is larger than the number of
1416:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  available characters in @a __s, the remainder of @a __s is used.
1417:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1418:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1419:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(const _CharT* __s, size_type __n)
1420:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1421:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string_len(__s, __n);
1422:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_replace(size_type(0), this->size(), __s, __n);
1423:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1424:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1425:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1426:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to contents of a C string.
1427:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __s  The C string to use.
1428:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1429:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1430:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets the value of this string to the value of @a __s.
1431:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  The data is copied, so there is no dependence on @a __s once the
1432:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  function returns.
1433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1434:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1435:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(const _CharT* __s)
1436:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
1437:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	__glibcxx_requires_string(__s);
1438:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return _M_replace(size_type(0), this->size(), __s,
 733              		.loc 16 1438 19 is_stmt 0 view .LVU169
 734 0000 0021     		movs	r1, #0
 735 0002 0522     		movs	r2, #5
 736 0004 244B     		ldr	r3, .L49
 737              	.LBE2582:
 738              	.LBE2581:
 739              	.LBE2580:
 129:src/parameter_controller.h **** 
 740              		.loc 15 129 22 view .LVU170
 741 0006 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 742              		.cfi_def_cfa_offset 24
 743              		.cfi_offset 4, -24
 744              		.cfi_offset 5, -20
 745              		.cfi_offset 6, -16
 746              		.cfi_offset 7, -12
 747              		.cfi_offset 8, -8
 748              		.cfi_offset 14, -4
 749              		.loc 15 131 30 view .LVU171
 750 000a 00F12405 		add	r5, r0, #36
 129:src/parameter_controller.h **** 
 751              		.loc 15 129 22 view .LVU172
 752 000e 82B0     		sub	sp, sp, #8
 753              		.cfi_def_cfa_offset 32
 754              	.LBB2588:
 755              	.LBB2589:
 756              	.LBB2590:
1439:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  traits_type::length(__s));
1440:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       }
1441:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
1442:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       /**
1443:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @brief  Set value to multiple characters.
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 144


1444:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __n  Length of the resulting string.
1445:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @param __c  The character to use.
1446:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  @return  Reference to this string.
1447:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *
1448:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  This function sets the value of this string to @a __n copies of
1449:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        *  character @a __c.
1450:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****        */
1451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       basic_string&
1452:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       assign(size_type __n, _CharT __c)
1453:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_replace_aux(size_type(0), this->size(), __n, __c); }
 757              		.loc 16 1453 30 view .LVU173
 758 0010 8846     		mov	r8, r1
 759              	.LBE2590:
 760              	.LBE2589:
 761              	.LBE2588:
 129:src/parameter_controller.h **** 
 762              		.loc 15 129 22 view .LVU174
 763 0012 0746     		mov	r7, r0
 764              	.LVL49:
 765              	.LBB2594:
 766              	.LBI2580:
 675:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->assign(__s); }
 767              		.loc 16 675 7 is_stmt 1 view .LVU175
 768              	.LBB2586:
 769              	.LBI2581:
1435:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 770              		.loc 16 1435 7 view .LVU176
 771              	.LBB2584:
 772              	.LBB2583:
 773              	.LBI2583:
 901:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 774              		.loc 16 901 7 view .LVU177
 901:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 775              		.loc 16 901 7 is_stmt 0 view .LVU178
 776              	.LBE2583:
 777              	.LBE2584:
 778              	.LBE2586:
 779              	.LBE2594:
 780              		.file 17 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
   1:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // Character Traits for use by standard string and iostream -*- C++ -*-
   2:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
   3:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** //
   5:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // software; you can redistribute it and/or modify it under the
   7:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // terms of the GNU General Public License as published by the
   8:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // any later version.
  10:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  11:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // This library is distributed in the hope that it will be useful,
  12:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // GNU General Public License for more details.
  15:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  16:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // 3.1, as published by the Free Software Foundation.
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 145


  19:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  20:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // You should have received a copy of the GNU General Public License and
  21:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // <http://www.gnu.org/licenses/>.
  24:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  25:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** /** @file bits/char_traits.h
  26:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****  *  This is an internal header file, included by other library headers.
  27:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****  *  Do not attempt to use it directly. @headername{string}
  28:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****  */
  29:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  30:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** //
  31:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** // ISO C++ 14882: 21  Strings library
  32:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** //
  33:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  34:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifndef _CHAR_TRAITS_H
  35:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #define _CHAR_TRAITS_H 1
  36:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  37:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #pragma GCC system_header
  38:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  39:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #include <bits/stl_algobase.h>  // std::copy, std::fill_n
  40:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #include <bits/postypes.h>      // For streampos
  41:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #include <cwchar>               // For WEOF, wmemmove, wmemset, etc.
  42:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cplusplus > 201703L
  43:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** # include <compare>
  44:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
  45:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  46:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifndef _GLIBCXX_ALWAYS_INLINE
  47:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** # define _GLIBCXX_ALWAYS_INLINE inline __attribute__((__always_inline__))
  48:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
  49:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  50:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  51:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** {
  52:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  53:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  54:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   /**
  55:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @brief  Mapping from character type to associated types.
  56:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
  57:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @note This is an implementation class for the generic version
  58:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  of char_traits.  It defines int_type, off_type, pos_type, and
  59:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  state_type.  By default these are unsigned long, streamoff,
  60:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  streampos, and mbstate_t.  Users who need a different set of
  61:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  types, but who don't need to change the definitions of any function
  62:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  defined in char_traits, can specialize __gnu_cxx::_Char_types
  63:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  while leaving __gnu_cxx::char_traits alone. */
  64:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
  65:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     struct _Char_types
  66:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
  67:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef unsigned long   int_type;
  68:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef std::streampos  pos_type;
  69:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef std::streamoff  off_type;
  70:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef std::mbstate_t  state_type;
  71:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     };
  72:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  73:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
  74:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   /**
  75:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @brief  Base class used to implement std::char_traits.
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 146


  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
  77:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @note For any given actual character type, this definition is
  78:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  probably wrong.  (Most of the member functions are likely to be
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  right, but the int_type and state_type typedefs, and the eof()
  80:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  member function, are likely to be wrong.)  The reason this class
  81:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  exists is so users can specialize it.  Classes in namespace std
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  may not be specialized for fundamental types, but classes in
  83:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  namespace __gnu_cxx may be.
  84:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
  85:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/strings.html#strings.string.character_typ
  86:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  for advice on how to make use of this class for @a unusual character
  87:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  types. Also, check out include/ext/pod_char_traits.h.  
  88:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    */
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
  90:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     struct char_traits
  91:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
  92:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef _CharT                                    char_type;
  93:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef typename _Char_types<_CharT>::int_type    int_type;
  94:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef typename _Char_types<_CharT>::pos_type    pos_type;
  95:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef typename _Char_types<_CharT>::off_type    off_type;
  96:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef typename _Char_types<_CharT>::state_type  state_type;
  97:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cpp_lib_three_way_comparison
  98:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       using comparison_category = std::strong_ordering;
  99:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 100:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 101:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX14_CONSTEXPR void
 102:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       assign(char_type& __c1, const char_type& __c2)
 103:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 104:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 105:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 106:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       eq(const char_type& __c1, const char_type& __c2)
 107:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return __c1 == __c2; }
 108:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 109:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 110:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       lt(const char_type& __c1, const char_type& __c2)
 111:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return __c1 < __c2; }
 112:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 113:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX14_CONSTEXPR int
 114:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       compare(const char_type* __s1, const char_type* __s2, std::size_t __n);
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 116:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX14_CONSTEXPR std::size_t
 117:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       length(const char_type* __s);
 118:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 119:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX14_CONSTEXPR const char_type*
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       find(const char_type* __s, std::size_t __n, const char_type& __a);
 121:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 122:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX20_CONSTEXPR char_type*
 123:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       move(char_type* __s1, const char_type* __s2, std::size_t __n);
 124:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 125:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX20_CONSTEXPR char_type*
 126:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       copy(char_type* __s1, const char_type* __s2, std::size_t __n);
 127:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 128:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX20_CONSTEXPR char_type*
 129:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       assign(char_type* __s, std::size_t __n, char_type __a);
 130:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 131:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR char_type
 132:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       to_char_type(const int_type& __c)
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 147


 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return static_cast<char_type>(__c); }
 134:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 135:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 136:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       to_int_type(const char_type& __c)
 137:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return static_cast<int_type>(__c); }
 138:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 139:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 140:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       eq_int_type(const int_type& __c1, const int_type& __c2)
 141:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return __c1 == __c2; }
 142:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 143:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       eof()
 145:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return static_cast<int_type>(_GLIBCXX_STDIO_EOF); }
 146:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 148:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       not_eof(const int_type& __c)
 149:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return !eq_int_type(__c, eof()) ? __c : to_int_type(char_type()); }
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     };
 151:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 152:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 153:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     _GLIBCXX14_CONSTEXPR int
 154:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     char_traits<_CharT>::
 155:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     compare(const char_type* __s1, const char_type* __s2, std::size_t __n)
 156:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 157:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       for (std::size_t __i = 0; __i < __n; ++__i)
 158:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (lt(__s1[__i], __s2[__i]))
 159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return -1;
 160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	else if (lt(__s2[__i], __s1[__i]))
 161:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 1;
 162:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return 0;
 163:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 164:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 165:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 166:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     _GLIBCXX14_CONSTEXPR std::size_t
 167:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     char_traits<_CharT>::
 168:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     length(const char_type* __p)
 169:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 170:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       std::size_t __i = 0;
 171:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       while (!eq(__p[__i], char_type()))
 172:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****         ++__i;
 173:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __i;
 174:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 175:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 176:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 177:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     _GLIBCXX14_CONSTEXPR const typename char_traits<_CharT>::char_type*
 178:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     char_traits<_CharT>::
 179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     find(const char_type* __s, std::size_t __n, const char_type& __a)
 180:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 181:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       for (std::size_t __i = 0; __i < __n; ++__i)
 182:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****         if (eq(__s[__i], __a))
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****           return __s + __i;
 184:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return 0;
 185:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 188:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     _GLIBCXX20_CONSTEXPR
 189:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     typename char_traits<_CharT>::char_type*
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 148


 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     char_traits<_CharT>::
 191:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     move(char_type* __s1, const char_type* __s2, std::size_t __n)
 192:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 193:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       if (__n == 0)
 194:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return __s1;
 195:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifdef __cpp_lib_is_constant_evaluated
 196:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       if (std::is_constant_evaluated())
 197:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	{
 198:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  if (__s1 > __s2 && __s1 < __s2 + __n)
 199:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	    std::copy_backward(__s2, __s2 + __n, __s1);
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  else
 201:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	    std::copy(__s2, __s2 + __n, __s1);
 202:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 203:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	}
 204:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 205:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return static_cast<_CharT*>(__builtin_memmove(__s1, __s2,
 206:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 						    __n * sizeof(char_type)));
 207:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 208:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 209:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 210:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     _GLIBCXX20_CONSTEXPR
 211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     typename char_traits<_CharT>::char_type*
 212:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     char_traits<_CharT>::
 213:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     copy(char_type* __s1, const char_type* __s2, std::size_t __n)
 214:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 215:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       // NB: Inline std::copy so no recursive dependencies.
 216:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       std::copy(__s2, __s2 + __n, __s1);
 217:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __s1;
 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 219:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 220:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     _GLIBCXX20_CONSTEXPR
 222:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     typename char_traits<_CharT>::char_type*
 223:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     char_traits<_CharT>::
 224:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     assign(char_type* __s, std::size_t __n, char_type __a)
 225:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 226:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       // NB: Inline std::fill_n so no recursive dependencies.
 227:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       std::fill_n(__s, __n, __a);
 228:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __s;
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 230:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** _GLIBCXX_END_NAMESPACE_VERSION
 232:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** } // namespace
 233:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 234:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** namespace std _GLIBCXX_VISIBILITY(default)
 235:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** {
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 238:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cplusplus >= 201703L
 239:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #define __cpp_lib_constexpr_char_traits 201611
 240:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 241:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   /**
 242:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @brief Determine whether the characters of a NULL-terminated
 243:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  string are known at compile time.
 244:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @param  __s  The string.
 245:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
 246:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  Assumes that _CharT is a built-in character type.
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 149


 247:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    */
 248:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 249:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     static _GLIBCXX_ALWAYS_INLINE constexpr bool
 250:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     __constant_string_p(const _CharT* __s)
 251:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 252:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifdef _GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED
 253:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       (void) __s;
 254:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       // In constexpr contexts all strings should be constant.
 255:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __builtin_is_constant_evaluated();
 256:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #else
 257:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       while (__builtin_constant_p(*__s) && *__s)
 258:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	__s++;
 259:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __builtin_constant_p(*__s);
 260:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 261:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 262:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 263:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   /**
 264:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @brief Determine whether the characters of a character array are
 265:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  known at compile time.
 266:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @param  __a  The character array.
 267:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @param  __n  Number of characters.
 268:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
 269:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  Assumes that _CharT is a built-in character type.
 270:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    */
 271:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<typename _CharT>
 272:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     static _GLIBCXX_ALWAYS_INLINE constexpr bool
 273:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     __constant_char_array_p(const _CharT* __a, size_t __n)
 274:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 275:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifdef _GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED
 276:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       (void) __a;
 277:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       (void) __n;
 278:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       // In constexpr contexts all character arrays should be constant.
 279:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __builtin_is_constant_evaluated();
 280:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #else
 281:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       size_t __i = 0;
 282:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       while (__i < __n && __builtin_constant_p(__a[__i]))
 283:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	__i++;
 284:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       return __i == __n;
 285:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 286:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     }
 287:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 288:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 289:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   // 21.1
 290:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   /**
 291:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @brief  Basis for explicit traits specializations.
 292:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
 293:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  @note  For any given actual character type, this definition is
 294:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  probably wrong.  Since this is just a thin wrapper around
 295:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  __gnu_cxx::char_traits, it is possible to achieve a more
 296:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  appropriate definition by specializing __gnu_cxx::char_traits.
 297:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *
 298:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/strings.html#strings.string.character_typ
 299:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  for advice on how to make use of this class for @a unusual character
 300:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****    *  types. Also, check out include/ext/pod_char_traits.h.
 301:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   */
 302:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<class _CharT>
 303:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     struct char_traits : public __gnu_cxx::char_traits<_CharT>
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 150


 304:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     { };
 305:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 306:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 307:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   /// 21.1.3.1  char_traits specializations
 308:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****   template<>
 309:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     struct char_traits<char>
 310:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****     {
 311:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef char              char_type;
 312:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef int               int_type;
 313:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef streampos         pos_type;
 314:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef streamoff         off_type;
 315:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       typedef mbstate_t         state_type;
 316:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cpp_lib_three_way_comparison
 317:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       using comparison_category = strong_ordering;
 318:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 319:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 320:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX17_CONSTEXPR void
 321:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       assign(char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 323:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 324:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 325:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       eq(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 326:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { return __c1 == __c2; }
 327:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 328:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 329:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       lt(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 330:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 331:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	// LWG 467.
 332:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return (static_cast<unsigned char>(__c1)
 333:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 		< static_cast<unsigned char>(__c2));
 334:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 335:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 336:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX17_CONSTEXPR int
 337:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       compare(const char_type* __s1, const char_type* __s2, size_t __n)
 338:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 339:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__n == 0)
 340:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 0;
 341:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cplusplus >= 201703L
 342:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__builtin_constant_p(__n)
 343:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	    && __constant_char_array_p(__s1, __n)
 344:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	    && __constant_char_array_p(__s2, __n))
 345:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::compare(__s1, __s2, __n);
 346:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 347:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return __builtin_memcmp(__s1, __s2, __n);
 348:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 349:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 350:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX17_CONSTEXPR size_t
 351:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       length(const char_type* __s)
 352:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 353:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cplusplus >= 201703L
 354:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__constant_string_p(__s))
 355:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 356:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 357:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return __builtin_strlen(__s);
 781              		.loc 17 357 2 is_stmt 1 view .LVU179
 782              	.LBB2595:
 783              	.LBB2587:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 151


 784              	.LBB2585:
1438:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  traits_type::length(__s));
 785              		.loc 16 1438 19 is_stmt 0 view .LVU180
 786 0014 0092     		str	r2, [sp]
 787 0016 00F55174 		add	r4, r0, #836
 788 001a 826A     		ldr	r2, [r0, #40]
 789 001c 2846     		mov	r0, r5
 790              	.LVL50:
1438:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  traits_type::length(__s));
 791              		.loc 16 1438 19 view .LVU181
 792 001e FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj
 793              	.LVL51:
1438:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			  traits_type::length(__s));
 794              		.loc 16 1438 19 view .LVU182
 795              	.LBE2585:
 796              	.LBE2587:
 797              	.LBE2595:
 132:src/parameter_controller.h ****             pconf[0].type = param_type::kPot;
 798              		.loc 15 132 13 is_stmt 1 view .LVU183
 799              	.LBB2596:
 800              	.LBI2588:
 686:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 801              		.loc 16 686 7 view .LVU184
 802              	.LBB2593:
 803              	.LBI2589:
1452:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_replace_aux(size_type(0), this->size(), __n, __c); }
 804              		.loc 16 1452 7 view .LVU185
 805              	.LBB2592:
 806              	.LBB2591:
 807              	.LBI2591:
 901:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 808              		.loc 16 901 7 view .LVU186
 901:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 809              		.loc 16 901 7 is_stmt 0 view .LVU187
 810              	.LBE2591:
 811              		.loc 16 1453 30 view .LVU188
 812 0022 CDF80080 		str	r8, [sp]
 813 0026 0123     		movs	r3, #1
 814 0028 3A6C     		ldr	r2, [r7, #64]
 815 002a 4146     		mov	r1, r8
 816 002c 07F13C00 		add	r0, r7, #60
 817              	.LVL52:
 818              		.loc 16 1453 30 view .LVU189
 819 0030 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc
 820              	.LVL53:
 821              		.loc 16 1453 30 view .LVU190
 822              	.LBE2592:
 823              	.LBE2593:
 824              	.LBE2596:
 133:src/parameter_controller.h ****             pconf[0].min = 0;
 825              		.loc 15 133 13 is_stmt 1 view .LVU191
 826              		.loc 15 133 26 is_stmt 0 view .LVU192
 827 0034 0023     		movs	r3, #0
 828              	.LBB2597:
 829              	.LBB2598:
 830              	.LBB2599:
 831              		.loc 16 1453 30 view .LVU193
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 152


 832 0036 CDF80080 		str	r8, [sp]
 833 003a 4146     		mov	r1, r8
 834              	.LBE2599:
 835              	.LBE2598:
 836              	.LBE2597:
 837              		.loc 15 133 26 view .LVU194
 838 003c FB66     		str	r3, [r7, #108]	@ float
 134:src/parameter_controller.h ****             pconf[0].max = 1;
 839              		.loc 15 134 13 is_stmt 1 view .LVU195
 840              		.loc 15 134 26 is_stmt 0 view .LVU196
 841 003e 4FF07E53 		mov	r3, #1065353216
 842              	.LBB2607:
 843              	.LBB2604:
 844              	.LBB2601:
 845              		.loc 16 1453 30 view .LVU197
 846 0042 BA6D     		ldr	r2, [r7, #88]
 847 0044 07F15400 		add	r0, r7, #84
 848              	.LBE2601:
 849              	.LBE2604:
 850              	.LBE2607:
 851              		.loc 15 134 26 view .LVU198
 852 0048 3B67     		str	r3, [r7, #112]	@ float
 135:src/parameter_controller.h ****             pconf[0].scale = param_scale::kLin;
 853              		.loc 15 135 13 is_stmt 1 view .LVU199
 854              	.LVL54:
 855              	.LBB2608:
 856              	.LBI2597:
 686:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 857              		.loc 16 686 7 view .LVU200
 858              	.LBB2605:
 859              	.LBI2598:
1452:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_replace_aux(size_type(0), this->size(), __n, __c); }
 860              		.loc 16 1452 7 view .LVU201
 861              	.LBB2602:
 862              	.LBB2600:
 863              	.LBI2600:
 901:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 864              		.loc 16 901 7 view .LVU202
 901:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 865              		.loc 16 901 7 is_stmt 0 view .LVU203
 866              	.LBE2600:
 867              		.loc 16 1453 30 view .LVU204
 868 004a 0123     		movs	r3, #1
 869              	.LBE2602:
 870              	.LBE2605:
 871              	.LBE2608:
 872              	.LBB2609:
 873              	.LBB2610:
 136:src/parameter_controller.h **** 
 137:src/parameter_controller.h ****             setInitialParameterState();
 138:src/parameter_controller.h ****         }
 139:src/parameter_controller.h **** 
 140:src/parameter_controller.h ****         void setInitialParameterState() {
 141:src/parameter_controller.h ****             for (int i = 0; i < 10; i++) {
 874              		.loc 15 141 22 view .LVU205
 875 004c 4646     		mov	r6, r8
 876              	.LBE2610:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 153


 877              	.LBE2609:
 878              	.LBB2627:
 879              	.LBB2606:
 880              	.LBB2603:
 881              		.loc 16 1453 30 view .LVU206
 882 004e FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc
 883              	.LVL55:
 884              		.loc 16 1453 30 view .LVU207
 885              	.LBE2603:
 886              	.LBE2606:
 887              	.LBE2627:
 888              	.LBB2628:
 889              	.LBB2626:
 890              		.loc 15 141 31 is_stmt 1 view .LVU208
 891              	.L46:
 142:src/parameter_controller.h ****                 params[i].label = pconf[i].label;
 892              		.loc 15 142 17 view .LVU209
 893              	.LBB2611:
 894              	.LBI2611:
 665:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 895              		.loc 16 665 7 view .LVU210
 896              	.LBB2612:
 897              	.LBI2612:
1335:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 898              		.loc 16 1335 7 view .LVU211
 899              	.LBB2613:
1366:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
 900              		.loc 16 1366 17 is_stmt 0 view .LVU212
 901 0052 2046     		mov	r0, r4
 902 0054 2946     		mov	r1, r5
 903 0056 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_
 904              	.LVL56:
1366:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
 905              		.loc 16 1366 17 view .LVU213
 906              	.LBE2613:
 907              	.LBE2612:
 908              	.LBE2611:
 143:src/parameter_controller.h ****                 params[i].type = pconf[i].type;
 909              		.loc 15 143 17 is_stmt 1 view .LVU214
 910              	.LBB2614:
 911              	.LBI2614:
 665:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 912              		.loc 16 665 7 view .LVU215
 913              	.LBB2615:
 914              	.LBI2615:
1335:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 915              		.loc 16 1335 7 view .LVU216
 916              	.LBB2616:
1366:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
 917              		.loc 16 1366 17 is_stmt 0 view .LVU217
 918 005a 04F11800 		add	r0, r4, #24
 919              	.LVL57:
1366:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
 920              		.loc 16 1366 17 view .LVU218
 921 005e 05F11801 		add	r1, r5, #24
 922              	.LVL58:
1366:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 154


 923              		.loc 16 1366 17 view .LVU219
 924 0062 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_
 925              	.LVL59:
1366:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
 926              		.loc 16 1366 17 view .LVU220
 927              	.LBE2616:
 928              	.LBE2615:
 929              	.LBE2614:
 144:src/parameter_controller.h ****                 params[i].min = pconf[i].min;
 930              		.loc 15 144 17 is_stmt 1 view .LVU221
 931              		.loc 15 144 42 is_stmt 0 view .LVU222
 932 0066 AB6C     		ldr	r3, [r5, #72]	@ float
 933              	.LBB2617:
 934              	.LBB2618:
 935              	.LBB2619:
1366:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
 936              		.loc 16 1366 17 view .LVU223
 937 0068 04F13000 		add	r0, r4, #48
 938              	.LBE2619:
 939              	.LBE2618:
 940              	.LBE2617:
 141:src/parameter_controller.h ****                 params[i].label = pconf[i].label;
 941              		.loc 15 141 31 view .LVU224
 942 006c 5834     		adds	r4, r4, #88
 943              		.loc 15 144 31 view .LVU225
 944 006e 44F8083C 		str	r3, [r4, #-8]	@ float
 145:src/parameter_controller.h ****                 params[i].max = pconf[i].max;
 945              		.loc 15 145 17 is_stmt 1 view .LVU226
 946              	.LBB2624:
 947              	.LBB2622:
 948              	.LBB2620:
1366:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
 949              		.loc 16 1366 17 is_stmt 0 view .LVU227
 950 0072 05F13001 		add	r1, r5, #48
 951              	.LBE2620:
 952              	.LBE2622:
 953              	.LBE2624:
 954              		.loc 15 145 42 view .LVU228
 955 0076 EB6C     		ldr	r3, [r5, #76]	@ float
 141:src/parameter_controller.h ****                 params[i].label = pconf[i].label;
 956              		.loc 15 141 31 view .LVU229
 957 0078 5035     		adds	r5, r5, #80
 958              		.loc 15 145 31 view .LVU230
 959 007a 44F8043C 		str	r3, [r4, #-4]	@ float
 146:src/parameter_controller.h ****                 params[i].scale = pconf[i].scale;
 960              		.loc 15 146 17 is_stmt 1 view .LVU231
 961              	.LBB2625:
 962              	.LBI2617:
 665:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 963              		.loc 16 665 7 view .LVU232
 964              	.LBB2623:
 965              	.LBI2618:
1335:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 966              		.loc 16 1335 7 view .LVU233
 967              	.LBB2621:
1366:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
 968              		.loc 16 1366 17 is_stmt 0 view .LVU234
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 155


 969 007e FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_
 970              	.LVL60:
 971              	.LBE2621:
 972              	.LBE2623:
 973              	.LBE2625:
 147:src/parameter_controller.h ****                 params[i].val = 0;
 974              		.loc 15 147 17 is_stmt 1 view .LVU235
 148:src/parameter_controller.h ****                 params[i].index = i;
 975              		.loc 15 148 33 is_stmt 0 view .LVU236
 976 0082 44F8106C 		str	r6, [r4, #-16]
 141:src/parameter_controller.h ****                 params[i].label = pconf[i].label;
 977              		.loc 15 141 13 view .LVU237
 978 0086 0136     		adds	r6, r6, #1
 979              	.LVL61:
 147:src/parameter_controller.h ****                 params[i].val = 0;
 980              		.loc 15 147 31 view .LVU238
 981 0088 0023     		movs	r3, #0
 141:src/parameter_controller.h ****                 params[i].label = pconf[i].label;
 982              		.loc 15 141 31 view .LVU239
 983 008a 0A2E     		cmp	r6, #10
 147:src/parameter_controller.h ****                 params[i].val = 0;
 984              		.loc 15 147 31 view .LVU240
 985 008c 44F80C3C 		str	r3, [r4, #-12]	@ float
 986              		.loc 15 148 17 is_stmt 1 view .LVU241
 141:src/parameter_controller.h ****                 params[i].label = pconf[i].label;
 987              		.loc 15 141 13 view .LVU242
 988              	.LVL62:
 141:src/parameter_controller.h ****                 params[i].label = pconf[i].label;
 989              		.loc 15 141 31 view .LVU243
 990 0090 DFD1     		bne	.L46
 991              	.LBE2626:
 992              	.LBE2628:
 138:src/parameter_controller.h **** 
 993              		.loc 15 138 9 is_stmt 0 view .LVU244
 994 0092 02B0     		add	sp, sp, #8
 995              		.cfi_def_cfa_offset 24
 996              		@ sp needed
 997 0094 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 998              	.LVL63:
 999              	.L50:
 138:src/parameter_controller.h **** 
 1000              		.loc 15 138 9 view .LVU245
 1001              		.align	2
 1002              	.L49:
 1003 0098 00000000 		.word	.LC0
 1004              		.cfi_endproc
 1005              	.LFE5383:
 1007              		.section	.rodata._ZN5paramC2ERKS_.str1.4,"aMS",%progbits,1
 1008              		.align	2
 1009              	.LC1:
 1010 0000 62617369 		.ascii	"basic_string::_M_construct null not valid\000"
 1010      635F7374 
 1010      72696E67 
 1010      3A3A5F4D 
 1010      5F636F6E 
 1011              		.section	.text._ZN5paramC2ERKS_,"axG",%progbits,_ZN5paramC5ERKS_,comdat
 1012              		.align	1
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 156


 1013              		.p2align 2,,3
 1014              		.weak	_ZN5paramC2ERKS_
 1015              		.syntax unified
 1016              		.thumb
 1017              		.thumb_func
 1018              		.fpu fpv5-d16
 1020              	_ZN5paramC2ERKS_:
 1021              	.LVL64:
 1022              	.LFB5380:
  37:src/parameter_controller.h **** 	std::string label;
 1023              		.loc 15 37 8 is_stmt 1 view -0
 1024              		.cfi_startproc
 1025              		@ args = 0, pretend = 0, frame = 8
 1026              		@ frame_needed = 0, uses_anonymous_args = 0
  37:src/parameter_controller.h **** 	std::string label;
 1027              		.loc 15 37 8 is_stmt 0 view .LVU247
 1028 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1029              		.cfi_def_cfa_offset 20
 1030              		.cfi_offset 4, -20
 1031              		.cfi_offset 5, -16
 1032              		.cfi_offset 6, -12
 1033              		.cfi_offset 7, -8
 1034              		.cfi_offset 14, -4
 1035 0002 0446     		mov	r4, r0
 1036              	.LBB2804:
 1037              	.LBB2805:
 1038              	.LBB2806:
 1039              	.LBB2807:
 1040              	.LBB2808:
 193:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 1041              		.loc 16 193 51 view .LVU248
 1042 0004 0830     		adds	r0, r0, #8
 1043              	.LVL65:
 193:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 1044              		.loc 16 193 51 view .LVU249
 1045              	.LBE2808:
 1046              	.LBE2807:
 1047              	.LBB2809:
 1048              	.LBB2810:
 908:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1049              		.loc 16 908 16 view .LVU250
 1050 0006 4E68     		ldr	r6, [r1, #4]
 1051              	.LBE2810:
 1052              	.LBE2809:
 1053              	.LBE2806:
 1054              	.LBE2805:
 1055              	.LBE2804:
  37:src/parameter_controller.h **** 	std::string label;
 1056              		.loc 15 37 8 view .LVU251
 1057 0008 83B0     		sub	sp, sp, #12
 1058              		.cfi_def_cfa_offset 32
 1059              	.LBB3094:
 1060              	.LBB2905:
 1061              	.LBB2900:
 1062              	.LBB2811:
 1063              	.LBB2812:
 160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 157


 1064              		.loc 16 160 46 view .LVU252
 1065 000a 2060     		str	r0, [r4]
 1066              	.LBE2812:
 1067              	.LBE2811:
 1068              	.LBE2900:
 1069              	.LBE2905:
 1070              	.LBE3094:
  37:src/parameter_controller.h **** 	std::string label;
 1071              		.loc 15 37 8 view .LVU253
 1072 000c 0D46     		mov	r5, r1
 1073              	.LVL66:
 1074              	.LBB3095:
 1075              	.LBB2906:
 1076              	.LBI2805:
 448:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(),
 1077              		.loc 16 448 7 is_stmt 1 view .LVU254
 1078              	.LBB2901:
 1079              	.LBB2817:
 1080              	.LBI2807:
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1081              		.loc 16 190 7 view .LVU255
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1082              		.loc 16 190 7 is_stmt 0 view .LVU256
 1083              	.LBE2817:
 1084              	.LBB2818:
 1085              	.LBI2818:
 290:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 1086              		.loc 16 290 7 is_stmt 1 view .LVU257
 290:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 1087              		.loc 16 290 7 is_stmt 0 view .LVU258
 1088              	.LBE2818:
 1089              	.LBB2819:
 1090              	.LBI2819:
 1091              		.file 18 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
   1:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // Allocator traits -*- C++ -*-
   2:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
   3:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // Copyright (C) 2011-2020 Free Software Foundation, Inc.
   4:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** //
   5:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // software; you can redistribute it and/or modify it under the
   7:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // terms of the GNU General Public License as published by the
   8:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // any later version.
  10:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  11:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // This library is distributed in the hope that it will be useful,
  12:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // GNU General Public License for more details.
  15:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  16:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  20:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // You should have received a copy of the GNU General Public License and
  21:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** // <http://www.gnu.org/licenses/>.
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 158


  24:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  25:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** /** @file ext/alloc_traits.h
  26:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****  */
  28:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  29:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #ifndef _EXT_ALLOC_TRAITS_H
  30:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #define _EXT_ALLOC_TRAITS_H 1
  31:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  32:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #pragma GCC system_header
  33:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  34:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** # include <bits/alloc_traits.h>
  35:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #if __cplusplus < 201103L
  36:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** # include <bits/allocator.h>  // for __alloc_swap
  37:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #endif
  38:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  39:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  40:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** {
  41:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  42:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  43:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** /**
  44:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****  * @brief  Uniform interface to C++98 and C++11 allocators.
  45:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****  * @ingroup allocators
  46:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** */
  47:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** template<typename _Alloc, typename = typename _Alloc::value_type>
  48:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****   struct __alloc_traits
  49:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #if __cplusplus >= 201103L
  50:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****   : std::allocator_traits<_Alloc>
  51:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #endif
  52:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****   {
  53:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef _Alloc allocator_type;
  54:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** #if __cplusplus >= 201103L
  55:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef std::allocator_traits<_Alloc>           _Base_type;
  56:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef typename _Base_type::value_type         value_type;
  57:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef typename _Base_type::pointer            pointer;
  58:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef typename _Base_type::const_pointer      const_pointer;
  59:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef typename _Base_type::size_type          size_type;
  60:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef typename _Base_type::difference_type    difference_type;
  61:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     // C++11 allocators do not define reference or const_reference
  62:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef value_type&                             reference;
  63:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     typedef const value_type&                       const_reference;
  64:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     using _Base_type::allocate;
  65:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     using _Base_type::deallocate;
  66:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     using _Base_type::construct;
  67:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     using _Base_type::destroy;
  68:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     using _Base_type::max_size;
  69:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  70:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****   private:
  71:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     template<typename _Ptr>
  72:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       using __is_custom_pointer
  73:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 	= std::__and_<std::is_same<pointer, _Ptr>,
  74:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 		      std::__not_<std::is_pointer<_Ptr>>>;
  75:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****   public:
  77:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     // overload construct for non-standard pointer types
  78:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     template<typename _Ptr, typename... _Args>
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       static _GLIBCXX14_CONSTEXPR
  80:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       std::__enable_if_t<__is_custom_pointer<_Ptr>::value>
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 159


  81:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       construct(_Alloc& __a, _Ptr __p, _Args&&... __args)
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       noexcept(noexcept(_Base_type::construct(__a, std::__to_address(__p),
  83:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 					      std::forward<_Args>(__args)...)))
  84:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       {
  85:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 	_Base_type::construct(__a, std::__to_address(__p),
  86:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 			      std::forward<_Args>(__args)...);
  87:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       }
  88:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     // overload destroy for non-standard pointer types
  90:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     template<typename _Ptr>
  91:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       static _GLIBCXX14_CONSTEXPR
  92:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       std::__enable_if_t<__is_custom_pointer<_Ptr>::value>
  93:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       destroy(_Alloc& __a, _Ptr __p)
  94:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       noexcept(noexcept(_Base_type::destroy(__a, std::__to_address(__p))))
  95:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****       { _Base_type::destroy(__a, std::__to_address(__p)); }
  96:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h **** 
  97:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\alloc_traits.h ****     static constexpr _Alloc _S_select_on_copy(const _Alloc& __a)
 1092              		.loc 18 97 29 is_stmt 1 view .LVU259
 1093              	.LBB2820:
 1094              	.LBI2820:
 492:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 493:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 494:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 495:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Construct an object of type `_Up`
 496:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 497:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to memory of suitable size and alignment for
 498:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *	       an object of type `_Up`.
 499:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __args Constructor arguments.
 500:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 501:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls `__a.construct(__p, std::forward<_Args>(__args)...)`
 502:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  in C++11, C++14 and C++17. Changed in C++20 to call
 503:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  `std::construct_at(__p, std::forward<_Args>(__args)...)` instead.
 504:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 505:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Up, typename... _Args>
 506:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR void
 507:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
 508:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 509:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 510:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 511:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 512:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  __a.construct(__p, std::forward<_Args>(__args)...);
 513:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 514:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  std::construct_at(__p, std::forward<_Args>(__args)...);
 515:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 516:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 517:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 518:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 519:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Destroy an object of type @a _Up
 520:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 521:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __p  Pointer to the object to destroy
 522:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *
 523:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  Calls @c __a.destroy(__p).
 524:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 525:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       template<typename _Up>
 526:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	static _GLIBCXX20_CONSTEXPR void
 527:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
 528:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(is_nothrow_destructible<_Up>::value)
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 160


 529:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	{
 530:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 531:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  __a.destroy(__p);
 532:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 533:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	  std::destroy_at(__p);
 534:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 535:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	}
 536:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 537:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 538:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  The maximum supported allocation size
 539:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __a  An allocator.
 540:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return @c __a.max_size()
 541:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 542:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR size_type
 543:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
 544:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       {
 545:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #if __cplusplus <= 201703L
 546:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	return __a.max_size();
 547:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #else
 548:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	return size_t(-1) / sizeof(value_type);
 549:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** #endif
 550:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       }
 551:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 
 552:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       /**
 553:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @brief  Obtain an allocator to use when copying a container.
 554:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @param  __rhs  An allocator.
 555:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****        *  @return @c __rhs
 556:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       */
 557:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       static _GLIBCXX20_CONSTEXPR allocator_type
 558:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       select_on_container_copy_construction(const allocator_type& __rhs)
 1095              		.loc 13 558 7 view .LVU260
 1096              	.LBB2821:
 1097              	.LBI2821:
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 1098              		.loc 11 147 7 view .LVU261
 1099              	.LBB2822:
 1100              	.LBI2822:
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1101              		.loc 12 82 7 view .LVU262
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1102              		.loc 12 82 7 is_stmt 0 view .LVU263
 1103              	.LBE2822:
 1104              	.LBE2821:
 1105              	.LBE2820:
 1106              	.LBE2819:
 1107              	.LBB2823:
 1108              	.LBI2811:
 159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 1109              		.loc 16 159 2 is_stmt 1 view .LVU264
 1110              	.LBB2816:
 1111              	.LBB2813:
 1112              	.LBI2813:
 1113              		.file 19 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
   1:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // Move, forward and identity for C++11 + swap -*- C++ -*-
   2:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
   3:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // Copyright (C) 2007-2020 Free Software Foundation, Inc.
   4:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** //
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 161


   5:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // software; you can redistribute it and/or modify it under the
   7:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // terms of the GNU General Public License as published by the
   8:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // any later version.
  10:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  11:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // This library is distributed in the hope that it will be useful,
  12:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // GNU General Public License for more details.
  15:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  16:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  20:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // You should have received a copy of the GNU General Public License and
  21:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** // <http://www.gnu.org/licenses/>.
  24:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  25:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** /** @file bits/move.h
  26:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****  *  This is an internal header file, included by other library headers.
  27:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****  *  Do not attempt to use it directly. @headername{utility}
  28:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****  */
  29:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  30:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #ifndef _MOVE_H
  31:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #define _MOVE_H 1
  32:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  33:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #include <bits/c++config.h>
  34:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #if __cplusplus < 201103L
  35:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** # include <bits/concept_check.h>
  36:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #endif
  37:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  38:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** namespace std _GLIBCXX_VISIBILITY(default)
  39:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** {
  40:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  41:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  42:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   // Used, in C++03 mode too, by allocators, etc.
  43:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   /**
  44:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @brief Same as C++11 std::addressof
  45:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @ingroup utilities
  46:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    */
  47:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   template<typename _Tp>
  48:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     inline _GLIBCXX_CONSTEXPR _Tp*
  49:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
  50:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return __builtin_addressof(__r); }
  51:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  52:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #if __cplusplus >= 201103L
  53:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  54:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** _GLIBCXX_END_NAMESPACE_VERSION
  55:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** } // namespace
  56:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  57:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** #include <type_traits> // Brings in std::declval too.
  58:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  59:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** namespace std _GLIBCXX_VISIBILITY(default)
  60:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** {
  61:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 162


  62:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  63:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   /**
  64:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @addtogroup utilities
  65:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @{
  66:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    */
  67:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  68:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   /**
  69:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @brief  Forward an lvalue.
  70:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @return The parameter cast to the specified type.
  71:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *
  72:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  This function is used to implement "perfect forwarding".
  73:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    */
  74:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   template<typename _Tp>
  75:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     constexpr _Tp&&
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     forward(typename std::remove_reference<_Tp>::type& __t) noexcept
  77:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
  78:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   /**
  80:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @brief  Forward an rvalue.
  81:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @return The parameter cast to the specified type.
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *
  83:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  This function is used to implement "perfect forwarding".
  84:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    */
  85:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   template<typename _Tp>
  86:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     constexpr _Tp&&
  87:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     forward(typename std::remove_reference<_Tp>::type&& __t) noexcept
  88:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     {
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       static_assert(!std::is_lvalue_reference<_Tp>::value, "template argument"
  90:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 		    " substituting _Tp is an lvalue reference type");
  91:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****       return static_cast<_Tp&&>(__t);
  92:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     }
  93:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h **** 
  94:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   /**
  95:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @brief  Convert a value to an rvalue.
  96:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @param  __t  A thing of arbitrary type.
  97:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****    *  @return The parameter cast to an rvalue-reference to allow moving it.
  98:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   */
  99:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****   template<typename _Tp>
 100:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     constexpr typename std::remove_reference<_Tp>::type&&
 101:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     move(_Tp&& __t) noexcept
 1114              		.loc 19 101 5 view .LVU265
 1115              		.loc 19 101 5 is_stmt 0 view .LVU266
 1116              	.LBE2813:
 1117              	.LBB2814:
 1118              	.LBI2814:
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 1119              		.loc 11 147 7 is_stmt 1 view .LVU267
 1120              	.LBB2815:
 1121              	.LBI2815:
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1122              		.loc 12 82 7 view .LVU268
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1123              		.loc 12 82 7 is_stmt 0 view .LVU269
 1124              	.LBE2815:
 1125              	.LBE2814:
 1126              	.LBE2816:
 1127              	.LBE2823:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 163


 1128              	.LBB2824:
 1129              	.LBI2824:
 1130              		.loc 11 162 7 is_stmt 1 view .LVU270
 1131              	.LBB2825:
 1132              	.LBI2825:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1133              		.loc 12 89 7 view .LVU271
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1134              		.loc 12 89 7 is_stmt 0 view .LVU272
 1135              	.LBE2825:
 1136              	.LBE2824:
 1137              	.LBB2826:
 1138              	.LBI2826:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1139              		.loc 16 186 7 is_stmt 1 view .LVU273
 1140              	.LBB2827:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1141              		.loc 16 187 28 is_stmt 0 view .LVU274
 1142 000e 0F68     		ldr	r7, [r1]
 1143              	.LVL67:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1144              		.loc 16 187 28 view .LVU275
 1145              	.LBE2827:
 1146              	.LBE2826:
 1147              	.LBB2828:
 1148              	.LBI2828:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1149              		.loc 16 186 7 is_stmt 1 view .LVU276
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1150              		.loc 16 186 7 is_stmt 0 view .LVU277
 1151              	.LBE2828:
 1152              	.LBB2829:
 1153              	.LBI2809:
 907:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 1154              		.loc 16 907 7 is_stmt 1 view .LVU278
 907:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 1155              		.loc 16 907 7 is_stmt 0 view .LVU279
 1156              	.LBE2829:
 1157              	.LBB2830:
 1158              	.LBI2830:
 263:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 1159              		.loc 16 263 9 is_stmt 1 view .LVU280
 1160              	.LBB2831:
 1161              	.LBB2832:
 1162              	.LBI2832:
 243:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 1163              		.loc 16 243 9 view .LVU281
 1164              	.LBB2833:
 1165              	.LBB2834:
 1166              	.LBI2834:
 1167              		.file 20 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
   1:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // Components for manipulating sequences of characters -*- C++ -*-
   2:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
   3:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** //
   5:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // software; you can redistribute it and/or modify it under the
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 164


   7:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // terms of the GNU General Public License as published by the
   8:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // any later version.
  10:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  11:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // This library is distributed in the hope that it will be useful,
  12:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // GNU General Public License for more details.
  15:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  16:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // 3.1, as published by the Free Software Foundation.
  19:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  20:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // You should have received a copy of the GNU General Public License and
  21:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // <http://www.gnu.org/licenses/>.
  24:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  25:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** /** @file bits/basic_string.tcc
  26:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****  *  This is an internal header file, included by other library headers.
  27:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****  *  Do not attempt to use it directly. @headername{string}
  28:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****  */
  29:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  30:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** //
  31:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // ISO C++ 14882: 21  Strings library
  32:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** //
  33:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  34:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // Written by Jason Merrill based upon the specification by Takanori Adachi
  35:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // in ANSI X3J16/94-0013R2.  Rewritten by Nathan Myers to ISO-14882.
  36:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // Non-reference-counted implementation written by Paolo Carlini and
  37:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** // updated by Jonathan Wakely for ISO-14882-2011.
  38:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  39:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** #ifndef _BASIC_STRING_TCC
  40:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** #define _BASIC_STRING_TCC 1
  41:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  42:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** #pragma GCC system_header
  43:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  44:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** #include <bits/cxxabi_forced.h>
  45:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  46:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** namespace std _GLIBCXX_VISIBILITY(default)
  47:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** {
  48:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  49:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  50:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** #if _GLIBCXX_USE_CXX11_ABI
  51:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  52:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
  53:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     const typename basic_string<_CharT, _Traits, _Alloc>::size_type
  54:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::npos;
  55:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  56:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
  57:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     void
  58:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
  59:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     swap(basic_string& __s) _GLIBCXX_NOEXCEPT
  60:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     {
  61:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       if (this == &__s)
  62:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	return;
  63:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 165


  64:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _Alloc_traits::_S_on_swap(_M_get_allocator(), __s._M_get_allocator());
  65:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
  66:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       if (_M_is_local())
  67:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	if (__s._M_is_local())
  68:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
  69:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    if (length() && __s.length())
  70:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      {
  71:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		_CharT __tmp_data[_S_local_capacity + 1];
  72:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		traits_type::copy(__tmp_data, __s._M_local_buf,
  73:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				  _S_local_capacity + 1);
  74:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		traits_type::copy(__s._M_local_buf, _M_local_buf,
  75:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				  _S_local_capacity + 1);
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		traits_type::copy(_M_local_buf, __tmp_data,
  77:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				  _S_local_capacity + 1);
  78:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      }
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    else if (__s.length())
  80:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      {
  81:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		traits_type::copy(_M_local_buf, __s._M_local_buf,
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				  _S_local_capacity + 1);
  83:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		_M_length(__s.length());
  84:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		__s._M_set_length(0);
  85:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		return;
  86:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      }
  87:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    else if (length())
  88:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      {
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		traits_type::copy(__s._M_local_buf, _M_local_buf,
  90:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				  _S_local_capacity + 1);
  91:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		__s._M_length(length());
  92:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		_M_set_length(0);
  93:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		return;
  94:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      }
  95:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  }
  96:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	else
  97:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
  98:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    const size_type __tmp_capacity = __s._M_allocated_capacity;
  99:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    traits_type::copy(__s._M_local_buf, _M_local_buf,
 100:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 			      _S_local_capacity + 1);
 101:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_data(__s._M_data());
 102:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    __s._M_data(__s._M_local_buf);
 103:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__tmp_capacity);
 104:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  }
 105:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       else
 106:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	{
 107:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  const size_type __tmp_capacity = _M_allocated_capacity;
 108:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  if (__s._M_is_local())
 109:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    {
 110:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      traits_type::copy(_M_local_buf, __s._M_local_buf,
 111:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				_S_local_capacity + 1);
 112:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      __s._M_data(_M_data());
 113:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      _M_data(_M_local_buf);
 114:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    }
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  else
 116:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    {
 117:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      pointer __tmp_ptr = _M_data();
 118:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      _M_data(__s._M_data());
 119:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      __s._M_data(__tmp_ptr);
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      _M_capacity(__s._M_allocated_capacity);
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 166


 121:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    }
 122:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  __s._M_capacity(__tmp_capacity);
 123:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	}
 124:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 125:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       const size_type __tmp_length = length();
 126:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_length(__s.length());
 127:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       __s._M_length(__tmp_length);
 128:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     }
 129:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 130:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 131:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     typename basic_string<_CharT, _Traits, _Alloc>::pointer
 132:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     _M_create(size_type& __capacity, size_type __old_capacity)
 134:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     {
 135:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 136:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       // 83.  String::npos vs. string::max_size()
 137:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       if (__capacity > max_size())
 138:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	std::__throw_length_error(__N("basic_string::_M_create"));
 139:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 140:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       // The below implements an exponential growth policy, necessary to
 141:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       // meet amortized linear time requirements of the library: see
 142:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       // http://gcc.gnu.org/ml/libstdc++/2001-07/msg00085.html.
 143:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       if (__capacity > __old_capacity && __capacity < 2 * __old_capacity)
 144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	{
 145:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  __capacity = 2 * __old_capacity;
 146:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  // Never allocate a string bigger than max_size.
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  if (__capacity > max_size())
 148:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    __capacity = max_size();
 149:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	}
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 151:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       // NB: Need an array of char_type[__capacity], plus a terminating
 152:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       // null char_type() element.
 153:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       return _Alloc_traits::allocate(_M_get_allocator(), __capacity + 1);
 154:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     }
 155:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 156:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   // NB: This is the special case for Input Iterators, used in
 157:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   // istreambuf_iterators, etc.
 158:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   // Input Iterators have a cost structure very different from
 159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   // pointers, calling for a different coding style.
 160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 161:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     template<typename _InIterator>
 162:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       void
 163:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       basic_string<_CharT, _Traits, _Alloc>::
 164:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 165:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		   std::input_iterator_tag)
 166:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       {
 167:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	size_type __len = 0;
 168:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	size_type __capacity = size_type(_S_local_capacity);
 169:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 170:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	while (__beg != __end && __len < __capacity)
 171:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 172:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_data()[__len++] = *__beg;
 173:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    ++__beg;
 174:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  }
 175:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 176:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	__try
 177:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 167


 178:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    while (__beg != __end)
 179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      {
 180:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		if (__len == __capacity)
 181:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		  {
 182:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		    // Allocate more space.
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		    __capacity = __len + 1;
 184:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		    pointer __another = _M_create(__capacity, __len);
 185:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		    this->_S_copy(__another, _M_data(), __len);
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		    _M_dispose();
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		    _M_data(__another);
 188:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		    _M_capacity(__capacity);
 189:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		  }
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		_M_data()[__len++] = *__beg;
 191:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		++__beg;
 192:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	      }
 193:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  }
 194:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	__catch(...)
 195:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 196:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_dispose();
 197:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    __throw_exception_again;
 198:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  }
 199:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	_M_set_length(__len);
 201:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       }
 202:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 203:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 204:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****     template<typename _InIterator>
 205:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       void
 206:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       basic_string<_CharT, _Traits, _Alloc>::
 1168              		.loc 20 206 7 view .LVU282
 1169              	.LBB2835:
 207:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 208:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 		   std::forward_iterator_tag)
 209:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       {
 210:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	// NB: Not required, but considered best practice.
 211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	if (__gnu_cxx::__is_null_pointer(__beg) && __beg != __end)
 1170              		.loc 20 211 42 is_stmt 0 view .LVU283
 1171 0010 F742     		cmn	r7, r6
 1172 0012 01D0     		beq	.L52
 1173 0014 002F     		cmp	r7, #0
 1174 0016 74D0     		beq	.L57
 1175              	.L52:
 212:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 213:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 214:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 215:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
 216:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 217:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	if (__dnew > size_type(_S_local_capacity))
 1176              		.loc 20 217 2 view .LVU284
 1177 0018 0F2E     		cmp	r6, #15
 215:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 1178              		.loc 20 215 12 view .LVU285
 1179 001a 0196     		str	r6, [sp, #4]
 1180              		.loc 20 217 2 view .LVU286
 1181 001c 42D8     		bhi	.L92
 1182              	.LVL68:
 1183              	.LBB2836:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 168


 1184              	.LBI2836:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1185              		.loc 16 186 7 is_stmt 1 view .LVU287
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1186              		.loc 16 186 7 is_stmt 0 view .LVU288
 1187              	.LBE2836:
 1188              	.LBB2837:
 1189              	.LBI2837:
 392:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 1190              		.loc 16 392 7 is_stmt 1 view .LVU289
 1191              	.LBB2838:
 1192              	.LBI2838:
 346:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1193              		.loc 16 346 7 view .LVU290
 1194              	.LBB2839:
 348:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 1195              		.loc 16 348 2 is_stmt 0 view .LVU291
 1196 001e 012E     		cmp	r6, #1
 1197 0020 37D1     		bne	.L55
 1198              	.LVL69:
 1199              	.LBB2840:
 1200              	.LBI2840:
 321:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 1201              		.loc 17 321 7 is_stmt 1 view .LVU292
 1202              	.LBB2841:
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 1203              		.loc 17 322 9 view .LVU293
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 1204              		.loc 17 322 16 is_stmt 0 view .LVU294
 1205 0022 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 1206              		.loc 17 322 14 view .LVU295
 1207 0024 2372     		strb	r3, [r4, #8]
 1208              	.LVL70:
 1209              	.L56:
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 1210              		.loc 17 322 14 view .LVU296
 1211              	.LBE2841:
 1212              	.LBE2840:
 1213              	.LBE2839:
 1214              	.LBE2838:
 1215              	.LBE2837:
 1216              	.LBB2857:
 1217              	.LBI2857:
 214:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1218              		.loc 16 214 7 is_stmt 1 view .LVU297
 1219              	.LBB2858:
 1220              	.LBB2859:
 1221              	.LBI2859:
 182:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 1222              		.loc 16 182 7 view .LVU298
 1223              	.LBE2859:
 1224              	.LBB2861:
 1225              	.LBB2862:
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 1226              		.loc 17 322 14 is_stmt 0 view .LVU299
 1227 0026 0023     		movs	r3, #0
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 169


 1228              	.LBE2862:
 1229              	.LBE2861:
 1230              	.LBB2864:
 1231              	.LBB2860:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1232              		.loc 16 183 26 view .LVU300
 1233 0028 6660     		str	r6, [r4, #4]
 1234              	.LVL71:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1235              		.loc 16 183 26 view .LVU301
 1236              	.LBE2860:
 1237              	.LBE2864:
 1238              	.LBB2865:
 1239              	.LBI2865:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1240              		.loc 16 186 7 is_stmt 1 view .LVU302
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1241              		.loc 16 186 7 is_stmt 0 view .LVU303
 1242              	.LBE2865:
 1243              	.LBB2867:
 1244              	.LBI2861:
 321:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 1245              		.loc 17 321 7 is_stmt 1 view .LVU304
 1246              	.LBB2863:
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 1247              		.loc 17 322 9 view .LVU305
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 1248              		.loc 17 322 14 is_stmt 0 view .LVU306
 1249 002a 8355     		strb	r3, [r0, r6]
 1250              	.LVL72:
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 1251              		.loc 17 322 14 view .LVU307
 1252              	.LBE2863:
 1253              	.LBE2867:
 1254              	.LBE2858:
 1255              	.LBE2857:
 1256              	.LBE2835:
 1257              	.LBE2834:
 1258              	.LBE2833:
 1259              	.LBE2832:
 1260              	.LBE2831:
 1261              	.LBE2830:
 1262              	.LBE2901:
 1263              	.LBE2906:
 1264              	.LBB2907:
 1265              	.LBI2907:
 448:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(),
 1266              		.loc 16 448 7 is_stmt 1 view .LVU308
 1267              	.LBB2908:
 1268              	.LBB2909:
 1269              	.LBI2909:
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1270              		.loc 16 190 7 view .LVU309
 1271              	.LBB2910:
 193:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 1272              		.loc 16 193 51 is_stmt 0 view .LVU310
 1273 002c 04F12000 		add	r0, r4, #32
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 170


 1274              	.LVL73:
 193:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 1275              		.loc 16 193 51 view .LVU311
 1276              	.LBE2910:
 1277              	.LBE2909:
 1278              	.LBB2911:
 1279              	.LBI2911:
 290:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 1280              		.loc 16 290 7 is_stmt 1 view .LVU312
 290:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 1281              		.loc 16 290 7 is_stmt 0 view .LVU313
 1282              	.LBE2911:
 1283              	.LBB2912:
 1284              	.LBI2912:
 1285              		.loc 18 97 29 is_stmt 1 view .LVU314
 1286              	.LBB2913:
 1287              	.LBI2913:
 1288              		.loc 13 558 7 view .LVU315
 1289              	.LBB2914:
 1290              	.LBI2914:
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 1291              		.loc 11 147 7 view .LVU316
 1292              	.LBB2915:
 1293              	.LBI2915:
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1294              		.loc 12 82 7 view .LVU317
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1295              		.loc 12 82 7 is_stmt 0 view .LVU318
 1296              	.LBE2915:
 1297              	.LBE2914:
 1298              	.LBE2913:
 1299              	.LBE2912:
 1300              	.LBB2916:
 1301              	.LBI2916:
 159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 1302              		.loc 16 159 2 is_stmt 1 view .LVU319
 1303              	.LBB2917:
 1304              	.LBB2918:
 1305              	.LBI2918:
 1306              		.loc 19 101 5 view .LVU320
 1307              		.loc 19 101 5 is_stmt 0 view .LVU321
 1308              	.LBE2918:
 1309              	.LBB2919:
 1310              	.LBI2919:
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 1311              		.loc 11 147 7 is_stmt 1 view .LVU322
 1312              	.LBB2920:
 1313              	.LBI2920:
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1314              		.loc 12 82 7 view .LVU323
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1315              		.loc 12 82 7 is_stmt 0 view .LVU324
 1316              	.LBE2920:
 1317              	.LBE2919:
 1318              	.LBE2917:
 1319              	.LBE2916:
 1320              	.LBB2922:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 171


 1321              	.LBB2923:
 908:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1322              		.loc 16 908 16 view .LVU325
 1323 0030 EE69     		ldr	r6, [r5, #28]
 1324              	.LBE2923:
 1325              	.LBE2922:
 1326              	.LBB2924:
 1327              	.LBB2921:
 160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 1328              		.loc 16 160 46 view .LVU326
 1329 0032 A061     		str	r0, [r4, #24]
 1330              	.LVL74:
 160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 1331              		.loc 16 160 46 view .LVU327
 1332              	.LBE2921:
 1333              	.LBE2924:
 1334              	.LBB2925:
 1335              	.LBI2925:
 1336              		.loc 11 162 7 is_stmt 1 view .LVU328
 1337              	.LBB2926:
 1338              	.LBI2926:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1339              		.loc 12 89 7 view .LVU329
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1340              		.loc 12 89 7 is_stmt 0 view .LVU330
 1341              	.LBE2926:
 1342              	.LBE2925:
 1343              	.LBB2927:
 1344              	.LBI2927:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1345              		.loc 16 186 7 is_stmt 1 view .LVU331
 1346              	.LBB2928:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1347              		.loc 16 187 28 is_stmt 0 view .LVU332
 1348 0034 AF69     		ldr	r7, [r5, #24]
 1349              	.LVL75:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1350              		.loc 16 187 28 view .LVU333
 1351              	.LBE2928:
 1352              	.LBE2927:
 1353              	.LBB2929:
 1354              	.LBI2929:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1355              		.loc 16 186 7 is_stmt 1 view .LVU334
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1356              		.loc 16 186 7 is_stmt 0 view .LVU335
 1357              	.LBE2929:
 1358              	.LBB2930:
 1359              	.LBI2922:
 907:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 1360              		.loc 16 907 7 is_stmt 1 view .LVU336
 907:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 1361              		.loc 16 907 7 is_stmt 0 view .LVU337
 1362              	.LBE2930:
 1363              	.LBB2931:
 1364              	.LBI2931:
 263:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 172


 1365              		.loc 16 263 9 is_stmt 1 view .LVU338
 1366              	.LBB2932:
 1367              	.LBB2933:
 1368              	.LBI2933:
 243:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 1369              		.loc 16 243 9 view .LVU339
 1370              	.LBB2934:
 1371              	.LBB2935:
 1372              	.LBI2935:
 206:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 1373              		.loc 20 206 7 view .LVU340
 1374              	.LBB2936:
 211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 1375              		.loc 20 211 42 is_stmt 0 view .LVU341
 1376 0036 F742     		cmn	r7, r6
 1377 0038 01D0     		beq	.L68
 1378 003a 002F     		cmp	r7, #0
 1379 003c 61D0     		beq	.L57
 1380              	.L68:
 1381              		.loc 20 217 2 view .LVU342
 1382 003e 0F2E     		cmp	r6, #15
 215:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 1383              		.loc 20 215 12 view .LVU343
 1384 0040 0196     		str	r6, [sp, #4]
 1385              		.loc 20 217 2 view .LVU344
 1386 0042 4ED8     		bhi	.L93
 1387              	.LVL76:
 1388              	.LBB2937:
 1389              	.LBI2937:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1390              		.loc 16 186 7 is_stmt 1 view .LVU345
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1391              		.loc 16 186 7 is_stmt 0 view .LVU346
 1392              	.LBE2937:
 1393              	.LBB2938:
 1394              	.LBI2938:
 392:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 1395              		.loc 16 392 7 is_stmt 1 view .LVU347
 1396              	.LBB2939:
 1397              	.LBI2939:
 346:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1398              		.loc 16 346 7 view .LVU348
 1399              	.LBB2940:
 348:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 1400              		.loc 16 348 2 is_stmt 0 view .LVU349
 1401 0044 012E     		cmp	r6, #1
 1402 0046 27D1     		bne	.L61
 1403              	.LVL77:
 1404              	.LBB2941:
 1405              	.LBI2941:
 321:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 1406              		.loc 17 321 7 is_stmt 1 view .LVU350
 1407              	.LBB2942:
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 1408              		.loc 17 322 9 view .LVU351
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 1409              		.loc 17 322 16 is_stmt 0 view .LVU352
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 173


 1410 0048 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 1411              		.loc 17 322 14 view .LVU353
 1412 004a 84F82030 		strb	r3, [r4, #32]
 1413              	.LVL78:
 1414              	.L62:
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 1415              		.loc 17 322 14 view .LVU354
 1416              	.LBE2942:
 1417              	.LBE2941:
 1418              	.LBE2940:
 1419              	.LBE2939:
 1420              	.LBE2938:
 1421              	.LBB2958:
 1422              	.LBI2958:
 214:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1423              		.loc 16 214 7 is_stmt 1 view .LVU355
 1424              	.LBB2959:
 1425              	.LBB2960:
 1426              	.LBI2960:
 182:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 1427              		.loc 16 182 7 view .LVU356
 1428              	.LBE2960:
 1429              	.LBB2962:
 1430              	.LBB2963:
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 1431              		.loc 17 322 14 is_stmt 0 view .LVU357
 1432 004e 0023     		movs	r3, #0
 1433              	.LBE2963:
 1434              	.LBE2962:
 1435              	.LBB2965:
 1436              	.LBB2961:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1437              		.loc 16 183 26 view .LVU358
 1438 0050 E661     		str	r6, [r4, #28]
 1439              	.LVL79:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1440              		.loc 16 183 26 view .LVU359
 1441              	.LBE2961:
 1442              	.LBE2965:
 1443              	.LBB2966:
 1444              	.LBI2966:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1445              		.loc 16 186 7 is_stmt 1 view .LVU360
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1446              		.loc 16 186 7 is_stmt 0 view .LVU361
 1447              	.LBE2966:
 1448              	.LBB2968:
 1449              	.LBI2962:
 321:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 1450              		.loc 17 321 7 is_stmt 1 view .LVU362
 1451              	.LBB2964:
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 1452              		.loc 17 322 9 view .LVU363
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 1453              		.loc 17 322 14 is_stmt 0 view .LVU364
 1454 0052 8355     		strb	r3, [r0, r6]
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 174


 1455              	.LVL80:
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 1456              		.loc 17 322 14 view .LVU365
 1457              	.LBE2964:
 1458              	.LBE2968:
 1459              	.LBE2959:
 1460              	.LBE2958:
 1461              	.LBE2936:
 1462              	.LBE2935:
 1463              	.LBE2934:
 1464              	.LBE2933:
 1465              	.LBE2932:
 1466              	.LBE2931:
 1467              	.LBE2908:
 1468              	.LBE2907:
 1469              	.LBB2997:
 1470              	.LBI2997:
 448:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(),
 1471              		.loc 16 448 7 is_stmt 1 view .LVU366
 1472              	.LBB2998:
 1473              	.LBB2999:
 1474              	.LBI2999:
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1475              		.loc 16 190 7 view .LVU367
 1476              	.LBB3000:
 193:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 1477              		.loc 16 193 51 is_stmt 0 view .LVU368
 1478 0054 04F13800 		add	r0, r4, #56
 1479              	.LVL81:
 193:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 1480              		.loc 16 193 51 view .LVU369
 1481              	.LBE3000:
 1482              	.LBE2999:
 1483              	.LBB3001:
 1484              	.LBI3001:
 290:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 1485              		.loc 16 290 7 is_stmt 1 view .LVU370
 290:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 1486              		.loc 16 290 7 is_stmt 0 view .LVU371
 1487              	.LBE3001:
 1488              	.LBB3002:
 1489              	.LBI3002:
 1490              		.loc 18 97 29 is_stmt 1 view .LVU372
 1491              	.LBB3003:
 1492              	.LBI3003:
 1493              		.loc 13 558 7 view .LVU373
 1494              	.LBB3004:
 1495              	.LBI3004:
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 1496              		.loc 11 147 7 view .LVU374
 1497              	.LBB3005:
 1498              	.LBI3005:
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1499              		.loc 12 82 7 view .LVU375
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1500              		.loc 12 82 7 is_stmt 0 view .LVU376
 1501              	.LBE3005:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 175


 1502              	.LBE3004:
 1503              	.LBE3003:
 1504              	.LBE3002:
 1505              	.LBB3006:
 1506              	.LBI3006:
 159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 1507              		.loc 16 159 2 is_stmt 1 view .LVU377
 1508              	.LBB3007:
 1509              	.LBB3008:
 1510              	.LBI3008:
 1511              		.loc 19 101 5 view .LVU378
 1512              		.loc 19 101 5 is_stmt 0 view .LVU379
 1513              	.LBE3008:
 1514              	.LBB3009:
 1515              	.LBI3009:
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 1516              		.loc 11 147 7 is_stmt 1 view .LVU380
 1517              	.LBB3010:
 1518              	.LBI3010:
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1519              		.loc 12 82 7 view .LVU381
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1520              		.loc 12 82 7 is_stmt 0 view .LVU382
 1521              	.LBE3010:
 1522              	.LBE3009:
 1523              	.LBE3007:
 1524              	.LBE3006:
 1525              	.LBB3012:
 1526              	.LBB3013:
 908:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1527              		.loc 16 908 16 view .LVU383
 1528 0058 6E6B     		ldr	r6, [r5, #52]
 1529              	.LBE3013:
 1530              	.LBE3012:
 1531              	.LBB3014:
 1532              	.LBB3011:
 160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 1533              		.loc 16 160 46 view .LVU384
 1534 005a 2063     		str	r0, [r4, #48]
 1535              	.LVL82:
 160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 1536              		.loc 16 160 46 view .LVU385
 1537              	.LBE3011:
 1538              	.LBE3014:
 1539              	.LBB3015:
 1540              	.LBI3015:
 1541              		.loc 11 162 7 is_stmt 1 view .LVU386
 1542              	.LBB3016:
 1543              	.LBI3016:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1544              		.loc 12 89 7 view .LVU387
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 1545              		.loc 12 89 7 is_stmt 0 view .LVU388
 1546              	.LBE3016:
 1547              	.LBE3015:
 1548              	.LBB3017:
 1549              	.LBI3017:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 176


 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1550              		.loc 16 186 7 is_stmt 1 view .LVU389
 1551              	.LBB3018:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1552              		.loc 16 187 28 is_stmt 0 view .LVU390
 1553 005c 2F6B     		ldr	r7, [r5, #48]
 1554              	.LVL83:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1555              		.loc 16 187 28 view .LVU391
 1556              	.LBE3018:
 1557              	.LBE3017:
 1558              	.LBB3019:
 1559              	.LBI3019:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1560              		.loc 16 186 7 is_stmt 1 view .LVU392
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1561              		.loc 16 186 7 is_stmt 0 view .LVU393
 1562              	.LBE3019:
 1563              	.LBB3020:
 1564              	.LBI3012:
 907:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 1565              		.loc 16 907 7 is_stmt 1 view .LVU394
 907:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 1566              		.loc 16 907 7 is_stmt 0 view .LVU395
 1567              	.LBE3020:
 1568              	.LBB3021:
 1569              	.LBI3021:
 263:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	{
 1570              		.loc 16 263 9 is_stmt 1 view .LVU396
 1571              	.LBB3022:
 1572              	.LBB3023:
 1573              	.LBI3023:
 243:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 			 std::__false_type)
 1574              		.loc 16 243 9 view .LVU397
 1575              	.LBB3024:
 1576              	.LBB3025:
 1577              	.LBI3025:
 206:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 1578              		.loc 20 206 7 view .LVU398
 1579              	.LBB3026:
 211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 1580              		.loc 20 211 42 is_stmt 0 view .LVU399
 1581 005e F742     		cmn	r7, r6
 1582 0060 01D0     		beq	.L69
 1583 0062 002F     		cmp	r7, #0
 1584 0064 4DD0     		beq	.L57
 1585              	.L69:
 1586              		.loc 20 217 2 view .LVU400
 1587 0066 0F2E     		cmp	r6, #15
 215:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 1588              		.loc 20 215 12 view .LVU401
 1589 0068 0196     		str	r6, [sp, #4]
 1590              		.loc 20 217 2 view .LVU402
 1591 006a 2AD8     		bhi	.L94
 1592              	.LVL84:
 1593              	.LBB3027:
 1594              	.LBI3027:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 177


 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1595              		.loc 16 186 7 is_stmt 1 view .LVU403
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1596              		.loc 16 186 7 is_stmt 0 view .LVU404
 1597              	.LBE3027:
 1598              	.LBB3028:
 1599              	.LBI3028:
 392:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 1600              		.loc 16 392 7 is_stmt 1 view .LVU405
 1601              	.LBB3029:
 1602              	.LBI3029:
 346:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1603              		.loc 16 346 7 view .LVU406
 1604              	.LBB3030:
 348:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  traits_type::assign(*__d, *__s);
 1605              		.loc 16 348 2 is_stmt 0 view .LVU407
 1606 006c 012E     		cmp	r6, #1
 1607 006e 16D1     		bne	.L66
 1608              	.LVL85:
 1609              	.LBB3031:
 1610              	.LBI3031:
 321:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 1611              		.loc 17 321 7 is_stmt 1 view .LVU408
 1612              	.LBB3032:
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 1613              		.loc 17 322 9 view .LVU409
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 1614              		.loc 17 322 16 is_stmt 0 view .LVU410
 1615 0070 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 1616              		.loc 17 322 14 view .LVU411
 1617 0072 84F83830 		strb	r3, [r4, #56]
 1618              	.LVL86:
 1619              	.L67:
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 1620              		.loc 17 322 14 view .LVU412
 1621              	.LBE3032:
 1622              	.LBE3031:
 1623              	.LBE3030:
 1624              	.LBE3029:
 1625              	.LBE3028:
 1626              	.LBB3048:
 1627              	.LBI3048:
 214:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1628              		.loc 16 214 7 is_stmt 1 view .LVU413
 1629              	.LBB3049:
 1630              	.LBB3050:
 1631              	.LBI3050:
 182:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 1632              		.loc 16 182 7 view .LVU414
 1633              	.LBE3050:
 1634              	.LBB3052:
 1635              	.LBB3053:
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 1636              		.loc 17 322 14 is_stmt 0 view .LVU415
 1637 0076 0023     		movs	r3, #0
 1638              	.LBE3053:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 178


 1639              	.LBE3052:
 1640              	.LBB3055:
 1641              	.LBB3051:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1642              		.loc 16 183 26 view .LVU416
 1643 0078 6663     		str	r6, [r4, #52]
 1644              	.LVL87:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1645              		.loc 16 183 26 view .LVU417
 1646              	.LBE3051:
 1647              	.LBE3055:
 1648              	.LBB3056:
 1649              	.LBI3056:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1650              		.loc 16 186 7 is_stmt 1 view .LVU418
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1651              		.loc 16 186 7 is_stmt 0 view .LVU419
 1652              	.LBE3056:
 1653              	.LBB3058:
 1654              	.LBI3052:
 321:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 1655              		.loc 17 321 7 is_stmt 1 view .LVU420
 1656              	.LBB3054:
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 1657              		.loc 17 322 9 view .LVU421
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 1658              		.loc 17 322 14 is_stmt 0 view .LVU422
 1659 007a 8355     		strb	r3, [r0, r6]
 1660              	.LVL88:
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 1661              		.loc 17 322 14 view .LVU423
 1662              	.LBE3054:
 1663              	.LBE3058:
 1664              	.LBE3049:
 1665              	.LBE3048:
 1666              	.LBE3026:
 1667              	.LBE3025:
 1668              	.LBE3024:
 1669              	.LBE3023:
 1670              	.LBE3022:
 1671              	.LBE3021:
 1672              	.LBE2998:
 1673              	.LBE2997:
  37:src/parameter_controller.h **** 	std::string label;
 1674              		.loc 15 37 8 view .LVU424
 1675 007c A86C     		ldr	r0, [r5, #72]
 1676 007e E96C     		ldr	r1, [r5, #76]	@ float
 1677 0080 2A6D     		ldr	r2, [r5, #80]	@ float
 1678 0082 6B6D     		ldr	r3, [r5, #84]	@ float
 1679 0084 A064     		str	r0, [r4, #72]
 1680              	.LBE3095:
 1681 0086 2046     		mov	r0, r4
 1682              	.LBB3096:
 1683 0088 E164     		str	r1, [r4, #76]	@ float
 1684 008a 2265     		str	r2, [r4, #80]	@ float
 1685 008c 6365     		str	r3, [r4, #84]	@ float
 1686              	.LBE3096:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 179


 1687 008e 03B0     		add	sp, sp, #12
 1688              		.cfi_remember_state
 1689              		.cfi_def_cfa_offset 20
 1690              		@ sp needed
 1691 0090 F0BD     		pop	{r4, r5, r6, r7, pc}
 1692              	.LVL89:
 1693              	.L55:
 1694              		.cfi_restore_state
 1695              	.LBB3097:
 1696              	.LBB3087:
 1697              	.LBB2902:
 1698              	.LBB2897:
 1699              	.LBB2894:
 1700              	.LBB2891:
 1701              	.LBB2888:
 1702              	.LBB2885:
 1703              	.LBB2882:
 1704              	.LBB2870:
 1705              	.LBB2854:
 1706              	.LBB2851:
 1707              	.LBB2842:
 1708              	.LBI2842:
 346:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1709              		.loc 16 346 7 is_stmt 1 view .LVU425
 1710              	.LBB2843:
 1711              	.LBI2843:
 358:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 359:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 360:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX17_CONSTEXPR const char_type*
 361:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       find(const char_type* __s, size_t __n, const char_type& __a)
 362:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 363:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__n == 0)
 364:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return 0;
 365:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #if __cplusplus >= 201703L
 366:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__builtin_constant_p(__n)
 367:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	    && __builtin_constant_p(__a)
 368:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	    && __constant_char_array_p(__s, __n))
 369:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::find(__s, __n, __a);
 370:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 371:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return static_cast<const char_type*>(__builtin_memchr(__s, __a, __n));
 372:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 373:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 374:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX20_CONSTEXPR char_type*
 375:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       move(char_type* __s1, const char_type* __s2, size_t __n)
 376:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 377:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__n == 0)
 378:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 379:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifdef __cpp_lib_is_constant_evaluated
 380:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (std::is_constant_evaluated())
 381:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::move(__s1, __s2, __n);
 382:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 383:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return static_cast<char_type*>(__builtin_memmove(__s1, __s2, __n));
 384:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       }
 385:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 386:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       static _GLIBCXX20_CONSTEXPR char_type*
 387:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       copy(char_type* __s1, const char_type* __s2, size_t __n)
 1712              		.loc 17 387 7 view .LVU426
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 180


 1713              	.LBB2844:
 388:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 389:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (__n == 0)
 1714              		.loc 17 389 2 view .LVU427
 1715 0092 002E     		cmp	r6, #0
 1716 0094 C7D0     		beq	.L56
 1717 0096 0DE0     		b	.L54
 1718              	.LVL90:
 1719              	.L61:
 1720              		.loc 17 389 2 is_stmt 0 view .LVU428
 1721              	.LBE2844:
 1722              	.LBE2843:
 1723              	.LBE2842:
 1724              	.LBE2851:
 1725              	.LBE2854:
 1726              	.LBE2870:
 1727              	.LBE2882:
 1728              	.LBE2885:
 1729              	.LBE2888:
 1730              	.LBE2891:
 1731              	.LBE2894:
 1732              	.LBE2897:
 1733              	.LBE2902:
 1734              	.LBE3087:
 1735              	.LBB3088:
 1736              	.LBB2995:
 1737              	.LBB2993:
 1738              	.LBB2991:
 1739              	.LBB2989:
 1740              	.LBB2987:
 1741              	.LBB2985:
 1742              	.LBB2983:
 1743              	.LBB2971:
 1744              	.LBB2955:
 1745              	.LBB2952:
 1746              	.LBB2943:
 1747              	.LBI2943:
 346:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1748              		.loc 16 346 7 is_stmt 1 view .LVU429
 1749              	.LBB2944:
 1750              	.LBI2944:
 387:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 1751              		.loc 17 387 7 view .LVU430
 1752              	.LBB2945:
 1753              		.loc 17 389 2 view .LVU431
 1754 0098 002E     		cmp	r6, #0
 1755 009a D8D0     		beq	.L62
 1756 009c 2AE0     		b	.L60
 1757              	.LVL91:
 1758              	.L66:
 1759              		.loc 17 389 2 is_stmt 0 view .LVU432
 1760              	.LBE2945:
 1761              	.LBE2944:
 1762              	.LBE2943:
 1763              	.LBE2952:
 1764              	.LBE2955:
 1765              	.LBE2971:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 181


 1766              	.LBE2983:
 1767              	.LBE2985:
 1768              	.LBE2987:
 1769              	.LBE2989:
 1770              	.LBE2991:
 1771              	.LBE2993:
 1772              	.LBE2995:
 1773              	.LBE3088:
 1774              	.LBB3089:
 1775              	.LBB3085:
 1776              	.LBB3083:
 1777              	.LBB3081:
 1778              	.LBB3079:
 1779              	.LBB3077:
 1780              	.LBB3075:
 1781              	.LBB3073:
 1782              	.LBB3061:
 1783              	.LBB3045:
 1784              	.LBB3042:
 1785              	.LBB3033:
 1786              	.LBI3033:
 346:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1787              		.loc 16 346 7 is_stmt 1 view .LVU433
 1788              	.LBB3034:
 1789              	.LBI3034:
 387:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 1790              		.loc 17 387 7 view .LVU434
 1791              	.LBB3035:
 1792              		.loc 17 389 2 view .LVU435
 1793 009e 002E     		cmp	r6, #0
 1794 00a0 E9D0     		beq	.L67
 1795 00a2 17E0     		b	.L65
 1796              	.LVL92:
 1797              	.L92:
 1798              		.loc 17 389 2 is_stmt 0 view .LVU436
 1799              	.LBE3035:
 1800              	.LBE3034:
 1801              	.LBE3033:
 1802              	.LBE3042:
 1803              	.LBE3045:
 1804              	.LBE3061:
 1805              	.LBE3073:
 1806              	.LBE3075:
 1807              	.LBE3077:
 1808              	.LBE3079:
 1809              	.LBE3081:
 1810              	.LBE3083:
 1811              	.LBE3085:
 1812              	.LBE3089:
 1813              	.LBB3090:
 1814              	.LBB2903:
 1815              	.LBB2898:
 1816              	.LBB2895:
 1817              	.LBB2892:
 1818              	.LBB2889:
 1819              	.LBB2886:
 1820              	.LBB2883:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 182


 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 219:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_data(_M_create(__dnew, size_type(0)));
 1821              		.loc 20 219 13 view .LVU437
 1822 00a4 0022     		movs	r2, #0
 1823 00a6 01A9     		add	r1, sp, #4
 1824              	.LVL93:
 1825              		.loc 20 219 13 view .LVU438
 1826 00a8 2046     		mov	r0, r4
 1827 00aa FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
 1828              	.LVL94:
 1829              	.LBB2871:
 1830              	.LBI2871:
 178:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 1831              		.loc 16 178 7 is_stmt 1 view .LVU439
 1832              	.LBE2871:
 1833              	.LBB2873:
 1834              	.LBB2874:
 211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1835              		.loc 16 211 31 is_stmt 0 view .LVU440
 1836 00ae 019B     		ldr	r3, [sp, #4]
 1837              	.LBE2874:
 1838              	.LBE2873:
 1839              	.LBB2876:
 1840              	.LBB2872:
 179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1841              		.loc 16 179 26 view .LVU441
 1842 00b0 2060     		str	r0, [r4]
 1843              	.LVL95:
 179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1844              		.loc 16 179 26 view .LVU442
 1845              	.LBE2872:
 1846              	.LBE2876:
 1847              	.LBB2877:
 1848              	.LBI2873:
 210:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 1849              		.loc 16 210 7 is_stmt 1 view .LVU443
 1850              	.LBB2875:
 211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1851              		.loc 16 211 31 is_stmt 0 view .LVU444
 1852 00b2 A360     		str	r3, [r4, #8]
 1853              	.LVL96:
 211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1854              		.loc 16 211 31 view .LVU445
 1855              	.LBE2875:
 1856              	.LBE2877:
 1857              	.LBB2878:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1858              		.loc 16 186 7 is_stmt 1 view .LVU446
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1859              		.loc 16 186 7 is_stmt 0 view .LVU447
 1860              	.LBE2878:
 1861              	.LBB2879:
 392:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 1862              		.loc 16 392 7 is_stmt 1 view .LVU448
 1863              	.LBB2855:
 346:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1864              		.loc 16 346 7 view .LVU449
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 183


 1865              	.LBB2852:
 1866              	.LBB2849:
 346:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1867              		.loc 16 346 7 view .LVU450
 1868              	.LBB2847:
 387:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 1869              		.loc 17 387 7 view .LVU451
 1870              	.LBB2845:
 1871              		.loc 17 389 2 view .LVU452
 1872              	.L54:
 390:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 391:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #ifdef __cpp_lib_is_constant_evaluated
 392:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	if (std::is_constant_evaluated())
 393:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::copy(__s1, __s2, __n);
 394:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** #endif
 395:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
 1873              		.loc 17 395 2 view .LVU453
 1874              		.loc 17 395 49 is_stmt 0 view .LVU454
 1875 00b4 3246     		mov	r2, r6
 1876 00b6 3946     		mov	r1, r7
 1877 00b8 FFF7FEFF 		bl	memcpy
 1878              	.LVL97:
 1879              		.loc 17 395 49 view .LVU455
 1880              	.LBE2845:
 1881              	.LBE2847:
 1882              	.LBE2849:
 1883              	.LBE2852:
 1884              	.LBE2855:
 1885              	.LBE2879:
 220:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  }
 222:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 223:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	// Check for out_of_range and length_error exceptions.
 224:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	__try
 225:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  { this->_S_copy_chars(_M_data(), __beg, __end); }
 226:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	__catch(...)
 227:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  {
 228:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_dispose();
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    __throw_exception_again;
 230:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	  }
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 
 232:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	_M_set_length(__dnew);
 1886              		.loc 20 232 15 view .LVU456
 1887 00bc 019E     		ldr	r6, [sp, #4]
 1888              	.LVL98:
 1889              	.LBB2880:
 1890              	.LBB2869:
 1891              	.LBB2868:
 1892              	.LBB2866:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1893              		.loc 16 187 28 view .LVU457
 1894 00be 2068     		ldr	r0, [r4]
 1895              	.LBE2866:
 1896              	.LBE2868:
 1897              	.LBE2869:
 1898              	.LBE2880:
 1899              	.LBB2881:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 184


 1900              	.LBB2856:
 1901              	.LBB2853:
 1902              	.LBB2850:
 1903              	.LBB2848:
 1904              	.LBB2846:
 1905              		.loc 17 395 66 view .LVU458
 1906 00c0 B1E7     		b	.L56
 1907              	.LVL99:
 1908              	.L94:
 1909              		.loc 17 395 66 view .LVU459
 1910              	.LBE2846:
 1911              	.LBE2848:
 1912              	.LBE2850:
 1913              	.LBE2853:
 1914              	.LBE2856:
 1915              	.LBE2881:
 1916              	.LBE2883:
 1917              	.LBE2886:
 1918              	.LBE2889:
 1919              	.LBE2892:
 1920              	.LBE2895:
 1921              	.LBE2898:
 1922              	.LBE2903:
 1923              	.LBE3090:
 1924              	.LBB3091:
 1925              	.LBB3086:
 1926              	.LBB3084:
 1927              	.LBB3082:
 1928              	.LBB3080:
 1929              	.LBB3078:
 1930              	.LBB3076:
 1931              	.LBB3074:
 219:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 1932              		.loc 20 219 13 view .LVU460
 1933 00c2 0022     		movs	r2, #0
 1934 00c4 01A9     		add	r1, sp, #4
 1935 00c6 04F13000 		add	r0, r4, #48
 1936 00ca FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
 1937              	.LVL100:
 1938              	.LBB3062:
 1939              	.LBI3062:
 178:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 1940              		.loc 16 178 7 is_stmt 1 view .LVU461
 1941              	.LBE3062:
 1942              	.LBB3064:
 1943              	.LBB3065:
 211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1944              		.loc 16 211 31 is_stmt 0 view .LVU462
 1945 00ce 019B     		ldr	r3, [sp, #4]
 1946              	.LBE3065:
 1947              	.LBE3064:
 1948              	.LBB3067:
 1949              	.LBB3063:
 179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1950              		.loc 16 179 26 view .LVU463
 1951 00d0 2063     		str	r0, [r4, #48]
 1952              	.LVL101:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 185


 179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1953              		.loc 16 179 26 view .LVU464
 1954              	.LBE3063:
 1955              	.LBE3067:
 1956              	.LBB3068:
 1957              	.LBI3064:
 210:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 1958              		.loc 16 210 7 is_stmt 1 view .LVU465
 1959              	.LBB3066:
 211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1960              		.loc 16 211 31 is_stmt 0 view .LVU466
 1961 00d2 A363     		str	r3, [r4, #56]
 1962              	.LVL102:
 211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 1963              		.loc 16 211 31 view .LVU467
 1964              	.LBE3066:
 1965              	.LBE3068:
 1966              	.LBB3069:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1967              		.loc 16 186 7 is_stmt 1 view .LVU468
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 1968              		.loc 16 186 7 is_stmt 0 view .LVU469
 1969              	.LBE3069:
 1970              	.LBB3070:
 392:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 1971              		.loc 16 392 7 is_stmt 1 view .LVU470
 1972              	.LBB3046:
 346:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1973              		.loc 16 346 7 view .LVU471
 1974              	.LBB3043:
 1975              	.LBB3040:
 346:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 1976              		.loc 16 346 7 view .LVU472
 1977              	.LBB3038:
 387:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 1978              		.loc 17 387 7 view .LVU473
 1979              	.LBB3036:
 389:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 1980              		.loc 17 389 2 view .LVU474
 1981              	.L65:
 1982              		.loc 17 395 2 view .LVU475
 1983              		.loc 17 395 49 is_stmt 0 view .LVU476
 1984 00d4 3246     		mov	r2, r6
 1985 00d6 3946     		mov	r1, r7
 1986 00d8 FFF7FEFF 		bl	memcpy
 1987              	.LVL103:
 1988              		.loc 17 395 49 view .LVU477
 1989              	.LBE3036:
 1990              	.LBE3038:
 1991              	.LBE3040:
 1992              	.LBE3043:
 1993              	.LBE3046:
 1994              	.LBE3070:
 1995              		.loc 20 232 15 view .LVU478
 1996 00dc 019E     		ldr	r6, [sp, #4]
 1997              	.LVL104:
 1998              	.LBB3071:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 186


 1999              	.LBB3060:
 2000              	.LBB3059:
 2001              	.LBB3057:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2002              		.loc 16 187 28 view .LVU479
 2003 00de 206B     		ldr	r0, [r4, #48]
 2004              	.LBE3057:
 2005              	.LBE3059:
 2006              	.LBE3060:
 2007              	.LBE3071:
 2008              	.LBB3072:
 2009              	.LBB3047:
 2010              	.LBB3044:
 2011              	.LBB3041:
 2012              	.LBB3039:
 2013              	.LBB3037:
 2014              		.loc 17 395 66 view .LVU480
 2015 00e0 C9E7     		b	.L67
 2016              	.LVL105:
 2017              	.L93:
 2018              		.loc 17 395 66 view .LVU481
 2019              	.LBE3037:
 2020              	.LBE3039:
 2021              	.LBE3041:
 2022              	.LBE3044:
 2023              	.LBE3047:
 2024              	.LBE3072:
 2025              	.LBE3074:
 2026              	.LBE3076:
 2027              	.LBE3078:
 2028              	.LBE3080:
 2029              	.LBE3082:
 2030              	.LBE3084:
 2031              	.LBE3086:
 2032              	.LBE3091:
 2033              	.LBB3092:
 2034              	.LBB2996:
 2035              	.LBB2994:
 2036              	.LBB2992:
 2037              	.LBB2990:
 2038              	.LBB2988:
 2039              	.LBB2986:
 2040              	.LBB2984:
 219:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 	    _M_capacity(__dnew);
 2041              		.loc 20 219 13 view .LVU482
 2042 00e2 0022     		movs	r2, #0
 2043 00e4 01A9     		add	r1, sp, #4
 2044 00e6 04F11800 		add	r0, r4, #24
 2045 00ea FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
 2046              	.LVL106:
 2047              	.LBB2972:
 2048              	.LBI2972:
 178:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 2049              		.loc 16 178 7 is_stmt 1 view .LVU483
 2050              	.LBE2972:
 2051              	.LBB2974:
 2052              	.LBB2975:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 187


 211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2053              		.loc 16 211 31 is_stmt 0 view .LVU484
 2054 00ee 019B     		ldr	r3, [sp, #4]
 2055              	.LBE2975:
 2056              	.LBE2974:
 2057              	.LBB2977:
 2058              	.LBB2973:
 179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2059              		.loc 16 179 26 view .LVU485
 2060 00f0 A061     		str	r0, [r4, #24]
 2061              	.LVL107:
 179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2062              		.loc 16 179 26 view .LVU486
 2063              	.LBE2973:
 2064              	.LBE2977:
 2065              	.LBB2978:
 2066              	.LBI2974:
 210:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 2067              		.loc 16 210 7 is_stmt 1 view .LVU487
 2068              	.LBB2976:
 211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2069              		.loc 16 211 31 is_stmt 0 view .LVU488
 2070 00f2 2362     		str	r3, [r4, #32]
 2071              	.LVL108:
 211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2072              		.loc 16 211 31 view .LVU489
 2073              	.LBE2976:
 2074              	.LBE2978:
 2075              	.LBB2979:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 2076              		.loc 16 186 7 is_stmt 1 view .LVU490
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 2077              		.loc 16 186 7 is_stmt 0 view .LVU491
 2078              	.LBE2979:
 2079              	.LBB2980:
 392:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 2080              		.loc 16 392 7 is_stmt 1 view .LVU492
 2081              	.LBB2956:
 346:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2082              		.loc 16 346 7 view .LVU493
 2083              	.LBB2953:
 2084              	.LBB2950:
 346:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2085              		.loc 16 346 7 view .LVU494
 2086              	.LBB2948:
 387:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 2087              		.loc 17 387 7 view .LVU495
 2088              	.LBB2946:
 389:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 2089              		.loc 17 389 2 view .LVU496
 2090              	.L60:
 2091              		.loc 17 395 2 view .LVU497
 2092              		.loc 17 395 49 is_stmt 0 view .LVU498
 2093 00f4 3246     		mov	r2, r6
 2094 00f6 3946     		mov	r1, r7
 2095 00f8 FFF7FEFF 		bl	memcpy
 2096              	.LVL109:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 188


 2097              		.loc 17 395 49 view .LVU499
 2098              	.LBE2946:
 2099              	.LBE2948:
 2100              	.LBE2950:
 2101              	.LBE2953:
 2102              	.LBE2956:
 2103              	.LBE2980:
 2104              		.loc 20 232 15 view .LVU500
 2105 00fc 019E     		ldr	r6, [sp, #4]
 2106              	.LVL110:
 2107              	.LBB2981:
 2108              	.LBB2970:
 2109              	.LBB2969:
 2110              	.LBB2967:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2111              		.loc 16 187 28 view .LVU501
 2112 00fe A069     		ldr	r0, [r4, #24]
 2113              	.LBE2967:
 2114              	.LBE2969:
 2115              	.LBE2970:
 2116              	.LBE2981:
 2117              	.LBB2982:
 2118              	.LBB2957:
 2119              	.LBB2954:
 2120              	.LBB2951:
 2121              	.LBB2949:
 2122              	.LBB2947:
 2123              		.loc 17 395 66 view .LVU502
 2124 0100 A5E7     		b	.L62
 2125              	.LVL111:
 2126              	.L57:
 2127              		.loc 17 395 66 view .LVU503
 2128              	.LBE2947:
 2129              	.LBE2949:
 2130              	.LBE2951:
 2131              	.LBE2954:
 2132              	.LBE2957:
 2133              	.LBE2982:
 2134              	.LBE2984:
 2135              	.LBE2986:
 2136              	.LBE2988:
 2137              	.LBE2990:
 2138              	.LBE2992:
 2139              	.LBE2994:
 2140              	.LBE2996:
 2141              	.LBE3092:
 2142              	.LBB3093:
 2143              	.LBB2904:
 2144              	.LBB2899:
 2145              	.LBB2896:
 2146              	.LBB2893:
 2147              	.LBB2890:
 2148              	.LBB2887:
 2149              	.LBB2884:
 212:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.tcc **** 				       "_M_construct null not valid"));
 2150              		.loc 20 212 28 view .LVU504
 2151 0102 0148     		ldr	r0, .L95
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 189


 2152 0104 FFF7FEFF 		bl	_ZSt19__throw_logic_errorPKc
 2153              	.LVL112:
 2154              	.L96:
 2155              		.align	2
 2156              	.L95:
 2157 0108 00000000 		.word	.LC1
 2158              	.LBE2884:
 2159              	.LBE2887:
 2160              	.LBE2890:
 2161              	.LBE2893:
 2162              	.LBE2896:
 2163              	.LBE2899:
 2164              	.LBE2904:
 2165              	.LBE3093:
 2166              	.LBE3097:
 2167              		.cfi_endproc
 2168              	.LFE5380:
 2170              		.weak	_ZN5paramC1ERKS_
 2171              		.thumb_set _ZN5paramC1ERKS_,_ZN5paramC2ERKS_
 2172              		.section	.rodata._Z9UART_InitRN5daisy11UartHandlerE.str1.4,"aMS",%progbits,1
 2173              		.align	2
 2174              	.LC2:
 2175 0000 496E6974 		.ascii	"Init error\000"
 2175      20657272 
 2175      6F7200
 2176 000b 00       		.align	2
 2177              	.LC3:
 2178 000c 53746172 		.ascii	"StartRx error\000"
 2178      74527820 
 2178      6572726F 
 2178      7200
 2179              		.section	.text._Z9UART_InitRN5daisy11UartHandlerE,"ax",%progbits
 2180              		.align	1
 2181              		.p2align 2,,3
 2182              		.global	_Z9UART_InitRN5daisy11UartHandlerE
 2183              		.syntax unified
 2184              		.thumb
 2185              		.thumb_func
 2186              		.fpu fpv5-d16
 2188              	_Z9UART_InitRN5daisy11UartHandlerE:
 2189              	.LVL113:
 2190              	.LFB5454:
  51:src/main.cpp  **** 	daisy::UartHandler::Config usart1_conf;
 2191              		.loc 8 51 42 is_stmt 1 view -0
 2192              		.cfi_startproc
 2193              		@ args = 0, pretend = 0, frame = 32
 2194              		@ frame_needed = 0, uses_anonymous_args = 0
  52:src/main.cpp  **** 	usart1_conf.periph = UartHandler::Config::Peripheral::USART_1;
 2195              		.loc 8 52 2 view .LVU506
  51:src/main.cpp  **** 	daisy::UartHandler::Config usart1_conf;
 2196              		.loc 8 51 42 is_stmt 0 view .LVU507
 2197 0000 10B5     		push	{r4, lr}
 2198              		.cfi_def_cfa_offset 8
 2199              		.cfi_offset 4, -8
 2200              		.cfi_offset 14, -4
  53:src/main.cpp  **** 	usart1_conf.mode = UartHandler::Config::Mode::TX_RX;
 2201              		.loc 8 53 21 view .LVU508
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 190


 2202 0002 0022     		movs	r2, #0
  51:src/main.cpp  **** 	daisy::UartHandler::Config usart1_conf;
 2203              		.loc 8 51 42 view .LVU509
 2204 0004 88B0     		sub	sp, sp, #32
 2205              		.cfi_def_cfa_offset 40
 2206              	.LVL114:
 2207              	.LBB3098:
 2208              	.LBI3098:
 2209              		.file 21 "../../libdaisy//src/per/uart.h"
   1:../../libdaisy//src/per/uart.h **** /* 
   2:../../libdaisy//src/per/uart.h **** TODO
   3:../../libdaisy//src/per/uart.h **** - UART1 defaults to DMA, add flexible config for DMA on all periphs
   4:../../libdaisy//src/per/uart.h **** - Transmit function improvements.
   5:../../libdaisy//src/per/uart.h **** - Overflow handling, etc. for Rx Queue.
   6:../../libdaisy//src/per/uart.h **** */
   7:../../libdaisy//src/per/uart.h **** 
   8:../../libdaisy//src/per/uart.h **** #pragma once
   9:../../libdaisy//src/per/uart.h **** #ifndef DSY_UART_H
  10:../../libdaisy//src/per/uart.h **** #define DSY_UART_H /**< macro */
  11:../../libdaisy//src/per/uart.h **** #include "daisy_core.h"
  12:../../libdaisy//src/per/uart.h **** 
  13:../../libdaisy//src/per/uart.h **** 
  14:../../libdaisy//src/per/uart.h **** namespace daisy
  15:../../libdaisy//src/per/uart.h **** {
  16:../../libdaisy//src/per/uart.h **** /** @addtogroup serial
  17:../../libdaisy//src/per/uart.h ****     @{
  18:../../libdaisy//src/per/uart.h ****     */
  19:../../libdaisy//src/per/uart.h **** 
  20:../../libdaisy//src/per/uart.h **** /** 
  21:../../libdaisy//src/per/uart.h ****     Uart Peripheral
  22:../../libdaisy//src/per/uart.h ****     @author shensley
  23:../../libdaisy//src/per/uart.h ****     @date March 2020
  24:../../libdaisy//src/per/uart.h ****     */
  25:../../libdaisy//src/per/uart.h **** class UartHandler
  26:../../libdaisy//src/per/uart.h **** {
  27:../../libdaisy//src/per/uart.h ****   public:
  28:../../libdaisy//src/per/uart.h ****     struct Config
  29:../../libdaisy//src/per/uart.h ****     {
  30:../../libdaisy//src/per/uart.h ****         enum class Peripheral
  31:../../libdaisy//src/per/uart.h ****         {
  32:../../libdaisy//src/per/uart.h ****             USART_1,
  33:../../libdaisy//src/per/uart.h ****             USART_2,
  34:../../libdaisy//src/per/uart.h ****             USART_3,
  35:../../libdaisy//src/per/uart.h ****             UART_4,
  36:../../libdaisy//src/per/uart.h ****             UART_5,
  37:../../libdaisy//src/per/uart.h ****             USART_6,
  38:../../libdaisy//src/per/uart.h ****             UART_7,
  39:../../libdaisy//src/per/uart.h ****             UART_8,
  40:../../libdaisy//src/per/uart.h ****             LPUART_1,
  41:../../libdaisy//src/per/uart.h ****         };
  42:../../libdaisy//src/per/uart.h **** 
  43:../../libdaisy//src/per/uart.h ****         enum class StopBits
  44:../../libdaisy//src/per/uart.h ****         {
  45:../../libdaisy//src/per/uart.h ****             BITS_0_5,
  46:../../libdaisy//src/per/uart.h ****             BITS_1,
  47:../../libdaisy//src/per/uart.h ****             BITS_1_5,
  48:../../libdaisy//src/per/uart.h ****             BITS_2,
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 191


  49:../../libdaisy//src/per/uart.h ****         };
  50:../../libdaisy//src/per/uart.h **** 
  51:../../libdaisy//src/per/uart.h ****         enum class Parity
  52:../../libdaisy//src/per/uart.h ****         {
  53:../../libdaisy//src/per/uart.h ****             NONE,
  54:../../libdaisy//src/per/uart.h ****             EVEN,
  55:../../libdaisy//src/per/uart.h ****             ODD,
  56:../../libdaisy//src/per/uart.h ****         };
  57:../../libdaisy//src/per/uart.h **** 
  58:../../libdaisy//src/per/uart.h ****         enum class Mode
  59:../../libdaisy//src/per/uart.h ****         {
  60:../../libdaisy//src/per/uart.h ****             RX,
  61:../../libdaisy//src/per/uart.h ****             TX,
  62:../../libdaisy//src/per/uart.h ****             TX_RX,
  63:../../libdaisy//src/per/uart.h ****         };
  64:../../libdaisy//src/per/uart.h **** 
  65:../../libdaisy//src/per/uart.h ****         enum class WordLength
  66:../../libdaisy//src/per/uart.h ****         {
  67:../../libdaisy//src/per/uart.h ****             BITS_7,
  68:../../libdaisy//src/per/uart.h ****             BITS_8,
  69:../../libdaisy//src/per/uart.h ****             BITS_9,
  70:../../libdaisy//src/per/uart.h ****         };
  71:../../libdaisy//src/per/uart.h **** 
  72:../../libdaisy//src/per/uart.h ****         struct
  73:../../libdaisy//src/per/uart.h ****         {
  74:../../libdaisy//src/per/uart.h ****             dsy_gpio_pin tx; /**< & */
  75:../../libdaisy//src/per/uart.h ****             dsy_gpio_pin rx; /**< & */
  76:../../libdaisy//src/per/uart.h ****         } pin_config;        /**< & */
  77:../../libdaisy//src/per/uart.h **** 
  78:../../libdaisy//src/per/uart.h ****         Config()
 2210              		.loc 21 78 9 is_stmt 1 view .LVU510
 2211              	.LBB3099:
 2212              	.LBB3100:
  79:../../libdaisy//src/per/uart.h ****         {
  80:../../libdaisy//src/per/uart.h ****             // user must init periph, pin_config, and periph
  81:../../libdaisy//src/per/uart.h ****             stopbits   = StopBits::BITS_1;
 2213              		.loc 21 81 13 view .LVU511
  82:../../libdaisy//src/per/uart.h ****             parity     = Parity::NONE;
 2214              		.loc 21 82 13 view .LVU512
  83:../../libdaisy//src/per/uart.h ****             wordlength = WordLength::BITS_8;
 2215              		.loc 21 83 13 view .LVU513
  84:../../libdaisy//src/per/uart.h ****             baudrate   = 4800;
 2216              		.loc 21 84 13 view .LVU514
 2217              		.loc 21 84 13 is_stmt 0 view .LVU515
 2218              	.LBE3100:
 2219              	.LBE3099:
 2220              	.LBE3098:
  53:src/main.cpp  **** 	usart1_conf.mode = UartHandler::Config::Mode::TX_RX;
 2221              		.loc 8 53 2 is_stmt 1 view .LVU516
  54:src/main.cpp  **** 	usart1_conf.wordlength = UartHandler::Config::WordLength::BITS_8;
 2222              		.loc 8 54 2 view .LVU517
  55:src/main.cpp  **** 	usart1_conf.parity = UartHandler::Config::Parity::NONE;
 2223              		.loc 8 55 2 view .LVU518
  56:src/main.cpp  **** 	usart1_conf.stopbits = UartHandler::Config::StopBits::BITS_1;
 2224              		.loc 8 56 2 view .LVU519
  57:src/main.cpp  **** 	usart1_conf.baudrate = (uint32_t)9600;
 2225              		.loc 8 57 2 view .LVU520
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 192


  58:src/main.cpp  **** 	usart1_conf.pin_config.rx = Pin(PORTB, 7); // (USART_1 RX) Daisy pin 15
 2226              		.loc 8 58 2 view .LVU521
  59:src/main.cpp  **** 	usart1_conf.pin_config.tx = Pin(PORTB, 6); // (USART_1 TX) Daisy pin 14
 2227              		.loc 8 59 2 view .LVU522
 2228              	.LBB3106:
 2229              	.LBI3106:
 2230              		.file 22 "../../libdaisy//src/daisy_core.h"
   1:../../libdaisy//src/daisy_core.h **** #pragma once
   2:../../libdaisy//src/daisy_core.h **** #ifndef DSY_CORE_HW_H
   3:../../libdaisy//src/daisy_core.h **** #define DSY_CORE_HW_H /**< & */
   4:../../libdaisy//src/daisy_core.h **** #include <stdint.h>
   5:../../libdaisy//src/daisy_core.h **** #include <stdlib.h>
   6:../../libdaisy//src/daisy_core.h **** 
   7:../../libdaisy//src/daisy_core.h **** #if defined(_MSC_VER)
   8:../../libdaisy//src/daisy_core.h **** #define FORCE_INLINE __forceinline /**< & */
   9:../../libdaisy//src/daisy_core.h **** #elif defined(__clang__)
  10:../../libdaisy//src/daisy_core.h **** #define FORCE_INLINE inline __attribute__((always_inline)) /**< & */
  11:../../libdaisy//src/daisy_core.h **** #pragma clang diagnostic ignored "-Wduplicate-decl-specifier"
  12:../../libdaisy//src/daisy_core.h **** #elif defined(__GNUC__)
  13:../../libdaisy//src/daisy_core.h **** #define FORCE_INLINE inline __attribute__((always_inline)) /**< & */
  14:../../libdaisy//src/daisy_core.h **** #else
  15:../../libdaisy//src/daisy_core.h **** #error unknown compiler
  16:../../libdaisy//src/daisy_core.h **** #endif
  17:../../libdaisy//src/daisy_core.h **** 
  18:../../libdaisy//src/daisy_core.h **** /** @addtogroup utility
  19:../../libdaisy//src/daisy_core.h ****     @{
  20:../../libdaisy//src/daisy_core.h **** */
  21:../../libdaisy//src/daisy_core.h **** 
  22:../../libdaisy//src/daisy_core.h **** /** Macro for area of memory that is configured as cacheless
  23:../../libdaisy//src/daisy_core.h **** This should be used primarily for DMA buffers, and the like.
  24:../../libdaisy//src/daisy_core.h **** */
  25:../../libdaisy//src/daisy_core.h **** #define DMA_BUFFER_MEM_SECTION __attribute__((section(".sram1_bss")))
  26:../../libdaisy//src/daisy_core.h **** /** 
  27:../../libdaisy//src/daisy_core.h **** THE DTCM RAM section is also non-cached. However, is not suitable 
  28:../../libdaisy//src/daisy_core.h **** for DMA transfers. Performance is on par with internal SRAM w/ 
  29:../../libdaisy//src/daisy_core.h **** cache enabled.
  30:../../libdaisy//src/daisy_core.h **** */
  31:../../libdaisy//src/daisy_core.h **** #define DTCM_MEM_SECTION __attribute__((section(".dtcmram_bss")))
  32:../../libdaisy//src/daisy_core.h **** 
  33:../../libdaisy//src/daisy_core.h **** #define FBIPMAX 0.999985f             /**< close to 1.0f-LSB at 16 bit */
  34:../../libdaisy//src/daisy_core.h **** #define FBIPMIN (-FBIPMAX)            /**< - (1 - LSB) */
  35:../../libdaisy//src/daisy_core.h **** #define U82F_SCALE 0.0078740f         /**< 1 / 127 */
  36:../../libdaisy//src/daisy_core.h **** #define F2U8_SCALE 127.0f             /**< 128 - 1 */
  37:../../libdaisy//src/daisy_core.h **** #define S82F_SCALE 0.0078125f         /**< 1 / (2**7) */
  38:../../libdaisy//src/daisy_core.h **** #define F2S8_SCALE 127.0f             /**< (2 ** 7) - 1 */
  39:../../libdaisy//src/daisy_core.h **** #define S162F_SCALE 3.0517578125e-05f /**< 1 / (2** 15) */
  40:../../libdaisy//src/daisy_core.h **** #define F2S16_SCALE 32767.0f          /**< (2 ** 15) - 1 */
  41:../../libdaisy//src/daisy_core.h **** #define F2S24_SCALE 8388608.0f        /**< 2 ** 23 */
  42:../../libdaisy//src/daisy_core.h **** #define S242F_SCALE 1.192092896e-07f  /**< 1 / (2 ** 23) */
  43:../../libdaisy//src/daisy_core.h **** #define S24SIGN 0x800000              /**< 2 ** 23 */
  44:../../libdaisy//src/daisy_core.h **** #define S322F_SCALE 4.6566129e-10f    /**< 1 / (2** 31) */
  45:../../libdaisy//src/daisy_core.h **** #define F2S32_SCALE 2147483647.f      /**< (2 ** 31) - 1 */
  46:../../libdaisy//src/daisy_core.h **** 
  47:../../libdaisy//src/daisy_core.h **** 
  48:../../libdaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the left 
  49:../../libdaisy//src/daisy_core.h ****  *  channel of a non-interleaved output buffer named out */
  50:../../libdaisy//src/daisy_core.h **** #define OUT_L out[0]
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 193


  51:../../libdaisy//src/daisy_core.h **** 
  52:../../libdaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the right 
  53:../../libdaisy//src/daisy_core.h ****  *  channel of a non-interleaved output buffer named out */
  54:../../libdaisy//src/daisy_core.h **** #define OUT_R out[1]
  55:../../libdaisy//src/daisy_core.h **** 
  56:../../libdaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the left 
  57:../../libdaisy//src/daisy_core.h ****  *  channel of a non-interleaved input buffer named in */
  58:../../libdaisy//src/daisy_core.h **** #define IN_L in[0]
  59:../../libdaisy//src/daisy_core.h **** 
  60:../../libdaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the right 
  61:../../libdaisy//src/daisy_core.h ****  *  channel of a non-interleaved input buffer named in */
  62:../../libdaisy//src/daisy_core.h **** #define IN_R in[1]
  63:../../libdaisy//src/daisy_core.h **** 
  64:../../libdaisy//src/daisy_core.h **** /** 
  65:../../libdaisy//src/daisy_core.h ****     Computes cube.
  66:../../libdaisy//src/daisy_core.h ****     \param x Number to be cubed
  67:../../libdaisy//src/daisy_core.h ****     \return x ^ 3
  68:../../libdaisy//src/daisy_core.h **** */
  69:../../libdaisy//src/daisy_core.h **** FORCE_INLINE float cube(float x)
  70:../../libdaisy//src/daisy_core.h **** {
  71:../../libdaisy//src/daisy_core.h ****     return (x * x) * x;
  72:../../libdaisy//src/daisy_core.h **** }
  73:../../libdaisy//src/daisy_core.h **** 
  74:../../libdaisy//src/daisy_core.h **** /** 
  75:../../libdaisy//src/daisy_core.h ****     Converts unsigned 8-bit to float
  76:../../libdaisy//src/daisy_core.h ****     \param x Number to be scaled.
  77:../../libdaisy//src/daisy_core.h ****     \return Scaled number.
  78:../../libdaisy//src/daisy_core.h **** */
  79:../../libdaisy//src/daisy_core.h **** FORCE_INLINE float u82f(uint8_t x)
  80:../../libdaisy//src/daisy_core.h **** {
  81:../../libdaisy//src/daisy_core.h ****     return ((float)x - 127.f) * U82F_SCALE;
  82:../../libdaisy//src/daisy_core.h **** }
  83:../../libdaisy//src/daisy_core.h **** 
  84:../../libdaisy//src/daisy_core.h **** /**
  85:../../libdaisy//src/daisy_core.h ****     Converts float to unsigned 8-bit
  86:../../libdaisy//src/daisy_core.h **** */
  87:../../libdaisy//src/daisy_core.h **** FORCE_INLINE uint8_t f2u8(float x)
  88:../../libdaisy//src/daisy_core.h **** {
  89:../../libdaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
  90:../../libdaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
  91:../../libdaisy//src/daisy_core.h ****     return (uint8_t)((x * F2U8_SCALE) + F2U8_SCALE);
  92:../../libdaisy//src/daisy_core.h **** }
  93:../../libdaisy//src/daisy_core.h **** 
  94:../../libdaisy//src/daisy_core.h **** 
  95:../../libdaisy//src/daisy_core.h **** /** 
  96:../../libdaisy//src/daisy_core.h ****     Converts Signed 8-bit to float
  97:../../libdaisy//src/daisy_core.h ****     \param x Number to be scaled.
  98:../../libdaisy//src/daisy_core.h ****     \return Scaled number.
  99:../../libdaisy//src/daisy_core.h **** */
 100:../../libdaisy//src/daisy_core.h **** FORCE_INLINE float s82f(int8_t x)
 101:../../libdaisy//src/daisy_core.h **** {
 102:../../libdaisy//src/daisy_core.h ****     return (float)x * S82F_SCALE;
 103:../../libdaisy//src/daisy_core.h **** }
 104:../../libdaisy//src/daisy_core.h **** 
 105:../../libdaisy//src/daisy_core.h **** /**
 106:../../libdaisy//src/daisy_core.h ****     Converts float to Signed 8-bit
 107:../../libdaisy//src/daisy_core.h **** */
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 194


 108:../../libdaisy//src/daisy_core.h **** FORCE_INLINE int8_t f2s8(float x)
 109:../../libdaisy//src/daisy_core.h **** {
 110:../../libdaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 111:../../libdaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 112:../../libdaisy//src/daisy_core.h ****     return (int32_t)(x * F2S8_SCALE);
 113:../../libdaisy//src/daisy_core.h **** }
 114:../../libdaisy//src/daisy_core.h **** 
 115:../../libdaisy//src/daisy_core.h **** /** 
 116:../../libdaisy//src/daisy_core.h ****     Converts Signed 16-bit to float
 117:../../libdaisy//src/daisy_core.h ****     \param x Number to be scaled.
 118:../../libdaisy//src/daisy_core.h ****     \return Scaled number.
 119:../../libdaisy//src/daisy_core.h **** */
 120:../../libdaisy//src/daisy_core.h **** FORCE_INLINE float s162f(int16_t x)
 121:../../libdaisy//src/daisy_core.h **** {
 122:../../libdaisy//src/daisy_core.h ****     return (float)x * S162F_SCALE;
 123:../../libdaisy//src/daisy_core.h **** }
 124:../../libdaisy//src/daisy_core.h **** 
 125:../../libdaisy//src/daisy_core.h **** /**
 126:../../libdaisy//src/daisy_core.h ****     Converts float to Signed 16-bit
 127:../../libdaisy//src/daisy_core.h **** */
 128:../../libdaisy//src/daisy_core.h **** FORCE_INLINE int16_t f2s16(float x)
 129:../../libdaisy//src/daisy_core.h **** {
 130:../../libdaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 131:../../libdaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 132:../../libdaisy//src/daisy_core.h ****     return (int32_t)(x * F2S16_SCALE);
 133:../../libdaisy//src/daisy_core.h **** }
 134:../../libdaisy//src/daisy_core.h **** 
 135:../../libdaisy//src/daisy_core.h **** /**
 136:../../libdaisy//src/daisy_core.h ****     Converts Signed 24-bit to float
 137:../../libdaisy//src/daisy_core.h ****  */
 138:../../libdaisy//src/daisy_core.h **** FORCE_INLINE float s242f(int32_t x)
 139:../../libdaisy//src/daisy_core.h **** {
 140:../../libdaisy//src/daisy_core.h ****     x = (x ^ S24SIGN) - S24SIGN; //sign extend aka ((x<<8)>>8)
 141:../../libdaisy//src/daisy_core.h ****     return (float)x * S242F_SCALE;
 142:../../libdaisy//src/daisy_core.h **** }
 143:../../libdaisy//src/daisy_core.h **** /**
 144:../../libdaisy//src/daisy_core.h ****     Converts float to Signed 24-bit
 145:../../libdaisy//src/daisy_core.h ****  */
 146:../../libdaisy//src/daisy_core.h **** FORCE_INLINE int32_t f2s24(float x)
 147:../../libdaisy//src/daisy_core.h **** {
 148:../../libdaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 149:../../libdaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 150:../../libdaisy//src/daisy_core.h ****     return (int32_t)(x * F2S24_SCALE);
 151:../../libdaisy//src/daisy_core.h **** }
 152:../../libdaisy//src/daisy_core.h **** 
 153:../../libdaisy//src/daisy_core.h **** /**
 154:../../libdaisy//src/daisy_core.h ****     Converts Signed 32-bit to float
 155:../../libdaisy//src/daisy_core.h ****  */
 156:../../libdaisy//src/daisy_core.h **** FORCE_INLINE float s322f(int32_t x)
 157:../../libdaisy//src/daisy_core.h **** {
 158:../../libdaisy//src/daisy_core.h ****     return (float)x * S322F_SCALE;
 159:../../libdaisy//src/daisy_core.h **** }
 160:../../libdaisy//src/daisy_core.h **** /**
 161:../../libdaisy//src/daisy_core.h ****     Converts float to Signed 24-bit
 162:../../libdaisy//src/daisy_core.h ****  */
 163:../../libdaisy//src/daisy_core.h **** FORCE_INLINE int32_t f2s32(float x)
 164:../../libdaisy//src/daisy_core.h **** {
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 195


 165:../../libdaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 166:../../libdaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 167:../../libdaisy//src/daisy_core.h ****     return (int32_t)(x * F2S32_SCALE);
 168:../../libdaisy//src/daisy_core.h **** }
 169:../../libdaisy//src/daisy_core.h **** 
 170:../../libdaisy//src/daisy_core.h **** 
 171:../../libdaisy//src/daisy_core.h **** /** Enums and a simple struct for defining a hardware pin on the MCU
 172:../../libdaisy//src/daisy_core.h ****  *  These correlate with the stm32 datasheet, and are used to configure
 173:../../libdaisy//src/daisy_core.h ****  *  the hardware.
 174:../../libdaisy//src/daisy_core.h ****  * 
 175:../../libdaisy//src/daisy_core.h ****  *  This along with the dsy_gpio_pin class should no longer be used.
 176:../../libdaisy//src/daisy_core.h ****  *  They are available for backwards compatability. 
 177:../../libdaisy//src/daisy_core.h ****  * 
 178:../../libdaisy//src/daisy_core.h ****  *  Please use GPIOPort enum and the Pin struct instead.
 179:../../libdaisy//src/daisy_core.h ****  */
 180:../../libdaisy//src/daisy_core.h **** typedef enum
 181:../../libdaisy//src/daisy_core.h **** {
 182:../../libdaisy//src/daisy_core.h ****     DSY_GPIOA, /**< & */
 183:../../libdaisy//src/daisy_core.h ****     DSY_GPIOB, /**< & */
 184:../../libdaisy//src/daisy_core.h ****     DSY_GPIOC, /**< & */
 185:../../libdaisy//src/daisy_core.h ****     DSY_GPIOD, /**< & */
 186:../../libdaisy//src/daisy_core.h ****     DSY_GPIOE, /**< & */
 187:../../libdaisy//src/daisy_core.h ****     DSY_GPIOF, /**< & */
 188:../../libdaisy//src/daisy_core.h ****     DSY_GPIOG, /**< & */
 189:../../libdaisy//src/daisy_core.h ****     DSY_GPIOH, /**< & */
 190:../../libdaisy//src/daisy_core.h ****     DSY_GPIOI, /**< & */
 191:../../libdaisy//src/daisy_core.h ****     DSY_GPIOJ, /**< & */
 192:../../libdaisy//src/daisy_core.h ****     DSY_GPIOK, /**< & */
 193:../../libdaisy//src/daisy_core.h ****     DSY_GPIOX, /** This is a non-existant port for unsupported bits of hardware. */
 194:../../libdaisy//src/daisy_core.h ****     DSY_GPIO_LAST, /** Final enum member */
 195:../../libdaisy//src/daisy_core.h **** } dsy_gpio_port;
 196:../../libdaisy//src/daisy_core.h **** 
 197:../../libdaisy//src/daisy_core.h **** /** Hardware define pins 
 198:../../libdaisy//src/daisy_core.h ****  *  
 199:../../libdaisy//src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 200:../../libdaisy//src/daisy_core.h ****  *  backwards compatability.
 201:../../libdaisy//src/daisy_core.h ****  * 
 202:../../libdaisy//src/daisy_core.h ****  *  Please use Pin struct instead.
 203:../../libdaisy//src/daisy_core.h ****  */
 204:../../libdaisy//src/daisy_core.h **** typedef struct
 205:../../libdaisy//src/daisy_core.h **** {
 206:../../libdaisy//src/daisy_core.h ****     dsy_gpio_port port; /**< & */
 207:../../libdaisy//src/daisy_core.h ****     uint8_t       pin;  /**< number 0-15 */
 208:../../libdaisy//src/daisy_core.h **** } dsy_gpio_pin;
 209:../../libdaisy//src/daisy_core.h **** 
 210:../../libdaisy//src/daisy_core.h **** /** Helper for creating pins from port/pin combos easily
 211:../../libdaisy//src/daisy_core.h ****  * 
 212:../../libdaisy//src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 213:../../libdaisy//src/daisy_core.h ****  *  backwards compatability.
 214:../../libdaisy//src/daisy_core.h ****  * 
 215:../../libdaisy//src/daisy_core.h ****  *  Please use Pin struct instead.
 216:../../libdaisy//src/daisy_core.h **** */
 217:../../libdaisy//src/daisy_core.h **** FORCE_INLINE dsy_gpio_pin dsy_pin(dsy_gpio_port port, uint8_t pin)
 218:../../libdaisy//src/daisy_core.h **** {
 219:../../libdaisy//src/daisy_core.h ****     dsy_gpio_pin p;
 220:../../libdaisy//src/daisy_core.h ****     p.port = port;
 221:../../libdaisy//src/daisy_core.h ****     p.pin  = pin;
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 196


 222:../../libdaisy//src/daisy_core.h ****     return p;
 223:../../libdaisy//src/daisy_core.h **** }
 224:../../libdaisy//src/daisy_core.h **** 
 225:../../libdaisy//src/daisy_core.h **** /** Helper for testing sameness of two dsy_gpio_pins
 226:../../libdaisy//src/daisy_core.h ****  *  \return    1 if same, 0 if different
 227:../../libdaisy//src/daisy_core.h ****  * 
 228:../../libdaisy//src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 229:../../libdaisy//src/daisy_core.h ****  *  backwards compatability.
 230:../../libdaisy//src/daisy_core.h ****  * 
 231:../../libdaisy//src/daisy_core.h ****  *  Please use Pin struct instead.
 232:../../libdaisy//src/daisy_core.h ****  */
 233:../../libdaisy//src/daisy_core.h **** FORCE_INLINE uint8_t dsy_pin_cmp(dsy_gpio_pin *a, dsy_gpio_pin *b)
 234:../../libdaisy//src/daisy_core.h **** {
 235:../../libdaisy//src/daisy_core.h ****     return ((a->port == b->port) && (a->pin == b->pin));
 236:../../libdaisy//src/daisy_core.h **** }
 237:../../libdaisy//src/daisy_core.h **** 
 238:../../libdaisy//src/daisy_core.h **** #ifdef __cplusplus
 239:../../libdaisy//src/daisy_core.h **** 
 240:../../libdaisy//src/daisy_core.h **** namespace daisy
 241:../../libdaisy//src/daisy_core.h **** {
 242:../../libdaisy//src/daisy_core.h **** /** @brief GPIO Port names */
 243:../../libdaisy//src/daisy_core.h **** enum GPIOPort
 244:../../libdaisy//src/daisy_core.h **** {
 245:../../libdaisy//src/daisy_core.h ****     PORTA, /**< Port A */
 246:../../libdaisy//src/daisy_core.h ****     PORTB, /**< Port B */
 247:../../libdaisy//src/daisy_core.h ****     PORTC, /**< Port C */
 248:../../libdaisy//src/daisy_core.h ****     PORTD, /**< Port D */
 249:../../libdaisy//src/daisy_core.h ****     PORTE, /**< Port E */
 250:../../libdaisy//src/daisy_core.h ****     PORTF, /**< Port F */
 251:../../libdaisy//src/daisy_core.h ****     PORTG, /**< Port G */
 252:../../libdaisy//src/daisy_core.h ****     PORTH, /**< Port H */
 253:../../libdaisy//src/daisy_core.h ****     PORTI, /**< Port I */
 254:../../libdaisy//src/daisy_core.h ****     PORTJ, /**< Port J */
 255:../../libdaisy//src/daisy_core.h ****     PORTK, /**< Port K */
 256:../../libdaisy//src/daisy_core.h ****     PORTX, /**< Used as a dummy port to signal an invalid pin. */
 257:../../libdaisy//src/daisy_core.h **** };
 258:../../libdaisy//src/daisy_core.h **** 
 259:../../libdaisy//src/daisy_core.h **** /** @brief representation of hardware port/pin combination */
 260:../../libdaisy//src/daisy_core.h **** struct Pin
 261:../../libdaisy//src/daisy_core.h **** {
 262:../../libdaisy//src/daisy_core.h ****     GPIOPort port;
 263:../../libdaisy//src/daisy_core.h ****     uint8_t  pin;
 264:../../libdaisy//src/daisy_core.h **** 
 265:../../libdaisy//src/daisy_core.h ****     /** @brief Constructor creates a valid pin. 
 266:../../libdaisy//src/daisy_core.h ****      *  @param pt GPIOPort between PA, and PK corresponding to STM32 Port.
 267:../../libdaisy//src/daisy_core.h ****      *  @param pn pin number in range of 0-15
 268:../../libdaisy//src/daisy_core.h ****     */
 269:../../libdaisy//src/daisy_core.h ****     constexpr Pin(const GPIOPort pt, const uint8_t pn) : port(pt), pin(pn) {}
 2231              		.loc 22 269 15 view .LVU523
 2232              		.loc 22 269 15 is_stmt 0 view .LVU524
 2233              	.LBE3106:
 270:../../libdaisy//src/daisy_core.h **** 
 271:../../libdaisy//src/daisy_core.h ****     /** @brief Basic Constructor creates an invalid Pin object */
 272:../../libdaisy//src/daisy_core.h ****     constexpr Pin() : port(PORTX), pin(255) {}
 273:../../libdaisy//src/daisy_core.h **** 
 274:../../libdaisy//src/daisy_core.h ****     /** @brief checks validity of a Pin 
 275:../../libdaisy//src/daisy_core.h ****      *  @retval returns true if the port is a valid hardware pin, otherwise false.
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 197


 276:../../libdaisy//src/daisy_core.h ****     */
 277:../../libdaisy//src/daisy_core.h ****     constexpr bool IsValid() const { return port != PORTX && pin < 16; }
 278:../../libdaisy//src/daisy_core.h **** 
 279:../../libdaisy//src/daisy_core.h ****     /** @brief comparison operator for checking equality between Pin objects */
 280:../../libdaisy//src/daisy_core.h ****     constexpr bool operator==(const Pin &rhs) const
 281:../../libdaisy//src/daisy_core.h ****     {
 282:../../libdaisy//src/daisy_core.h ****         return (rhs.port == port) && (rhs.pin == pin);
 283:../../libdaisy//src/daisy_core.h ****     }
 284:../../libdaisy//src/daisy_core.h **** 
 285:../../libdaisy//src/daisy_core.h ****     /** @brief comparison operator for checking inequality between Pin objects */
 286:../../libdaisy//src/daisy_core.h ****     constexpr bool operator!=(const Pin &rhs) const { return !operator==(rhs); }
 287:../../libdaisy//src/daisy_core.h **** 
 288:../../libdaisy//src/daisy_core.h ****     /** @brief conversion operation for converting to the old-style representation
 289:../../libdaisy//src/daisy_core.h ****      *         of a pin.
 290:../../libdaisy//src/daisy_core.h ****      * 
 291:../../libdaisy//src/daisy_core.h ****      *  This allows the new Pin type to be used in place of the older, dsy_gpio_pin
 292:../../libdaisy//src/daisy_core.h ****      *  type.
 293:../../libdaisy//src/daisy_core.h ****      */
 294:../../libdaisy//src/daisy_core.h ****     operator dsy_gpio_pin() const
 295:../../libdaisy//src/daisy_core.h ****     {
 296:../../libdaisy//src/daisy_core.h ****         return dsy_pin(static_cast<dsy_gpio_port>(port), pin);
 2234              		.loc 22 296 9 is_stmt 1 view .LVU525
 219:../../libdaisy//src/daisy_core.h ****     p.port = port;
 2235              		.loc 22 219 5 view .LVU526
 220:../../libdaisy//src/daisy_core.h ****     p.pin  = pin;
 2236              		.loc 22 220 5 view .LVU527
 221:../../libdaisy//src/daisy_core.h ****     return p;
 2237              		.loc 22 221 5 view .LVU528
 222:../../libdaisy//src/daisy_core.h **** }
 2238              		.loc 22 222 5 view .LVU529
  60:src/main.cpp  **** 
 2239              		.loc 8 60 2 view .LVU530
 2240              	.LBB3107:
 2241              	.LBI3107:
 269:../../libdaisy//src/daisy_core.h **** 
 2242              		.loc 22 269 15 view .LVU531
 269:../../libdaisy//src/daisy_core.h **** 
 2243              		.loc 22 269 15 is_stmt 0 view .LVU532
 2244              	.LBE3107:
 2245              		.loc 22 296 9 is_stmt 1 view .LVU533
 219:../../libdaisy//src/daisy_core.h ****     p.port = port;
 2246              		.loc 22 219 5 view .LVU534
 220:../../libdaisy//src/daisy_core.h ****     p.pin  = pin;
 2247              		.loc 22 220 5 view .LVU535
 221:../../libdaisy//src/daisy_core.h ****     return p;
 2248              		.loc 22 221 5 view .LVU536
 222:../../libdaisy//src/daisy_core.h **** }
 2249              		.loc 22 222 5 view .LVU537
 2250              	.LBB3108:
 2251              	.LBB3103:
  79:../../libdaisy//src/per/uart.h ****             // user must init periph, pin_config, and periph
 2252              		.loc 21 79 9 is_stmt 0 view .LVU538
 2253 0006 1349     		ldr	r1, .L103
 2254              	.LBB3101:
  81:../../libdaisy//src/per/uart.h ****             parity     = Parity::NONE;
 2255              		.loc 21 81 24 view .LVU539
 2256 0008 0123     		movs	r3, #1
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 198


 2257              	.LBE3101:
 2258              	.LBE3103:
 2259              	.LBE3108:
  51:src/main.cpp  **** 	daisy::UartHandler::Config usart1_conf;
 2260              		.loc 8 51 42 view .LVU540
 2261 000a 0446     		mov	r4, r0
 2262              	.LBB3109:
 2263              	.LBB3104:
  79:../../libdaisy//src/per/uart.h ****             // user must init periph, pin_config, and periph
 2264              		.loc 21 79 9 view .LVU541
 2265 000c CDE90112 		strd	r1, r2, [sp, #4]
 2266              	.LBE3104:
 2267              	.LBE3109:
  54:src/main.cpp  **** 	usart1_conf.wordlength = UartHandler::Config::WordLength::BITS_8;
 2268              		.loc 8 54 19 view .LVU542
 2269 0010 0221     		movs	r1, #2
 2270              	.LBB3110:
 2271              	.LBB3105:
 2272              	.LBB3102:
  82:../../libdaisy//src/per/uart.h ****             wordlength = WordLength::BITS_8;
 2273              		.loc 21 82 24 view .LVU543
 2274 0012 CDE90332 		strd	r3, r2, [sp, #12]
 2275              	.LBE3102:
 2276              	.LBE3105:
 2277              	.LBE3110:
  58:src/main.cpp  **** 	usart1_conf.pin_config.rx = Pin(PORTB, 7); // (USART_1 RX) Daisy pin 15
 2278              		.loc 8 58 23 view .LVU544
 2279 0016 4FF41652 		mov	r2, #9600
  54:src/main.cpp  **** 	usart1_conf.wordlength = UartHandler::Config::WordLength::BITS_8;
 2280              		.loc 8 54 19 view .LVU545
 2281 001a 0591     		str	r1, [sp, #20]
  62:src/main.cpp  **** 		hw.PrintLine("Init error");
 2282              		.loc 8 62 15 view .LVU546
 2283 001c 01A9     		add	r1, sp, #4
  58:src/main.cpp  **** 	usart1_conf.pin_config.rx = Pin(PORTB, 7); // (USART_1 RX) Daisy pin 15
 2284              		.loc 8 58 23 view .LVU547
 2285 001e CDE90632 		strd	r3, r2, [sp, #24]
  62:src/main.cpp  **** 		hw.PrintLine("Init error");
 2286              		.loc 8 62 2 is_stmt 1 view .LVU548
  62:src/main.cpp  **** 		hw.PrintLine("Init error");
 2287              		.loc 8 62 15 is_stmt 0 view .LVU549
 2288 0022 FFF7FEFF 		bl	_ZN5daisy11UartHandler4InitERKNS0_6ConfigE
 2289              	.LVL115:
  62:src/main.cpp  **** 		hw.PrintLine("Init error");
 2290              		.loc 8 62 2 view .LVU550
 2291 0026 0128     		cmp	r0, #1
 2292 0028 06D0     		beq	.L101
  67:src/main.cpp  **** 		hw.PrintLine("StartRx error");
 2293              		.loc 8 67 2 is_stmt 1 view .LVU551
  67:src/main.cpp  **** 		hw.PrintLine("StartRx error");
 2294              		.loc 8 67 18 is_stmt 0 view .LVU552
 2295 002a 2046     		mov	r0, r4
 2296 002c FFF7FEFF 		bl	_ZN5daisy11UartHandler7StartRxEv
 2297              	.LVL116:
  67:src/main.cpp  **** 		hw.PrintLine("StartRx error");
 2298              		.loc 8 67 2 view .LVU553
 2299 0030 0128     		cmp	r0, #1
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 199


 2300 0032 09D0     		beq	.L102
 2301              	.L97:
  70:src/main.cpp  **** 
 2302              		.loc 8 70 1 view .LVU554
 2303 0034 08B0     		add	sp, sp, #32
 2304              		.cfi_remember_state
 2305              		.cfi_def_cfa_offset 8
 2306              		@ sp needed
 2307 0036 10BD     		pop	{r4, pc}
 2308              	.LVL117:
 2309              	.L101:
 2310              		.cfi_restore_state
  63:src/main.cpp  **** 		//return daisy::UartHandler::CheckError	
 2311              		.loc 8 63 3 is_stmt 1 view .LVU555
 2312              	.LBB3111:
 2313              	.LBI3111:
  23:../../libdaisy//src/daisy_seed.h **** 
  24:../../libdaisy//src/daisy_seed.h ****     /** This function used to provide a pre-initialization configuraiton 
  25:../../libdaisy//src/daisy_seed.h ****      *  it has since been deprecated, and does nothing.
  26:../../libdaisy//src/daisy_seed.h ****      */
  27:../../libdaisy//src/daisy_seed.h ****     void Configure();
  28:../../libdaisy//src/daisy_seed.h **** 
  29:../../libdaisy//src/daisy_seed.h ****     /** 
  30:../../libdaisy//src/daisy_seed.h ****     Initializes the Daisy Seed and the following peripherals:
  31:../../libdaisy//src/daisy_seed.h ****     SDRAM, QSPI, 24-bit 48kHz Audio via AK4556, Internal USB,
  32:../../libdaisy//src/daisy_seed.h ****     as well as the built-in LED and Testpoint.
  33:../../libdaisy//src/daisy_seed.h **** 
  34:../../libdaisy//src/daisy_seed.h ****     ADCs, DACs, and other special peripherals (such as I2C, SPI, etc.)
  35:../../libdaisy//src/daisy_seed.h ****     can be initialized using their specific initializers within libdaisy
  36:../../libdaisy//src/daisy_seed.h ****     for a specific application.
  37:../../libdaisy//src/daisy_seed.h ****     */
  38:../../libdaisy//src/daisy_seed.h ****     void Init(bool boost = false);
  39:../../libdaisy//src/daisy_seed.h **** 
  40:../../libdaisy//src/daisy_seed.h ****     /** 
  41:../../libdaisy//src/daisy_seed.h ****     Deinitializes all peripherals automatically handled by `Init`.
  42:../../libdaisy//src/daisy_seed.h ****     */
  43:../../libdaisy//src/daisy_seed.h ****     void DeInit();
  44:../../libdaisy//src/daisy_seed.h **** 
  45:../../libdaisy//src/daisy_seed.h ****     /** 
  46:../../libdaisy//src/daisy_seed.h ****     Wait some ms before going on.
  47:../../libdaisy//src/daisy_seed.h ****     \param del Delay time in ms.
  48:../../libdaisy//src/daisy_seed.h ****     */
  49:../../libdaisy//src/daisy_seed.h ****     void DelayMs(size_t del);
  50:../../libdaisy//src/daisy_seed.h **** 
  51:../../libdaisy//src/daisy_seed.h ****     /** 
  52:../../libdaisy//src/daisy_seed.h ****     Returns the gpio_pin corresponding to the index 0-31.
  53:../../libdaisy//src/daisy_seed.h ****     For the given GPIO on the Daisy Seed (labeled 1-32 in docs).
  54:../../libdaisy//src/daisy_seed.h ****     */
  55:../../libdaisy//src/daisy_seed.h ****     static dsy_gpio_pin GetPin(uint8_t pin_idx);
  56:../../libdaisy//src/daisy_seed.h **** 
  57:../../libdaisy//src/daisy_seed.h ****     /** Begins the audio for the seeds builtin audio.
  58:../../libdaisy//src/daisy_seed.h ****     the specified callback will get called whenever
  59:../../libdaisy//src/daisy_seed.h ****     new data is ready to be prepared.
  60:../../libdaisy//src/daisy_seed.h ****     */
  61:../../libdaisy//src/daisy_seed.h ****     void StartAudio(AudioHandle::InterleavingAudioCallback cb);
  62:../../libdaisy//src/daisy_seed.h **** 
  63:../../libdaisy//src/daisy_seed.h ****     /** Begins the audio for the seeds builtin audio.
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 200


  64:../../libdaisy//src/daisy_seed.h ****     the specified callback will get called whenever
  65:../../libdaisy//src/daisy_seed.h ****     new data is ready to be prepared.
  66:../../libdaisy//src/daisy_seed.h ****     This will use the newer non-interleaved callback.
  67:../../libdaisy//src/daisy_seed.h ****     */
  68:../../libdaisy//src/daisy_seed.h ****     void StartAudio(AudioHandle::AudioCallback cb);
  69:../../libdaisy//src/daisy_seed.h **** 
  70:../../libdaisy//src/daisy_seed.h ****     /** Changes to a new interleaved callback
  71:../../libdaisy//src/daisy_seed.h ****      */
  72:../../libdaisy//src/daisy_seed.h ****     void ChangeAudioCallback(AudioHandle::InterleavingAudioCallback cb);
  73:../../libdaisy//src/daisy_seed.h **** 
  74:../../libdaisy//src/daisy_seed.h ****     /** Changes to a new multichannel callback
  75:../../libdaisy//src/daisy_seed.h ****      */
  76:../../libdaisy//src/daisy_seed.h ****     void ChangeAudioCallback(AudioHandle::AudioCallback cb);
  77:../../libdaisy//src/daisy_seed.h **** 
  78:../../libdaisy//src/daisy_seed.h ****     /** Stops the audio if it is running. */
  79:../../libdaisy//src/daisy_seed.h ****     void StopAudio();
  80:../../libdaisy//src/daisy_seed.h **** 
  81:../../libdaisy//src/daisy_seed.h ****     /** Updates the Audio Sample Rate, and reinitializes.
  82:../../libdaisy//src/daisy_seed.h ****      ** Audio must be stopped for this to work.
  83:../../libdaisy//src/daisy_seed.h ****      */
  84:../../libdaisy//src/daisy_seed.h ****     void SetAudioSampleRate(SaiHandle::Config::SampleRate samplerate);
  85:../../libdaisy//src/daisy_seed.h **** 
  86:../../libdaisy//src/daisy_seed.h ****     /** Returns the audio sample rate in Hz as a floating point number.
  87:../../libdaisy//src/daisy_seed.h ****      */
  88:../../libdaisy//src/daisy_seed.h ****     float AudioSampleRate();
  89:../../libdaisy//src/daisy_seed.h **** 
  90:../../libdaisy//src/daisy_seed.h ****     /** Sets the number of samples processed per channel by the audio callback.
  91:../../libdaisy//src/daisy_seed.h ****      */
  92:../../libdaisy//src/daisy_seed.h ****     void SetAudioBlockSize(size_t blocksize);
  93:../../libdaisy//src/daisy_seed.h **** 
  94:../../libdaisy//src/daisy_seed.h ****     /** Returns the number of samples per channel in a block of audio. */
  95:../../libdaisy//src/daisy_seed.h ****     size_t AudioBlockSize();
  96:../../libdaisy//src/daisy_seed.h **** 
  97:../../libdaisy//src/daisy_seed.h ****     /** Returns the rate in Hz that the Audio callback is called */
  98:../../libdaisy//src/daisy_seed.h ****     float AudioCallbackRate() const;
  99:../../libdaisy//src/daisy_seed.h **** 
 100:../../libdaisy//src/daisy_seed.h ****     /** Sets the state of the built in LED
 101:../../libdaisy//src/daisy_seed.h ****      */
 102:../../libdaisy//src/daisy_seed.h ****     void SetLed(bool state);
 103:../../libdaisy//src/daisy_seed.h **** 
 104:../../libdaisy//src/daisy_seed.h ****     /** Sets the state of the test point near pin 10
 105:../../libdaisy//src/daisy_seed.h ****      */
 106:../../libdaisy//src/daisy_seed.h ****     void SetTestPoint(bool state);
 107:../../libdaisy//src/daisy_seed.h **** 
 108:../../libdaisy//src/daisy_seed.h ****     /** Print formatted debug log message
 109:../../libdaisy//src/daisy_seed.h ****      */
 110:../../libdaisy//src/daisy_seed.h ****     template <typename... VA>
 111:../../libdaisy//src/daisy_seed.h ****     static void Print(const char* format, VA... va)
 112:../../libdaisy//src/daisy_seed.h ****     {
 113:../../libdaisy//src/daisy_seed.h ****         Log::Print(format, va...);
 114:../../libdaisy//src/daisy_seed.h ****     }
 115:../../libdaisy//src/daisy_seed.h **** 
 116:../../libdaisy//src/daisy_seed.h ****     /** Print formatted debug log message with automatic line termination
 117:../../libdaisy//src/daisy_seed.h ****     */
 118:../../libdaisy//src/daisy_seed.h ****     template <typename... VA>
 119:../../libdaisy//src/daisy_seed.h ****     static void PrintLine(const char* format, VA... va)
 2314              		.loc 3 119 17 view .LVU556
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 201


 2315              	.LBB3112:
 120:../../libdaisy//src/daisy_seed.h ****     {
 121:../../libdaisy//src/daisy_seed.h ****         Log::PrintLine(format, va...);
 2316              		.loc 3 121 23 is_stmt 0 view .LVU557
 2317 0038 0748     		ldr	r0, .L103+4
 2318 003a FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
 2319              	.LVL118:
 2320              		.loc 3 121 23 view .LVU558
 2321              	.LBE3112:
 2322              	.LBE3111:
  67:src/main.cpp  **** 		hw.PrintLine("StartRx error");
 2323              		.loc 8 67 2 is_stmt 1 view .LVU559
  67:src/main.cpp  **** 		hw.PrintLine("StartRx error");
 2324              		.loc 8 67 18 is_stmt 0 view .LVU560
 2325 003e 2046     		mov	r0, r4
 2326 0040 FFF7FEFF 		bl	_ZN5daisy11UartHandler7StartRxEv
 2327              	.LVL119:
  67:src/main.cpp  **** 		hw.PrintLine("StartRx error");
 2328              		.loc 8 67 2 view .LVU561
 2329 0044 0128     		cmp	r0, #1
 2330 0046 F5D1     		bne	.L97
 2331              	.L102:
  68:src/main.cpp  **** 	}
 2332              		.loc 8 68 3 is_stmt 1 view .LVU562
 2333              	.LVL120:
 2334              	.LBB3113:
 2335              	.LBI3113:
 119:../../libdaisy//src/daisy_seed.h ****     {
 2336              		.loc 3 119 17 view .LVU563
 2337              	.LBB3114:
 2338              		.loc 3 121 23 is_stmt 0 view .LVU564
 2339 0048 0448     		ldr	r0, .L103+8
 2340 004a FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
 2341              	.LVL121:
 2342              		.loc 3 121 23 view .LVU565
 2343              	.LBE3114:
 2344              	.LBE3113:
  70:src/main.cpp  **** 
 2345              		.loc 8 70 1 view .LVU566
 2346 004e 08B0     		add	sp, sp, #32
 2347              		.cfi_def_cfa_offset 8
 2348              		@ sp needed
 2349 0050 10BD     		pop	{r4, pc}
 2350              	.LVL122:
 2351              	.L104:
  70:src/main.cpp  **** 
 2352              		.loc 8 70 1 view .LVU567
 2353 0052 00BF     		.align	2
 2354              	.L103:
 2355 0054 01060107 		.word	117507585
 2356 0058 00000000 		.word	.LC2
 2357 005c 0C000000 		.word	.LC3
 2358              		.cfi_endproc
 2359              	.LFE5454:
 2361              		.section	.text._ZNSt10_HashtableIiSt4pairIKi5paramESaIS3_ENSt8__detail10_Select1stESt8equal_toIiES
 2362              		.align	1
 2363              		.p2align 2,,3
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 202


 2364              		.weak	_ZNSt10_HashtableIiSt4pairIKi5paramESaIS3_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiE
 2365              		.syntax unified
 2366              		.thumb
 2367              		.thumb_func
 2368              		.fpu fpv5-d16
 2370              	_ZNSt10_HashtableIiSt4pairIKi5paramESaIS3_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS5_18_
 2371              	.LVL123:
 2372              	.LFB5995:
2026:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 2373              		.loc 9 2026 5 is_stmt 1 view -0
 2374              		.cfi_startproc
 2375              		@ args = 0, pretend = 0, frame = 0
 2376              		@ frame_needed = 0, uses_anonymous_args = 0
2026:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 2377              		.loc 9 2026 5 is_stmt 0 view .LVU569
 2378 0000 70B5     		push	{r4, r5, r6, lr}
 2379              		.cfi_def_cfa_offset 16
 2380              		.cfi_offset 4, -16
 2381              		.cfi_offset 5, -12
 2382              		.cfi_offset 6, -8
 2383              		.cfi_offset 14, -4
 2384              	.LBB3187:
 2385              	.LBB3188:
 421:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 2386              		.loc 9 421 64 view .LVU570
 2387 0002 8568     		ldr	r5, [r0, #8]
 2388              	.LBE3188:
 2389              	.LBE3187:
2026:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 2390              		.loc 9 2026 5 view .LVU571
 2391 0004 0646     		mov	r6, r0
 2392              	.LVL124:
 2393              	.LBB3189:
 2394              	.LBI3187:
 420:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return static_cast<__node_type*>(_M_before_begin._M_nxt); }
 2395              		.loc 9 420 7 is_stmt 1 view .LVU572
 420:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return static_cast<__node_type*>(_M_before_begin._M_nxt); }
 2396              		.loc 9 420 7 is_stmt 0 view .LVU573
 2397              	.LBE3189:
 2398              	.LBB3190:
 2399              	.LBI3190:
2069:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 2400              		.loc 10 2069 5 is_stmt 1 view .LVU574
 2401              	.LBB3191:
2071:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	{
 2402              		.loc 10 2071 14 view .LVU575
 2403 0006 1DB3     		cbz	r5, .L106
 2404              	.LVL125:
 2405              	.L110:
 2406              	.LBB3192:
 2407              	.LBB3193:
 2408              	.LBI3193:
 282:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return static_cast<_Hash_node*>(this->_M_nxt); }
 2409              		.loc 10 282 7 view .LVU576
 282:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return static_cast<_Hash_node*>(this->_M_nxt); }
 2410              		.loc 10 282 7 is_stmt 0 view .LVU577
 2411 0008 2C46     		mov	r4, r5
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 203


 2412              	.LVL126:
 282:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return static_cast<_Hash_node*>(this->_M_nxt); }
 2413              		.loc 10 282 7 view .LVU578
 2414              	.LBE3193:
 2415              	.LBB3195:
 2416              	.LBB3196:
 2417              	.LBB3197:
 2418              	.LBB3198:
 2419              	.LBB3199:
 2420              	.LBB3200:
 2421              	.LBB3201:
 2422              	.LBB3202:
 2423              	.LBB3203:
 2424              	.LBI3203:
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 2425              		.loc 16 236 7 is_stmt 1 view .LVU579
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 2426              		.loc 16 236 7 is_stmt 0 view .LVU580
 2427              	.LBE3203:
 2428              	.LBE3202:
 2429              	.LBE3201:
 2430              	.LBE3200:
 2431              	.LBE3199:
 2432              	.LBE3198:
 2433              	.LBE3197:
 2434              	.LBE3196:
 2435              	.LBE3195:
 2436              	.LBB3285:
 2437              	.LBB3194:
 283:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 2438              		.loc 10 283 53 view .LVU581
 2439 000a 2D68     		ldr	r5, [r5]
 2440              	.LVL127:
 283:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     };
 2441              		.loc 10 283 53 view .LVU582
 2442              	.LBE3194:
 2443              	.LBE3285:
 2444              	.LBB3286:
 2445              	.LBI3195:
2051:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 2446              		.loc 10 2051 5 is_stmt 1 view .LVU583
 2447              	.LBB3279:
 2448              	.LBI3196:
 527:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(is_nothrow_destructible<_Up>::value)
 2449              		.loc 13 527 2 view .LVU584
 2450              	.LBB3278:
 2451              	.LBI3197:
 134:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 135:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 			  , __t * sizeof(_Tp)
 136:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #endif
 137:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 			 );
 138:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 139:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 140:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus <= 201703L
 141:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       size_type
 142:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       max_size() const _GLIBCXX_USE_NOEXCEPT
 143:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       { return _M_max_size(); }
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 204


 144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 145:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cplusplus >= 201103L
 146:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       template<typename _Up, typename... _Args>
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	void
 148:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	construct(_Up* __p, _Args&&... __args)
 149:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 151:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 152:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       template<typename _Up>
 153:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	void
 154:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	destroy(_Up* __p)
 2452              		.loc 12 154 2 view .LVU585
 2453              	.LBB3277:
 2454              	.LBI3198:
 2455              		.file 23 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
   1:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // Pair implementation -*- C++ -*-
   2:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
   3:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** //
   5:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // software; you can redistribute it and/or modify it under the
   7:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // terms of the GNU General Public License as published by the
   8:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // any later version.
  10:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  11:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // This library is distributed in the hope that it will be useful,
  12:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // GNU General Public License for more details.
  15:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  16:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  20:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // You should have received a copy of the GNU General Public License and
  21:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** // <http://www.gnu.org/licenses/>.
  24:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  25:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** /*
  26:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  *
  27:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * Copyright (c) 1994
  28:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * Hewlett-Packard Company
  29:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  *
  30:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * that both that copyright notice and this permission notice appear
  34:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * representations about the suitability of this software for any
  36:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  *
  38:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  *
  39:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * Copyright (c) 1996,1997
  40:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  *
  42:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * Permission to use, copy, modify, distribute and sell this software
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 205


  43:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * that both that copyright notice and this permission notice appear
  46:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * representations about the suitability of this software for any
  48:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  */
  50:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  51:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** /** @file bits/stl_pair.h
  52:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  *  This is an internal header file, included by other library headers.
  53:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  *  Do not attempt to use it directly. @headername{utility}
  54:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  */
  55:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  56:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #ifndef _STL_PAIR_H
  57:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #define _STL_PAIR_H 1
  58:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  59:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #include <bits/move.h> // for std::move / std::forward, and std::swap
  60:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  61:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus >= 201103L
  62:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** # include <type_traits> // for std::__decay_and_strip, std::is_reference_v
  63:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif
  64:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus > 201703L
  65:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** # include <compare>
  66:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** # define __cpp_lib_constexpr_utility 201811L
  67:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif
  68:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  69:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** namespace std _GLIBCXX_VISIBILITY(default)
  70:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** {
  71:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  72:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  73:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   /**
  74:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *  @addtogroup utilities
  75:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *  @{
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    */
  77:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  78:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus >= 201103L
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   /// Tag type for piecewise construction of std::pair objects.
  80:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   struct piecewise_construct_t { explicit piecewise_construct_t() = default; };
  81:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   /// Tag for piecewise construction of std::pair objects.
  83:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   _GLIBCXX17_INLINE constexpr piecewise_construct_t piecewise_construct =
  84:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     piecewise_construct_t();
  85:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  86:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   /// @cond undocumented
  87:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  88:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   // Forward declarations.
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   template<typename...>
  90:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     class tuple;
  91:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  92:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   template<std::size_t...>
  93:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     struct _Index_tuple;
  94:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
  95:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   // Concept utility functions, reused in conditionally-explicit
  96:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   // constructors.
  97:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   // See PR 70437, don't look at is_constructible or
  98:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   // is_convertible if the types are the same to
  99:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   // avoid querying those properties for incomplete types.
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 206


 100:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   template <bool, typename _T1, typename _T2>
 101:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     struct _PCC
 102:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     {
 103:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 104:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _ConstructiblePair()
 105:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 106:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return __and_<is_constructible<_T1, const _U1&>,
 107:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      is_constructible<_T2, const _U2&>>::value;
 108:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 109:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 110:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 111:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _ImplicitlyConvertiblePair()
 112:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 113:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return __and_<is_convertible<const _U1&, _T1>,
 114:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      is_convertible<const _U2&, _T2>>::value;
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 116:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 117:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 118:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _MoveConstructiblePair()
 119:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return __and_<is_constructible<_T1, _U1&&>,
 121:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      is_constructible<_T2, _U2&&>>::value;
 122:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 123:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 124:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 125:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _ImplicitlyMoveConvertiblePair()
 126:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 127:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return __and_<is_convertible<_U1&&, _T1>,
 128:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      is_convertible<_U2&&, _T2>>::value;
 129:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 130:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 131:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <bool __implicit, typename _U1, typename _U2>
 132:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _CopyMovePair()
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 134:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	using __do_converts = __and_<is_convertible<const _U1&, _T1>,
 135:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 				  is_convertible<_U2&&, _T2>>;
 136:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	using __converts = typename conditional<__implicit,
 137:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 				       __do_converts,
 138:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 				       __not_<__do_converts>>::type;
 139:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return __and_<is_constructible<_T1, const _U1&>,
 140:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      is_constructible<_T2, _U2&&>,
 141:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      __converts
 142:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      >::value;
 143:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 145:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <bool __implicit, typename _U1, typename _U2>
 146:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _MoveCopyPair()
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 148:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	using __do_converts = __and_<is_convertible<_U1&&, _T1>,
 149:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 				  is_convertible<const _U2&, _T2>>;
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	using __converts = typename conditional<__implicit,
 151:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 				       __do_converts,
 152:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 				       __not_<__do_converts>>::type;
 153:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return __and_<is_constructible<_T1, _U1&&>,
 154:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      is_constructible<_T2, const _U2&&>,
 155:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      __converts
 156:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      >::value;
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 207


 157:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 158:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   };
 159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   template <typename _T1, typename _T2>
 161:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     struct _PCC<false, _T1, _T2>
 162:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     {
 163:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 164:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _ConstructiblePair()
 165:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 166:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return false;
 167:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 168:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 169:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 170:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _ImplicitlyConvertiblePair()
 171:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 172:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return false;
 173:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 174:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 175:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 176:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _MoveConstructiblePair()
 177:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 178:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return false;
 179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 180:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 181:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 182:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       static constexpr bool _ImplicitlyMoveConvertiblePair()
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 184:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return false;
 185:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   };
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif // C++11
 188:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 189:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   template<typename _U1, typename _U2> class __pair_base
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   {
 191:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus >= 201103L
 192:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     template<typename _T1, typename _T2> friend struct pair;
 193:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     __pair_base() = default;
 194:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     ~__pair_base() = default;
 195:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     __pair_base(const __pair_base&) = default;
 196:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     __pair_base& operator=(const __pair_base&) = delete;
 197:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif // C++11
 198:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   };
 199:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   /// @endcond
 201:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 202:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****  /**
 203:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *  @brief Struct holding two objects of arbitrary type.
 204:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *
 205:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *  @tparam _T1  Type of first object.
 206:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *  @tparam _T2  Type of second object.
 207:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *
 208:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *  <https://gcc.gnu.org/onlinedocs/libstdc++/manual/utilities.html>
 209:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    */
 210:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   template<typename _T1, typename _T2>
 211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     struct pair
 2456              		.loc 23 211 12 view .LVU586
 2457              	.LBB3276:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 208


 2458              	.LBI3199:
  37:src/parameter_controller.h **** 	std::string label;
 2459              		.loc 15 37 8 view .LVU587
 2460              	.LBB3225:
 2461              	.LBI3200:
 657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 2462              		.loc 16 657 7 view .LVU588
 2463              	.LBB3221:
 2464              	.LBI3201:
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2465              		.loc 16 229 7 view .LVU589
 2466              	.LBB3220:
 2467              	.LBB3211:
 2468              	.LBI3211:
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 2469              		.loc 16 221 7 view .LVU590
 2470              	.LBB3212:
 2471              	.LBI3212:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 2472              		.loc 16 186 7 view .LVU591
 2473              	.LBB3213:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2474              		.loc 16 187 28 is_stmt 0 view .LVU592
 2475 000c A06B     		ldr	r0, [r4, #56]
 2476              	.LVL128:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2477              		.loc 16 187 28 view .LVU593
 2478              	.LBE3213:
 2479              	.LBE3212:
 2480              	.LBB3214:
 2481              	.LBI3214:
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2482              		.loc 16 200 7 is_stmt 1 view .LVU594
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2483              		.loc 16 200 7 is_stmt 0 view .LVU595
 2484              	.LBE3214:
 2485              	.LBE3211:
 2486              	.LBB3217:
 2487              	.LBB3204:
 2488              	.LBB3205:
 2489              	.LBI3205:
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 2490              		.loc 13 491 7 is_stmt 1 view .LVU596
 2491              	.LBB3206:
 2492              	.LBI3206:
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 2493              		.loc 12 120 7 view .LVU597
 2494              	.LBE3206:
 2495              	.LBE3205:
 2496              	.LBE3204:
 2497              	.LBE3217:
 2498              	.LBB3218:
 2499              	.LBB3216:
 2500              	.LBB3215:
 203:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 2501              		.loc 16 203 57 is_stmt 0 view .LVU598
 2502 000e 04F14003 		add	r3, r4, #64
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 209


 2503              	.LVL129:
 203:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 2504              		.loc 16 203 57 view .LVU599
 2505              	.LBE3215:
 2506              	.LBE3216:
 2507              	.LBE3218:
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 2508              		.loc 16 231 2 view .LVU600
 2509 0012 9842     		cmp	r0, r3
 2510 0014 03D0     		beq	.L107
 2511              	.LBB3219:
 2512              	.LBB3210:
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2513              		.loc 16 237 34 view .LVU601
 2514 0016 216C     		ldr	r1, [r4, #64]
 2515              	.LBB3209:
 2516              	.LBB3208:
 2517              	.LBB3207:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 2518              		.loc 12 133 19 view .LVU602
 2519 0018 0131     		adds	r1, r1, #1
 2520              	.LVL130:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 2521              		.loc 12 133 19 view .LVU603
 2522 001a FFF7FEFF 		bl	_ZdlPvj
 2523              	.LVL131:
 2524              	.L107:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 2525              		.loc 12 133 19 view .LVU604
 2526              	.LBE3207:
 2527              	.LBE3208:
 2528              	.LBE3209:
 2529              	.LBE3210:
 2530              	.LBE3219:
 2531              	.LBE3220:
 2532              	.LBE3221:
 2533              	.LBB3222:
 2534              	.LBI3222:
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2535              		.loc 16 150 14 is_stmt 1 view .LVU605
 2536              	.LBB3223:
 2537              	.LBI3223:
 2538              		.loc 11 162 7 view .LVU606
 2539              	.LBB3224:
 2540              	.LBI3224:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2541              		.loc 12 89 7 view .LVU607
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2542              		.loc 12 89 7 is_stmt 0 view .LVU608
 2543              	.LBE3224:
 2544              	.LBE3223:
 2545              	.LBE3222:
 2546              	.LBE3225:
 2547              	.LBB3226:
 2548              	.LBI3226:
 657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 2549              		.loc 16 657 7 is_stmt 1 view .LVU609
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 210


 2550              	.LBB3227:
 2551              	.LBI3227:
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2552              		.loc 16 229 7 view .LVU610
 2553              	.LBB3228:
 2554              	.LBB3229:
 2555              	.LBI3229:
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 2556              		.loc 16 221 7 view .LVU611
 2557              	.LBB3230:
 2558              	.LBI3230:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 2559              		.loc 16 186 7 view .LVU612
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 2560              		.loc 16 186 7 is_stmt 0 view .LVU613
 2561              	.LBE3230:
 2562              	.LBE3229:
 2563              	.LBB3236:
 2564              	.LBI3236:
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 2565              		.loc 16 236 7 is_stmt 1 view .LVU614
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 2566              		.loc 16 236 7 is_stmt 0 view .LVU615
 2567              	.LBE3236:
 2568              	.LBB3244:
 2569              	.LBB3232:
 2570              	.LBB3231:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2571              		.loc 16 187 28 view .LVU616
 2572 001e 206A     		ldr	r0, [r4, #32]
 2573              	.LVL132:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2574              		.loc 16 187 28 view .LVU617
 2575              	.LBE3231:
 2576              	.LBE3232:
 2577              	.LBB3233:
 2578              	.LBI3233:
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2579              		.loc 16 200 7 is_stmt 1 view .LVU618
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2580              		.loc 16 200 7 is_stmt 0 view .LVU619
 2581              	.LBE3233:
 2582              	.LBE3244:
 2583              	.LBB3245:
 2584              	.LBB3237:
 2585              	.LBB3238:
 2586              	.LBI3238:
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 2587              		.loc 13 491 7 is_stmt 1 view .LVU620
 2588              	.LBB3239:
 2589              	.LBI3239:
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 2590              		.loc 12 120 7 view .LVU621
 2591              	.LBE3239:
 2592              	.LBE3238:
 2593              	.LBE3237:
 2594              	.LBE3245:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 211


 2595              	.LBB3246:
 2596              	.LBB3235:
 2597              	.LBB3234:
 203:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 2598              		.loc 16 203 57 is_stmt 0 view .LVU622
 2599 0020 04F12803 		add	r3, r4, #40
 2600              	.LVL133:
 203:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 2601              		.loc 16 203 57 view .LVU623
 2602              	.LBE3234:
 2603              	.LBE3235:
 2604              	.LBE3246:
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 2605              		.loc 16 231 2 view .LVU624
 2606 0024 9842     		cmp	r0, r3
 2607 0026 03D0     		beq	.L108
 2608              	.LBB3247:
 2609              	.LBB3243:
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2610              		.loc 16 237 34 view .LVU625
 2611 0028 A16A     		ldr	r1, [r4, #40]
 2612              	.LBB3242:
 2613              	.LBB3241:
 2614              	.LBB3240:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 2615              		.loc 12 133 19 view .LVU626
 2616 002a 0131     		adds	r1, r1, #1
 2617              	.LVL134:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 2618              		.loc 12 133 19 view .LVU627
 2619 002c FFF7FEFF 		bl	_ZdlPvj
 2620              	.LVL135:
 2621              	.L108:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 2622              		.loc 12 133 19 view .LVU628
 2623              	.LBE3240:
 2624              	.LBE3241:
 2625              	.LBE3242:
 2626              	.LBE3243:
 2627              	.LBE3247:
 2628              	.LBE3228:
 2629              	.LBE3227:
 2630              	.LBB3248:
 2631              	.LBI3248:
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2632              		.loc 16 150 14 is_stmt 1 view .LVU629
 2633              	.LBB3249:
 2634              	.LBI3249:
 2635              		.loc 11 162 7 view .LVU630
 2636              	.LBB3250:
 2637              	.LBI3250:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2638              		.loc 12 89 7 view .LVU631
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2639              		.loc 12 89 7 is_stmt 0 view .LVU632
 2640              	.LBE3250:
 2641              	.LBE3249:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 212


 2642              	.LBE3248:
 2643              	.LBE3226:
 2644              	.LBB3251:
 2645              	.LBI3251:
 657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 2646              		.loc 16 657 7 is_stmt 1 view .LVU633
 2647              	.LBB3252:
 2648              	.LBI3252:
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2649              		.loc 16 229 7 view .LVU634
 2650              	.LBB3253:
 2651              	.LBB3254:
 2652              	.LBI3254:
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 2653              		.loc 16 221 7 view .LVU635
 2654              	.LBB3255:
 2655              	.LBI3255:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 2656              		.loc 16 186 7 view .LVU636
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 2657              		.loc 16 186 7 is_stmt 0 view .LVU637
 2658              	.LBE3255:
 2659              	.LBE3254:
 2660              	.LBB3261:
 2661              	.LBI3261:
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 2662              		.loc 16 236 7 is_stmt 1 view .LVU638
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 2663              		.loc 16 236 7 is_stmt 0 view .LVU639
 2664              	.LBE3261:
 2665              	.LBB3269:
 2666              	.LBB3257:
 2667              	.LBB3256:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2668              		.loc 16 187 28 view .LVU640
 2669 0030 2346     		mov	r3, r4
 2670 0032 53F8080F 		ldr	r0, [r3, #8]!
 2671              	.LVL136:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2672              		.loc 16 187 28 view .LVU641
 2673              	.LBE3256:
 2674              	.LBE3257:
 2675              	.LBB3258:
 2676              	.LBI3258:
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2677              		.loc 16 200 7 is_stmt 1 view .LVU642
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2678              		.loc 16 200 7 is_stmt 0 view .LVU643
 2679              	.LBE3258:
 2680              	.LBE3269:
 2681              	.LBB3270:
 2682              	.LBB3262:
 2683              	.LBB3263:
 2684              	.LBI3263:
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 2685              		.loc 13 491 7 is_stmt 1 view .LVU644
 2686              	.LBB3264:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 213


 2687              	.LBI3264:
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 2688              		.loc 12 120 7 view .LVU645
 2689              	.LBE3264:
 2690              	.LBE3263:
 2691              	.LBE3262:
 2692              	.LBE3270:
 2693              	.LBB3271:
 2694              	.LBB3260:
 2695              	.LBB3259:
 203:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 2696              		.loc 16 203 57 is_stmt 0 view .LVU646
 2697 0036 0833     		adds	r3, r3, #8
 2698              	.LVL137:
 203:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 2699              		.loc 16 203 57 view .LVU647
 2700              	.LBE3259:
 2701              	.LBE3260:
 2702              	.LBE3271:
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 2703              		.loc 16 231 2 view .LVU648
 2704 0038 9842     		cmp	r0, r3
 2705 003a 03D0     		beq	.L109
 2706              	.LBB3272:
 2707              	.LBB3268:
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 2708              		.loc 16 237 34 view .LVU649
 2709 003c 2169     		ldr	r1, [r4, #16]
 2710              	.LBB3267:
 2711              	.LBB3266:
 2712              	.LBB3265:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 2713              		.loc 12 133 19 view .LVU650
 2714 003e 0131     		adds	r1, r1, #1
 2715              	.LVL138:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 2716              		.loc 12 133 19 view .LVU651
 2717 0040 FFF7FEFF 		bl	_ZdlPvj
 2718              	.LVL139:
 2719              	.L109:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 2720              		.loc 12 133 19 view .LVU652
 2721              	.LBE3265:
 2722              	.LBE3266:
 2723              	.LBE3267:
 2724              	.LBE3268:
 2725              	.LBE3272:
 2726              	.LBE3253:
 2727              	.LBE3252:
 2728              	.LBB3273:
 2729              	.LBI3273:
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2730              		.loc 16 150 14 is_stmt 1 view .LVU653
 2731              	.LBB3274:
 2732              	.LBI3274:
 2733              		.loc 11 162 7 view .LVU654
 2734              	.LBB3275:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 214


 2735              	.LBI3275:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2736              		.loc 12 89 7 view .LVU655
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2737              		.loc 12 89 7 is_stmt 0 view .LVU656
 2738              	.LBE3275:
 2739              	.LBE3274:
 2740              	.LBE3273:
 2741              	.LBE3251:
 2742              	.LBE3276:
 2743              	.LBE3277:
 2744              	.LBE3278:
 2745              	.LBE3279:
 2746              	.LBB3280:
 2747              	.LBI3280:
2059:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 2748              		.loc 10 2059 5 is_stmt 1 view .LVU657
 2749              	.LBB3281:
 2750              	.LBB3282:
 2751              	.LBI3282:
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 2752              		.loc 13 491 7 view .LVU658
 2753              	.LBB3283:
 2754              	.LBI3283:
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 2755              		.loc 12 120 7 view .LVU659
 2756              	.LBB3284:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 2757              		.loc 12 133 19 is_stmt 0 view .LVU660
 2758 0044 6021     		movs	r1, #96
 2759 0046 2046     		mov	r0, r4
 2760 0048 FFF7FEFF 		bl	_ZdlPvj
 2761              	.LVL140:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 2762              		.loc 12 133 19 view .LVU661
 2763              	.LBE3284:
 2764              	.LBE3283:
 2765              	.LBE3282:
 2766              	.LBE3281:
 2767              	.LBE3280:
 2768              	.LBE3286:
 2769              	.LBE3192:
2071:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	{
 2770              		.loc 10 2071 14 is_stmt 1 view .LVU662
 2771 004c 002D     		cmp	r5, #0
 2772 004e DBD1     		bne	.L110
 2773              	.LVL141:
 2774              	.L106:
2071:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	{
 2775              		.loc 10 2071 14 is_stmt 0 view .LVU663
 2776              	.LBE3191:
 2777              	.LBE3190:
2031:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_element_count = 0;
 2778              		.loc 9 2031 23 view .LVU664
 2779 0050 7268     		ldr	r2, [r6, #4]
 2780 0052 0021     		movs	r1, #0
 2781 0054 3068     		ldr	r0, [r6]
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 215


 2782 0056 9200     		lsls	r2, r2, #2
 2783 0058 FFF7FEFF 		bl	memset
 2784              	.LVL142:
2032:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_before_begin._M_nxt = nullptr;
 2785              		.loc 9 2032 24 view .LVU665
 2786 005c 0023     		movs	r3, #0
2033:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****     }
 2787              		.loc 9 2033 30 view .LVU666
 2788 005e C6E90233 		strd	r3, r3, [r6, #8]
2034:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 2789              		.loc 9 2034 5 view .LVU667
 2790 0062 70BD     		pop	{r4, r5, r6, pc}
2034:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 2791              		.loc 9 2034 5 view .LVU668
 2792              		.cfi_endproc
 2793              	.LFE5995:
 2795              		.section	.text._ZN12ParameterMapD2Ev,"axG",%progbits,_ZN12ParameterMapD5Ev,comdat
 2796              		.align	1
 2797              		.p2align 2,,3
 2798              		.weak	_ZN12ParameterMapD2Ev
 2799              		.syntax unified
 2800              		.thumb
 2801              		.thumb_func
 2802              		.fpu fpv5-d16
 2804              	_ZN12ParameterMapD2Ev:
 2805              	.LVL143:
 2806              	.LFB5356:
  98:src/parameter_controller.h **** 
 2807              		.loc 15 98 5 is_stmt 1 view -0
 2808              		.cfi_startproc
 2809              		@ args = 0, pretend = 0, frame = 0
 2810              		@ frame_needed = 0, uses_anonymous_args = 0
  98:src/parameter_controller.h **** 
 2811              		.loc 15 98 5 is_stmt 0 view .LVU670
 2812 0000 10B5     		push	{r4, lr}
 2813              		.cfi_def_cfa_offset 8
 2814              		.cfi_offset 4, -8
 2815              		.cfi_offset 14, -4
  98:src/parameter_controller.h **** 
 2816              		.loc 15 98 5 view .LVU671
 2817 0002 0446     		mov	r4, r0
 2818              	.LVL144:
 2819              	.LBB3311:
 2820              	.LBI3311:
 2821              		.file 24 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
   1:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // unordered_map implementation -*- C++ -*-
   2:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
   3:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // Copyright (C) 2010-2020 Free Software Foundation, Inc.
   4:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** //
   5:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // software; you can redistribute it and/or modify it under the
   7:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // terms of the GNU General Public License as published by the
   8:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // any later version.
  10:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
  11:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // This library is distributed in the hope that it will be useful,
  12:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 216


  13:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // GNU General Public License for more details.
  15:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
  16:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
  20:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // You should have received a copy of the GNU General Public License and
  21:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** // <http://www.gnu.org/licenses/>.
  24:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
  25:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** /** @file bits/unordered_map.h
  26:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****  *  This is an internal header file, included by other library headers.
  27:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****  *  Do not attempt to use it directly. @headername{unordered_map}
  28:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****  */
  29:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
  30:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** #ifndef _UNORDERED_MAP_H
  31:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** #define _UNORDERED_MAP_H
  32:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
  33:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** namespace std _GLIBCXX_VISIBILITY(default)
  34:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** {
  35:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  36:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  37:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
  38:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****   /// Base types for unordered_map.
  39:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****   template<bool _Cache>
  40:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****     using __umap_traits = __detail::_Hashtable_traits<_Cache, false, true>;
  41:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
  42:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****   template<typename _Key,
  43:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	   typename _Tp,
  44:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	   typename _Hash = hash<_Key>,
  45:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	   typename _Pred = std::equal_to<_Key>,
  46:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	   typename _Alloc = std::allocator<std::pair<const _Key, _Tp> >,
  47:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	   typename _Tr = __umap_traits<__cache_default<_Key, _Hash>::value>>
  48:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****     using __umap_hashtable = _Hashtable<_Key, std::pair<const _Key, _Tp>,
  49:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                                         _Alloc, __detail::_Select1st,
  50:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 				        _Pred, _Hash,
  51:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 				        __detail::_Mod_range_hashing,
  52:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 				        __detail::_Default_ranged_hash,
  53:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 				        __detail::_Prime_rehash_policy, _Tr>;
  54:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
  55:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****   /// Base types for unordered_multimap.
  56:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****   template<bool _Cache>
  57:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****     using __ummap_traits = __detail::_Hashtable_traits<_Cache, false, false>;
  58:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
  59:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****   template<typename _Key,
  60:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	   typename _Tp,
  61:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	   typename _Hash = hash<_Key>,
  62:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	   typename _Pred = std::equal_to<_Key>,
  63:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	   typename _Alloc = std::allocator<std::pair<const _Key, _Tp> >,
  64:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	   typename _Tr = __ummap_traits<__cache_default<_Key, _Hash>::value>>
  65:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****     using __ummap_hashtable = _Hashtable<_Key, std::pair<const _Key, _Tp>,
  66:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 					 _Alloc, __detail::_Select1st,
  67:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 					 _Pred, _Hash,
  68:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 					 __detail::_Mod_range_hashing,
  69:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 					 __detail::_Default_ranged_hash,
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 217


  70:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 					 __detail::_Prime_rehash_policy, _Tr>;
  71:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
  72:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****   template<class _Key, class _Tp, class _Hash, class _Pred, class _Alloc>
  73:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****     class unordered_multimap;
  74:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
  75:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****   /**
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *  @brief A standard container composed of unique keys (containing
  77:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *  at most one of each key value) that associates values of another type
  78:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *  with the keys.
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *
  80:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *  @ingroup unordered_associative_containers
  81:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *  @tparam  _Key    Type of key objects.
  83:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *  @tparam  _Tp     Type of mapped objects.
  84:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *  @tparam  _Hash   Hashing function object type, defaults to hash<_Value>.
  85:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *  @tparam  _Pred   Predicate function object type, defaults
  86:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *                   to equal_to<_Value>.
  87:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *  @tparam  _Alloc  Allocator type, defaults to 
  88:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *                   std::allocator<std::pair<const _Key, _Tp>>.
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *
  90:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, and
  91:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *  <a href="tables.html#xx">unordered associative container</a>
  92:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *
  93:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    * The resulting value type of the container is std::pair<const _Key, _Tp>.
  94:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *
  95:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *  Base is _Hashtable, dispatched at compile time via template
  96:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    *  alias __umap_hashtable.
  97:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****    */
  98:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****   template<typename _Key, typename _Tp,
  99:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	   typename _Hash = hash<_Key>,
 100:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	   typename _Pred = equal_to<_Key>,
 101:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	   typename _Alloc = allocator<std::pair<const _Key, _Tp>>>
 102:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****     class unordered_map
 2822              		.loc 24 102 11 is_stmt 1 view .LVU672
 2823              	.LBB3312:
 2824              	.LBB3313:
 2825              	.LBI3313:
1383:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 2826              		.loc 9 1383 5 view .LVU673
 2827              	.LBB3314:
1387:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_deallocate_buckets();
 2828              		.loc 9 1387 12 is_stmt 0 view .LVU674
 2829 0004 FFF7FEFF 		bl	_ZNSt10_HashtableIiSt4pairIKi5paramESaIS3_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS5
 2830              	.LVL145:
 2831              	.LBB3315:
 2832              	.LBI3315:
 411:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { _M_deallocate_buckets(_M_buckets, _M_bucket_count); }
 2833              		.loc 9 411 7 is_stmt 1 view .LVU675
 2834              	.LBB3316:
 412:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 2835              		.loc 9 412 30 is_stmt 0 view .LVU676
 2836 0008 2068     		ldr	r0, [r4]
 2837              	.LBB3317:
 2838              	.LBB3318:
 2839              	.LBB3319:
 2840              	.LBB3320:
 380:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 218


 2841              		.loc 9 380 44 view .LVU677
 2842 000a 04F11803 		add	r3, r4, #24
 2843              	.LBE3320:
 2844              	.LBE3319:
 2845              	.LBE3318:
 2846              	.LBE3317:
 412:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 2847              		.loc 9 412 30 view .LVU678
 2848 000e 6168     		ldr	r1, [r4, #4]
 2849              	.LVL146:
 2850              	.LBB3332:
 2851              	.LBI3317:
 402:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
 2852              		.loc 9 402 7 is_stmt 1 view .LVU679
 2853              	.LBB3331:
 2854              	.LBB3321:
 2855              	.LBI3319:
 379:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __builtin_expect(__bkts == &_M_single_bucket, false); }
 2856              		.loc 9 379 7 view .LVU680
 379:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __builtin_expect(__bkts == &_M_single_bucket, false); }
 2857              		.loc 9 379 7 is_stmt 0 view .LVU681
 2858              	.LBE3321:
 404:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return;
 2859              		.loc 9 404 2 view .LVU682
 2860 0010 9842     		cmp	r0, r3
 2861 0012 02D0     		beq	.L117
 2862              	.LVL147:
 2863              	.LBB3322:
 2864              	.LBI3322:
 2865              		.loc 10 2093 5 is_stmt 1 view .LVU683
 2866              	.LBB3323:
 2867              	.LBB3324:
 2868              	.LBI3324:
 157:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 2869              		.loc 11 157 2 view .LVU684
 2870              	.LBB3325:
 2871              	.LBI3325:
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2872              		.loc 12 79 7 view .LVU685
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2873              		.loc 12 79 7 is_stmt 0 view .LVU686
 2874              	.LBE3325:
 2875              	.LBE3324:
 2876              	.LBB3326:
 2877              	.LBI3326:
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 2878              		.loc 13 491 7 is_stmt 1 view .LVU687
 2879              	.LBB3327:
 2880              	.LBI3327:
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 2881              		.loc 12 120 7 view .LVU688
 2882              	.LBB3328:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 2883              		.loc 12 133 19 is_stmt 0 view .LVU689
 2884 0014 8900     		lsls	r1, r1, #2
 2885              	.LVL148:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 219


 2886              		.loc 12 133 19 view .LVU690
 2887 0016 FFF7FEFF 		bl	_ZdlPvj
 2888              	.LVL149:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 2889              		.loc 12 133 19 view .LVU691
 2890              	.LBE3328:
 2891              	.LBE3327:
 2892              	.LBE3326:
 2893              	.LBB3329:
 2894              	.LBI3329:
 2895              		.loc 11 162 7 is_stmt 1 view .LVU692
 2896              	.LBB3330:
 2897              	.LBI3330:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2898              		.loc 12 89 7 view .LVU693
 2899              	.L117:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2900              		.loc 12 89 7 is_stmt 0 view .LVU694
 2901              	.LBE3330:
 2902              	.LBE3329:
 2903              	.LBE3323:
 2904              	.LBE3322:
 2905              	.LBE3331:
 2906              	.LBE3332:
 2907              	.LBE3316:
 2908              	.LBE3315:
 2909              	.LBB3333:
 2910              	.LBI3333:
1963:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 2911              		.loc 10 1963 12 is_stmt 1 view .LVU695
 2912              	.LBB3334:
 2913              	.LBI3334:
1109:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : private _Tp
 2914              		.loc 10 1109 12 view .LVU696
 2915              	.LBB3335:
 2916              	.LBI3335:
 2917              		.loc 11 162 7 view .LVU697
 2918              	.LBB3336:
 2919              	.LBI3336:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2920              		.loc 12 89 7 view .LVU698
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 2921              		.loc 12 89 7 is_stmt 0 view .LVU699
 2922              	.LBE3336:
 2923              	.LBE3335:
 2924              	.LBE3334:
 2925              	.LBE3333:
 2926              	.LBE3314:
 2927              	.LBE3313:
 2928              	.LBE3312:
 2929              	.LBE3311:
  98:src/parameter_controller.h **** 
 2930              		.loc 15 98 22 view .LVU700
 2931 001a 2046     		mov	r0, r4
 2932 001c 10BD     		pop	{r4, pc}
  98:src/parameter_controller.h **** 
 2933              		.loc 15 98 22 view .LVU701
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 220


 2934              		.cfi_endproc
 2935              	.LFE5356:
 2937              		.weak	_ZN12ParameterMapD1Ev
 2938              		.thumb_set _ZN12ParameterMapD1Ev,_ZN12ParameterMapD2Ev
 2939 001e 00BF     		.section	.text._ZN15ParameterConfigD2Ev,"axG",%progbits,_ZN15ParameterConfigD5Ev,comdat
 2940              		.align	1
 2941              		.p2align 2,,3
 2942              		.weak	_ZN15ParameterConfigD2Ev
 2943              		.syntax unified
 2944              		.thumb
 2945              		.thumb_func
 2946              		.fpu fpv5-d16
 2948              	_ZN15ParameterConfigD2Ev:
 2949              	.LVL150:
 2950              	.LFB5403:
 122:src/parameter_controller.h **** 
 2951              		.loc 15 122 7 is_stmt 1 view -0
 2952              		.cfi_startproc
 2953              		@ args = 0, pretend = 0, frame = 0
 2954              		@ frame_needed = 0, uses_anonymous_args = 0
 122:src/parameter_controller.h **** 
 2955              		.loc 15 122 7 is_stmt 0 view .LVU703
 2956 0000 70B5     		push	{r4, r5, r6, lr}
 2957              		.cfi_def_cfa_offset 16
 2958              		.cfi_offset 4, -16
 2959              		.cfi_offset 5, -12
 2960              		.cfi_offset 6, -8
 2961              		.cfi_offset 14, -4
 2962              	.LBB3470:
 122:src/parameter_controller.h **** 
 2963              		.loc 15 122 7 view .LVU704
 2964 0002 294B     		ldr	r3, .L132
 2965              	.LBE3470:
 2966 0004 0646     		mov	r6, r0
 2967              	.LBB3626:
 2968 0006 00F55174 		add	r4, r0, #836
 2969 000a 00F2B465 		addw	r5, r0, #1716
 2970 000e 0360     		str	r3, [r0]
 2971              	.LVL151:
 2972              	.L123:
 122:src/parameter_controller.h **** 
 2973              		.loc 15 122 7 discriminator 5 view .LVU705
 2974 0010 583D     		subs	r5, r5, #88
 2975              	.LVL152:
 2976              	.LBB3471:
 2977              	.LBI3471:
  37:src/parameter_controller.h **** 	std::string label;
 2978              		.loc 15 37 8 is_stmt 1 discriminator 5 view .LVU706
 2979              	.LBB3472:
 2980              	.LBI3472:
 657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 2981              		.loc 16 657 7 discriminator 5 view .LVU707
 2982              	.LBB3473:
 2983              	.LBI3473:
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 2984              		.loc 16 229 7 discriminator 5 view .LVU708
 2985              	.LBB3474:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 221


 2986              	.LBB3475:
 2987              	.LBI3475:
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 2988              		.loc 16 221 7 discriminator 5 view .LVU709
 2989              	.LBB3476:
 2990              	.LBI3476:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 2991              		.loc 16 186 7 discriminator 5 view .LVU710
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 2992              		.loc 16 186 7 is_stmt 0 discriminator 5 view .LVU711
 2993              	.LBE3476:
 2994              	.LBE3475:
 2995              	.LBB3479:
 2996              	.LBI3479:
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 2997              		.loc 16 236 7 is_stmt 1 discriminator 5 view .LVU712
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 2998              		.loc 16 236 7 is_stmt 0 discriminator 5 view .LVU713
 2999              	.LBE3479:
 3000              	.LBB3487:
 3001              	.LBB3478:
 3002              	.LBB3477:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3003              		.loc 16 187 28 discriminator 5 view .LVU714
 3004 0012 286B     		ldr	r0, [r5, #48]
 3005              	.LVL153:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3006              		.loc 16 187 28 discriminator 5 view .LVU715
 3007              	.LBE3477:
 3008              	.LBE3478:
 3009              	.LBE3487:
 3010              	.LBB3488:
 3011              	.LBB3480:
 3012              	.LBB3481:
 3013              	.LBI3481:
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 3014              		.loc 13 491 7 is_stmt 1 discriminator 5 view .LVU716
 3015              	.LBB3482:
 3016              	.LBI3482:
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 3017              		.loc 12 120 7 discriminator 5 view .LVU717
 3018              	.LBE3482:
 3019              	.LBE3481:
 3020              	.LBE3480:
 3021              	.LBE3488:
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 3022              		.loc 16 231 2 is_stmt 0 discriminator 5 view .LVU718
 3023 0014 05F13803 		add	r3, r5, #56
 3024              	.LVL154:
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 3025              		.loc 16 231 2 discriminator 5 view .LVU719
 3026 0018 9842     		cmp	r0, r3
 3027 001a 03D0     		beq	.L120
 3028              	.LBB3489:
 3029              	.LBB3486:
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3030              		.loc 16 237 34 view .LVU720
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 222


 3031 001c A96B     		ldr	r1, [r5, #56]
 3032              	.LBB3485:
 3033              	.LBB3484:
 3034              	.LBB3483:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 3035              		.loc 12 133 19 view .LVU721
 3036 001e 0131     		adds	r1, r1, #1
 3037              	.LVL155:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 3038              		.loc 12 133 19 view .LVU722
 3039 0020 FFF7FEFF 		bl	_ZdlPvj
 3040              	.LVL156:
 3041              	.L120:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 3042              		.loc 12 133 19 view .LVU723
 3043              	.LBE3483:
 3044              	.LBE3484:
 3045              	.LBE3485:
 3046              	.LBE3486:
 3047              	.LBE3489:
 3048              	.LBE3474:
 3049              	.LBE3473:
 3050              	.LBB3490:
 3051              	.LBI3490:
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3052              		.loc 16 150 14 is_stmt 1 view .LVU724
 3053              	.LBB3491:
 3054              	.LBI3491:
 3055              		.loc 11 162 7 view .LVU725
 3056              	.LBB3492:
 3057              	.LBI3492:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3058              		.loc 12 89 7 view .LVU726
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3059              		.loc 12 89 7 is_stmt 0 view .LVU727
 3060              	.LBE3492:
 3061              	.LBE3491:
 3062              	.LBE3490:
 3063              	.LBE3472:
 3064              	.LBB3493:
 3065              	.LBI3493:
 657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 3066              		.loc 16 657 7 is_stmt 1 view .LVU728
 3067              	.LBB3494:
 3068              	.LBI3494:
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3069              		.loc 16 229 7 view .LVU729
 3070              	.LBB3495:
 3071              	.LBB3496:
 3072              	.LBI3496:
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 3073              		.loc 16 221 7 view .LVU730
 3074              	.LBB3497:
 3075              	.LBI3497:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 3076              		.loc 16 186 7 view .LVU731
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 223


 3077              		.loc 16 186 7 is_stmt 0 view .LVU732
 3078              	.LBE3497:
 3079              	.LBE3496:
 3080              	.LBB3500:
 3081              	.LBI3500:
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 3082              		.loc 16 236 7 is_stmt 1 view .LVU733
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 3083              		.loc 16 236 7 is_stmt 0 view .LVU734
 3084              	.LBE3500:
 3085              	.LBB3508:
 3086              	.LBB3499:
 3087              	.LBB3498:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3088              		.loc 16 187 28 view .LVU735
 3089 0024 A869     		ldr	r0, [r5, #24]
 3090              	.LVL157:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3091              		.loc 16 187 28 view .LVU736
 3092              	.LBE3498:
 3093              	.LBE3499:
 3094              	.LBE3508:
 3095              	.LBB3509:
 3096              	.LBB3501:
 3097              	.LBB3502:
 3098              	.LBI3502:
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 3099              		.loc 13 491 7 is_stmt 1 view .LVU737
 3100              	.LBB3503:
 3101              	.LBI3503:
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 3102              		.loc 12 120 7 view .LVU738
 3103              	.LBE3503:
 3104              	.LBE3502:
 3105              	.LBE3501:
 3106              	.LBE3509:
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 3107              		.loc 16 231 2 is_stmt 0 view .LVU739
 3108 0026 05F12003 		add	r3, r5, #32
 3109              	.LVL158:
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 3110              		.loc 16 231 2 view .LVU740
 3111 002a 9842     		cmp	r0, r3
 3112 002c 03D0     		beq	.L121
 3113              	.LBB3510:
 3114              	.LBB3507:
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3115              		.loc 16 237 34 view .LVU741
 3116 002e 296A     		ldr	r1, [r5, #32]
 3117              	.LBB3506:
 3118              	.LBB3505:
 3119              	.LBB3504:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 3120              		.loc 12 133 19 view .LVU742
 3121 0030 0131     		adds	r1, r1, #1
 3122              	.LVL159:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 224


 3123              		.loc 12 133 19 view .LVU743
 3124 0032 FFF7FEFF 		bl	_ZdlPvj
 3125              	.LVL160:
 3126              	.L121:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 3127              		.loc 12 133 19 view .LVU744
 3128              	.LBE3504:
 3129              	.LBE3505:
 3130              	.LBE3506:
 3131              	.LBE3507:
 3132              	.LBE3510:
 3133              	.LBE3495:
 3134              	.LBE3494:
 3135              	.LBB3511:
 3136              	.LBI3511:
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3137              		.loc 16 150 14 is_stmt 1 view .LVU745
 3138              	.LBB3512:
 3139              	.LBI3512:
 3140              		.loc 11 162 7 view .LVU746
 3141              	.LBB3513:
 3142              	.LBI3513:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3143              		.loc 12 89 7 view .LVU747
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3144              		.loc 12 89 7 is_stmt 0 view .LVU748
 3145              	.LBE3513:
 3146              	.LBE3512:
 3147              	.LBE3511:
 3148              	.LBE3493:
 3149              	.LBB3514:
 3150              	.LBI3514:
 657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 3151              		.loc 16 657 7 is_stmt 1 view .LVU749
 3152              	.LBB3515:
 3153              	.LBI3515:
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3154              		.loc 16 229 7 view .LVU750
 3155              	.LBB3516:
 3156              	.LBB3517:
 3157              	.LBI3517:
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 3158              		.loc 16 221 7 view .LVU751
 3159              	.LBB3518:
 3160              	.LBI3518:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 3161              		.loc 16 186 7 view .LVU752
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 3162              		.loc 16 186 7 is_stmt 0 view .LVU753
 3163              	.LBE3518:
 3164              	.LBE3517:
 3165              	.LBB3521:
 3166              	.LBI3521:
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 3167              		.loc 16 236 7 is_stmt 1 view .LVU754
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 3168              		.loc 16 236 7 is_stmt 0 view .LVU755
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 225


 3169              	.LBE3521:
 3170              	.LBB3529:
 3171              	.LBB3520:
 3172              	.LBB3519:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3173              		.loc 16 187 28 view .LVU756
 3174 0036 2B46     		mov	r3, r5
 3175 0038 53F8080B 		ldr	r0, [r3], #8
 3176              	.LVL161:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3177              		.loc 16 187 28 view .LVU757
 3178              	.LBE3519:
 3179              	.LBE3520:
 3180              	.LBE3529:
 3181              	.LBB3530:
 3182              	.LBB3522:
 3183              	.LBB3523:
 3184              	.LBI3523:
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 3185              		.loc 13 491 7 is_stmt 1 view .LVU758
 3186              	.LBB3524:
 3187              	.LBI3524:
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 3188              		.loc 12 120 7 view .LVU759
 3189              	.LBE3524:
 3190              	.LBE3523:
 3191              	.LBE3522:
 3192              	.LBE3530:
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 3193              		.loc 16 231 2 is_stmt 0 view .LVU760
 3194 003c 9842     		cmp	r0, r3
 3195 003e 03D0     		beq	.L122
 3196              	.LBB3531:
 3197              	.LBB3528:
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3198              		.loc 16 237 34 view .LVU761
 3199 0040 A968     		ldr	r1, [r5, #8]
 3200              	.LBB3527:
 3201              	.LBB3526:
 3202              	.LBB3525:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 3203              		.loc 12 133 19 view .LVU762
 3204 0042 0131     		adds	r1, r1, #1
 3205              	.LVL162:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 3206              		.loc 12 133 19 view .LVU763
 3207 0044 FFF7FEFF 		bl	_ZdlPvj
 3208              	.LVL163:
 3209              	.L122:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 3210              		.loc 12 133 19 view .LVU764
 3211              	.LBE3525:
 3212              	.LBE3526:
 3213              	.LBE3527:
 3214              	.LBE3528:
 3215              	.LBE3531:
 3216              	.LBE3516:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 226


 3217              	.LBE3515:
 3218              	.LBB3532:
 3219              	.LBI3532:
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3220              		.loc 16 150 14 is_stmt 1 view .LVU765
 3221              	.LBB3533:
 3222              	.LBI3533:
 3223              		.loc 11 162 7 view .LVU766
 3224              	.LBB3534:
 3225              	.LBI3534:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3226              		.loc 12 89 7 view .LVU767
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3227              		.loc 12 89 7 is_stmt 0 view .LVU768
 3228              	.LBE3534:
 3229              	.LBE3533:
 3230              	.LBE3532:
 3231              	.LBE3514:
 3232              	.LBE3471:
 122:src/parameter_controller.h **** 
 3233              		.loc 15 122 7 view .LVU769
 3234 0048 A542     		cmp	r5, r4
 3235 004a E1D1     		bne	.L123
 3236 004c 06F12405 		add	r5, r6, #36
 3237              	.L127:
 3238              	.LVL164:
 122:src/parameter_controller.h **** 
 3239              		.loc 15 122 7 discriminator 12 view .LVU770
 3240 0050 503C     		subs	r4, r4, #80
 3241              	.LVL165:
 3242              	.LBB3535:
 3243              	.LBI3535:
  30:src/parameter_controller.h ****     std::string label;
 3244              		.loc 15 30 8 is_stmt 1 discriminator 12 view .LVU771
 3245              	.LBB3536:
 3246              	.LBI3536:
 657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 3247              		.loc 16 657 7 discriminator 12 view .LVU772
 3248              	.LBB3537:
 3249              	.LBI3537:
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3250              		.loc 16 229 7 discriminator 12 view .LVU773
 3251              	.LBB3538:
 3252              	.LBB3539:
 3253              	.LBI3539:
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 3254              		.loc 16 221 7 discriminator 12 view .LVU774
 3255              	.LBB3540:
 3256              	.LBI3540:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 3257              		.loc 16 186 7 discriminator 12 view .LVU775
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 3258              		.loc 16 186 7 is_stmt 0 discriminator 12 view .LVU776
 3259              	.LBE3540:
 3260              	.LBE3539:
 3261              	.LBB3543:
 3262              	.LBI3543:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 227


 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 3263              		.loc 16 236 7 is_stmt 1 discriminator 12 view .LVU777
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 3264              		.loc 16 236 7 is_stmt 0 discriminator 12 view .LVU778
 3265              	.LBE3543:
 3266              	.LBB3551:
 3267              	.LBB3542:
 3268              	.LBB3541:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3269              		.loc 16 187 28 discriminator 12 view .LVU779
 3270 0052 206B     		ldr	r0, [r4, #48]
 3271              	.LVL166:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3272              		.loc 16 187 28 discriminator 12 view .LVU780
 3273              	.LBE3541:
 3274              	.LBE3542:
 3275              	.LBE3551:
 3276              	.LBB3552:
 3277              	.LBB3544:
 3278              	.LBB3545:
 3279              	.LBI3545:
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 3280              		.loc 13 491 7 is_stmt 1 discriminator 12 view .LVU781
 3281              	.LBB3546:
 3282              	.LBI3546:
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 3283              		.loc 12 120 7 discriminator 12 view .LVU782
 3284              	.LBE3546:
 3285              	.LBE3545:
 3286              	.LBE3544:
 3287              	.LBE3552:
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 3288              		.loc 16 231 2 is_stmt 0 discriminator 12 view .LVU783
 3289 0054 04F13803 		add	r3, r4, #56
 3290              	.LVL167:
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 3291              		.loc 16 231 2 discriminator 12 view .LVU784
 3292 0058 9842     		cmp	r0, r3
 3293 005a 03D0     		beq	.L124
 3294              	.LBB3553:
 3295              	.LBB3550:
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3296              		.loc 16 237 34 view .LVU785
 3297 005c A16B     		ldr	r1, [r4, #56]
 3298              	.LBB3549:
 3299              	.LBB3548:
 3300              	.LBB3547:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 3301              		.loc 12 133 19 view .LVU786
 3302 005e 0131     		adds	r1, r1, #1
 3303              	.LVL168:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 3304              		.loc 12 133 19 view .LVU787
 3305 0060 FFF7FEFF 		bl	_ZdlPvj
 3306              	.LVL169:
 3307              	.L124:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 228


 3308              		.loc 12 133 19 view .LVU788
 3309              	.LBE3547:
 3310              	.LBE3548:
 3311              	.LBE3549:
 3312              	.LBE3550:
 3313              	.LBE3553:
 3314              	.LBE3538:
 3315              	.LBE3537:
 3316              	.LBB3554:
 3317              	.LBI3554:
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3318              		.loc 16 150 14 is_stmt 1 view .LVU789
 3319              	.LBB3555:
 3320              	.LBI3555:
 3321              		.loc 11 162 7 view .LVU790
 3322              	.LBB3556:
 3323              	.LBI3556:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3324              		.loc 12 89 7 view .LVU791
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3325              		.loc 12 89 7 is_stmt 0 view .LVU792
 3326              	.LBE3556:
 3327              	.LBE3555:
 3328              	.LBE3554:
 3329              	.LBE3536:
 3330              	.LBB3557:
 3331              	.LBI3557:
 657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 3332              		.loc 16 657 7 is_stmt 1 view .LVU793
 3333              	.LBB3558:
 3334              	.LBI3558:
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3335              		.loc 16 229 7 view .LVU794
 3336              	.LBB3559:
 3337              	.LBB3560:
 3338              	.LBI3560:
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 3339              		.loc 16 221 7 view .LVU795
 3340              	.LBB3561:
 3341              	.LBI3561:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 3342              		.loc 16 186 7 view .LVU796
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 3343              		.loc 16 186 7 is_stmt 0 view .LVU797
 3344              	.LBE3561:
 3345              	.LBE3560:
 3346              	.LBB3564:
 3347              	.LBI3564:
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 3348              		.loc 16 236 7 is_stmt 1 view .LVU798
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 3349              		.loc 16 236 7 is_stmt 0 view .LVU799
 3350              	.LBE3564:
 3351              	.LBB3572:
 3352              	.LBB3563:
 3353              	.LBB3562:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 229


 3354              		.loc 16 187 28 view .LVU800
 3355 0064 A069     		ldr	r0, [r4, #24]
 3356              	.LVL170:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3357              		.loc 16 187 28 view .LVU801
 3358              	.LBE3562:
 3359              	.LBE3563:
 3360              	.LBE3572:
 3361              	.LBB3573:
 3362              	.LBB3565:
 3363              	.LBB3566:
 3364              	.LBI3566:
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 3365              		.loc 13 491 7 is_stmt 1 view .LVU802
 3366              	.LBB3567:
 3367              	.LBI3567:
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 3368              		.loc 12 120 7 view .LVU803
 3369              	.LBE3567:
 3370              	.LBE3566:
 3371              	.LBE3565:
 3372              	.LBE3573:
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 3373              		.loc 16 231 2 is_stmt 0 view .LVU804
 3374 0066 04F12003 		add	r3, r4, #32
 3375              	.LVL171:
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 3376              		.loc 16 231 2 view .LVU805
 3377 006a 9842     		cmp	r0, r3
 3378 006c 03D0     		beq	.L125
 3379              	.LBB3574:
 3380              	.LBB3571:
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3381              		.loc 16 237 34 view .LVU806
 3382 006e 216A     		ldr	r1, [r4, #32]
 3383              	.LBB3570:
 3384              	.LBB3569:
 3385              	.LBB3568:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 3386              		.loc 12 133 19 view .LVU807
 3387 0070 0131     		adds	r1, r1, #1
 3388              	.LVL172:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 3389              		.loc 12 133 19 view .LVU808
 3390 0072 FFF7FEFF 		bl	_ZdlPvj
 3391              	.LVL173:
 3392              	.L125:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 3393              		.loc 12 133 19 view .LVU809
 3394              	.LBE3568:
 3395              	.LBE3569:
 3396              	.LBE3570:
 3397              	.LBE3571:
 3398              	.LBE3574:
 3399              	.LBE3559:
 3400              	.LBE3558:
 3401              	.LBB3575:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 230


 3402              	.LBI3575:
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3403              		.loc 16 150 14 is_stmt 1 view .LVU810
 3404              	.LBB3576:
 3405              	.LBI3576:
 3406              		.loc 11 162 7 view .LVU811
 3407              	.LBB3577:
 3408              	.LBI3577:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3409              		.loc 12 89 7 view .LVU812
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3410              		.loc 12 89 7 is_stmt 0 view .LVU813
 3411              	.LBE3577:
 3412              	.LBE3576:
 3413              	.LBE3575:
 3414              	.LBE3557:
 3415              	.LBB3578:
 3416              	.LBI3578:
 657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 3417              		.loc 16 657 7 is_stmt 1 view .LVU814
 3418              	.LBB3579:
 3419              	.LBI3579:
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3420              		.loc 16 229 7 view .LVU815
 3421              	.LBB3580:
 3422              	.LBB3581:
 3423              	.LBI3581:
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 3424              		.loc 16 221 7 view .LVU816
 3425              	.LBB3582:
 3426              	.LBI3582:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 3427              		.loc 16 186 7 view .LVU817
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 3428              		.loc 16 186 7 is_stmt 0 view .LVU818
 3429              	.LBE3582:
 3430              	.LBE3581:
 3431              	.LBB3585:
 3432              	.LBI3585:
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 3433              		.loc 16 236 7 is_stmt 1 view .LVU819
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 3434              		.loc 16 236 7 is_stmt 0 view .LVU820
 3435              	.LBE3585:
 3436              	.LBB3593:
 3437              	.LBB3584:
 3438              	.LBB3583:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3439              		.loc 16 187 28 view .LVU821
 3440 0076 2346     		mov	r3, r4
 3441 0078 53F8080B 		ldr	r0, [r3], #8
 3442              	.LVL174:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3443              		.loc 16 187 28 view .LVU822
 3444              	.LBE3583:
 3445              	.LBE3584:
 3446              	.LBE3593:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 231


 3447              	.LBB3594:
 3448              	.LBB3586:
 3449              	.LBB3587:
 3450              	.LBI3587:
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 3451              		.loc 13 491 7 is_stmt 1 view .LVU823
 3452              	.LBB3588:
 3453              	.LBI3588:
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 3454              		.loc 12 120 7 view .LVU824
 3455              	.LBE3588:
 3456              	.LBE3587:
 3457              	.LBE3586:
 3458              	.LBE3594:
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 3459              		.loc 16 231 2 is_stmt 0 view .LVU825
 3460 007c 9842     		cmp	r0, r3
 3461 007e 03D0     		beq	.L126
 3462              	.LBB3595:
 3463              	.LBB3592:
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 3464              		.loc 16 237 34 view .LVU826
 3465 0080 A168     		ldr	r1, [r4, #8]
 3466              	.LBB3591:
 3467              	.LBB3590:
 3468              	.LBB3589:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 3469              		.loc 12 133 19 view .LVU827
 3470 0082 0131     		adds	r1, r1, #1
 3471              	.LVL175:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 3472              		.loc 12 133 19 view .LVU828
 3473 0084 FFF7FEFF 		bl	_ZdlPvj
 3474              	.LVL176:
 3475              	.L126:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 3476              		.loc 12 133 19 view .LVU829
 3477              	.LBE3589:
 3478              	.LBE3590:
 3479              	.LBE3591:
 3480              	.LBE3592:
 3481              	.LBE3595:
 3482              	.LBE3580:
 3483              	.LBE3579:
 3484              	.LBB3596:
 3485              	.LBI3596:
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 3486              		.loc 16 150 14 is_stmt 1 view .LVU830
 3487              	.LBB3597:
 3488              	.LBI3597:
 3489              		.loc 11 162 7 view .LVU831
 3490              	.LBB3598:
 3491              	.LBI3598:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3492              		.loc 12 89 7 view .LVU832
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3493              		.loc 12 89 7 is_stmt 0 view .LVU833
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 232


 3494              	.LBE3598:
 3495              	.LBE3597:
 3496              	.LBE3596:
 3497              	.LBE3578:
 3498              	.LBE3535:
 122:src/parameter_controller.h **** 
 3499              		.loc 15 122 7 view .LVU834
 3500 0088 A542     		cmp	r5, r4
 3501 008a E1D1     		bne	.L127
 3502              	.LVL177:
 3503              	.LBB3599:
 3504              	.LBI3599:
  98:src/parameter_controller.h **** 
 3505              		.loc 15 98 5 is_stmt 1 discriminator 14 view .LVU835
 3506              	.LBB3600:
 3507              	.LBI3600:
 3508              		.loc 24 102 11 discriminator 14 view .LVU836
 3509              	.LBB3601:
 3510              	.LBB3602:
 3511              	.LBI3602:
1383:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 3512              		.loc 9 1383 5 discriminator 14 view .LVU837
 3513              	.LBB3603:
1387:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_deallocate_buckets();
 3514              		.loc 9 1387 12 is_stmt 0 discriminator 14 view .LVU838
 3515 008c 301D     		adds	r0, r6, #4
 3516              	.LVL178:
1387:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _M_deallocate_buckets();
 3517              		.loc 9 1387 12 discriminator 14 view .LVU839
 3518 008e FFF7FEFF 		bl	_ZNSt10_HashtableIiSt4pairIKi5paramESaIS3_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS5
 3519              	.LVL179:
 3520              	.LBB3604:
 3521              	.LBI3604:
 411:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { _M_deallocate_buckets(_M_buckets, _M_bucket_count); }
 3522              		.loc 9 411 7 is_stmt 1 discriminator 14 view .LVU840
 3523              	.LBB3605:
 412:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 3524              		.loc 9 412 30 is_stmt 0 discriminator 14 view .LVU841
 3525 0092 7068     		ldr	r0, [r6, #4]
 3526              	.LBB3606:
 3527              	.LBB3607:
 3528              	.LBB3608:
 3529              	.LBB3609:
 380:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 3530              		.loc 9 380 44 discriminator 14 view .LVU842
 3531 0094 06F11C03 		add	r3, r6, #28
 3532              	.LBE3609:
 3533              	.LBE3608:
 3534              	.LBE3607:
 3535              	.LBE3606:
 412:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 3536              		.loc 9 412 30 discriminator 14 view .LVU843
 3537 0098 B168     		ldr	r1, [r6, #8]
 3538              	.LVL180:
 3539              	.LBB3621:
 3540              	.LBI3606:
 402:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       {
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 233


 3541              		.loc 9 402 7 is_stmt 1 discriminator 14 view .LVU844
 3542              	.LBB3620:
 3543              	.LBB3610:
 3544              	.LBI3608:
 379:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __builtin_expect(__bkts == &_M_single_bucket, false); }
 3545              		.loc 9 379 7 discriminator 14 view .LVU845
 379:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __builtin_expect(__bkts == &_M_single_bucket, false); }
 3546              		.loc 9 379 7 is_stmt 0 discriminator 14 view .LVU846
 3547              	.LBE3610:
 404:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  return;
 3548              		.loc 9 404 2 discriminator 14 view .LVU847
 3549 009a 9842     		cmp	r0, r3
 3550 009c 02D0     		beq	.L128
 3551              	.LVL181:
 3552              	.LBB3611:
 3553              	.LBI3611:
 3554              		.loc 10 2093 5 is_stmt 1 view .LVU848
 3555              	.LBB3612:
 3556              	.LBB3613:
 3557              	.LBI3613:
 157:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 3558              		.loc 11 157 2 view .LVU849
 3559              	.LBB3614:
 3560              	.LBI3614:
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3561              		.loc 12 79 7 view .LVU850
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3562              		.loc 12 79 7 is_stmt 0 view .LVU851
 3563              	.LBE3614:
 3564              	.LBE3613:
 3565              	.LBB3615:
 3566              	.LBI3615:
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 3567              		.loc 13 491 7 is_stmt 1 view .LVU852
 3568              	.LBB3616:
 3569              	.LBI3616:
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 3570              		.loc 12 120 7 view .LVU853
 3571              	.LBB3617:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 3572              		.loc 12 133 19 is_stmt 0 view .LVU854
 3573 009e 8900     		lsls	r1, r1, #2
 3574              	.LVL182:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 3575              		.loc 12 133 19 view .LVU855
 3576 00a0 FFF7FEFF 		bl	_ZdlPvj
 3577              	.LVL183:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 3578              		.loc 12 133 19 view .LVU856
 3579              	.LBE3617:
 3580              	.LBE3616:
 3581              	.LBE3615:
 3582              	.LBB3618:
 3583              	.LBI3618:
 3584              		.loc 11 162 7 is_stmt 1 view .LVU857
 3585              	.LBB3619:
 3586              	.LBI3619:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 234


  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3587              		.loc 12 89 7 view .LVU858
 3588              	.L128:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3589              		.loc 12 89 7 is_stmt 0 view .LVU859
 3590              	.LBE3619:
 3591              	.LBE3618:
 3592              	.LBE3612:
 3593              	.LBE3611:
 3594              	.LBE3620:
 3595              	.LBE3621:
 3596              	.LBE3605:
 3597              	.LBE3604:
 3598              	.LBB3622:
 3599              	.LBI3622:
1963:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 3600              		.loc 10 1963 12 is_stmt 1 view .LVU860
 3601              	.LBB3623:
 3602              	.LBI3623:
1109:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : private _Tp
 3603              		.loc 10 1109 12 view .LVU861
 3604              	.LBB3624:
 3605              	.LBI3624:
 3606              		.loc 11 162 7 view .LVU862
 3607              	.LBB3625:
 3608              	.LBI3625:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3609              		.loc 12 89 7 view .LVU863
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 3610              		.loc 12 89 7 is_stmt 0 view .LVU864
 3611              	.LBE3625:
 3612              	.LBE3624:
 3613              	.LBE3623:
 3614              	.LBE3622:
 3615              	.LBE3603:
 3616              	.LBE3602:
 3617              	.LBE3601:
 3618              	.LBE3600:
 3619              	.LBE3599:
 3620              	.LBE3626:
 122:src/parameter_controller.h **** 
 3621              		.loc 15 122 7 view .LVU865
 3622 00a4 3046     		mov	r0, r6
 3623 00a6 70BD     		pop	{r4, r5, r6, pc}
 3624              	.LVL184:
 3625              	.L133:
 122:src/parameter_controller.h **** 
 3626              		.loc 15 122 7 view .LVU866
 3627              		.align	2
 3628              	.L132:
 3629 00a8 08000000 		.word	_ZTV15ParameterConfig+8
 3630              		.cfi_endproc
 3631              	.LFE5403:
 3633              		.weak	_ZN15ParameterConfigD1Ev
 3634              		.thumb_set _ZN15ParameterConfigD1Ev,_ZN15ParameterConfigD2Ev
 3635              		.section	.text._ZNSt8__detail9_Map_baseIiSt4pairIKi5paramESaIS4_ENS_10_Select1stESt8equal_toIiESt4
 3636              		.align	1
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 235


 3637              		.p2align 2,,3
 3638              		.weak	_ZNSt8__detail9_Map_baseIiSt4pairIKi5paramESaIS4_ENS_10_Select1stESt8equal_toIiESt4hashIiENS
 3639              		.syntax unified
 3640              		.thumb
 3641              		.thumb_func
 3642              		.fpu fpv5-d16
 3644              	_ZNSt8__detail9_Map_baseIiSt4pairIKi5paramESaIS4_ENS_10_Select1stESt8equal_toIiESt4hashIiENS_18_Mod
 3645              	.LVL185:
 3646              	.LFB6013:
 728:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      _H1, _H2, _Hash, _RehashPolicy, _Traits, true>::
 3647              		.loc 10 728 5 is_stmt 1 view -0
 3648              		.cfi_startproc
 3649              		@ args = 0, pretend = 0, frame = 0
 3650              		@ frame_needed = 0, uses_anonymous_args = 0
 728:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      _H1, _H2, _Hash, _RehashPolicy, _Traits, true>::
 3651              		.loc 10 728 5 is_stmt 0 view .LVU868
 3652 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3653              		.cfi_def_cfa_offset 24
 3654              		.cfi_offset 4, -24
 3655              		.cfi_offset 5, -20
 3656              		.cfi_offset 6, -16
 3657              		.cfi_offset 7, -12
 3658              		.cfi_offset 8, -8
 3659              		.cfi_offset 14, -4
 3660              	.LBB3768:
 3661              	.LBB3769:
1294:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       }
 3662              		.loc 10 1294 16 view .LVU869
 3663 0004 0E68     		ldr	r6, [r1]
 3664              	.LBE3769:
 3665              	.LBE3768:
 728:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      _H1, _H2, _Hash, _RehashPolicy, _Traits, true>::
 3666              		.loc 10 728 5 view .LVU870
 3667 0006 0746     		mov	r7, r0
 3668              	.LVL186:
 3669              	.LBB3773:
 3670              	.LBI3768:
1290:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
 3671              		.loc 10 1290 7 is_stmt 1 view .LVU871
 3672              	.LBB3772:
 3673              	.LBB3770:
 3674              	.LBI3770:
 3675              		.loc 14 153 3 view .LVU872
 3676              	.LBB3771:
 3677              		.loc 14 153 3 view .LVU873
 3678              		.loc 14 153 3 is_stmt 0 view .LVU874
 3679              	.LBE3771:
 3680              	.LBE3770:
 3681              	.LBE3772:
 3682              	.LBE3773:
 3683              	.LBB3774:
 3684              	.LBI3774:
 681:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __hash_code_base::_M_bucket_index(__k, __c, _M_bucket_count); }
 3685              		.loc 9 681 7 is_stmt 1 view .LVU875
 3686              	.LBB3775:
 682:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 3687              		.loc 9 682 60 is_stmt 0 view .LVU876
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 236


 3688 0008 4068     		ldr	r0, [r0, #4]
 3689              	.LVL187:
 3690              	.LBB3776:
 3691              	.LBI3776:
1298:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		      std::size_t __bkt_count) const
 3692              		.loc 10 1298 7 is_stmt 1 view .LVU877
 3693              	.LBB3777:
 3694              	.LBI3777:
 431:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	       second_argument_type __den) const noexcept
 3695              		.loc 10 431 5 view .LVU878
 3696              	.LBB3778:
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 3697              		.loc 10 433 7 view .LVU879
 3698              	.LBE3778:
 3699              	.LBE3777:
 3700              	.LBE3776:
 3701              	.LBE3775:
 3702              	.LBE3774:
 728:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      _H1, _H2, _Hash, _RehashPolicy, _Traits, true>::
 3703              		.loc 10 728 5 is_stmt 0 view .LVU880
 3704 000a 8846     		mov	r8, r1
 3705              	.LBB3783:
 3706              	.LBB3784:
 3707              	.LBB3785:
 3708              	.LBB3786:
 3709              	.LBB3787:
1573:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (!__prev_p)
 3710              		.loc 9 1573 20 view .LVU881
 3711 000c 3B68     		ldr	r3, [r7]
 3712              	.LBE3787:
 3713              	.LBE3786:
 3714              	.LBE3785:
 3715              	.LBE3784:
 3716              	.LBE3783:
 728:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	      _H1, _H2, _Hash, _RehashPolicy, _Traits, true>::
 3717              		.loc 10 728 5 view .LVU882
 3718 000e 82B0     		sub	sp, sp, #8
 3719              		.cfi_def_cfa_offset 32
 3720              	.LBB3815:
 3721              	.LBB3782:
 3722              	.LBB3781:
 3723              	.LBB3780:
 3724              	.LBB3779:
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 3725              		.loc 10 433 22 view .LVU883
 3726 0010 B6FBF0F5 		udiv	r5, r6, r0
 3727 0014 00FB1565 		mls	r5, r0, r5, r6
 3728              	.LVL188:
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 3729              		.loc 10 433 22 view .LVU884
 3730              	.LBE3779:
 3731              	.LBE3780:
 3732              	.LBE3781:
 3733              	.LBE3782:
 3734              	.LBE3815:
 3735              	.LBB3816:
 3736              	.LBB3813:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 237


 3737              	.LBI3784:
 690:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		   __hash_code __c) const
 3738              		.loc 9 690 7 is_stmt 1 view .LVU885
 3739              	.LBB3811:
 3740              	.LBB3810:
 3741              	.LBI3786:
1567:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 3742              		.loc 9 1567 5 view .LVU886
 3743              	.LBB3809:
1573:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (!__prev_p)
 3744              		.loc 9 1573 20 is_stmt 0 view .LVU887
 3745 0018 53F82510 		ldr	r1, [r3, r5, lsl #2]
 3746              	.LVL189:
1574:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return nullptr;
 3747              		.loc 9 1574 7 view .LVU888
 3748 001c 71B1     		cbz	r1, .L135
 3749              	.LBB3788:
1577:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   __p = __p->_M_next())
 3750              		.loc 9 1577 25 view .LVU889
 3751 001e 0A68     		ldr	r2, [r1]
 3752              	.LVL190:
 3753              	.LBB3789:
 3754              	.LBB3790:
 3755              	.LBB3791:
 3756              	.LBB3792:
 3757              		.file 25 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
   1:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // Functor implementations -*- C++ -*-
   2:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
   3:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** //
   5:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // software; you can redistribute it and/or modify it under the
   7:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // terms of the GNU General Public License as published by the
   8:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // any later version.
  10:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
  11:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // This library is distributed in the hope that it will be useful,
  12:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // GNU General Public License for more details.
  15:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
  16:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
  20:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // You should have received a copy of the GNU General Public License and
  21:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** // <http://www.gnu.org/licenses/>.
  24:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
  25:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** /*
  26:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  *
  27:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * Copyright (c) 1994
  28:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * Hewlett-Packard Company
  29:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  *
  30:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * and its documentation for any purpose is hereby granted without fee,
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 238


  32:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * that both that copyright notice and this permission notice appear
  34:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * representations about the suitability of this software for any
  36:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  *
  38:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  *
  39:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * Copyright (c) 1996-1998
  40:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  *
  42:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * that both that copyright notice and this permission notice appear
  46:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * representations about the suitability of this software for any
  48:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  */
  50:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
  51:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** /** @file bits/stl_function.h
  52:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  *  This is an internal header file, included by other library headers.
  53:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  *  Do not attempt to use it directly. @headername{functional}
  54:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****  */
  55:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
  56:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #ifndef _STL_FUNCTION_H
  57:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #define _STL_FUNCTION_H 1
  58:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
  59:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #if __cplusplus > 201103L
  60:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #include <bits/move.h>
  61:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #endif
  62:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
  63:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** namespace std _GLIBCXX_VISIBILITY(default)
  64:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** {
  65:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  66:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
  67:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   // 20.3.1 base classes
  68:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /** @defgroup functors Function Objects
  69:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    * @ingroup utilities
  70:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
  71:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  Function objects, or @e functors, are objects with an @c operator()
  72:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  defined and accessible.  They can be passed as arguments to algorithm
  73:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  templates and used in place of a function pointer.  Not only is the
  74:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  resulting expressiveness of the library increased, but the generated
  75:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  code can be more efficient than what you might write by hand.  When we
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  refer to @a functors, then, generally we include function pointers in
  77:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  the description as well.
  78:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  Often, functors are only created as temporaries passed to algorithm
  80:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  calls, rather than being created as named variables.
  81:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  Two examples taken from the standard itself follow.  To perform a
  83:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  by-element addition of two vectors @c a and @c b containing @c double,
  84:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  and put the result in @c a, use
  85:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  \code
  86:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  transform (a.begin(), a.end(), b.begin(), a.begin(), plus<double>());
  87:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  \endcode
  88:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  To negate every element in @c a, use
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 239


  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  \code
  90:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  transform(a.begin(), a.end(), a.begin(), negate<double>());
  91:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  \endcode
  92:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  The addition and negation functions will be inlined directly.
  93:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
  94:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  The standard functors are derived from structs named @c unary_function
  95:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  and @c binary_function.  These two classes contain nothing but typedefs,
  96:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  to aid in generic (template) programming.  If you write your own
  97:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  functors, you might consider doing the same.
  98:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
  99:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  @{
 100:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    */
 101:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /**
 102:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  This is one of the @link functors functor base classes@endlink.
 103:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    */
 104:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Arg, typename _Result>
 105:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct unary_function
 106:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 107:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       /// @c argument_type is the type of the argument
 108:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef _Arg 	argument_type;   
 109:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 110:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       /// @c result_type is the return type
 111:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef _Result 	result_type;  
 112:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 113:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 114:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /**
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  This is one of the @link functors functor base classes@endlink.
 116:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    */
 117:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Arg1, typename _Arg2, typename _Result>
 118:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct binary_function
 119:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       /// @c first_argument_type is the type of the first argument
 121:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef _Arg1 	first_argument_type; 
 122:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 123:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       /// @c second_argument_type is the type of the second argument
 124:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef _Arg2 	second_argument_type;
 125:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 126:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       /// @c result_type is the return type
 127:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef _Result 	result_type;
 128:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 129:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /** @}  */
 130:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 131:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   // 20.3.2 arithmetic
 132:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /** @defgroup arithmetic_functors Arithmetic Classes
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    * @ingroup functors
 134:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
 135:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  Because basic math often needs to be done during an algorithm,
 136:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  the library provides functors for those operations.  See the
 137:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  documentation for @link functors the base classes@endlink
 138:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  for examples of their use.
 139:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
 140:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  @{
 141:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    */
 142:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 143:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #if __cplusplus > 201103L
 144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   struct __is_transparent;  // undefined
 145:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 240


 146:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct plus;
 148:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 149:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct minus;
 151:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 152:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 153:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct multiplies;
 154:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 155:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 156:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct divides;
 157:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 158:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct modulus;
 160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 161:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 162:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct negate;
 163:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #endif
 164:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 165:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 166:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp>
 167:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct plus : public binary_function<_Tp, _Tp, _Tp>
 168:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 169:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _GLIBCXX14_CONSTEXPR
 170:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _Tp
 171:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 172:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return __x + __y; }
 173:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 174:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 175:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 176:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp>
 177:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct minus : public binary_function<_Tp, _Tp, _Tp>
 178:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _GLIBCXX14_CONSTEXPR
 180:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _Tp
 181:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 182:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return __x - __y; }
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 184:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 185:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp>
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct multiplies : public binary_function<_Tp, _Tp, _Tp>
 188:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 189:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _GLIBCXX14_CONSTEXPR
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _Tp
 191:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 192:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return __x * __y; }
 193:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 194:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 195:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 196:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp>
 197:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct divides : public binary_function<_Tp, _Tp, _Tp>
 198:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 199:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _GLIBCXX14_CONSTEXPR
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _Tp
 201:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 202:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return __x / __y; }
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 241


 203:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 204:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 205:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 206:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp>
 207:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct modulus : public binary_function<_Tp, _Tp, _Tp>
 208:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 209:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _GLIBCXX14_CONSTEXPR
 210:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _Tp
 211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 212:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return __x % __y; }
 213:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 214:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 215:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 216:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp>
 217:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct negate : public unary_function<_Tp, _Tp>
 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 219:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _GLIBCXX14_CONSTEXPR
 220:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _Tp
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       operator()(const _Tp& __x) const
 222:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return -__x; }
 223:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 224:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 225:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #if __cplusplus > 201103L
 226:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 227:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #define __cpp_lib_transparent_operators 201510
 228:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<>
 230:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct plus<void>
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 232:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       template <typename _Tp, typename _Up>
 233:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 234:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	auto
 235:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) + std::forward<_Up>(__u)))
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) + std::forward<_Up>(__u))
 238:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	{ return std::forward<_Tp>(__t) + std::forward<_Up>(__u); }
 239:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 240:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef __is_transparent is_transparent;
 241:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 242:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 243:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 244:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<>
 245:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct minus<void>
 246:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 247:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       template <typename _Tp, typename _Up>
 248:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 249:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	auto
 250:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 251:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) - std::forward<_Up>(__u)))
 252:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) - std::forward<_Up>(__u))
 253:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	{ return std::forward<_Tp>(__t) - std::forward<_Up>(__u); }
 254:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 255:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef __is_transparent is_transparent;
 256:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 257:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 258:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 259:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<>
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 242


 260:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct multiplies<void>
 261:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 262:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       template <typename _Tp, typename _Up>
 263:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 264:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	auto
 265:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 266:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) * std::forward<_Up>(__u)))
 267:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) * std::forward<_Up>(__u))
 268:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	{ return std::forward<_Tp>(__t) * std::forward<_Up>(__u); }
 269:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 270:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef __is_transparent is_transparent;
 271:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 272:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 273:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 274:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<>
 275:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct divides<void>
 276:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 277:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       template <typename _Tp, typename _Up>
 278:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 279:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	auto
 280:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 281:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) / std::forward<_Up>(__u)))
 282:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) / std::forward<_Up>(__u))
 283:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	{ return std::forward<_Tp>(__t) / std::forward<_Up>(__u); }
 284:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 285:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef __is_transparent is_transparent;
 286:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 287:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 288:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 289:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<>
 290:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct modulus<void>
 291:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 292:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       template <typename _Tp, typename _Up>
 293:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 294:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	auto
 295:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	operator()(_Tp&& __t, _Up&& __u) const
 296:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	noexcept(noexcept(std::forward<_Tp>(__t) % std::forward<_Up>(__u)))
 297:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	-> decltype(std::forward<_Tp>(__t) % std::forward<_Up>(__u))
 298:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	{ return std::forward<_Tp>(__t) % std::forward<_Up>(__u); }
 299:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 300:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef __is_transparent is_transparent;
 301:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
 302:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 303:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link arithmetic_functors math functors@endlink.
 304:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<>
 305:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct negate<void>
 306:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 307:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       template <typename _Tp>
 308:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	_GLIBCXX14_CONSTEXPR
 309:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	auto
 310:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	operator()(_Tp&& __t) const
 311:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	noexcept(noexcept(-std::forward<_Tp>(__t)))
 312:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	-> decltype(-std::forward<_Tp>(__t))
 313:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 	{ return -std::forward<_Tp>(__t); }
 314:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 315:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       typedef __is_transparent is_transparent;
 316:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     };
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 243


 317:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #endif
 318:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /** @}  */
 319:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 320:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   // 20.3.3 comparisons
 321:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /** @defgroup comparison_functors Comparison Classes
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    * @ingroup functors
 323:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
 324:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  The library provides six wrapper functors for all the basic comparisons
 325:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  in C++, like @c <.
 326:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *
 327:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    *  @{
 328:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****    */
 329:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #if __cplusplus > 201103L
 330:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 331:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct equal_to;
 332:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 333:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 334:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct not_equal_to;
 335:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 336:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 337:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct greater;
 338:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 339:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 340:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct less;
 341:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 342:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 343:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct greater_equal;
 344:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 345:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp = void>
 346:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct less_equal;
 347:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** #endif
 348:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h **** 
 349:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   /// One of the @link comparison_functors comparison functors@endlink.
 350:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****   template<typename _Tp>
 351:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     struct equal_to : public binary_function<_Tp, _Tp, bool>
 352:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****     {
 353:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       _GLIBCXX14_CONSTEXPR
 354:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       bool
 355:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       operator()(const _Tp& __x, const _Tp& __y) const
 356:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return __x == __y; }
 3758              		.loc 25 356 20 view .LVU890
 3759 0020 5368     		ldr	r3, [r2, #4]
 3760              	.LVL191:
 3761              	.L137:
 3762              		.loc 25 356 20 view .LVU891
 3763              	.LBE3792:
 3764              	.LBE3791:
 3765              	.LBE3790:
 3766              	.LBI3789:
1798:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 3767              		.loc 10 1798 5 is_stmt 1 view .LVU892
 3768              	.LBB3794:
 3769              	.LBB3793:
 3770              	.LBI3791:
 355:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return __x == __y; }
 3771              		.loc 25 355 7 view .LVU893
 355:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return __x == __y; }
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 244


 3772              		.loc 25 355 7 is_stmt 0 view .LVU894
 3773              	.LBE3793:
1804:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
 3774              		.loc 10 1804 2 view .LVU895
 3775 0022 9E42     		cmp	r6, r3
 3776 0024 37D0     		beq	.L136
 3777              	.LBE3794:
 3778              	.LBE3789:
1583:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    break;
 3779              		.loc 9 1583 14 view .LVU896
 3780 0026 1468     		ldr	r4, [r2]
 3781              	.LVL192:
 3782              	.LBB3795:
 3783              	.LBI3795:
 677:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __hash_code_base::_M_bucket_index(__n, _M_bucket_count); }
 3784              		.loc 9 677 7 is_stmt 1 view .LVU897
 3785              	.LBB3796:
 3786              	.LBI3796:
1303:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	noexcept( noexcept(declval<const _H1&>()(declval<const _Key&>()))
 3787              		.loc 10 1303 7 view .LVU898
 3788 0028 1146     		mov	r1, r2
 3789              	.LBE3796:
 3790              	.LBE3795:
1583:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    break;
 3791              		.loc 9 1583 21 is_stmt 0 view .LVU899
 3792 002a 3CB1     		cbz	r4, .L135
 3793              	.LBB3807:
 3794              	.LBB3805:
 3795              	.LBB3797:
1307:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 3796              		.loc 10 1307 23 view .LVU900
 3797 002c 6368     		ldr	r3, [r4, #4]
 3798              	.LVL193:
 3799              	.LBB3798:
 3800              	.LBI3798:
 3801              		.loc 14 153 3 is_stmt 1 view .LVU901
 3802              	.LBB3799:
 3803              		.loc 14 153 3 view .LVU902
 3804              		.loc 14 153 3 is_stmt 0 view .LVU903
 3805              	.LBE3799:
 3806              	.LBE3798:
 3807              	.LBB3800:
 3808              	.LBI3800:
 431:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	       second_argument_type __den) const noexcept
 3809              		.loc 10 431 5 is_stmt 1 view .LVU904
 3810              	.LBB3801:
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 3811              		.loc 10 433 7 view .LVU905
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 3812              		.loc 10 433 7 is_stmt 0 view .LVU906
 3813              	.LBE3801:
 3814              	.LBE3800:
 3815              	.LBE3797:
 3816              	.LBE3805:
 3817              	.LBE3807:
 3818 002e 2246     		mov	r2, r4
 3819              	.LVL194:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 245


 3820              	.LBB3808:
 3821              	.LBB3806:
 3822              	.LBB3804:
 3823              	.LBB3803:
 3824              	.LBB3802:
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 3825              		.loc 10 433 22 view .LVU907
 3826 0030 B3FBF0F4 		udiv	r4, r3, r0
 3827 0034 00FB1434 		mls	r4, r0, r4, r3
 3828              	.LBE3802:
 3829              	.LBE3803:
 3830              	.LBE3804:
 3831              	.LBE3806:
 3832              	.LBE3808:
1583:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    break;
 3833              		.loc 9 1583 21 view .LVU908
 3834 0038 A542     		cmp	r5, r4
 3835 003a F2D0     		beq	.L137
 3836              	.LVL195:
 3837              	.L135:
1583:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    break;
 3838              		.loc 9 1583 21 view .LVU909
 3839              	.LBE3788:
 3840              	.LBE3809:
 3841              	.LBE3810:
 3842              	.LBE3811:
 3843              	.LBE3813:
 3844              	.LBE3816:
 3845              	.LBB3817:
 3846              	.LBI3817:
 3847              		.file 26 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
   1:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** // <tuple> -*- C++ -*-
   2:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
   3:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** // Copyright (C) 2007-2020 Free Software Foundation, Inc.
   4:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** //
   5:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** // software; you can redistribute it and/or modify it under the
   7:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** // terms of the GNU General Public License as published by the
   8:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** // any later version.
  10:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
  11:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** // This library is distributed in the hope that it will be useful,
  12:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** // GNU General Public License for more details.
  15:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
  16:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** // 3.1, as published by the Free Software Foundation.
  19:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
  20:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** // You should have received a copy of the GNU General Public License and
  21:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** // <http://www.gnu.org/licenses/>.
  24:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
  25:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** /** @file include/tuple
  26:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****  *  This is a Standard C++ Library header.
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 246


  27:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****  */
  28:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
  29:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** #ifndef _GLIBCXX_TUPLE
  30:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** #define _GLIBCXX_TUPLE 1
  31:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
  32:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** #pragma GCC system_header
  33:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
  34:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** #if __cplusplus < 201103L
  35:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** # include <bits/c++0x_warning.h>
  36:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** #else
  37:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
  38:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** #include <utility>
  39:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** #include <array>
  40:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** #include <bits/uses_allocator.h>
  41:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** #include <bits/invoke.h>
  42:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** #if __cplusplus > 201703L
  43:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** # include <compare>
  44:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** # define __cpp_lib_constexpr_tuple 201811L
  45:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** #endif
  46:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
  47:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** namespace std _GLIBCXX_VISIBILITY(default)
  48:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** {
  49:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  50:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
  51:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   /**
  52:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****    *  @addtogroup utilities
  53:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****    *  @{
  54:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****    */
  55:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
  56:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template<typename... _Elements>
  57:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     class tuple;
  58:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
  59:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template<typename _Tp>
  60:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     struct __is_empty_non_tuple : is_empty<_Tp> { };
  61:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
  62:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   // Using EBO for elements that are tuples causes ambiguous base errors.
  63:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template<typename _El0, typename... _El>
  64:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     struct __is_empty_non_tuple<tuple<_El0, _El...>> : false_type { };
  65:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
  66:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   // Use the Empty Base-class Optimization for empty, non-final types.
  67:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template<typename _Tp>
  68:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     using __empty_not_final
  69:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     = typename conditional<__is_final(_Tp), false_type,
  70:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 			   __is_empty_non_tuple<_Tp>>::type;
  71:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
  72:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template<std::size_t _Idx, typename _Head,
  73:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	   bool = __empty_not_final<_Head>::value>
  74:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     struct _Head_base;
  75:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template<std::size_t _Idx, typename _Head>
  77:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     struct _Head_base<_Idx, _Head, true>
  78:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     : public _Head
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     {
  80:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       constexpr _Head_base()
  81:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       : _Head() { }
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
  83:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       constexpr _Head_base(const _Head& __h)
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 247


  84:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       : _Head(__h) { }
  85:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
  86:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       constexpr _Head_base(const _Head_base&) = default;
  87:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       constexpr _Head_base(_Head_base&&) = default;
  88:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _UHead>
  90:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****         constexpr _Head_base(_UHead&& __h)
  91:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Head(std::forward<_UHead>(__h)) { }
  92:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
  93:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       _Head_base(allocator_arg_t, __uses_alloc0)
  94:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       : _Head() { }
  95:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
  96:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _Alloc>
  97:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_Head_base(allocator_arg_t, __uses_alloc1<_Alloc> __a)
  98:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Head(allocator_arg, *__a._M_a) { }
  99:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 100:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _Alloc>
 101:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_Head_base(allocator_arg_t, __uses_alloc2<_Alloc> __a)
 102:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Head(*__a._M_a) { }
 103:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 104:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _UHead>
 105:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_Head_base(__uses_alloc0, _UHead&& __uhead)
 106:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Head(std::forward<_UHead>(__uhead)) { }
 107:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 108:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _Alloc, typename _UHead>
 109:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_Head_base(__uses_alloc1<_Alloc> __a, _UHead&& __uhead)
 110:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Head(allocator_arg, *__a._M_a, std::forward<_UHead>(__uhead)) { }
 111:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 112:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _Alloc, typename _UHead>
 113:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_Head_base(__uses_alloc2<_Alloc> __a, _UHead&& __uhead)
 114:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Head(std::forward<_UHead>(__uhead), *__a._M_a) { }
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 116:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       static constexpr _Head&
 117:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       _M_head(_Head_base& __b) noexcept { return __b; }
 118:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 119:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       static constexpr const _Head&
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       _M_head(const _Head_base& __b) noexcept { return __b; }
 121:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     };
 122:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 123:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template<std::size_t _Idx, typename _Head>
 124:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     struct _Head_base<_Idx, _Head, false>
 125:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     {
 126:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       constexpr _Head_base()
 127:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       : _M_head_impl() { }
 128:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 129:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       constexpr _Head_base(const _Head& __h)
 130:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       : _M_head_impl(__h) { }
 131:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 132:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       constexpr _Head_base(const _Head_base&) = default;
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       constexpr _Head_base(_Head_base&&) = default;
 134:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 135:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _UHead>
 136:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****         constexpr _Head_base(_UHead&& __h)
 137:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _M_head_impl(std::forward<_UHead>(__h)) { }
 138:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 139:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       _GLIBCXX20_CONSTEXPR
 140:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       _Head_base(allocator_arg_t, __uses_alloc0)
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 248


 141:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       : _M_head_impl() { }
 142:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 143:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _Alloc>
 144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_Head_base(allocator_arg_t, __uses_alloc1<_Alloc> __a)
 145:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _M_head_impl(allocator_arg, *__a._M_a) { }
 146:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _Alloc>
 148:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_Head_base(allocator_arg_t, __uses_alloc2<_Alloc> __a)
 149:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _M_head_impl(*__a._M_a) { }
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 151:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _UHead>
 152:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_GLIBCXX20_CONSTEXPR
 153:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_Head_base(__uses_alloc0, _UHead&& __uhead)
 154:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _M_head_impl(std::forward<_UHead>(__uhead)) { }
 155:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 156:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _Alloc, typename _UHead>
 157:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_Head_base(__uses_alloc1<_Alloc> __a, _UHead&& __uhead)
 158:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _M_head_impl(allocator_arg, *__a._M_a, std::forward<_UHead>(__uhead))
 159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	{ }
 160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 161:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _Alloc, typename _UHead>
 162:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_Head_base(__uses_alloc2<_Alloc> __a, _UHead&& __uhead)
 163:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _M_head_impl(std::forward<_UHead>(__uhead), *__a._M_a) { }
 164:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 165:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       static constexpr _Head&
 166:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
 167:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 168:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       static constexpr const _Head&
 169:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       _M_head(const _Head_base& __b) noexcept { return __b._M_head_impl; }
 170:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 171:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       _Head _M_head_impl;
 172:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     };
 173:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 174:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   /**
 175:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****    * Contains the actual implementation of the @c tuple template, stored
 176:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****    * as a recursive inheritance hierarchy from the first element (most
 177:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****    * derived class) to the last (least derived class). The @c Idx
 178:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****    * parameter gives the 0-based index of the element stored at this
 179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****    * point in the hierarchy; we use it to implement a constant-time
 180:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****    * get() operation.
 181:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****    */
 182:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template<std::size_t _Idx, typename... _Elements>
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     struct _Tuple_impl;
 184:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 185:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   /**
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****    * Recursive tuple implementation. Here we store the @c Head element
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****    * and derive from a @c Tuple_impl containing the remaining elements
 188:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****    * (which contains the @c Tail).
 189:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****    */
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template<std::size_t _Idx, typename _Head, typename... _Tail>
 191:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     struct _Tuple_impl<_Idx, _Head, _Tail...>
 192:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     : public _Tuple_impl<_Idx + 1, _Tail...>,
 193:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       private _Head_base<_Idx, _Head>
 194:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     {
 195:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<std::size_t, typename...> friend class _Tuple_impl;
 196:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 197:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       typedef _Tuple_impl<_Idx + 1, _Tail...> _Inherited;
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 249


 198:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       typedef _Head_base<_Idx, _Head> _Base;
 199:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       static constexpr _Head&
 201:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
 202:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 203:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       static constexpr const _Head&
 204:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       _M_head(const _Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
 205:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 206:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       static constexpr _Inherited&
 207:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       _M_tail(_Tuple_impl& __t) noexcept { return __t; }
 208:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 209:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       static constexpr const _Inherited&
 210:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       _M_tail(const _Tuple_impl& __t) noexcept { return __t; }
 211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 212:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       constexpr _Tuple_impl()
 213:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       : _Inherited(), _Base() { }
 214:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 215:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       explicit
 216:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       constexpr _Tuple_impl(const _Head& __head, const _Tail&... __tail)
 217:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       : _Inherited(__tail...), _Base(__head) { }
 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 219:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _UHead, typename... _UTail, typename = typename
 220:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****                enable_if<sizeof...(_Tail) == sizeof...(_UTail)>::type>
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****         explicit
 222:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****         constexpr _Tuple_impl(_UHead&& __head, _UTail&&... __tail)
 223:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Inherited(std::forward<_UTail>(__tail)...),
 224:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	  _Base(std::forward<_UHead>(__head)) { }
 225:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 226:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       constexpr _Tuple_impl(const _Tuple_impl&) = default;
 227:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 228:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       // 2729. Missing SFINAE on std::pair::operator=
 230:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       _Tuple_impl& operator=(const _Tuple_impl&) = delete;
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 232:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       constexpr
 233:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       _Tuple_impl(_Tuple_impl&& __in)
 234:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       noexcept(__and_<is_nothrow_move_constructible<_Head>,
 235:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	              is_nothrow_move_constructible<_Inherited>>::value)
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       : _Inherited(std::move(_M_tail(__in))),
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_Base(std::forward<_Head>(_M_head(__in))) { }
 238:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 239:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename... _UElements>
 240:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****         constexpr _Tuple_impl(const _Tuple_impl<_Idx, _UElements...>& __in)
 241:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Inherited(_Tuple_impl<_Idx, _UElements...>::_M_tail(__in)),
 242:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	  _Base(_Tuple_impl<_Idx, _UElements...>::_M_head(__in)) { }
 243:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 244:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _UHead, typename... _UTails>
 245:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****         constexpr _Tuple_impl(_Tuple_impl<_Idx, _UHead, _UTails...>&& __in)
 246:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Inherited(std::move
 247:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 		     (_Tuple_impl<_Idx, _UHead, _UTails...>::_M_tail(__in))),
 248:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	  _Base(std::forward<_UHead>
 249:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 		(_Tuple_impl<_Idx, _UHead, _UTails...>::_M_head(__in))) { }
 250:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 251:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _Alloc>
 252:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_GLIBCXX20_CONSTEXPR
 253:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a)
 254:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Inherited(__tag, __a),
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 250


 255:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****           _Base(__tag, __use_alloc<_Head>(__a)) { }
 256:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 257:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _Alloc>
 258:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
 259:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 		    const _Head& __head, const _Tail&... __tail)
 260:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Inherited(__tag, __a, __tail...),
 261:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****           _Base(__use_alloc<_Head, _Alloc, _Head>(__a), __head) { }
 262:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 263:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _Alloc, typename _UHead, typename... _UTail,
 264:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****                typename = typename enable_if<sizeof...(_Tail)
 265:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 					     == sizeof...(_UTail)>::type>
 266:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_GLIBCXX20_CONSTEXPR
 267:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
 268:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	            _UHead&& __head, _UTail&&... __tail)
 269:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Inherited(__tag, __a, std::forward<_UTail>(__tail)...),
 270:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****           _Base(__use_alloc<_Head, _Alloc, _UHead>(__a),
 271:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	        std::forward<_UHead>(__head)) { }
 272:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 273:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _Alloc>
 274:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_GLIBCXX20_CONSTEXPR
 275:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****         _Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
 276:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	            const _Tuple_impl& __in)
 277:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Inherited(__tag, __a, _M_tail(__in)),
 278:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****           _Base(__use_alloc<_Head, _Alloc, _Head>(__a), _M_head(__in)) { }
 279:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 280:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _Alloc>
 281:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_GLIBCXX20_CONSTEXPR
 282:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
 283:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	            _Tuple_impl&& __in)
 284:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Inherited(__tag, __a, std::move(_M_tail(__in))),
 285:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	  _Base(__use_alloc<_Head, _Alloc, _Head>(__a),
 286:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	        std::forward<_Head>(_M_head(__in))) { }
 287:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 288:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _Alloc, typename _UHead, typename... _UTails>
 289:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_GLIBCXX20_CONSTEXPR
 290:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
 291:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 		    const _Tuple_impl<_Idx, _UHead, _UTails...>& __in)
 292:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Inherited(__tag, __a,
 293:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 		     _Tuple_impl<_Idx, _UHead, _UTails...>::_M_tail(__in)),
 294:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	  _Base(__use_alloc<_Head, _Alloc, const _UHead&>(__a),
 295:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 		_Tuple_impl<_Idx, _UHead, _UTails...>::_M_head(__in)) { }
 296:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 297:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _Alloc, typename _UHead, typename... _UTails>
 298:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_GLIBCXX20_CONSTEXPR
 299:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
 300:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	            _Tuple_impl<_Idx, _UHead, _UTails...>&& __in)
 301:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Inherited(__tag, __a, std::move
 302:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 		     (_Tuple_impl<_Idx, _UHead, _UTails...>::_M_tail(__in))),
 303:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	  _Base(__use_alloc<_Head, _Alloc, _UHead>(__a),
 304:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****                 std::forward<_UHead>
 305:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 		(_Tuple_impl<_Idx, _UHead, _UTails...>::_M_head(__in))) { }
 306:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 307:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename... _UElements>
 308:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_GLIBCXX20_CONSTEXPR
 309:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****         void
 310:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****         _M_assign(const _Tuple_impl<_Idx, _UElements...>& __in)
 311:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****         {
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 251


 312:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	  _M_head(*this) = _Tuple_impl<_Idx, _UElements...>::_M_head(__in);
 313:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	  _M_tail(*this)._M_assign(
 314:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	      _Tuple_impl<_Idx, _UElements...>::_M_tail(__in));
 315:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	}
 316:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 317:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _UHead, typename... _UTails>
 318:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_GLIBCXX20_CONSTEXPR
 319:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****         void
 320:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****         _M_assign(_Tuple_impl<_Idx, _UHead, _UTails...>&& __in)
 321:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****         {
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	  _M_head(*this) = std::forward<_UHead>
 323:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	    (_Tuple_impl<_Idx, _UHead, _UTails...>::_M_head(__in));
 324:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	  _M_tail(*this)._M_assign(
 325:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	      std::move(_Tuple_impl<_Idx, _UHead, _UTails...>::_M_tail(__in)));
 326:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	}
 327:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 328:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     protected:
 329:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       _GLIBCXX20_CONSTEXPR
 330:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       void
 331:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       _M_swap(_Tuple_impl& __in)
 332:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       {
 333:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	using std::swap;
 334:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	swap(_M_head(*this), _M_head(__in));
 335:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_Inherited::_M_swap(_M_tail(__in));
 336:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       }
 337:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     };
 338:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 339:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   // Basis case of inheritance recursion.
 340:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template<std::size_t _Idx, typename _Head>
 341:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     struct _Tuple_impl<_Idx, _Head>
 342:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     : private _Head_base<_Idx, _Head>
 343:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     {
 344:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<std::size_t, typename...> friend class _Tuple_impl;
 345:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 346:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       typedef _Head_base<_Idx, _Head> _Base;
 347:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 348:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       static constexpr _Head&
 349:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
 350:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 351:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       static constexpr const _Head&
 352:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       _M_head(const _Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
 353:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 354:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       constexpr _Tuple_impl()
 355:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       : _Base() { }
 356:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 357:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       explicit
 358:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       constexpr _Tuple_impl(const _Head& __head)
 359:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       : _Base(__head) { }
 360:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 361:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _UHead>
 362:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****         explicit
 363:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****         constexpr _Tuple_impl(_UHead&& __head)
 364:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Base(std::forward<_UHead>(__head)) { }
 365:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 366:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       constexpr _Tuple_impl(const _Tuple_impl&) = default;
 367:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 368:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 252


 369:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       // 2729. Missing SFINAE on std::pair::operator=
 370:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       _Tuple_impl& operator=(const _Tuple_impl&) = delete;
 371:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 372:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       constexpr
 373:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       _Tuple_impl(_Tuple_impl&& __in)
 374:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       noexcept(is_nothrow_move_constructible<_Head>::value)
 375:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       : _Base(std::forward<_Head>(_M_head(__in))) { }
 376:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 377:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _UHead>
 378:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****         constexpr _Tuple_impl(const _Tuple_impl<_Idx, _UHead>& __in)
 379:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Base(_Tuple_impl<_Idx, _UHead>::_M_head(__in)) { }
 380:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 381:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _UHead>
 382:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****         constexpr _Tuple_impl(_Tuple_impl<_Idx, _UHead>&& __in)
 383:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Base(std::forward<_UHead>(_Tuple_impl<_Idx, _UHead>::_M_head(__in)))
 384:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	{ }
 385:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 386:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _Alloc>
 387:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_GLIBCXX20_CONSTEXPR
 388:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a)
 389:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Base(__tag, __use_alloc<_Head>(__a)) { }
 390:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 391:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _Alloc>
 392:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
 393:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 		    const _Head& __head)
 394:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Base(__use_alloc<_Head, _Alloc, _Head>(__a), __head) { }
 395:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 396:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _Alloc, typename _UHead>
 397:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_GLIBCXX20_CONSTEXPR
 398:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
 399:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	            _UHead&& __head)
 400:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Base(__use_alloc<_Head, _Alloc, _UHead>(__a),
 401:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	        std::forward<_UHead>(__head)) { }
 402:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 403:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _Alloc>
 404:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_GLIBCXX20_CONSTEXPR
 405:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****         _Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
 406:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	            const _Tuple_impl& __in)
 407:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Base(__use_alloc<_Head, _Alloc, _Head>(__a), _M_head(__in)) { }
 408:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 409:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _Alloc>
 410:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_GLIBCXX20_CONSTEXPR
 411:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
 412:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	            _Tuple_impl&& __in)
 413:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Base(__use_alloc<_Head, _Alloc, _Head>(__a),
 414:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	        std::forward<_Head>(_M_head(__in))) { }
 415:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 416:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _Alloc, typename _UHead>
 417:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_GLIBCXX20_CONSTEXPR
 418:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
 419:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	            const _Tuple_impl<_Idx, _UHead>& __in)
 420:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Base(__use_alloc<_Head, _Alloc, const _UHead&>(__a),
 421:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 		_Tuple_impl<_Idx, _UHead>::_M_head(__in)) { }
 422:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 423:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _Alloc, typename _UHead>
 424:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_GLIBCXX20_CONSTEXPR
 425:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_Tuple_impl(allocator_arg_t __tag, const _Alloc& __a,
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 253


 426:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	            _Tuple_impl<_Idx, _UHead>&& __in)
 427:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Base(__use_alloc<_Head, _Alloc, _UHead>(__a),
 428:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****                 std::forward<_UHead>(_Tuple_impl<_Idx, _UHead>::_M_head(__in)))
 429:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	{ }
 430:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 431:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _UHead>
 432:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_GLIBCXX20_CONSTEXPR
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****         void
 434:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****         _M_assign(const _Tuple_impl<_Idx, _UHead>& __in)
 435:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****         {
 436:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	  _M_head(*this) = _Tuple_impl<_Idx, _UHead>::_M_head(__in);
 437:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	}
 438:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 439:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _UHead>
 440:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_GLIBCXX20_CONSTEXPR
 441:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****         void
 442:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****         _M_assign(_Tuple_impl<_Idx, _UHead>&& __in)
 443:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****         {
 444:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	  _M_head(*this)
 445:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	    = std::forward<_UHead>(_Tuple_impl<_Idx, _UHead>::_M_head(__in));
 446:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	}
 447:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 448:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     protected:
 449:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       _GLIBCXX20_CONSTEXPR
 450:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       void
 451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       _M_swap(_Tuple_impl& __in)
 452:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       {
 453:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	using std::swap;
 454:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	swap(_M_head(*this), _M_head(__in));
 455:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       }
 456:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     };
 457:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 458:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   // Concept utility functions, reused in conditionally-explicit
 459:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   // constructors.
 460:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template<bool, typename... _Types>
 461:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     struct _TupleConstraints
 462:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     {
 463:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       // Constraint for a non-explicit constructor.
 464:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       // True iff each Ti in _Types... can be constructed from Ui in _UTypes...
 465:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       // and every Ui is implicitly convertible to Ti.
 466:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename... _UTypes>
 467:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	static constexpr bool __is_implicitly_constructible()
 468:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	{
 469:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	  return __and_<is_constructible<_Types, _UTypes>...,
 470:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 			is_convertible<_UTypes, _Types>...
 471:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 			>::value;
 472:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	}
 473:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 474:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       // Constraint for a non-explicit constructor.
 475:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       // True iff each Ti in _Types... can be constructed from Ui in _UTypes...
 476:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       // but not every Ui is implicitly convertible to Ti.
 477:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename... _UTypes>
 478:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	static constexpr bool __is_explicitly_constructible()
 479:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	{
 480:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	  return __and_<is_constructible<_Types, _UTypes>...,
 481:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 			__not_<__and_<is_convertible<_UTypes, _Types>...>>
 482:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 			>::value;
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 254


 483:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	}
 484:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 485:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       static constexpr bool __is_implicitly_default_constructible()
 486:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       {
 487:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	return __and_<std::__is_implicitly_default_constructible<_Types>...
 488:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 		      >::value;
 489:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       }
 490:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       static constexpr bool __is_explicitly_default_constructible()
 492:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       {
 493:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	return __and_<is_default_constructible<_Types>...,
 494:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 		      __not_<__and_<
 495:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 			std::__is_implicitly_default_constructible<_Types>...>
 496:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 		      >>::value;
 497:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       }
 498:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     };
 499:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 500:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   // Partial specialization used when a required precondition isn't met,
 501:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   // e.g. when sizeof...(_Types) != sizeof...(_UTypes).
 502:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template<typename... _Types>
 503:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     struct _TupleConstraints<false, _Types...>
 504:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     {
 505:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename... _UTypes>
 506:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	static constexpr bool __is_implicitly_constructible()
 507:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	{ return false; }
 508:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 509:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename... _UTypes>
 510:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	static constexpr bool __is_explicitly_constructible()
 511:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	{ return false; }
 512:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     };
 513:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 514:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   /// Primary class template, tuple
 515:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template<typename... _Elements>
 516:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     class tuple : public _Tuple_impl<0, _Elements...>
 517:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     {
 518:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       typedef _Tuple_impl<0, _Elements...> _Inherited;
 519:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 520:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<bool _Cond>
 521:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	using _TCC = _TupleConstraints<_Cond, _Elements...>;
 522:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 523:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       // Constraint for non-explicit default constructor
 524:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<bool _Dummy>
 525:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	using _ImplicitDefaultCtor = __enable_if_t<
 526:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	  _TCC<_Dummy>::__is_implicitly_default_constructible(),
 527:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	  bool>;
 528:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 529:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       // Constraint for explicit default constructor
 530:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<bool _Dummy>
 531:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	using _ExplicitDefaultCtor = __enable_if_t<
 532:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	  _TCC<_Dummy>::__is_explicitly_default_constructible(),
 533:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	  bool>;
 534:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 535:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       // Constraint for non-explicit constructors
 536:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<bool _Cond, typename... _Args>
 537:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	using _ImplicitCtor = __enable_if_t<
 538:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	  _TCC<_Cond>::template __is_implicitly_constructible<_Args...>(),
 539:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	  bool>;
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 255


 540:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 541:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       // Constraint for non-explicit constructors
 542:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<bool _Cond, typename... _Args>
 543:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	using _ExplicitCtor = __enable_if_t<
 544:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	  _TCC<_Cond>::template __is_explicitly_constructible<_Args...>(),
 545:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	  bool>;
 546:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 547:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename... _UElements>
 548:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	static constexpr
 549:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	__enable_if_t<sizeof...(_UElements) == sizeof...(_Elements), bool>
 550:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	__assignable()
 551:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	{ return __and_<is_assignable<_Elements&, _UElements>...>::value; }
 552:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 553:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       // Condition for noexcept-specifier of an assignment operator.
 554:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename... _UElements>
 555:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	static constexpr bool __nothrow_assignable()
 556:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	{
 557:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	  return
 558:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	    __and_<is_nothrow_assignable<_Elements&, _UElements>...>::value;
 559:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	}
 560:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 561:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       // Condition for noexcept-specifier of a constructor.
 562:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename... _UElements>
 563:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	static constexpr bool __nothrow_constructible()
 564:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	{
 565:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	  return
 566:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	    __and_<is_nothrow_constructible<_Elements, _UElements>...>::value;
 567:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	}
 568:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 569:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       // Constraint for tuple(_UTypes&&...) where sizeof...(_UTypes) == 1.
 570:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _Up>
 571:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	static constexpr bool __valid_args()
 572:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	{
 573:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	  return sizeof...(_Elements) == 1
 574:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	    && !is_same<tuple, __remove_cvref_t<_Up>>::value;
 575:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	}
 576:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 577:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       // Constraint for tuple(_UTypes&&...) where sizeof...(_UTypes) > 1.
 578:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename, typename, typename... _Tail>
 579:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	static constexpr bool __valid_args()
 580:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	{ return (sizeof...(_Tail) + 2) == sizeof...(_Elements); }
 581:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 582:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       /* Constraint for constructors with a tuple<UTypes...> parameter ensures
 583:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****        * that the constructor is only viable when it would not interfere with
 584:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****        * tuple(UTypes&&...) or tuple(const tuple&) or tuple(tuple&&).
 585:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****        * Such constructors are only viable if:
 586:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****        * either sizeof...(Types) != 1,
 587:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****        * or (when Types... expands to T and UTypes... expands to U)
 588:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****        * is_convertible_v<TUPLE, T>, is_constructible_v<T, TUPLE>,
 589:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****        * and is_same_v<T, U> are all false.
 590:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****        */
 591:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _Tuple, typename = tuple,
 592:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	       typename = __remove_cvref_t<_Tuple>>
 593:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	struct _UseOtherCtor
 594:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: false_type
 595:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	{ };
 596:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       // If TUPLE is convertible to the single element in *this,
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 256


 597:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       // then TUPLE should match tuple(UTypes&&...) instead.
 598:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _Tuple, typename _Tp, typename _Up>
 599:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	struct _UseOtherCtor<_Tuple, tuple<_Tp>, tuple<_Up>>
 600:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: __or_<is_convertible<_Tuple, _Tp>, is_constructible<_Tp, _Tuple>>
 601:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	{ };
 602:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       // If TUPLE and *this each have a single element of the same type,
 603:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       // then TUPLE should match a copy/move constructor instead.
 604:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _Tuple, typename _Tp>
 605:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	struct _UseOtherCtor<_Tuple, tuple<_Tp>, tuple<_Tp>>
 606:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: true_type
 607:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	{ };
 608:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 609:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       // Return true iff sizeof...(Types) == 1 && tuple_size_v<TUPLE> == 1
 610:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       // and the single element in Types can be initialized from TUPLE,
 611:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       // or is the same type as tuple_element_t<0, TUPLE>.
 612:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _Tuple>
 613:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	static constexpr bool __use_other_ctor()
 614:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	{ return _UseOtherCtor<_Tuple>::value; }
 615:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 616:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     public:
 617:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _Dummy = void,
 618:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	       _ImplicitDefaultCtor<is_void<_Dummy>::value> = true>
 619:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	constexpr
 620:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	tuple()
 621:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	noexcept(__and_<is_nothrow_default_constructible<_Elements>...>::value)
 622:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Inherited() { }
 623:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 624:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _Dummy = void,
 625:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	       _ExplicitDefaultCtor<is_void<_Dummy>::value> = false>
 626:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	explicit constexpr
 627:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	tuple()
 628:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	noexcept(__and_<is_nothrow_default_constructible<_Elements>...>::value)
 629:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Inherited() { }
 630:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 631:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<bool _NotEmpty = (sizeof...(_Elements) >= 1),
 632:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	       _ImplicitCtor<_NotEmpty, const _Elements&...> = true>
 633:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	constexpr
 634:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	tuple(const _Elements&... __elements)
 635:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	noexcept(__nothrow_constructible<const _Elements&...>())
 636:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Inherited(__elements...) { }
 637:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 638:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<bool _NotEmpty = (sizeof...(_Elements) >= 1),
 639:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	       _ExplicitCtor<_NotEmpty, const _Elements&...> = false>
 640:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	explicit constexpr
 641:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	tuple(const _Elements&... __elements)
 642:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	noexcept(__nothrow_constructible<const _Elements&...>())
 643:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Inherited(__elements...) { }
 644:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 645:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename... _UElements,
 646:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	       bool _Valid = __valid_args<_UElements...>(),
 647:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	       _ImplicitCtor<_Valid, _UElements...> = true>
 648:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	constexpr
 649:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	tuple(_UElements&&... __elements)
 650:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	noexcept(__nothrow_constructible<_UElements...>())
 651:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Inherited(std::forward<_UElements>(__elements)...) { }
 652:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 653:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename... _UElements,
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 257


 654:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	       bool _Valid = __valid_args<_UElements...>(),
 655:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	       _ExplicitCtor<_Valid, _UElements...> = false>
 656:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	explicit constexpr
 657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	tuple(_UElements&&... __elements)
 658:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	noexcept(__nothrow_constructible<_UElements...>())
 659:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Inherited(std::forward<_UElements>(__elements)...) {	}
 660:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 661:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       constexpr tuple(const tuple&) = default;
 662:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 663:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       constexpr tuple(tuple&&) = default;
 664:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 665:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename... _UElements,
 666:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	       bool _Valid = (sizeof...(_Elements) == sizeof...(_UElements))
 667:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 			   && !__use_other_ctor<const tuple<_UElements...>&>(),
 668:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	       _ImplicitCtor<_Valid, const _UElements&...> = true>
 669:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	constexpr
 670:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	tuple(const tuple<_UElements...>& __in)
 671:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	noexcept(__nothrow_constructible<const _UElements&...>())
 672:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Inherited(static_cast<const _Tuple_impl<0, _UElements...>&>(__in))
 673:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	{ }
 674:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 675:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename... _UElements,
 676:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	       bool _Valid = (sizeof...(_Elements) == sizeof...(_UElements))
 677:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 			   && !__use_other_ctor<const tuple<_UElements...>&>(),
 678:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	       _ExplicitCtor<_Valid, const _UElements&...> = false>
 679:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	explicit constexpr
 680:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	tuple(const tuple<_UElements...>& __in)
 681:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	noexcept(__nothrow_constructible<const _UElements&...>())
 682:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Inherited(static_cast<const _Tuple_impl<0, _UElements...>&>(__in))
 683:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	{ }
 684:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 685:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename... _UElements,
 686:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	       bool _Valid = (sizeof...(_Elements) == sizeof...(_UElements))
 687:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 			     && !__use_other_ctor<tuple<_UElements...>&&>(),
 688:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	       _ImplicitCtor<_Valid, _UElements...> = true>
 689:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	constexpr
 690:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	tuple(tuple<_UElements...>&& __in)
 691:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	noexcept(__nothrow_constructible<_UElements...>())
 692:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Inherited(static_cast<_Tuple_impl<0, _UElements...>&&>(__in)) { }
 693:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 694:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename... _UElements,
 695:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	       bool _Valid = (sizeof...(_Elements) == sizeof...(_UElements))
 696:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 			     && !__use_other_ctor<tuple<_UElements...>&&>(),
 697:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	       _ExplicitCtor<_Valid, _UElements...> = false>
 698:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	explicit constexpr
 699:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	tuple(tuple<_UElements...>&& __in)
 700:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	noexcept(__nothrow_constructible<_UElements...>())
 701:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Inherited(static_cast<_Tuple_impl<0, _UElements...>&&>(__in)) { }
 702:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 703:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       // Allocator-extended constructors.
 704:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 705:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _Alloc,
 706:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	       _ImplicitDefaultCtor<is_object<_Alloc>::value> = true>
 707:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_GLIBCXX20_CONSTEXPR
 708:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a)
 709:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Inherited(__tag, __a) { }
 710:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 258


 711:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _Alloc, bool _NotEmpty = (sizeof...(_Elements) >= 1),
 712:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	       _ImplicitCtor<_NotEmpty, const _Elements&...> = true>
 713:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_GLIBCXX20_CONSTEXPR
 714:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a,
 715:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	      const _Elements&... __elements)
 716:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Inherited(__tag, __a, __elements...) { }
 717:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 718:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _Alloc, bool _NotEmpty = (sizeof...(_Elements) >= 1),
 719:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	       _ExplicitCtor<_NotEmpty, const _Elements&...> = false>
 720:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_GLIBCXX20_CONSTEXPR
 721:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	explicit
 722:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a,
 723:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	      const _Elements&... __elements)
 724:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Inherited(__tag, __a, __elements...) { }
 725:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 726:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _Alloc, typename... _UElements,
 727:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	       bool _Valid = __valid_args<_UElements...>(),
 728:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	       _ImplicitCtor<_Valid, _UElements...> = true>
 729:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_GLIBCXX20_CONSTEXPR
 730:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a,
 731:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	      _UElements&&... __elements)
 732:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Inherited(__tag, __a, std::forward<_UElements>(__elements)...)
 733:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	{ }
 734:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 735:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _Alloc, typename... _UElements,
 736:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 		 bool _Valid = __valid_args<_UElements...>(),
 737:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	       _ExplicitCtor<_Valid, _UElements...> = false>
 738:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_GLIBCXX20_CONSTEXPR
 739:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	explicit
 740:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a,
 741:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	      _UElements&&... __elements)
 742:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Inherited(__tag, __a, std::forward<_UElements>(__elements)...)
 743:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	{ }
 744:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 745:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _Alloc>
 746:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_GLIBCXX20_CONSTEXPR
 747:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a, const tuple& __in)
 748:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Inherited(__tag, __a, static_cast<const _Inherited&>(__in)) { }
 749:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 750:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _Alloc>
 751:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_GLIBCXX20_CONSTEXPR
 752:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a, tuple&& __in)
 753:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Inherited(__tag, __a, static_cast<_Inherited&&>(__in)) { }
 754:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 755:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _Alloc, typename... _UElements,
 756:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	       bool _Valid = (sizeof...(_Elements) == sizeof...(_UElements))
 757:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 			     && !__use_other_ctor<const tuple<_UElements...>&>(),
 758:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	       _ImplicitCtor<_Valid, const _UElements&...> = true>
 759:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_GLIBCXX20_CONSTEXPR
 760:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a,
 761:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	      const tuple<_UElements...>& __in)
 762:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Inherited(__tag, __a,
 763:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	             static_cast<const _Tuple_impl<0, _UElements...>&>(__in))
 764:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	{ }
 765:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 766:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _Alloc, typename... _UElements,
 767:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	       bool _Valid = (sizeof...(_Elements) == sizeof...(_UElements))
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 259


 768:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 			     && !__use_other_ctor<const tuple<_UElements...>&>(),
 769:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	       _ExplicitCtor<_Valid, const _UElements&...> = false>
 770:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_GLIBCXX20_CONSTEXPR
 771:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	explicit
 772:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a,
 773:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	      const tuple<_UElements...>& __in)
 774:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Inherited(__tag, __a,
 775:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	             static_cast<const _Tuple_impl<0, _UElements...>&>(__in))
 776:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	{ }
 777:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 778:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _Alloc, typename... _UElements,
 779:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	       bool _Valid = (sizeof...(_Elements) == sizeof...(_UElements))
 780:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 			     && !__use_other_ctor<tuple<_UElements...>&&>(),
 781:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	       _ImplicitCtor<_Valid, _UElements...> = true>
 782:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_GLIBCXX20_CONSTEXPR
 783:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a,
 784:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	      tuple<_UElements...>&& __in)
 785:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Inherited(__tag, __a,
 786:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	             static_cast<_Tuple_impl<0, _UElements...>&&>(__in))
 787:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	{ }
 788:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 789:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _Alloc, typename... _UElements,
 790:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	       bool _Valid = (sizeof...(_Elements) == sizeof...(_UElements))
 791:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 			     && !__use_other_ctor<tuple<_UElements...>&&>(),
 792:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	       _ExplicitCtor<_Valid, _UElements...> = false>
 793:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_GLIBCXX20_CONSTEXPR
 794:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	explicit
 795:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a,
 796:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	      tuple<_UElements...>&& __in)
 797:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Inherited(__tag, __a,
 798:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	             static_cast<_Tuple_impl<0, _UElements...>&&>(__in))
 799:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	{ }
 800:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 801:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       // tuple assignment
 802:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 803:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       _GLIBCXX20_CONSTEXPR
 804:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       tuple&
 805:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       operator=(typename conditional<__assignable<const _Elements&...>(),
 806:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 				     const tuple&,
 807:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 				     const __nonesuch&>::type __in)
 808:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       noexcept(__nothrow_assignable<const _Elements&...>())
 809:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       {
 810:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	this->_M_assign(__in);
 811:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	return *this;
 812:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       }
 813:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 814:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       _GLIBCXX20_CONSTEXPR
 815:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       tuple&
 816:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       operator=(typename conditional<__assignable<_Elements...>(),
 817:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 				     tuple&&,
 818:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 				     __nonesuch&&>::type __in)
 819:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       noexcept(__nothrow_assignable<_Elements...>())
 820:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       {
 821:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	this->_M_assign(std::move(__in));
 822:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	return *this;
 823:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       }
 824:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 260


 825:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename... _UElements>
 826:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_GLIBCXX20_CONSTEXPR
 827:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	__enable_if_t<__assignable<const _UElements&...>(), tuple&>
 828:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	operator=(const tuple<_UElements...>& __in)
 829:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	noexcept(__nothrow_assignable<const _UElements&...>())
 830:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	{
 831:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	  this->_M_assign(__in);
 832:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	  return *this;
 833:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	}
 834:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 835:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename... _UElements>
 836:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_GLIBCXX20_CONSTEXPR
 837:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	__enable_if_t<__assignable<_UElements...>(), tuple&>
 838:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	operator=(tuple<_UElements...>&& __in)
 839:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	noexcept(__nothrow_assignable<_UElements...>())
 840:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	{
 841:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	  this->_M_assign(std::move(__in));
 842:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	  return *this;
 843:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	}
 844:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 845:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       // tuple swap
 846:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       _GLIBCXX20_CONSTEXPR
 847:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       void
 848:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       swap(tuple& __in)
 849:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       noexcept(__and_<__is_nothrow_swappable<_Elements>...>::value)
 850:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       { _Inherited::_M_swap(__in); }
 851:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     };
 852:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 853:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** #if __cpp_deduction_guides >= 201606
 854:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template<typename... _UTypes>
 855:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     tuple(_UTypes...) -> tuple<_UTypes...>;
 856:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template<typename _T1, typename _T2>
 857:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     tuple(pair<_T1, _T2>) -> tuple<_T1, _T2>;
 858:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template<typename _Alloc, typename... _UTypes>
 859:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     tuple(allocator_arg_t, _Alloc, _UTypes...) -> tuple<_UTypes...>;
 860:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template<typename _Alloc, typename _T1, typename _T2>
 861:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     tuple(allocator_arg_t, _Alloc, pair<_T1, _T2>) -> tuple<_T1, _T2>;
 862:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template<typename _Alloc, typename... _UTypes>
 863:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     tuple(allocator_arg_t, _Alloc, tuple<_UTypes...>) -> tuple<_UTypes...>;
 864:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** #endif
 865:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 866:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   // Explicit specialization, zero-element tuple.
 867:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template<>
 868:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     class tuple<>
 869:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     {
 870:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     public:
 871:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       void swap(tuple&) noexcept { /* no-op */ }
 872:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       // We need the default since we're going to define no-op
 873:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       // allocator constructors.
 874:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       tuple() = default;
 875:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       // No-op allocator constructors.
 876:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _Alloc>
 877:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_GLIBCXX20_CONSTEXPR
 878:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	tuple(allocator_arg_t, const _Alloc&) noexcept { }
 879:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _Alloc>
 880:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_GLIBCXX20_CONSTEXPR
 881:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	tuple(allocator_arg_t, const _Alloc&, const tuple&) noexcept { }
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 261


 882:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     };
 883:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 884:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   /// Partial specialization, 2-element tuple.
 885:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   /// Includes construction and assignment from a pair.
 886:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template<typename _T1, typename _T2>
 887:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     class tuple<_T1, _T2> : public _Tuple_impl<0, _T1, _T2>
 888:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     {
 889:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       typedef _Tuple_impl<0, _T1, _T2> _Inherited;
 890:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 891:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       // Constraint for non-explicit default constructor
 892:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<bool _Dummy, typename _U1, typename _U2>
 893:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	using _ImplicitDefaultCtor = __enable_if_t<
 894:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	  _TupleConstraints<_Dummy, _U1, _U2>::
 895:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	    __is_implicitly_default_constructible(),
 896:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	  bool>;
 897:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 898:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       // Constraint for explicit default constructor
 899:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<bool _Dummy, typename _U1, typename _U2>
 900:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	using _ExplicitDefaultCtor = __enable_if_t<
 901:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	  _TupleConstraints<_Dummy, _U1, _U2>::
 902:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	    __is_explicitly_default_constructible(),
 903:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	  bool>;
 904:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 905:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<bool _Dummy>
 906:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	using _TCC = _TupleConstraints<_Dummy, _T1, _T2>;
 907:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 908:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       // Constraint for non-explicit constructors
 909:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<bool _Cond, typename _U1, typename _U2>
 910:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	using _ImplicitCtor = __enable_if_t<
 911:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	  _TCC<_Cond>::template __is_implicitly_constructible<_U1, _U2>(),
 912:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	  bool>;
 913:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 914:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       // Constraint for non-explicit constructors
 915:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<bool _Cond, typename _U1, typename _U2>
 916:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	using _ExplicitCtor = __enable_if_t<
 917:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	  _TCC<_Cond>::template __is_explicitly_constructible<_U1, _U2>(),
 918:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	  bool>;
 919:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 920:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _U1, typename _U2>
 921:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	static constexpr bool __assignable()
 922:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	{
 923:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	  return __and_<is_assignable<_T1&, _U1>,
 924:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 			is_assignable<_T2&, _U2>>::value;
 925:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	}
 926:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 927:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _U1, typename _U2>
 928:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	static constexpr bool __nothrow_assignable()
 929:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	{
 930:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	  return __and_<is_nothrow_assignable<_T1&, _U1>,
 931:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 			is_nothrow_assignable<_T2&, _U2>>::value;
 932:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	}
 933:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 934:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _U1, typename _U2>
 935:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	static constexpr bool __nothrow_constructible()
 936:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	{
 937:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	  return __and_<is_nothrow_constructible<_T1, _U1>,
 938:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 			    is_nothrow_constructible<_T2, _U2>>::value;
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 262


 939:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	}
 940:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 941:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       static constexpr bool __nothrow_default_constructible()
 942:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       {
 943:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	return __and_<is_nothrow_default_constructible<_T1>,
 944:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 		      is_nothrow_default_constructible<_T2>>::value;
 945:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       }
 946:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 947:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _U1>
 948:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	static constexpr bool __is_alloc_arg()
 949:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	{ return is_same<__remove_cvref_t<_U1>, allocator_arg_t>::value; }
 950:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 951:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     public:
 952:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<bool _Dummy = true,
 953:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	       _ImplicitDefaultCtor<_Dummy, _T1, _T2> = true>
 954:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	constexpr
 955:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	tuple()
 956:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	noexcept(__nothrow_default_constructible())
 957:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Inherited() { }
 958:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 959:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<bool _Dummy = true,
 960:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	       _ExplicitDefaultCtor<_Dummy, _T1, _T2> = false>
 961:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	explicit constexpr
 962:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	tuple()
 963:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	noexcept(__nothrow_default_constructible())
 964:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Inherited() { }
 965:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 966:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<bool _Dummy = true,
 967:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	       _ImplicitCtor<_Dummy, const _T1&, const _T2&> = true>
 968:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	constexpr
 969:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	tuple(const _T1& __a1, const _T2& __a2)
 970:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	noexcept(__nothrow_constructible<const _T1&, const _T2&>())
 971:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Inherited(__a1, __a2) { }
 972:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 973:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<bool _Dummy = true,
 974:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	       _ExplicitCtor<_Dummy, const _T1&, const _T2&> = false>
 975:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	explicit constexpr
 976:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	tuple(const _T1& __a1, const _T2& __a2)
 977:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	noexcept(__nothrow_constructible<const _T1&, const _T2&>())
 978:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Inherited(__a1, __a2) { }
 979:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 980:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _U1, typename _U2,
 981:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	       _ImplicitCtor<!__is_alloc_arg<_U1>(), _U1, _U2> = true>
 982:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	constexpr
 983:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	tuple(_U1&& __a1, _U2&& __a2)
 984:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	noexcept(__nothrow_constructible<_U1, _U2>())
 985:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Inherited(std::forward<_U1>(__a1), std::forward<_U2>(__a2)) { }
 986:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 987:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _U1, typename _U2,
 988:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	       _ExplicitCtor<!__is_alloc_arg<_U1>(), _U1, _U2> = false>
 989:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	explicit constexpr
 990:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	tuple(_U1&& __a1, _U2&& __a2)
 991:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	noexcept(__nothrow_constructible<_U1, _U2>())
 992:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Inherited(std::forward<_U1>(__a1), std::forward<_U2>(__a2)) { }
 993:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 994:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       constexpr tuple(const tuple&) = default;
 995:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 263


 996:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       constexpr tuple(tuple&&) = default;
 997:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 998:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _U1, typename _U2,
 999:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	       _ImplicitCtor<true, const _U1&, const _U2&> = true>
1000:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	constexpr
1001:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	tuple(const tuple<_U1, _U2>& __in)
1002:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	noexcept(__nothrow_constructible<const _U1&, const _U2&>())
1003:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Inherited(static_cast<const _Tuple_impl<0, _U1, _U2>&>(__in)) { }
1004:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1005:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _U1, typename _U2,
1006:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	       _ExplicitCtor<true, const _U1&, const _U2&> = false>
1007:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	explicit constexpr
1008:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	tuple(const tuple<_U1, _U2>& __in)
1009:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	noexcept(__nothrow_constructible<const _U1&, const _U2&>())
1010:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Inherited(static_cast<const _Tuple_impl<0, _U1, _U2>&>(__in)) { }
1011:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1012:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _U1, typename _U2,
1013:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	       _ImplicitCtor<true, _U1, _U2> = true>
1014:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	constexpr
1015:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	tuple(tuple<_U1, _U2>&& __in)
1016:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	noexcept(__nothrow_constructible<_U1, _U2>())
1017:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Inherited(static_cast<_Tuple_impl<0, _U1, _U2>&&>(__in)) { }
1018:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1019:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _U1, typename _U2,
1020:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	       _ExplicitCtor<true, _U1, _U2> = false>
1021:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	explicit constexpr
1022:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	tuple(tuple<_U1, _U2>&& __in)
1023:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	noexcept(__nothrow_constructible<_U1, _U2>())
1024:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Inherited(static_cast<_Tuple_impl<0, _U1, _U2>&&>(__in)) { }
1025:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1026:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _U1, typename _U2,
1027:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	       _ImplicitCtor<true, const _U1&, const _U2&> = true>
1028:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	constexpr
1029:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	tuple(const pair<_U1, _U2>& __in)
1030:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	noexcept(__nothrow_constructible<const _U1&, const _U2&>())
1031:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Inherited(__in.first, __in.second) { }
1032:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1033:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _U1, typename _U2,
1034:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	       _ExplicitCtor<true, const _U1&, const _U2&> = false>
1035:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	explicit constexpr
1036:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	tuple(const pair<_U1, _U2>& __in)
1037:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	noexcept(__nothrow_constructible<const _U1&, const _U2&>())
1038:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Inherited(__in.first, __in.second) { }
1039:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1040:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _U1, typename _U2,
1041:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	       _ImplicitCtor<true, _U1, _U2> = true>
1042:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	constexpr
1043:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	tuple(pair<_U1, _U2>&& __in)
1044:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	noexcept(__nothrow_constructible<_U1, _U2>())
1045:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Inherited(std::forward<_U1>(__in.first),
1046:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 		     std::forward<_U2>(__in.second)) { }
1047:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1048:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _U1, typename _U2,
1049:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	       _ExplicitCtor<true, _U1, _U2> = false>
1050:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	explicit constexpr
1051:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	tuple(pair<_U1, _U2>&& __in)
1052:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	noexcept(__nothrow_constructible<_U1, _U2>())
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 264


1053:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Inherited(std::forward<_U1>(__in.first),
1054:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 		     std::forward<_U2>(__in.second)) { }
1055:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1056:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       // Allocator-extended constructors.
1057:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1058:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _Alloc,
1059:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	       _ImplicitDefaultCtor<is_object<_Alloc>::value, _T1, _T2> = true>
1060:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_GLIBCXX20_CONSTEXPR
1061:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a)
1062:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Inherited(__tag, __a) { }
1063:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1064:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _Alloc, bool _Dummy = true,
1065:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	       _ImplicitCtor<_Dummy, const _T1&, const _T2&> = true>
1066:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_GLIBCXX20_CONSTEXPR
1067:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a,
1068:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	      const _T1& __a1, const _T2& __a2)
1069:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Inherited(__tag, __a, __a1, __a2) { }
1070:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1071:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _Alloc, bool _Dummy = true,
1072:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	       _ExplicitCtor<_Dummy, const _T1&, const _T2&> = false>
1073:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	explicit
1074:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_GLIBCXX20_CONSTEXPR
1075:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a,
1076:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	      const _T1& __a1, const _T2& __a2)
1077:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Inherited(__tag, __a, __a1, __a2) { }
1078:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1079:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _Alloc, typename _U1, typename _U2,
1080:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	       _ImplicitCtor<true, _U1, _U2> = true>
1081:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_GLIBCXX20_CONSTEXPR
1082:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a, _U1&& __a1, _U2&& __a2)
1083:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Inherited(__tag, __a, std::forward<_U1>(__a1),
1084:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	             std::forward<_U2>(__a2)) { }
1085:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1086:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _Alloc, typename _U1, typename _U2,
1087:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	       _ExplicitCtor<true, _U1, _U2> = false>
1088:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	explicit
1089:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_GLIBCXX20_CONSTEXPR
1090:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a,
1091:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	      _U1&& __a1, _U2&& __a2)
1092:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Inherited(__tag, __a, std::forward<_U1>(__a1),
1093:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	             std::forward<_U2>(__a2)) { }
1094:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1095:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _Alloc>
1096:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_GLIBCXX20_CONSTEXPR
1097:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a, const tuple& __in)
1098:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Inherited(__tag, __a, static_cast<const _Inherited&>(__in)) { }
1099:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1100:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _Alloc>
1101:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_GLIBCXX20_CONSTEXPR
1102:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a, tuple&& __in)
1103:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Inherited(__tag, __a, static_cast<_Inherited&&>(__in)) { }
1104:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1105:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _Alloc, typename _U1, typename _U2,
1106:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	       _ImplicitCtor<true, const _U1&, const _U2&> = true>
1107:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_GLIBCXX20_CONSTEXPR
1108:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a,
1109:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	      const tuple<_U1, _U2>& __in)
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 265


1110:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Inherited(__tag, __a,
1111:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	             static_cast<const _Tuple_impl<0, _U1, _U2>&>(__in))
1112:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	{ }
1113:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1114:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _Alloc, typename _U1, typename _U2,
1115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	       _ExplicitCtor<true, const _U1&, const _U2&> = false>
1116:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	explicit
1117:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_GLIBCXX20_CONSTEXPR
1118:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a,
1119:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	      const tuple<_U1, _U2>& __in)
1120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Inherited(__tag, __a,
1121:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	             static_cast<const _Tuple_impl<0, _U1, _U2>&>(__in))
1122:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	{ }
1123:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1124:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _Alloc, typename _U1, typename _U2,
1125:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	       _ImplicitCtor<true, _U1, _U2> = true>
1126:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_GLIBCXX20_CONSTEXPR
1127:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a, tuple<_U1, _U2>&& __in)
1128:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Inherited(__tag, __a, static_cast<_Tuple_impl<0, _U1, _U2>&&>(__in))
1129:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	{ }
1130:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1131:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _Alloc, typename _U1, typename _U2,
1132:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	       _ExplicitCtor<true, _U1, _U2> = false>
1133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	explicit
1134:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_GLIBCXX20_CONSTEXPR
1135:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a, tuple<_U1, _U2>&& __in)
1136:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Inherited(__tag, __a, static_cast<_Tuple_impl<0, _U1, _U2>&&>(__in))
1137:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	{ }
1138:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1139:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _Alloc, typename _U1, typename _U2,
1140:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	       _ImplicitCtor<true, const _U1&, const _U2&> = true>
1141:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_GLIBCXX20_CONSTEXPR
1142:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a,
1143:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	      const pair<_U1, _U2>& __in)
1144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Inherited(__tag, __a, __in.first, __in.second) { }
1145:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1146:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _Alloc, typename _U1, typename _U2,
1147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	       _ExplicitCtor<true, const _U1&, const _U2&> = false>
1148:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	explicit
1149:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_GLIBCXX20_CONSTEXPR
1150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a,
1151:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	      const pair<_U1, _U2>& __in)
1152:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Inherited(__tag, __a, __in.first, __in.second) { }
1153:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1154:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _Alloc, typename _U1, typename _U2,
1155:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	       _ImplicitCtor<true, _U1, _U2> = true>
1156:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_GLIBCXX20_CONSTEXPR
1157:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a, pair<_U1, _U2>&& __in)
1158:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Inherited(__tag, __a, std::forward<_U1>(__in.first),
1159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 		     std::forward<_U2>(__in.second)) { }
1160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1161:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _Alloc, typename _U1, typename _U2,
1162:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	       _ExplicitCtor<true, _U1, _U2> = false>
1163:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	explicit
1164:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_GLIBCXX20_CONSTEXPR
1165:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	tuple(allocator_arg_t __tag, const _Alloc& __a, pair<_U1, _U2>&& __in)
1166:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Inherited(__tag, __a, std::forward<_U1>(__in.first),
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 266


1167:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 		     std::forward<_U2>(__in.second)) { }
1168:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1169:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       // Tuple assignment.
1170:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1171:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       _GLIBCXX20_CONSTEXPR
1172:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       tuple&
1173:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       operator=(typename conditional<__assignable<const _T1&, const _T2&>(),
1174:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 				     const tuple&,
1175:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 				     const __nonesuch&>::type __in)
1176:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       noexcept(__nothrow_assignable<const _T1&, const _T2&>())
1177:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       {
1178:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	this->_M_assign(__in);
1179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	return *this;
1180:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       }
1181:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1182:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       _GLIBCXX20_CONSTEXPR
1183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       tuple&
1184:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       operator=(typename conditional<__assignable<_T1, _T2>(),
1185:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 				     tuple&&,
1186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 				     __nonesuch&&>::type __in)
1187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       noexcept(__nothrow_assignable<_T1, _T2>())
1188:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       {
1189:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	this->_M_assign(std::move(__in));
1190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	return *this;
1191:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       }
1192:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1193:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _U1, typename _U2>
1194:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_GLIBCXX20_CONSTEXPR
1195:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	__enable_if_t<__assignable<const _U1&, const _U2&>(), tuple&>
1196:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	operator=(const tuple<_U1, _U2>& __in)
1197:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	noexcept(__nothrow_assignable<const _U1&, const _U2&>())
1198:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	{
1199:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	  this->_M_assign(__in);
1200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	  return *this;
1201:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	}
1202:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1203:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _U1, typename _U2>
1204:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_GLIBCXX20_CONSTEXPR
1205:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	__enable_if_t<__assignable<_U1, _U2>(), tuple&>
1206:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	operator=(tuple<_U1, _U2>&& __in)
1207:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	noexcept(__nothrow_assignable<_U1, _U2>())
1208:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	{
1209:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	  this->_M_assign(std::move(__in));
1210:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	  return *this;
1211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	}
1212:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1213:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _U1, typename _U2>
1214:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_GLIBCXX20_CONSTEXPR
1215:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	__enable_if_t<__assignable<const _U1&, const _U2&>(), tuple&>
1216:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	operator=(const pair<_U1, _U2>& __in)
1217:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	noexcept(__nothrow_assignable<const _U1&, const _U2&>())
1218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	{
1219:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	  this->_M_head(*this) = __in.first;
1220:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	  this->_M_tail(*this)._M_head(*this) = __in.second;
1221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	  return *this;
1222:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	}
1223:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 267


1224:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename _U1, typename _U2>
1225:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_GLIBCXX20_CONSTEXPR
1226:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	__enable_if_t<__assignable<_U1, _U2>(), tuple&>
1227:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	operator=(pair<_U1, _U2>&& __in)
1228:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	noexcept(__nothrow_assignable<_U1, _U2>())
1229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	{
1230:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	  this->_M_head(*this) = std::forward<_U1>(__in.first);
1231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	  this->_M_tail(*this)._M_head(*this) = std::forward<_U2>(__in.second);
1232:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	  return *this;
1233:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	}
1234:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1235:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       _GLIBCXX20_CONSTEXPR
1236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       void
1237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       swap(tuple& __in)
1238:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       noexcept(__and_<__is_nothrow_swappable<_T1>,
1239:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 		      __is_nothrow_swappable<_T2>>::value)
1240:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       { _Inherited::_M_swap(__in); }
1241:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     };
1242:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1243:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1244:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   /// class tuple_size
1245:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template<typename... _Elements>
1246:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     struct tuple_size<tuple<_Elements...>>
1247:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     : public integral_constant<std::size_t, sizeof...(_Elements)> { };
1248:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1249:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** #if __cplusplus > 201402L
1250:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template <typename _Tp>
1251:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     inline constexpr size_t tuple_size_v = tuple_size<_Tp>::value;
1252:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** #endif
1253:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1254:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   /**
1255:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****    * Recursive case for tuple_element: strip off the first element in
1256:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****    * the tuple and retrieve the (i-1)th element of the remaining tuple.
1257:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****    */
1258:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template<std::size_t __i, typename _Head, typename... _Tail>
1259:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     struct tuple_element<__i, tuple<_Head, _Tail...> >
1260:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     : tuple_element<__i - 1, tuple<_Tail...> > { };
1261:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1262:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   /**
1263:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****    * Basis case for tuple_element: The first element is the one we're seeking.
1264:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****    */
1265:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template<typename _Head, typename... _Tail>
1266:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     struct tuple_element<0, tuple<_Head, _Tail...> >
1267:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     {
1268:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       typedef _Head type;
1269:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     };
1270:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1271:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   /**
1272:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****    * Error case for tuple_element: invalid index.
1273:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****    */
1274:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template<size_t __i>
1275:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     struct tuple_element<__i, tuple<>>
1276:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     {
1277:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       static_assert(__i < tuple_size<tuple<>>::value,
1278:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	  "tuple index is in range");
1279:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     };
1280:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 268


1281:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template<std::size_t __i, typename _Head, typename... _Tail>
1282:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     constexpr _Head&
1283:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
1284:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
1285:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1286:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template<std::size_t __i, typename _Head, typename... _Tail>
1287:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     constexpr const _Head&
1288:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     __get_helper(const _Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
1289:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
1290:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1291:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   /// Return a reference to the ith element of a tuple.
1292:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template<std::size_t __i, typename... _Elements>
1293:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     constexpr __tuple_element_t<__i, tuple<_Elements...>>&
1294:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     get(tuple<_Elements...>& __t) noexcept
1295:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     { return std::__get_helper<__i>(__t); }
1296:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1297:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   /// Return a const reference to the ith element of a const tuple.
1298:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template<std::size_t __i, typename... _Elements>
1299:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     constexpr const __tuple_element_t<__i, tuple<_Elements...>>&
1300:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     get(const tuple<_Elements...>& __t) noexcept
1301:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     { return std::__get_helper<__i>(__t); }
1302:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1303:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   /// Return an rvalue reference to the ith element of a tuple rvalue.
1304:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template<std::size_t __i, typename... _Elements>
1305:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     constexpr __tuple_element_t<__i, tuple<_Elements...>>&&
1306:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     get(tuple<_Elements...>&& __t) noexcept
1307:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     {
1308:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       typedef __tuple_element_t<__i, tuple<_Elements...>> __element_type;
1309:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       return std::forward<__element_type&&>(std::get<__i>(__t));
1310:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     }
1311:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1312:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   /// Return a const rvalue reference to the ith element of a const tuple rvalue.
1313:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template<std::size_t __i, typename... _Elements>
1314:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     constexpr const __tuple_element_t<__i, tuple<_Elements...>>&&
1315:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     get(const tuple<_Elements...>&& __t) noexcept
1316:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     {
1317:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       typedef __tuple_element_t<__i, tuple<_Elements...>> __element_type;
1318:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       return std::forward<const __element_type&&>(std::get<__i>(__t));
1319:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     }
1320:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1321:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** #if __cplusplus >= 201402L
1322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1323:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** #define __cpp_lib_tuples_by_type 201304
1324:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1325:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template<typename _Head, size_t __i, typename... _Tail>
1326:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     constexpr _Head&
1327:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     __get_helper2(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
1328:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
1329:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1330:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template<typename _Head, size_t __i, typename... _Tail>
1331:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     constexpr const _Head&
1332:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     __get_helper2(const _Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
1333:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
1334:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1335:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   /// Return a reference to the unique element of type _Tp of a tuple.
1336:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template <typename _Tp, typename... _Types>
1337:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     constexpr _Tp&
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 269


1338:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     get(tuple<_Types...>& __t) noexcept
1339:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     { return std::__get_helper2<_Tp>(__t); }
1340:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1341:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   /// Return a reference to the unique element of type _Tp of a tuple rvalue.
1342:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template <typename _Tp, typename... _Types>
1343:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     constexpr _Tp&&
1344:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     get(tuple<_Types...>&& __t) noexcept
1345:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     { return std::forward<_Tp&&>(std::__get_helper2<_Tp>(__t)); }
1346:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1347:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   /// Return a const reference to the unique element of type _Tp of a tuple.
1348:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template <typename _Tp, typename... _Types>
1349:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     constexpr const _Tp&
1350:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     get(const tuple<_Types...>& __t) noexcept
1351:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     { return std::__get_helper2<_Tp>(__t); }
1352:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1353:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   /// Return a const reference to the unique element of type _Tp of
1354:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   /// a const tuple rvalue.
1355:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template <typename _Tp, typename... _Types>
1356:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     constexpr const _Tp&&
1357:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     get(const tuple<_Types...>&& __t) noexcept
1358:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     { return std::forward<const _Tp&&>(std::__get_helper2<_Tp>(__t)); }
1359:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** #endif
1360:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1361:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   // This class performs the comparison operations on tuples
1362:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template<typename _Tp, typename _Up, size_t __i, size_t __size>
1363:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     struct __tuple_compare
1364:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     {
1365:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       static constexpr bool
1366:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       __eq(const _Tp& __t, const _Up& __u)
1367:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       {
1368:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	return bool(std::get<__i>(__t) == std::get<__i>(__u))
1369:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	  && __tuple_compare<_Tp, _Up, __i + 1, __size>::__eq(__t, __u);
1370:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       }
1371:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1372:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       static constexpr bool
1373:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       __less(const _Tp& __t, const _Up& __u)
1374:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       {
1375:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	return bool(std::get<__i>(__t) < std::get<__i>(__u))
1376:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	  || (!bool(std::get<__i>(__u) < std::get<__i>(__t))
1377:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	      && __tuple_compare<_Tp, _Up, __i + 1, __size>::__less(__t, __u));
1378:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       }
1379:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     };
1380:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1381:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template<typename _Tp, typename _Up, size_t __size>
1382:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     struct __tuple_compare<_Tp, _Up, __size, __size>
1383:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     {
1384:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       static constexpr bool
1385:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       __eq(const _Tp&, const _Up&) { return true; }
1386:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1387:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       static constexpr bool
1388:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       __less(const _Tp&, const _Up&) { return false; }
1389:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     };
1390:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1391:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template<typename... _TElements, typename... _UElements>
1392:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     constexpr bool
1393:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     operator==(const tuple<_TElements...>& __t,
1394:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	       const tuple<_UElements...>& __u)
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 270


1395:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     {
1396:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       static_assert(sizeof...(_TElements) == sizeof...(_UElements),
1397:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	  "tuple objects can only be compared if they have equal sizes.");
1398:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       using __compare = __tuple_compare<tuple<_TElements...>,
1399:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 					tuple<_UElements...>,
1400:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 					0, sizeof...(_TElements)>;
1401:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       return __compare::__eq(__t, __u);
1402:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     }
1403:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1404:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** #if __cpp_lib_three_way_comparison
1405:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template<typename _Cat, typename _Tp, typename _Up>
1406:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     constexpr _Cat
1407:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     __tuple_cmp(const _Tp&, const _Up&, index_sequence<>)
1408:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     { return _Cat::equivalent; }
1409:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1410:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template<typename _Cat, typename _Tp, typename _Up,
1411:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	   size_t _Idx0, size_t... _Idxs>
1412:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     constexpr _Cat
1413:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     __tuple_cmp(const _Tp& __t, const _Up& __u,
1414:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 		index_sequence<_Idx0, _Idxs...>)
1415:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     {
1416:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       auto __c
1417:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	= __detail::__synth3way(std::get<_Idx0>(__t), std::get<_Idx0>(__u));
1418:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       if (__c != 0)
1419:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	return __c;
1420:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       return std::__tuple_cmp<_Cat>(__t, __u, index_sequence<_Idxs...>());
1421:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     }
1422:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1423:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template<typename... _Tps, typename... _Ups>
1424:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     constexpr
1425:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     common_comparison_category_t<__detail::__synth3way_t<_Tps, _Ups>...>
1426:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     operator<=>(const tuple<_Tps...>& __t, const tuple<_Ups...>& __u)
1427:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     {
1428:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       using _Cat
1429:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	= common_comparison_category_t<__detail::__synth3way_t<_Tps, _Ups>...>;
1430:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       return std::__tuple_cmp<_Cat>(__t, __u, index_sequence_for<_Tps...>());
1431:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     }
1432:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** #else
1433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template<typename... _TElements, typename... _UElements>
1434:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     constexpr bool
1435:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     operator<(const tuple<_TElements...>& __t,
1436:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	      const tuple<_UElements...>& __u)
1437:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     {
1438:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       static_assert(sizeof...(_TElements) == sizeof...(_UElements),
1439:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	  "tuple objects can only be compared if they have equal sizes.");
1440:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       using __compare = __tuple_compare<tuple<_TElements...>,
1441:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 					tuple<_UElements...>,
1442:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 					0, sizeof...(_TElements)>;
1443:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       return __compare::__less(__t, __u);
1444:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     }
1445:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1446:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template<typename... _TElements, typename... _UElements>
1447:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     constexpr bool
1448:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     operator!=(const tuple<_TElements...>& __t,
1449:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	       const tuple<_UElements...>& __u)
1450:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     { return !(__t == __u); }
1451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 271


1452:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template<typename... _TElements, typename... _UElements>
1453:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     constexpr bool
1454:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     operator>(const tuple<_TElements...>& __t,
1455:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	      const tuple<_UElements...>& __u)
1456:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     { return __u < __t; }
1457:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1458:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template<typename... _TElements, typename... _UElements>
1459:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     constexpr bool
1460:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     operator<=(const tuple<_TElements...>& __t,
1461:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	       const tuple<_UElements...>& __u)
1462:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     { return !(__u < __t); }
1463:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1464:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template<typename... _TElements, typename... _UElements>
1465:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     constexpr bool
1466:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     operator>=(const tuple<_TElements...>& __t,
1467:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	       const tuple<_UElements...>& __u)
1468:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     { return !(__t < __u); }
1469:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** #endif // three_way_comparison
1470:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1471:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   // NB: DR 705.
1472:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template<typename... _Elements>
1473:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     constexpr tuple<typename __decay_and_strip<_Elements>::__type...>
1474:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     make_tuple(_Elements&&... __args)
1475:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     {
1476:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       typedef tuple<typename __decay_and_strip<_Elements>::__type...>
1477:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	__result_type;
1478:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       return __result_type(std::forward<_Elements>(__args)...);
1479:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     }
1480:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1481:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
1482:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   // 2275. Why is forward_as_tuple not constexpr?
1483:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   /// std::forward_as_tuple
1484:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template<typename... _Elements>
1485:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     constexpr tuple<_Elements&&...>
1486:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     forward_as_tuple(_Elements&&... __args) noexcept
 3848              		.loc 26 1486 5 is_stmt 1 view .LVU910
 3849              	.LBB3818:
 3850              	.LBI3818:
 649:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	noexcept(__nothrow_constructible<_UElements...>())
 3851              		.loc 26 649 2 view .LVU911
 3852              	.LBB3819:
 3853              	.LBI3819:
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 3854              		.loc 19 76 5 view .LVU912
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 3855              		.loc 19 76 5 is_stmt 0 view .LVU913
 3856              	.LBE3819:
 3857              	.LBB3820:
 3858              	.LBI3820:
 363:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _Base(std::forward<_UHead>(__head)) { }
 3859              		.loc 26 363 19 is_stmt 1 view .LVU914
 3860              	.LBB3821:
 3861              	.LBI3821:
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 3862              		.loc 19 76 5 view .LVU915
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 3863              		.loc 19 76 5 is_stmt 0 view .LVU916
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 272


 3864              	.LBE3821:
 3865              	.LBB3822:
 3866              	.LBI3822:
 136:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _M_head_impl(std::forward<_UHead>(__h)) { }
 3867              		.loc 26 136 19 is_stmt 1 view .LVU917
 3868              	.LBB3823:
 3869              	.LBI3823:
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 3870              		.loc 19 76 5 view .LVU918
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 3871              		.loc 19 76 5 is_stmt 0 view .LVU919
 3872              	.LBE3823:
 3873              	.LBE3822:
 3874              	.LBE3820:
 3875              	.LBE3818:
 3876              	.LBE3817:
 3877              	.LBB3824:
 3878              	.LBI3824:
 270:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  : _M_h(__h),
 3879              		.loc 9 270 4 is_stmt 1 view .LVU920
 3880              	.LBB3825:
 3881              	.LBI3825:
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 3882              		.loc 19 76 5 view .LVU921
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 3883              		.loc 19 76 5 is_stmt 0 view .LVU922
 3884              	.LBE3825:
 3885              	.LBB3826:
 3886              	.LBI3826:
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 3887              		.loc 19 76 5 is_stmt 1 view .LVU923
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 3888              		.loc 19 76 5 is_stmt 0 view .LVU924
 3889              	.LBE3826:
 3890              	.LBB3827:
 3891              	.LBI3827:
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 3892              		.loc 19 76 5 is_stmt 1 view .LVU925
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 3893              		.loc 19 76 5 is_stmt 0 view .LVU926
 3894              	.LBE3827:
 3895              	.LBB3828:
 3896              	.LBI3828:
2029:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       -> __node_type*
 3897              		.loc 10 2029 7 is_stmt 1 view .LVU927
 3898              	.LBB3829:
 3899              	.LBB3830:
 3900              	.LBI3830:
 459:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 3901              		.loc 13 459 7 view .LVU928
 3902              	.LBB3831:
 3903              	.LBI3831:
 103:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 3904              		.loc 12 103 7 view .LVU929
 3905              	.LBB3832:
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 3906              		.loc 12 115 41 is_stmt 0 view .LVU930
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 273


 3907 003c 6020     		movs	r0, #96
 3908 003e FFF7FEFF 		bl	_Znwj
 3909              	.LVL196:
 3910              	.LBE3832:
 3911              	.LBE3831:
 3912              	.LBE3830:
 3913              	.LBB3835:
 3914              	.LBB3836:
 3915              	.LBB3837:
 3916              	.LBB3838:
 3917              	.LBB3839:
1487:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     { return tuple<_Elements&&...>(std::forward<_Elements>(__args)...); }
1488:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1489:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template<size_t, typename, typename, size_t>
1490:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     struct __make_tuple_impl;
1491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1492:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template<size_t _Idx, typename _Tuple, typename... _Tp, size_t _Nm>
1493:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     struct __make_tuple_impl<_Idx, tuple<_Tp...>, _Tuple, _Nm>
1494:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     : __make_tuple_impl<_Idx + 1,
1495:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 			tuple<_Tp..., __tuple_element_t<_Idx, _Tuple>>,
1496:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 			_Tuple, _Nm>
1497:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     { };
1498:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1499:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template<std::size_t _Nm, typename _Tuple, typename... _Tp>
1500:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     struct __make_tuple_impl<_Nm, tuple<_Tp...>, _Tuple, _Nm>
1501:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     {
1502:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       typedef tuple<_Tp...> __type;
1503:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     };
1504:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1505:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template<typename _Tuple>
1506:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     struct __do_make_tuple
1507:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     : __make_tuple_impl<0, tuple<>, _Tuple, std::tuple_size<_Tuple>::value>
1508:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     { };
1509:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1510:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   // Returns the std::tuple equivalent of a tuple-like type.
1511:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template<typename _Tuple>
1512:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     struct __make_tuple
1513:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     : public __do_make_tuple<__remove_cvref_t<_Tuple>>
1514:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     { };
1515:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1516:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   // Combines several std::tuple's into a single one.
1517:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template<typename...>
1518:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     struct __combine_tuples;
1519:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1520:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template<>
1521:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     struct __combine_tuples<>
1522:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     {
1523:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       typedef tuple<> __type;
1524:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     };
1525:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1526:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template<typename... _Ts>
1527:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     struct __combine_tuples<tuple<_Ts...>>
1528:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     {
1529:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       typedef tuple<_Ts...> __type;
1530:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     };
1531:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1532:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template<typename... _T1s, typename... _T2s, typename... _Rem>
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 274


1533:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     struct __combine_tuples<tuple<_T1s...>, tuple<_T2s...>, _Rem...>
1534:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     {
1535:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       typedef typename __combine_tuples<tuple<_T1s..., _T2s...>,
1536:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 					_Rem...>::__type __type;
1537:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     };
1538:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1539:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   // Computes the result type of tuple_cat given a set of tuple-like types.
1540:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template<typename... _Tpls>
1541:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     struct __tuple_cat_result
1542:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     {
1543:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       typedef typename __combine_tuples
1544:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****         <typename __make_tuple<_Tpls>::__type...>::__type __type;
1545:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     };
1546:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1547:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   // Helper to determine the index set for the first tuple-like
1548:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   // type of a given set.
1549:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template<typename...>
1550:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     struct __make_1st_indices;
1551:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1552:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template<>
1553:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     struct __make_1st_indices<>
1554:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     {
1555:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       typedef std::_Index_tuple<> __type;
1556:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     };
1557:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1558:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template<typename _Tp, typename... _Tpls>
1559:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     struct __make_1st_indices<_Tp, _Tpls...>
1560:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     {
1561:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       typedef typename std::_Build_index_tuple<std::tuple_size<
1562:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	typename std::remove_reference<_Tp>::type>::value>::__type __type;
1563:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     };
1564:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1565:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   // Performs the actual concatenation by step-wise expanding tuple-like
1566:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   // objects into the elements,  which are finally forwarded into the
1567:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   // result tuple.
1568:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template<typename _Ret, typename _Indices, typename... _Tpls>
1569:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     struct __tuple_concater;
1570:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1571:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template<typename _Ret, std::size_t... _Is, typename _Tp, typename... _Tpls>
1572:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     struct __tuple_concater<_Ret, std::_Index_tuple<_Is...>, _Tp, _Tpls...>
1573:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     {
1574:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename... _Us>
1575:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****         static constexpr _Ret
1576:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****         _S_do(_Tp&& __tp, _Tpls&&... __tps, _Us&&... __us)
1577:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****         {
1578:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	  typedef typename __make_1st_indices<_Tpls...>::__type __idx;
1579:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	  typedef __tuple_concater<_Ret, __idx, _Tpls...>      __next;
1580:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	  return __next::_S_do(std::forward<_Tpls>(__tps)...,
1581:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 			       std::forward<_Us>(__us)...,
1582:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 			       std::get<_Is>(std::forward<_Tp>(__tp))...);
1583:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	}
1584:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     };
1585:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1586:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template<typename _Ret>
1587:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     struct __tuple_concater<_Ret, std::_Index_tuple<>>
1588:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     {
1589:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       template<typename... _Us>
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 275


1590:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	static constexpr _Ret
1591:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	_S_do(_Us&&... __us)
1592:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****         {
1593:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	  return _Ret(std::forward<_Us>(__us)...);
1594:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	}
1595:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     };
1596:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1597:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   /// tuple_cat
1598:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template<typename... _Tpls, typename = typename
1599:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****            enable_if<__and_<__is_tuple_like<_Tpls>...>::value>::type>
1600:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     constexpr auto
1601:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     tuple_cat(_Tpls&&... __tpls)
1602:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     -> typename __tuple_cat_result<_Tpls...>::__type
1603:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     {
1604:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       typedef typename __tuple_cat_result<_Tpls...>::__type __ret;
1605:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       typedef typename __make_1st_indices<_Tpls...>::__type __idx;
1606:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       typedef __tuple_concater<__ret, __idx, _Tpls...> __concater;
1607:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       return __concater::_S_do(std::forward<_Tpls>(__tpls)...);
1608:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     }
1609:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1610:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
1611:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   // 2301. Why is tie not constexpr?
1612:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   /// tie
1613:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template<typename... _Elements>
1614:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     constexpr tuple<_Elements&...>
1615:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     tie(_Elements&... __args) noexcept
1616:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     { return tuple<_Elements&...>(__args...); }
1617:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1618:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   /// swap
1619:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template<typename... _Elements>
1620:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     _GLIBCXX20_CONSTEXPR
1621:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     inline
1622:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** #if __cplusplus > 201402L || !defined(__STRICT_ANSI__) // c++1z or gnu++11
1623:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     // Constrained free swap overload, see p0185r1
1624:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     typename enable_if<__and_<__is_swappable<_Elements>...>::value
1625:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       >::type
1626:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** #else
1627:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     void
1628:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** #endif
1629:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     swap(tuple<_Elements...>& __x, tuple<_Elements...>& __y)
1630:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     noexcept(noexcept(__x.swap(__y)))
1631:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     { __x.swap(__y); }
1632:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1633:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** #if __cplusplus > 201402L || !defined(__STRICT_ANSI__) // c++1z or gnu++11
1634:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template<typename... _Elements>
1635:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     _GLIBCXX20_CONSTEXPR
1636:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     typename enable_if<!__and_<__is_swappable<_Elements>...>::value>::type
1637:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     swap(tuple<_Elements...>&, tuple<_Elements...>&) = delete;
1638:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** #endif
1639:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1640:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   // A class (and instance) which can be used in 'tie' when an element
1641:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   // of a tuple is not required.
1642:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   // _GLIBCXX14_CONSTEXPR
1643:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   // 2933. PR for LWG 2773 could be clearer
1644:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   struct _Swallow_assign
1645:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   {
1646:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     template<class _Tp>
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 276


1647:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       _GLIBCXX14_CONSTEXPR const _Swallow_assign&
1648:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       operator=(const _Tp&) const
1649:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       { return *this; }
1650:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   };
1651:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1652:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
1653:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   // 2773. Making std::ignore constexpr
1654:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   _GLIBCXX17_INLINE constexpr _Swallow_assign ignore{};
1655:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1656:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   /// Partial specialization for tuples
1657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template<typename... _Types, typename _Alloc>
1658:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     struct uses_allocator<tuple<_Types...>, _Alloc> : true_type { };
1659:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1660:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   // See stl_pair.h...
1661:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   /** "piecewise construction" using a tuple of arguments for each member.
1662:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****    *
1663:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****    * @param __first Arguments for the first member of the pair.
1664:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****    * @param __second Arguments for the second member of the pair.
1665:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****    *
1666:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****    * The elements of each tuple will be used as the constructor arguments
1667:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****    * for the data members of the pair.
1668:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   */
1669:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template<class _T1, class _T2>
1670:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     template<typename... _Args1, typename... _Args2>
1671:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       _GLIBCXX20_CONSTEXPR
1672:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       inline
1673:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       pair<_T1, _T2>::
1674:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       pair(piecewise_construct_t,
1675:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	   tuple<_Args1...> __first, tuple<_Args2...> __second)
1676:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       : pair(__first, __second,
1677:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	     typename _Build_index_tuple<sizeof...(_Args1)>::__type(),
1678:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	     typename _Build_index_tuple<sizeof...(_Args2)>::__type())
1679:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       { }
1680:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
1681:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****   template<class _T1, class _T2>
1682:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     template<typename... _Args1, std::size_t... _Indexes1,
1683:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****              typename... _Args2, std::size_t... _Indexes2>
1684:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       _GLIBCXX20_CONSTEXPR inline
1685:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       pair<_T1, _T2>::
1686:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       pair(tuple<_Args1...>& __tuple1, tuple<_Args2...>& __tuple2,
1687:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	   _Index_tuple<_Indexes1...>, _Index_tuple<_Indexes2...>)
1688:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       : first(std::forward<_Args1>(std::get<_Indexes1>(__tuple1))...),
1689:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****         second(std::forward<_Args2>(std::get<_Indexes2>(__tuple2))...)
 3918              		.loc 26 1689 70 view .LVU931
 3919 0042 D8F80030 		ldr	r3, [r8]
 3920              	.LBE3839:
 3921              	.LBE3838:
 3922              	.LBE3837:
 3923              	.LBE3836:
 3924              	.LBE3835:
 3925              	.LBB3950:
 3926              	.LBB3951:
 3927              	.LBB3952:
 3928              	.LBB3953:
 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 3929              		.loc 10 218 41 view .LVU932
 3930 0046 4FF00008 		mov	r8, #0
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 277


 3931              	.LVL197:
 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 3932              		.loc 10 218 41 view .LVU933
 3933              	.LBE3953:
 3934              	.LBE3952:
 3935              	.LBE3951:
 3936              	.LBE3950:
 3937              	.LBB3959:
 3938              	.LBB3834:
 3939              	.LBB3833:
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 3940              		.loc 12 115 41 view .LVU934
 3941 004a 0446     		mov	r4, r0
 3942              	.LVL198:
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 3943              		.loc 12 115 41 view .LVU935
 3944              	.LBE3833:
 3945              	.LBE3834:
 3946              	.LBE3959:
 3947              	.LBE3829:
 3948              	.LBE3828:
 3949              	.LBE3824:
 3950              		.file 27 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
   1:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // The -*- C++ -*- dynamic memory management header.
   2:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
   3:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // Copyright (C) 1994-2020 Free Software Foundation, Inc.
   4:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
   5:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // This file is part of GCC.
   6:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** //
   7:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // GCC is free software; you can redistribute it and/or modify
   8:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // it under the terms of the GNU General Public License as published by
   9:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // the Free Software Foundation; either version 3, or (at your option)
  10:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // any later version.
  11:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // 
  12:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // GCC is distributed in the hope that it will be useful,
  13:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // GNU General Public License for more details.
  16:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // 
  17:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // Under Section 7 of GPL version 3, you are granted additional
  18:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // permissions described in the GCC Runtime Library Exception, version
  19:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // 3.1, as published by the Free Software Foundation.
  20:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  21:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // You should have received a copy of the GNU General Public License and
  22:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // a copy of the GCC Runtime Library Exception along with this program;
  23:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  24:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // <http://www.gnu.org/licenses/>.
  25:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  26:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** /** @file new
  27:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *  This is a Standard C++ Library header.
  28:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *
  29:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *  The header @c new defines several functions to manage dynamic memory and
  30:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *  handling memory allocation errors; see
  31:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *  https://gcc.gnu.org/onlinedocs/libstdc++/manual/dynamic_memory.html
  32:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *  for more.
  33:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  */
  34:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 278


  35:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #ifndef _NEW
  36:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #define _NEW
  37:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  38:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #pragma GCC system_header
  39:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  40:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #include <bits/c++config.h>
  41:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #include <exception>
  42:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  43:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #pragma GCC visibility push(default)
  44:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  45:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** extern "C++" {
  46:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  47:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** namespace std 
  48:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** {
  49:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   /**
  50:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****    *  @brief  Exception possibly thrown by @c new.
  51:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****    *  @ingroup exceptions
  52:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****    *
  53:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****    *  @c bad_alloc (or classes derived from it) is used to report allocation
  54:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****    *  errors from the throwing forms of @c new.  */
  55:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   class bad_alloc : public exception 
  56:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   {
  57:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   public:
  58:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     bad_alloc() throw() { }
  59:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  60:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #if __cplusplus >= 201103L
  61:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     bad_alloc(const bad_alloc&) = default;
  62:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     bad_alloc& operator=(const bad_alloc&) = default;
  63:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #endif
  64:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  65:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     // This declaration is not useless:
  66:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     // http://gcc.gnu.org/onlinedocs/gcc-3.0.2/gcc_6.html#SEC118
  67:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     virtual ~bad_alloc() throw();
  68:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  69:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     // See comment in eh_exception.cc.
  70:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     virtual const char* what() const throw();
  71:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   };
  72:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  73:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #if __cplusplus >= 201103L
  74:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   class bad_array_new_length : public bad_alloc
  75:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   {
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   public:
  77:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     bad_array_new_length() throw() { }
  78:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     // This declaration is not useless:
  80:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     // http://gcc.gnu.org/onlinedocs/gcc-3.0.2/gcc_6.html#SEC118
  81:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     virtual ~bad_array_new_length() throw();
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  83:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     // See comment in eh_exception.cc.
  84:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     virtual const char* what() const throw();
  85:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   };
  86:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #endif
  87:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  88:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #if __cpp_aligned_new
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   enum class align_val_t: size_t {};
  90:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #endif
  91:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 279


  92:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   struct nothrow_t
  93:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   {
  94:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #if __cplusplus >= 201103L
  95:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****     explicit nothrow_t() = default;
  96:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #endif
  97:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   };
  98:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
  99:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   extern const nothrow_t nothrow;
 100:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
 101:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   /** If you write your own error handler to be called by @c new, it must
 102:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****    *  be of this type.  */
 103:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   typedef void (*new_handler)();
 104:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
 105:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   /// Takes a replacement handler as the argument, returns the
 106:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   /// previous handler.
 107:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   new_handler set_new_handler(new_handler) throw();
 108:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
 109:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #if __cplusplus >= 201103L
 110:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   /// Return the current new handler.
 111:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   new_handler get_new_handler() noexcept;
 112:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #endif
 113:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** } // namespace std
 114:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** //@{
 116:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** /** These are replaceable signatures:
 117:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *  - normal single new and delete (no arguments, throw @c bad_alloc on error)
 118:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *  - normal array new and delete (same)
 119:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *  - @c nothrow single new and delete (take a @c nothrow argument, return
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *    @c NULL on error)
 121:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *  - @c nothrow array new and delete (same)
 122:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *
 123:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *  Placement new and delete signatures (take a memory address argument,
 124:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****  *  does nothing) may not be replaced by a user's program.
 125:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** */
 126:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new(std::size_t) _GLIBCXX_THROW (std::bad_alloc)
 127:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 128:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new[](std::size_t) _GLIBCXX_THROW (std::bad_alloc)
 129:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 130:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*) _GLIBCXX_USE_NOEXCEPT
 131:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 132:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*) _GLIBCXX_USE_NOEXCEPT
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 134:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #if __cpp_sized_deallocation
 135:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*, std::size_t) _GLIBCXX_USE_NOEXCEPT
 136:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 137:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*, std::size_t) _GLIBCXX_USE_NOEXCEPT
 138:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 139:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #endif
 140:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new(std::size_t, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 141:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__, __malloc__));
 142:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new[](std::size_t, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 143:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__, __malloc__));
 144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 145:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 146:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 148:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #if __cpp_aligned_new
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 280


 149:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new(std::size_t, std::align_val_t)
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 151:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new(std::size_t, std::align_val_t, const std::nothrow_t&)
 152:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__, __malloc__));
 153:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*, std::align_val_t)
 154:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 155:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*, std::align_val_t, const std::nothrow_t&)
 156:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 157:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new[](std::size_t, std::align_val_t)
 158:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   __attribute__((__externally_visible__));
 159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD void* operator new[](std::size_t, std::align_val_t, const std::nothrow_t&)
 160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__, __malloc__));
 161:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*, std::align_val_t)
 162:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 163:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*, std::align_val_t, const std::nothrow_t&)
 164:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 165:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #if __cpp_sized_deallocation
 166:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete(void*, std::size_t, std::align_val_t)
 167:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 168:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** void operator delete[](void*, std::size_t, std::align_val_t)
 169:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 170:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #endif // __cpp_sized_deallocation
 171:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** #endif // __cpp_aligned_new
 172:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** 
 173:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** // Default placement versions of operator new.
 174:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** _GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
 175:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\new **** { return __p; }
 3951              		.loc 27 175 3 is_stmt 1 view .LVU936
 3952              	.LBB3981:
 3953              	.LBB3975:
 3954              	.LBB3969:
 3955              	.LBB3960:
 3956              	.LBI3950:
 279:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 3957              		.loc 10 279 12 view .LVU937
 3958              	.LBB3957:
 3959              	.LBI3951:
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 3960              		.loc 10 229 12 view .LVU938
 3961              	.LBB3955:
 3962              	.LBI3952:
 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 3963              		.loc 10 218 5 view .LVU939
 3964              	.LBE3955:
 3965              	.LBE3957:
 3966              	.LBE3960:
 3967              	.LBB3961:
 3968              	.LBB3943:
 3969              	.LBB3931:
 3970              	.LBB3925:
 3971              	.LBB3919:
 3972              		.loc 26 1689 70 is_stmt 0 view .LVU940
 3973 004c 4360     		str	r3, [r0, #4]
 3974 004e 00F10803 		add	r3, r0, #8
 3975 0052 4146     		mov	r1, r8
 3976              	.LBE3919:
 3977              	.LBE3925:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 281


 3978              	.LBE3931:
 3979              	.LBE3943:
 3980              	.LBE3961:
 3981              	.LBB3962:
 3982              	.LBB3958:
 3983              	.LBB3956:
 3984              	.LBB3954:
 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 3985              		.loc 10 218 41 view .LVU941
 3986 0054 C0F80080 		str	r8, [r0]
 3987              	.LVL199:
 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 3988              		.loc 10 218 41 view .LVU942
 3989              	.LBE3954:
 3990              	.LBE3956:
 3991              	.LBE3958:
 3992              	.LBE3962:
 3993              	.LBB3963:
 3994              	.LBI3835:
 507:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 3995              		.loc 13 507 2 is_stmt 1 view .LVU943
 3996              	.LBB3944:
 3997              	.LBI3836:
 148:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 3998              		.loc 12 148 2 view .LVU944
 3999              	.LBB3932:
 4000              	.LBI3932:
 663:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 4001              		.loc 26 663 17 view .LVU945
 4002              	.LBB3933:
 4003              	.LBI3933:
 373:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       noexcept(is_nothrow_move_constructible<_Head>::value)
 4004              		.loc 26 373 7 view .LVU946
 4005              	.LBB3934:
 4006              	.LBI3934:
 349:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 4007              		.loc 26 349 7 view .LVU947
 349:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 
 4008              		.loc 26 349 7 is_stmt 0 view .LVU948
 4009              	.LBE3934:
 4010              	.LBB3935:
 4011              	.LBI3935:
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 4012              		.loc 19 76 5 is_stmt 1 view .LVU949
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 4013              		.loc 19 76 5 is_stmt 0 view .LVU950
 4014              	.LBE3935:
 4015              	.LBB3936:
 4016              	.LBI3936:
 136:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple **** 	: _M_head_impl(std::forward<_UHead>(__h)) { }
 4017              		.loc 26 136 19 is_stmt 1 view .LVU951
 4018              	.LBB3937:
 4019              	.LBI3937:
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 4020              		.loc 19 76 5 view .LVU952
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 4021              		.loc 19 76 5 is_stmt 0 view .LVU953
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 282


 4022              	.LBE3937:
 4023              	.LBE3936:
 4024              	.LBE3933:
 4025              	.LBE3932:
 4026              	.LBE3944:
 4027              	.LBE3963:
 4028              	.LBE3969:
 4029              	.LBE3975:
 4030              	.LBE3981:
 4031              		.loc 27 175 3 is_stmt 1 view .LVU954
 4032              	.LBB3982:
 4033              	.LBB3976:
 4034              	.LBB3970:
 4035              	.LBB3964:
 4036              	.LBB3945:
 4037              	.LBB3938:
 4038              	.LBI3837:
1673:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       pair(piecewise_construct_t,
 4039              		.loc 26 1673 7 view .LVU955
 4040              	.LBB3926:
 4041              	.LBI3838:
1685:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****       pair(tuple<_Args1...>& __tuple1, tuple<_Args2...>& __tuple2,
 4042              		.loc 26 1685 7 view .LVU956
 4043              	.LBB3920:
 4044              	.LBB3840:
 4045              	.LBI3840:
1294:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     { return std::__get_helper<__i>(__t); }
 4046              		.loc 26 1294 5 view .LVU957
1294:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\tuple ****     { return std::__get_helper<__i>(__t); }
 4047              		.loc 26 1294 5 is_stmt 0 view .LVU958
 4048              	.LBE3840:
 4049              	.LBB3841:
 4050              	.LBI3841:
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 4051              		.loc 19 76 5 is_stmt 1 view .LVU959
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 4052              		.loc 19 76 5 is_stmt 0 view .LVU960
 4053              	.LBE3841:
 4054              		.loc 26 1689 70 view .LVU961
 4055 0058 5822     		movs	r2, #88
 4056 005a 1846     		mov	r0, r3
 4057              	.LVL200:
 4058              		.loc 26 1689 70 view .LVU962
 4059 005c FFF7FEFF 		bl	memset
 4060              	.LVL201:
 4061 0060 0346     		mov	r3, r0
 4062              	.LVL202:
 4063              	.LBB3842:
 4064              	.LBI3842:
  37:src/parameter_controller.h **** 	std::string label;
 4065              		.loc 15 37 8 is_stmt 1 view .LVU963
 4066              	.LBB3843:
 4067              	.LBI3843:
 431:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(is_nothrow_default_constructible<_Alloc>::value)
 4068              		.loc 16 431 7 view .LVU964
 4069              	.LBB3844:
 4070              	.LBI3844:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 283


 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 4071              		.loc 16 190 7 view .LVU965
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 4072              		.loc 16 190 7 is_stmt 0 view .LVU966
 4073              	.LBE3844:
 4074              	.LBB3846:
 4075              	.LBI3846:
 144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 4076              		.loc 11 144 7 is_stmt 1 view .LVU967
 4077              	.LBB3847:
 4078              	.LBI3847:
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4079              		.loc 12 79 7 view .LVU968
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4080              		.loc 12 79 7 is_stmt 0 view .LVU969
 4081              	.LBE3847:
 4082              	.LBE3846:
 4083              	.LBB3848:
 4084              	.LBI3848:
 159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 4085              		.loc 16 159 2 is_stmt 1 view .LVU970
 4086              	.LBB3849:
 4087              	.LBB3850:
 4088              	.LBI3850:
 4089              		.loc 19 101 5 view .LVU971
 4090              		.loc 19 101 5 is_stmt 0 view .LVU972
 4091              	.LBE3850:
 4092              	.LBB3851:
 4093              	.LBI3851:
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 4094              		.loc 11 147 7 is_stmt 1 view .LVU973
 4095              	.LBB3852:
 4096              	.LBI3852:
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4097              		.loc 12 82 7 view .LVU974
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4098              		.loc 12 82 7 is_stmt 0 view .LVU975
 4099              	.LBE3852:
 4100              	.LBE3851:
 4101              	.LBE3849:
 4102              	.LBE3848:
 4103              	.LBE3843:
 4104              	.LBE3842:
 4105              	.LBE3920:
 4106              	.LBE3926:
 4107              	.LBE3938:
 4108              	.LBE3945:
 4109              	.LBE3964:
 4110              	.LBE3970:
 4111              	.LBE3976:
 4112              	.LBE3982:
 746:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __node._M_node = nullptr;
 4113              		.loc 10 746 30 view .LVU976
 4114 0062 2946     		mov	r1, r5
 4115              	.LBB3983:
 4116              	.LBB3977:
 4117              	.LBB3971:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 284


 4118              	.LBB3965:
 4119              	.LBB3946:
 4120              	.LBB3939:
 4121              	.LBB3927:
 4122              	.LBB3921:
 4123              	.LBB3915:
 4124              	.LBB3865:
 4125              	.LBB3866:
 4126              	.LBB3867:
 193:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 4127              		.loc 16 193 51 view .LVU977
 4128 0064 04F12805 		add	r5, r4, #40
 4129              	.LVL203:
 193:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 4130              		.loc 16 193 51 view .LVU978
 4131              	.LBE3867:
 4132              	.LBE3866:
 4133              	.LBE3865:
 4134              	.LBB3887:
 4135              	.LBB3854:
 4136              	.LBB3845:
 4137 0068 0833     		adds	r3, r3, #8
 4138              	.LBE3845:
 4139              	.LBE3854:
 4140              	.LBB3855:
 4141              	.LBB3856:
 4142              	.LBB3857:
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 4143              		.loc 17 322 14 view .LVU979
 4144 006a 84F81080 		strb	r8, [r4, #16]
 4145              	.LBE3857:
 4146              	.LBE3856:
 4147              	.LBE3855:
 4148              	.LBE3887:
 4149              	.LBB3888:
 4150              	.LBB3868:
 4151              	.LBB3869:
 4152              	.LBB3870:
 4153 006e 84F82880 		strb	r8, [r4, #40]
 4154              	.LBE3870:
 4155              	.LBE3869:
 4156              	.LBE3868:
 4157              	.LBE3888:
 4158              	.LBE3915:
 4159              	.LBE3921:
 4160              	.LBE3927:
 4161              	.LBE3939:
 4162              	.LBE3946:
 4163              	.LBE3965:
 4164              	.LBE3971:
 4165              	.LBE3977:
 4166              	.LBE3983:
 746:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __node._M_node = nullptr;
 4167              		.loc 10 746 30 view .LVU980
 4168 0072 3246     		mov	r2, r6
 4169              	.LBB3984:
 4170              	.LBB3978:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 285


 4171              	.LBB3972:
 4172              	.LBB3966:
 4173              	.LBB3947:
 4174              	.LBB3940:
 4175              	.LBB3928:
 4176              	.LBB3922:
 4177              	.LBB3916:
 4178              	.LBB3889:
 4179              	.LBB3861:
 4180              	.LBB3853:
 160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 4181              		.loc 16 160 46 view .LVU981
 4182 0074 A360     		str	r3, [r4, #8]
 4183              	.LVL204:
 160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 4184              		.loc 16 160 46 view .LVU982
 4185              	.LBE3853:
 4186              	.LBE3861:
 4187              	.LBB3862:
 4188              	.LBI3862:
 4189              		.loc 11 162 7 is_stmt 1 view .LVU983
 4190              	.LBB3863:
 4191              	.LBI3863:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4192              		.loc 12 89 7 view .LVU984
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4193              		.loc 12 89 7 is_stmt 0 view .LVU985
 4194              	.LBE3863:
 4195              	.LBE3862:
 4196              	.LBB3864:
 4197              	.LBI3855:
 214:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 4198              		.loc 16 214 7 is_stmt 1 view .LVU986
 4199              	.LBB3859:
 4200              	.LBI3859:
 182:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 4201              		.loc 16 182 7 view .LVU987
 182:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 4202              		.loc 16 182 7 is_stmt 0 view .LVU988
 4203              	.LBE3859:
 4204              	.LBB3860:
 4205              	.LBI3856:
 321:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 4206              		.loc 17 321 7 is_stmt 1 view .LVU989
 4207              	.LBB3858:
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 4208              		.loc 17 322 9 view .LVU990
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 4209              		.loc 17 322 9 is_stmt 0 view .LVU991
 4210              	.LBE3858:
 4211              	.LBE3860:
 4212              	.LBE3864:
 4213              	.LBE3889:
 4214              	.LBB3890:
 4215              	.LBI3865:
 431:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(is_nothrow_default_constructible<_Alloc>::value)
 4216              		.loc 16 431 7 is_stmt 1 view .LVU992
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 286


 4217              	.LBB3874:
 4218              	.LBI3866:
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 4219              		.loc 16 190 7 view .LVU993
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 4220              		.loc 16 190 7 is_stmt 0 view .LVU994
 4221              	.LBE3874:
 4222              	.LBB3875:
 4223              	.LBI3875:
 144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 4224              		.loc 11 144 7 is_stmt 1 view .LVU995
 4225              	.LBB3876:
 4226              	.LBI3876:
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4227              		.loc 12 79 7 view .LVU996
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4228              		.loc 12 79 7 is_stmt 0 view .LVU997
 4229              	.LBE3876:
 4230              	.LBE3875:
 4231              	.LBB3877:
 4232              	.LBI3877:
 159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 4233              		.loc 16 159 2 is_stmt 1 view .LVU998
 4234              	.LBB3878:
 4235              	.LBB3879:
 4236              	.LBI3879:
 4237              		.loc 19 101 5 view .LVU999
 4238              		.loc 19 101 5 is_stmt 0 view .LVU1000
 4239              	.LBE3879:
 4240              	.LBB3880:
 4241              	.LBI3880:
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 4242              		.loc 11 147 7 is_stmt 1 view .LVU1001
 4243              	.LBB3881:
 4244              	.LBI3881:
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4245              		.loc 12 82 7 view .LVU1002
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4246              		.loc 12 82 7 is_stmt 0 view .LVU1003
 4247              	.LBE3881:
 4248              	.LBE3880:
 4249              	.LBE3878:
 4250              	.LBE3877:
 4251              	.LBE3890:
 4252              	.LBE3916:
 4253              	.LBE3922:
 4254              	.LBE3928:
 4255              	.LBE3940:
 4256              	.LBE3947:
 4257              	.LBE3966:
 4258              	.LBE3972:
 4259              	.LBE3978:
 4260              	.LBE3984:
 746:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __node._M_node = nullptr;
 4261              		.loc 10 746 30 view .LVU1004
 4262 0076 0123     		movs	r3, #1
 4263              	.LBB3985:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 287


 4264              	.LBB3979:
 4265              	.LBB3973:
 4266              	.LBB3967:
 4267              	.LBB3948:
 4268              	.LBB3941:
 4269              	.LBB3929:
 4270              	.LBB3923:
 4271              	.LBB3917:
 4272              	.LBB3891:
 4273              	.LBB3892:
 4274              	.LBB3893:
 4275              	.LBB3894:
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 4276              		.loc 17 322 14 view .LVU1005
 4277 0078 84F84080 		strb	r8, [r4, #64]
 4278              	.LBE3894:
 4279              	.LBE3893:
 4280              	.LBE3892:
 4281              	.LBE3891:
 4282              	.LBE3917:
 4283              	.LBE3923:
 4284              	.LBE3929:
 4285              	.LBE3941:
 4286              	.LBE3948:
 4287              	.LBE3967:
 4288              	.LBE3973:
 4289              	.LBE3979:
 4290              	.LBE3985:
 746:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __node._M_node = nullptr;
 4291              		.loc 10 746 30 view .LVU1006
 4292 007c 3846     		mov	r0, r7
 4293 007e 0093     		str	r3, [sp]
 4294 0080 2346     		mov	r3, r4
 4295              	.LBB3986:
 4296              	.LBB3980:
 4297              	.LBB3974:
 4298              	.LBB3968:
 4299              	.LBB3949:
 4300              	.LBB3942:
 4301              	.LBB3930:
 4302              	.LBB3924:
 4303              	.LBB3918:
 4304              	.LBB3913:
 4305              	.LBB3883:
 4306              	.LBB3882:
 160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 4307              		.loc 16 160 46 view .LVU1007
 4308 0082 2562     		str	r5, [r4, #32]
 4309              	.LVL205:
 160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 4310              		.loc 16 160 46 view .LVU1008
 4311              	.LBE3882:
 4312              	.LBE3883:
 4313              	.LBB3884:
 4314              	.LBI3884:
 4315              		.loc 11 162 7 is_stmt 1 view .LVU1009
 4316              	.LBB3885:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 288


 4317              	.LBI3885:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4318              		.loc 12 89 7 view .LVU1010
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4319              		.loc 12 89 7 is_stmt 0 view .LVU1011
 4320              	.LBE3885:
 4321              	.LBE3884:
 4322              	.LBB3886:
 4323              	.LBI3868:
 214:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 4324              		.loc 16 214 7 is_stmt 1 view .LVU1012
 4325              	.LBB3872:
 4326              	.LBI3872:
 182:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 4327              		.loc 16 182 7 view .LVU1013
 182:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 4328              		.loc 16 182 7 is_stmt 0 view .LVU1014
 4329              	.LBE3872:
 4330              	.LBB3873:
 4331              	.LBI3869:
 321:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 4332              		.loc 17 321 7 is_stmt 1 view .LVU1015
 4333              	.LBB3871:
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 4334              		.loc 17 322 9 view .LVU1016
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 4335              		.loc 17 322 9 is_stmt 0 view .LVU1017
 4336              	.LBE3871:
 4337              	.LBE3873:
 4338              	.LBE3886:
 4339              	.LBE3913:
 4340              	.LBB3914:
 4341              	.LBI3891:
 431:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(is_nothrow_default_constructible<_Alloc>::value)
 4342              		.loc 16 431 7 is_stmt 1 view .LVU1018
 4343              	.LBB3898:
 4344              	.LBI3898:
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 4345              		.loc 16 190 7 view .LVU1019
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 4346              		.loc 16 190 7 is_stmt 0 view .LVU1020
 4347              	.LBE3898:
 4348              	.LBB3900:
 4349              	.LBI3900:
 144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 4350              		.loc 11 144 7 is_stmt 1 view .LVU1021
 4351              	.LBB3901:
 4352              	.LBI3901:
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4353              		.loc 12 79 7 view .LVU1022
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4354              		.loc 12 79 7 is_stmt 0 view .LVU1023
 4355              	.LBE3901:
 4356              	.LBE3900:
 4357              	.LBB3902:
 4358              	.LBI3902:
 159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 289


 4359              		.loc 16 159 2 is_stmt 1 view .LVU1024
 4360              	.LBB3903:
 4361              	.LBB3904:
 4362              	.LBI3904:
 4363              		.loc 19 101 5 view .LVU1025
 4364              		.loc 19 101 5 is_stmt 0 view .LVU1026
 4365              	.LBE3904:
 4366              	.LBB3905:
 4367              	.LBI3905:
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 4368              		.loc 11 147 7 is_stmt 1 view .LVU1027
 4369              	.LBB3906:
 4370              	.LBI3906:
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4371              		.loc 12 82 7 view .LVU1028
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4372              		.loc 12 82 7 is_stmt 0 view .LVU1029
 4373              	.LBE3906:
 4374              	.LBE3905:
 4375              	.LBE3903:
 4376              	.LBE3902:
 4377              	.LBB3908:
 4378              	.LBB3899:
 193:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 4379              		.loc 16 193 51 view .LVU1030
 4380 0084 04F14005 		add	r5, r4, #64
 4381              	.LVL206:
 193:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 4382              		.loc 16 193 51 view .LVU1031
 4383              	.LBE3899:
 4384              	.LBE3908:
 4385              	.LBB3909:
 4386              	.LBB3907:
 160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 4387              		.loc 16 160 46 view .LVU1032
 4388 0088 A563     		str	r5, [r4, #56]
 4389              	.LVL207:
 160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 4390              		.loc 16 160 46 view .LVU1033
 4391              	.LBE3907:
 4392              	.LBE3909:
 4393              	.LBB3910:
 4394              	.LBI3910:
 4395              		.loc 11 162 7 is_stmt 1 view .LVU1034
 4396              	.LBB3911:
 4397              	.LBI3911:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4398              		.loc 12 89 7 view .LVU1035
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4399              		.loc 12 89 7 is_stmt 0 view .LVU1036
 4400              	.LBE3911:
 4401              	.LBE3910:
 4402              	.LBB3912:
 4403              	.LBI3892:
 214:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 4404              		.loc 16 214 7 is_stmt 1 view .LVU1037
 4405              	.LBB3896:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 290


 4406              	.LBI3896:
 182:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 4407              		.loc 16 182 7 view .LVU1038
 182:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 4408              		.loc 16 182 7 is_stmt 0 view .LVU1039
 4409              	.LBE3896:
 4410              	.LBB3897:
 4411              	.LBI3893:
 321:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 4412              		.loc 17 321 7 is_stmt 1 view .LVU1040
 4413              	.LBB3895:
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 4414              		.loc 17 322 9 view .LVU1041
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 4415              		.loc 17 322 9 is_stmt 0 view .LVU1042
 4416              	.LBE3895:
 4417              	.LBE3897:
 4418              	.LBE3912:
 4419              	.LBE3914:
 4420              	.LBE3918:
 4421              	.LBE3924:
 4422              	.LBE3930:
 4423              	.LBE3942:
 4424              	.LBE3949:
 4425              	.LBE3968:
 4426              	.LBE3974:
 4427              	.LBE3980:
 4428              	.LBE3986:
 746:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       __node._M_node = nullptr;
 4429              		.loc 10 746 30 view .LVU1043
 4430 008a FFF7FEFF 		bl	_ZNSt10_HashtableIiSt4pairIKi5paramESaIS3_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS5
 4431              	.LVL208:
 4432              	.LBB3987:
 4433              	.LBI3987:
 348:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return this->_M_cur->_M_valptr(); }
 4434              		.loc 10 348 7 is_stmt 1 view .LVU1044
 348:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return this->_M_cur->_M_valptr(); }
 4435              		.loc 10 348 7 is_stmt 0 view .LVU1045
 4436              	.LBE3987:
 748:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
 4437              		.loc 10 748 21 view .LVU1046
 4438 008e 0830     		adds	r0, r0, #8
 4439              	.LVL209:
 4440              	.LBB3988:
 4441              	.LBI3988:
 276:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 4442              		.loc 9 276 2 is_stmt 1 view .LVU1047
 276:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 4443              		.loc 9 276 2 is_stmt 0 view .LVU1048
 4444              	.LBE3988:
 749:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 4445              		.loc 10 749 5 view .LVU1049
 4446 0090 02B0     		add	sp, sp, #8
 4447              		.cfi_remember_state
 4448              		.cfi_def_cfa_offset 24
 4449              		@ sp needed
 4450 0092 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 291


 4451              	.LVL210:
 4452              	.L136:
 4453              		.cfi_restore_state
 4454              	.LBB3989:
 4455              	.LBB3814:
 4456              	.LBB3812:
 695:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return nullptr;
 4457              		.loc 9 695 55 view .LVU1050
 4458 0096 0868     		ldr	r0, [r1]
 4459              	.LVL211:
 695:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return nullptr;
 4460              		.loc 9 695 55 view .LVU1051
 4461              	.LBE3812:
 4462              	.LBE3814:
 736:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return __node->_M_v().second;
 4463              		.loc 10 736 7 view .LVU1052
 4464 0098 0028     		cmp	r0, #0
 4465 009a CFD0     		beq	.L135
 4466              	.LVL212:
 736:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	return __node->_M_v().second;
 4467              		.loc 10 736 7 view .LVU1053
 4468              	.LBE3989:
 4469              	.LBB3990:
 348:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return this->_M_cur->_M_valptr(); }
 4470              		.loc 10 348 7 is_stmt 1 view .LVU1054
 348:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       { return this->_M_cur->_M_valptr(); }
 4471              		.loc 10 348 7 is_stmt 0 view .LVU1055
 4472              	.LBE3990:
 748:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
 4473              		.loc 10 748 21 view .LVU1056
 4474 009c 0830     		adds	r0, r0, #8
 4475              	.LVL213:
 4476              	.LBB3991:
 276:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 4477              		.loc 9 276 2 is_stmt 1 view .LVU1057
 276:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 4478              		.loc 9 276 2 is_stmt 0 view .LVU1058
 4479              	.LBE3991:
 749:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 4480              		.loc 10 749 5 view .LVU1059
 4481 009e 02B0     		add	sp, sp, #8
 4482              		.cfi_def_cfa_offset 24
 4483              		@ sp needed
 4484 00a0 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 749:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 4485              		.loc 10 749 5 view .LVU1060
 4486              		.cfi_endproc
 4487              	.LFE6013:
 4489              		.section	.rodata._ZNSt6vectorImSaImEE17_M_realloc_insertIJRKmEEEvN9__gnu_cxx17__normal_iteratorIPm
 4490              		.align	2
 4491              	.LC4:
 4492 0000 76656374 		.ascii	"vector::_M_realloc_insert\000"
 4492      6F723A3A 
 4492      5F4D5F72 
 4492      65616C6C 
 4492      6F635F69 
 4493              		.section	.text._ZNSt6vectorImSaImEE17_M_realloc_insertIJRKmEEEvN9__gnu_cxx17__normal_iteratorIPmS1
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 292


 4494              		.align	1
 4495              		.p2align 2,,3
 4496              		.weak	_ZNSt6vectorImSaImEE17_M_realloc_insertIJRKmEEEvN9__gnu_cxx17__normal_iteratorIPmS1_EEDpOT_
 4497              		.syntax unified
 4498              		.thumb
 4499              		.thumb_func
 4500              		.fpu fpv5-d16
 4502              	_ZNSt6vectorImSaImEE17_M_realloc_insertIJRKmEEEvN9__gnu_cxx17__normal_iteratorIPmS1_EEDpOT_:
 4503              	.LVL214:
 4504              	.LFB6039:
 4505              		.file 28 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
   1:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // Vector implementation (out of line) -*- C++ -*-
   2:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
   3:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** //
   5:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // software; you can redistribute it and/or modify it under the
   7:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // terms of the GNU General Public License as published by the
   8:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // any later version.
  10:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
  11:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // This library is distributed in the hope that it will be useful,
  12:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // GNU General Public License for more details.
  15:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
  16:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // 3.1, as published by the Free Software Foundation.
  19:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
  20:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // You should have received a copy of the GNU General Public License and
  21:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** // <http://www.gnu.org/licenses/>.
  24:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
  25:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** /*
  26:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  *
  27:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * Copyright (c) 1994
  28:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * Hewlett-Packard Company
  29:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  *
  30:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * provided that the above copyright notice appear in all copies and
  33:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * that both that copyright notice and this permission notice appear
  34:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * representations about the suitability of this software for any
  36:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  *
  38:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  *
  39:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * Copyright (c) 1996
  40:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  *
  42:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * provided that the above copyright notice appear in all copies and
  45:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * that both that copyright notice and this permission notice appear
  46:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * in supporting documentation.  Silicon Graphics makes no
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 293


  47:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * representations about the suitability of this  software for any
  48:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  */
  50:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
  51:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** /** @file bits/vector.tcc
  52:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  *  This is an internal header file, included by other library headers.
  53:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  *  Do not attempt to use it directly. @headername{vector}
  54:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****  */
  55:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
  56:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #ifndef _VECTOR_TCC
  57:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #define _VECTOR_TCC 1
  58:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
  59:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** namespace std _GLIBCXX_VISIBILITY(default)
  60:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** {
  61:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  62:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  63:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
  64:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
  65:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     void
  66:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
  67:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     reserve(size_type __n)
  68:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
  69:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (__n > this->max_size())
  70:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	__throw_length_error(__N("vector::reserve"));
  71:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (this->capacity() < __n)
  72:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
  73:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  const size_type __old_size = size();
  74:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  pointer __tmp;
  75:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if _GLIBCXX17_CONSTEXPR (_S_use_relocate())
  77:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
  78:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      __tmp = this->_M_allocate(__n);
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
  80:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			  __tmp, _M_get_Tp_allocator());
  81:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  else
  83:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
  84:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
  85:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      __tmp = _M_allocate_and_copy(__n,
  86:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		_GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(this->_M_impl._M_start),
  87:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		_GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(this->_M_impl._M_finish));
  88:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    _M_get_Tp_allocator());
  90:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
  91:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _GLIBCXX_ASAN_ANNOTATE_REINIT;
  92:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_deallocate(this->_M_impl._M_start,
  93:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			this->_M_impl._M_end_of_storage
  94:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			- this->_M_impl._M_start);
  95:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  this->_M_impl._M_start = __tmp;
  96:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  this->_M_impl._M_finish = __tmp + __old_size;
  97:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
  98:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
  99:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 100:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 101:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 102:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 103:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     template<typename... _Args>
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 294


 104:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 105:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       typename vector<_Tp, _Alloc>::reference
 106:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 107:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       void
 108:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 109:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       vector<_Tp, _Alloc>::
 110:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       emplace_back(_Args&&... __args)
 111:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       {
 112:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 113:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 114:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 116:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				     std::forward<_Args>(__args)...);
 117:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    ++this->_M_impl._M_finish;
 118:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 119:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  }
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	else
 121:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
 122:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus > 201402L
 123:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	return back();
 124:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 125:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       }
 126:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 127:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 128:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 129:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     typename vector<_Tp, _Alloc>::iterator
 130:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 131:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 132:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     insert(const_iterator __position, const value_type& __x)
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 134:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     insert(iterator __position, const value_type& __x)
 135:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 136:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 137:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       const size_type __n = __position - begin();
 138:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 139:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	if (__position == end())
 140:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 141:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
 142:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 143:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				     __x);
 144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    ++this->_M_impl._M_finish;
 145:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 146:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  }
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	else
 148:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 149:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    const auto __pos = begin() + (__position - cbegin());
 151:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    // __x could be an existing element of this vector, so make a
 152:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    // copy of it before _M_insert_aux moves elements around.
 153:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _Temporary_value __x_copy(this, __x);
 154:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _M_insert_aux(__pos, std::move(__x_copy._M_val()));
 155:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 156:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _M_insert_aux(__position, __x);
 157:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 158:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  }
 159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       else
 160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 295


 161:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	_M_realloc_insert(begin() + (__position - cbegin()), __x);
 162:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 163:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	_M_realloc_insert(__position, __x);
 164:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 165:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 166:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       return iterator(this->_M_impl._M_start + __n);
 167:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 168:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 169:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 170:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     typename vector<_Tp, _Alloc>::iterator
 171:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 172:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     _M_erase(iterator __position)
 173:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 174:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (__position + 1 != end())
 175:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	_GLIBCXX_MOVE3(__position + 1, end(), __position);
 176:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       --this->_M_impl._M_finish;
 177:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _Alloc_traits::destroy(this->_M_impl, this->_M_impl._M_finish);
 178:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _GLIBCXX_ASAN_ANNOTATE_SHRINK(1);
 179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       return __position;
 180:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 181:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 182:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     typename vector<_Tp, _Alloc>::iterator
 184:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 185:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     _M_erase(iterator __first, iterator __last)
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (__first != __last)
 188:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
 189:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if (__last != end())
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_MOVE3(__last, end(), __first);
 191:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_erase_at_end(__first.base() + (end() - __last));
 192:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
 193:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       return __first;
 194:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 195:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 196:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 197:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>&
 198:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 199:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     operator=(const vector<_Tp, _Alloc>& __x)
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 201:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (&__x != this)
 202:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
 203:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _GLIBCXX_ASAN_ANNOTATE_REINIT;
 204:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 205:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if (_Alloc_traits::_S_propagate_on_copy_assign())
 206:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 207:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      if (!_Alloc_traits::_S_always_equal()
 208:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	          && _M_get_Tp_allocator() != __x._M_get_Tp_allocator())
 209:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	        {
 210:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  // replacement allocator cannot free existing storage
 211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  this->clear();
 212:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  _M_deallocate(this->_M_impl._M_start,
 213:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				this->_M_impl._M_end_of_storage
 214:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				- this->_M_impl._M_start);
 215:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  this->_M_impl._M_start = nullptr;
 216:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  this->_M_impl._M_finish = nullptr;
 217:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		  this->_M_impl._M_end_of_storage = nullptr;
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 296


 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		}
 219:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      std::__alloc_on_copy(_M_get_Tp_allocator(),
 220:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				   __x._M_get_Tp_allocator());
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 222:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 223:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  const size_type __xlen = __x.size();
 224:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if (__xlen > capacity())
 225:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 226:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      pointer __tmp = _M_allocate_and_copy(__xlen, __x.begin(),
 227:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 						   __x.end());
 228:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    _M_get_Tp_allocator());
 230:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _M_deallocate(this->_M_impl._M_start,
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    this->_M_impl._M_end_of_storage
 232:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    - this->_M_impl._M_start);
 233:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      this->_M_impl._M_start = __tmp;
 234:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __xlen;
 235:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  else if (size() >= __xlen)
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 238:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      std::_Destroy(std::copy(__x.begin(), __x.end(), begin()),
 239:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			    end(), _M_get_Tp_allocator());
 240:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 241:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  else
 242:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 243:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      std::copy(__x._M_impl._M_start, __x._M_impl._M_start + size(),
 244:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			this->_M_impl._M_start);
 245:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      std::__uninitialized_copy_a(__x._M_impl._M_start + size(),
 246:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					  __x._M_impl._M_finish,
 247:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					  this->_M_impl._M_finish,
 248:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					  _M_get_Tp_allocator());
 249:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 250:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  this->_M_impl._M_finish = this->_M_impl._M_start + __xlen;
 251:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
 252:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       return *this;
 253:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 254:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 255:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 256:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     void
 257:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 258:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     _M_fill_assign(size_t __n, const value_type& __val)
 259:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 260:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (__n > capacity())
 261:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
 262:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  vector __tmp(__n, __val, _M_get_Tp_allocator());
 263:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  __tmp._M_impl._M_swap_data(this->_M_impl);
 264:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
 265:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       else if (__n > size())
 266:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
 267:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  std::fill(begin(), end(), __val);
 268:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  const size_type __add = __n - size();
 269:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _GLIBCXX_ASAN_ANNOTATE_GROW(__add);
 270:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  this->_M_impl._M_finish =
 271:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    std::__uninitialized_fill_n_a(this->_M_impl._M_finish,
 272:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					  __add, __val, _M_get_Tp_allocator());
 273:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _GLIBCXX_ASAN_ANNOTATE_GREW(__add);
 274:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 297


 275:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       else
 276:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****         _M_erase_at_end(std::fill_n(this->_M_impl._M_start, __n, __val));
 277:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 278:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 279:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 280:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     template<typename _InputIterator>
 281:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       void
 282:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       vector<_Tp, _Alloc>::
 283:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_assign_aux(_InputIterator __first, _InputIterator __last,
 284:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    std::input_iterator_tag)
 285:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       {
 286:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	pointer __cur(this->_M_impl._M_start);
 287:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	for (; __first != __last && __cur != this->_M_impl._M_finish;
 288:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	     ++__cur, (void)++__first)
 289:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  *__cur = *__first;
 290:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	if (__first == __last)
 291:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_erase_at_end(__cur);
 292:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	else
 293:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_range_insert(end(), __first, __last,
 294:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			  std::__iterator_category(__first));
 295:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       }
 296:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 297:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 298:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     template<typename _ForwardIterator>
 299:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       void
 300:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       vector<_Tp, _Alloc>::
 301:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_assign_aux(_ForwardIterator __first, _ForwardIterator __last,
 302:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    std::forward_iterator_tag)
 303:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       {
 304:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	const size_type __len = std::distance(__first, __last);
 305:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 306:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	if (__len > capacity())
 307:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 308:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _S_check_init_len(__len, _M_get_Tp_allocator());
 309:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    pointer __tmp(_M_allocate_and_copy(__len, __first, __last));
 310:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 311:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			  _M_get_Tp_allocator());
 312:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_REINIT;
 313:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _M_deallocate(this->_M_impl._M_start,
 314:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			  this->_M_impl._M_end_of_storage
 315:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			  - this->_M_impl._M_start);
 316:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    this->_M_impl._M_start = __tmp;
 317:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    this->_M_impl._M_finish = this->_M_impl._M_start + __len;
 318:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    this->_M_impl._M_end_of_storage = this->_M_impl._M_finish;
 319:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  }
 320:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	else if (size() >= __len)
 321:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_erase_at_end(std::copy(__first, __last, this->_M_impl._M_start));
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	else
 323:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 324:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _ForwardIterator __mid = __first;
 325:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    std::advance(__mid, size());
 326:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    std::copy(__first, __mid, this->_M_impl._M_start);
 327:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    const size_type __attribute__((__unused__)) __n = __len - size();
 328:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GROW(__n);
 329:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    this->_M_impl._M_finish =
 330:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      std::__uninitialized_copy_a(__mid, __last,
 331:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					  this->_M_impl._M_finish,
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 298


 332:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					  _M_get_Tp_allocator());
 333:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(__n);
 334:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  }
 335:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       }
 336:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 337:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 338:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 339:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     auto
 340:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 341:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     _M_insert_rval(const_iterator __position, value_type&& __v) -> iterator
 342:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 343:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       const auto __n = __position - cbegin();
 344:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 345:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	if (__position == cend())
 346:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  {
 347:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
 348:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 349:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				     std::move(__v));
 350:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    ++this->_M_impl._M_finish;
 351:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 352:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  }
 353:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	else
 354:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_insert_aux(begin() + __n, std::move(__v));
 355:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       else
 356:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	_M_realloc_insert(begin() + __n, std::move(__v));
 357:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 358:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       return iterator(this->_M_impl._M_start + __n);
 359:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 360:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 361:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 362:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     template<typename... _Args>
 363:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       auto
 364:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       vector<_Tp, _Alloc>::
 365:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_emplace_aux(const_iterator __position, _Args&&... __args)
 366:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       -> iterator
 367:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       {
 368:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	const auto __n = __position - cbegin();
 369:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 370:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if (__position == cend())
 371:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 372:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _GLIBCXX_ASAN_ANNOTATE_GROW(1);
 373:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 374:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				       std::forward<_Args>(__args)...);
 375:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      ++this->_M_impl._M_finish;
 376:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 377:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 378:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  else
 379:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 380:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      // We need to construct a temporary because something in __args...
 381:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      // could alias one of the elements of the container and so we
 382:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      // need to use it before _M_insert_aux moves elements around.
 383:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _Temporary_value __tmp(this, std::forward<_Args>(__args)...);
 384:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      _M_insert_aux(begin() + __n, std::move(__tmp._M_val()));
 385:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 386:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	else
 387:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_realloc_insert(begin() + __n, std::forward<_Args>(__args)...);
 388:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 299


 389:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	return iterator(this->_M_impl._M_start + __n);
 390:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       }
 391:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 392:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 393:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     template<typename _Arg>
 394:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       void
 395:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       vector<_Tp, _Alloc>::
 396:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_insert_aux(iterator __position, _Arg&& __arg)
 397:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 398:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 399:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     void
 400:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 401:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     _M_insert_aux(iterator __position, const _Tp& __x)
 402:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 403:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 404:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _GLIBCXX_ASAN_ANNOTATE_GROW(1);
 405:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 406:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			       _GLIBCXX_MOVE(*(this->_M_impl._M_finish - 1)));
 407:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       ++this->_M_impl._M_finish;
 408:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 409:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus < 201103L
 410:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _Tp __x_copy = __x;
 411:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 412:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _GLIBCXX_MOVE_BACKWARD3(__position.base(),
 413:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			      this->_M_impl._M_finish - 2,
 414:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 			      this->_M_impl._M_finish - 1);
 415:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus < 201103L
 416:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       *__position = __x_copy;
 417:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 418:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       *__position = std::forward<_Arg>(__arg);
 419:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 420:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 421:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 422:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 423:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 424:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     template<typename... _Args>
 425:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       void
 426:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       vector<_Tp, _Alloc>::
 4506              		.loc 28 426 7 is_stmt 1 view -0
 4507              		.cfi_startproc
 4508              		@ args = 0, pretend = 0, frame = 0
 4509              		@ frame_needed = 0, uses_anonymous_args = 0
 4510              		.loc 28 426 7 is_stmt 0 view .LVU1062
 4511 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4512              		.cfi_def_cfa_offset 40
 4513              		.cfi_offset 3, -40
 4514              		.cfi_offset 4, -36
 4515              		.cfi_offset 5, -32
 4516              		.cfi_offset 6, -28
 4517              		.cfi_offset 7, -24
 4518              		.cfi_offset 8, -20
 4519              		.cfi_offset 9, -16
 4520              		.cfi_offset 10, -12
 4521              		.cfi_offset 11, -8
 4522              		.cfi_offset 14, -4
 4523 0004 D0E90089 		ldrd	r8, r9, [r0]
 4524              		.loc 28 426 7 view .LVU1063
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 300


 4525 0008 0F46     		mov	r7, r1
 4526              	.LVL215:
 4527              	.LBB4029:
 4528              	.LBI4029:
 4529              		.file 29 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
   1:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // Vector implementation -*- C++ -*-
   2:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
   3:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** //
   5:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // software; you can redistribute it and/or modify it under the
   7:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // terms of the GNU General Public License as published by the
   8:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // any later version.
  10:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  11:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // This library is distributed in the hope that it will be useful,
  12:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // GNU General Public License for more details.
  15:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  16:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  20:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // You should have received a copy of the GNU General Public License and
  21:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** // <http://www.gnu.org/licenses/>.
  24:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  25:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** /*
  26:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  27:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Copyright (c) 1994
  28:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Hewlett-Packard Company
  29:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  30:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * that both that copyright notice and this permission notice appear
  34:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * representations about the suitability of this software for any
  36:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  38:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  39:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Copyright (c) 1996
  40:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *
  42:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * that both that copyright notice and this permission notice appear
  46:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * representations about the suitability of this  software for any
  48:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  */
  50:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  51:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** /** @file bits/stl_vector.h
  52:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *  This is an internal header file, included by other library headers.
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 301


  53:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  *  Do not attempt to use it directly. @headername{vector}
  54:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****  */
  55:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  56:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #ifndef _STL_VECTOR_H
  57:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _STL_VECTOR_H 1
  58:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  59:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <bits/stl_iterator_base_funcs.h>
  60:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <bits/functexcept.h>
  61:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <bits/concept_check.h>
  62:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
  63:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <initializer_list>
  64:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
  65:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus > 201703L
  66:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # include <compare>
  67:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
  68:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  69:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #include <debug/assertions.h>
  70:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  71:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if _GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR
  72:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** extern "C" void
  73:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** __sanitizer_annotate_contiguous_container(const void*, const void*,
  74:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  const void*, const void*);
  75:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  77:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** namespace std _GLIBCXX_VISIBILITY(default)
  78:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** {
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  80:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  81:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   /// See bits/stl_deque.h's _Deque_base for an explanation.
  83:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   template<typename _Tp, typename _Alloc>
  84:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     struct _Vector_base
  85:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     {
  86:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  87:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	rebind<_Tp>::other _Tp_alloc_type;
  88:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>::pointer
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        	pointer;
  90:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  91:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       struct _Vector_impl_data
  92:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
  93:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	pointer _M_start;
  94:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	pointer _M_finish;
  95:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	pointer _M_end_of_storage;
  96:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
  97:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl_data() _GLIBCXX_NOEXCEPT
  98:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
  99:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 100:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 101:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 102:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl_data(_Vector_impl_data&& __x) noexcept
 103:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(__x._M_start), _M_finish(__x._M_finish),
 104:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_end_of_storage(__x._M_end_of_storage)
 105:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 106:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 107:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 108:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
 109:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_copy_data(_Vector_impl_data const& __x) _GLIBCXX_NOEXCEPT
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 302


 110:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 111:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_start = __x._M_start;
 112:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_finish = __x._M_finish;
 113:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_end_of_storage = __x._M_end_of_storage;
 114:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 116:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
 117:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_swap_data(_Vector_impl_data& __x) _GLIBCXX_NOEXCEPT
 118:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 119:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // Do not use std::swap(_M_start, __x._M_start), etc as it loses
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // information used by TBAA.
 121:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Vector_impl_data __tmp;
 122:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __tmp._M_copy_data(*this);
 123:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_copy_data(__x);
 124:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __x._M_copy_data(__tmp);
 125:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 126:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       };
 127:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 128:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       struct _Vector_impl
 129:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 130:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 131:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 132:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    is_nothrow_default_constructible<_Tp_alloc_type>::value)
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type()
 134:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 135:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 136:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
 137:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(__a)
 138:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 139:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 140:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 141:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// Not defaulted, to enforce noexcept(true) even when
 142:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// !is_nothrow_move_constructible<_Tp_alloc_type>.
 143:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl(_Vector_impl&& __x) noexcept
 144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(std::move(__x)), _Vector_impl_data(std::move(__x))
 145:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 146:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl(_Tp_alloc_type&& __a) noexcept
 148:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(std::move(__a))
 149:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 151:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Vector_impl(_Tp_alloc_type&& __a, _Vector_impl&& __rv) noexcept
 152:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Tp_alloc_type(std::move(__a)), _Vector_impl_data(std::move(__rv))
 153:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 154:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 155:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 156:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if _GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR
 157:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	template<typename = _Tp_alloc_type>
 158:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  struct _Asan
 159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>
 161:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      ::size_type size_type;
 162:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 163:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void _S_shrink(_Vector_impl&, size_type) { }
 164:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void _S_on_dealloc(_Vector_impl&) { }
 165:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 166:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    typedef _Vector_impl& _Reinit;
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 303


 167:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 168:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    struct _Grow
 169:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 170:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Grow(_Vector_impl&, size_type) { }
 171:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      void _M_grew(size_type) { }
 172:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    };
 173:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  };
 174:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 175:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// Enable ASan annotations for memory obtained from std::allocator.
 176:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	template<typename _Up>
 177:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  struct _Asan<allocator<_Up> >
 178:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>
 180:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      ::size_type size_type;
 181:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 182:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    // Adjust ASan annotation for [_M_start, _M_end_of_storage) to
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    // mark end of valid region as __curr instead of __prev.
 184:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void
 185:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _S_adjust(_Vector_impl& __impl, pointer __prev, pointer __curr)
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      __sanitizer_annotate_contiguous_container(__impl._M_start,
 188:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  __impl._M_end_of_storage, __prev, __curr);
 189:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    }
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 191:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void
 192:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _S_grow(_Vector_impl& __impl, size_type __n)
 193:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    { _S_adjust(__impl, __impl._M_finish, __impl._M_finish + __n); }
 194:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 195:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void
 196:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _S_shrink(_Vector_impl& __impl, size_type __n)
 197:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    { _S_adjust(__impl, __impl._M_finish + __n, __impl._M_finish); }
 198:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 199:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    static void
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _S_on_dealloc(_Vector_impl& __impl)
 201:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 202:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      if (__impl._M_start)
 203:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		_S_adjust(__impl, __impl._M_finish, __impl._M_end_of_storage);
 204:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    }
 205:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 206:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    // Used on reallocation to tell ASan unused capacity is invalid.
 207:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    struct _Reinit
 208:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 209:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      explicit _Reinit(_Vector_impl& __impl) : _M_impl(__impl)
 210:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      {
 211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		// Mark unused capacity as valid again before deallocating it.
 212:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		_S_on_dealloc(_M_impl);
 213:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      }
 214:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 215:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      ~_Reinit()
 216:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      {
 217:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		// Mark unused capacity as invalid after reallocation.
 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		if (_M_impl._M_start)
 219:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  _S_adjust(_M_impl, _M_impl._M_end_of_storage,
 220:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    _M_impl._M_finish);
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      }
 222:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 223:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Vector_impl& _M_impl;
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 304


 224:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 225:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 226:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Reinit(const _Reinit&) = delete;
 227:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Reinit& operator=(const _Reinit&) = delete;
 228:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    };
 230:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    // Tell ASan when unused capacity is initialized to be valid.
 232:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    struct _Grow
 233:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
 234:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Grow(_Vector_impl& __impl, size_type __n)
 235:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      : _M_impl(__impl), _M_n(__n)
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      { _S_grow(_M_impl, __n); }
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 238:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      ~_Grow() { if (_M_n) _S_shrink(_M_impl, _M_n); }
 239:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 240:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      void _M_grew(size_type __n) { _M_n -= __n; }
 241:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 242:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 243:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Grow(const _Grow&) = delete;
 244:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Grow& operator=(const _Grow&) = delete;
 245:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 246:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    private:
 247:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _Vector_impl& _M_impl;
 248:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      size_type _M_n;
 249:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    };
 250:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  };
 251:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 252:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_REINIT \
 253:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   typename _Base::_Vector_impl::template _Asan<>::_Reinit const \
 254:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__attribute__((__unused__)) __reinit_guard(this->_M_impl)
 255:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GROW(n) \
 256:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   typename _Base::_Vector_impl::template _Asan<>::_Grow \
 257:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__attribute__((__unused__)) __grow_guard(this->_M_impl, (n))
 258:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GREW(n) __grow_guard._M_grew(n)
 259:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_SHRINK(n) \
 260:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   _Base::_Vector_impl::template _Asan<>::_S_shrink(this->_M_impl, n)
 261:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC \
 262:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   _Base::_Vector_impl::template _Asan<>::_S_on_dealloc(this->_M_impl)
 263:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else // ! (_GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR)
 264:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_REINIT
 265:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GROW(n)
 266:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GREW(n)
 267:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_SHRINK(n)
 268:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC
 269:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif // _GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR
 270:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       };
 271:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 272:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 273:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef _Alloc allocator_type;
 274:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 275:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Tp_alloc_type&
 276:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 277:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 278:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 279:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const _Tp_alloc_type&
 280:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 305


 281:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return this->_M_impl; }
 282:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 283:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       allocator_type
 284:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
 285:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return allocator_type(_M_get_Tp_allocator()); }
 286:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 287:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 288:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base() = default;
 289:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 290:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base() { }
 291:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 292:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 293:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 294:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a) { }
 295:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 296:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Kept for ABI compatibility.
 297:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if !_GLIBCXX_INLINE_VERSION
 298:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(size_t __n)
 299:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl()
 300:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_create_storage(__n); }
 301:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 302:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 303:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(size_t __n, const allocator_type& __a)
 304:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a)
 305:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_create_storage(__n); }
 306:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 307:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 308:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(_Vector_base&&) = default;
 309:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 310:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Kept for ABI compatibility.
 311:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # if !_GLIBCXX_INLINE_VERSION
 312:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(_Tp_alloc_type&& __a) noexcept
 313:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(std::move(__a)) { }
 314:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 315:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(_Vector_base&& __x, const allocator_type& __a)
 316:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(__a)
 317:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 318:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__x.get_allocator() == __a)
 319:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_swap_data(__x._M_impl);
 320:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else
 321:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    size_t __n = __x._M_impl._M_finish - __x._M_impl._M_start;
 323:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _M_create_storage(__n);
 324:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
 325:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 326:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # endif
 327:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 328:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_base(const allocator_type& __a, _Vector_base&& __x)
 329:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _M_impl(_Tp_alloc_type(__a), std::move(__x._M_impl))
 330:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { }
 331:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 332:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 333:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       ~_Vector_base() _GLIBCXX_NOEXCEPT
 334:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 335:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_deallocate(_M_impl._M_start,
 336:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 337:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 306


 338:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 339:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 340:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Vector_impl _M_impl;
 341:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 342:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       pointer
 343:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_allocate(size_t __n)
 344:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 345:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 346:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 347:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 348:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 349:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 350:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_deallocate(pointer __p, size_t __n)
 351:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 352:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 353:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__p)
 354:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 355:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 356:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 357:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     protected:
 358:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 359:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_create_storage(size_t __n)
 360:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 361:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_start = this->_M_allocate(__n);
 362:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish = this->_M_impl._M_start;
 363:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 364:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 365:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     };
 366:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 367:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   /**
 368:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  @brief A standard container which offers fixed time access to
 369:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  individual elements in any order.
 370:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *
 371:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  @ingroup sequences
 372:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *
 373:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  @tparam _Tp  Type of element.
 374:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_Tp>.
 375:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *
 376:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
 377:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  <a href="tables.html#66">reversible container</a>, and a
 378:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  <a href="tables.html#67">sequence</a>, including the
 379:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  <a href="tables.html#68">optional sequence requirements</a> with the
 380:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  %exception of @c push_front and @c pop_front.
 381:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *
 382:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  In some terminology a %vector can be described as a dynamic
 383:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  C-style array, it offers fast and efficient access to individual
 384:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  elements in any order and saves the user from worrying about
 385:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  memory and size allocation.  Subscripting ( @c [] ) access is
 386:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****    *  also provided as with C-style arrays.
 387:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   */
 388:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****   template<typename _Tp, typename _Alloc = std::allocator<_Tp> >
 389:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     class vector : protected _Vector_base<_Tp, _Alloc>
 390:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     {
 391:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #ifdef _GLIBCXX_CONCEPT_CHECKS
 392:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Concept requirements.
 393:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Alloc::value_type		_Alloc_value_type;
 394:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # if __cplusplus < 201103L
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 307


 395:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       __glibcxx_class_requires(_Tp, _SGIAssignableConcept)
 396:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # endif
 397:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       __glibcxx_class_requires2(_Tp, _Alloc_value_type, _SameTypeConcept)
 398:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 399:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 400:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 401:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static_assert(is_same<typename remove_cv<_Tp>::type, _Tp>::value,
 402:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  "std::vector must have a non-const, non-volatile value_type");
 403:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # if __cplusplus > 201703L || defined __STRICT_ANSI__
 404:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static_assert(is_same<typename _Alloc::value_type, _Tp>::value,
 405:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  "std::vector must have the same value_type as its allocator");
 406:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** # endif
 407:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 408:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 409:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef _Vector_base<_Tp, _Alloc>			_Base;
 410:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Base::_Tp_alloc_type		_Tp_alloc_type;
 411:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type>	_Alloc_traits;
 412:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 413:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 414:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef _Tp					value_type;
 415:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Base::pointer			pointer;
 416:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Alloc_traits::const_pointer	const_pointer;
 417:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Alloc_traits::reference		reference;
 418:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef typename _Alloc_traits::const_reference	const_reference;
 419:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<pointer, vector> iterator;
 420:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, vector>
 421:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator;
 422:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
 423:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef std::reverse_iterator<iterator>		reverse_iterator;
 424:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef size_t					size_type;
 425:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef ptrdiff_t					difference_type;
 426:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       typedef _Alloc					allocator_type;
 427:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 428:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     private:
 429:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 430:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static constexpr bool
 431:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_nothrow_relocate(true_type)
 432:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return noexcept(std::__relocate_a(std::declval<pointer>(),
 434:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  std::declval<pointer>(),
 435:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  std::declval<pointer>(),
 436:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  std::declval<_Tp_alloc_type&>()));
 437:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 438:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 439:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static constexpr bool
 440:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_nothrow_relocate(false_type)
 441:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return false; }
 442:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 443:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static constexpr bool
 444:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_use_relocate()
 445:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 446:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// Instantiating std::__relocate_a might cause an error outside the
 447:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// immediate context (in __relocate_object_a's noexcept-specifier),
 448:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	// so only do it if we know the type can be move-inserted into *this.
 449:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return _S_nothrow_relocate(__is_move_insertable<_Tp_alloc_type>{});
 450:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 308


 452:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static pointer
 453:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_do_relocate(pointer __first, pointer __last, pointer __result,
 454:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		     _Tp_alloc_type& __alloc, true_type) noexcept
 455:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 456:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return std::__relocate_a(__first, __last, __result, __alloc);
 457:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 458:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 459:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static pointer
 460:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_do_relocate(pointer, pointer, pointer __result,
 461:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		     _Tp_alloc_type&, false_type) noexcept
 462:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return __result; }
 463:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 464:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       static pointer
 465:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _S_relocate(pointer __first, pointer __last, pointer __result,
 466:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  _Tp_alloc_type& __alloc) noexcept
 467:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 468:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	using __do_it = __bool_constant<_S_use_relocate()>;
 469:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 470:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 471:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif // C++11
 472:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 473:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     protected:
 474:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::_M_allocate;
 475:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::_M_deallocate;
 476:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::_M_impl;
 477:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::_M_get_Tp_allocator;
 478:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 479:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 480:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // [23.2.4.1] construct/copy/destroy
 481:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // (assign() and get_allocator() are also listed in this section)
 482:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 483:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 484:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 485:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 486:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 487:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector() = default;
 488:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 489:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector() { }
 490:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 492:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 493:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 494:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator object.
 495:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 496:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       explicit
 497:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 498:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__a) { }
 499:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 500:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 501:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 502:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with default constructed elements.
 503:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 504:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 505:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 506:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This constructor fills the %vector with @a __n default
 507:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  constructed elements.
 508:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 309


 509:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       explicit
 510:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(size_type __n, const allocator_type& __a = allocator_type())
 511:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(_S_check_init_len(__n, __a), __a)
 512:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_default_initialize(__n); }
 513:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 514:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 515:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 516:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 517:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __value  An element to copy.
 518:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 519:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 520:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 521:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 522:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(size_type __n, const value_type& __value,
 523:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 524:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(_S_check_init_len(__n, __a), __a)
 525:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 526:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 527:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 528:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 529:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 530:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __value  An element to copy.
 531:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 532:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 533:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 534:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 535:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       explicit
 536:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(size_type __n, const value_type& __value = value_type(),
 537:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 538:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(_S_check_init_len(__n, __a), __a)
 539:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 540:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 541:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 542:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 543:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector copy constructor.
 544:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 545:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 546:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  All the elements of @a __x are copied, but any unused capacity in
 547:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @a __x  will not be copied
 548:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  (i.e. capacity() == size() in the new %vector).
 549:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 550:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The newly-created %vector uses a copy of the allocator object used
 551:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  by @a __x (unless the allocator traits dictate a different object).
 552:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 553:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(const vector& __x)
 554:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__x.size(),
 555:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
 556:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 557:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish =
 558:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 559:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				      this->_M_impl._M_start,
 560:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				      _M_get_Tp_allocator());
 561:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 562:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 563:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 564:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 565:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector move constructor.
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 310


 566:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 567:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The newly-created %vector contains the exact contents of the
 568:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  moved instance.
 569:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The contents of the moved instance are a valid, but unspecified
 570:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector.
 571:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 572:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(vector&&) noexcept = default;
 573:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 574:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /// Copy constructor with alternative allocator
 575:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(const vector& __x, const allocator_type& __a)
 576:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__x.size(), __a)
 577:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 578:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish =
 579:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 580:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				      this->_M_impl._M_start,
 581:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				      _M_get_Tp_allocator());
 582:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 583:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 584:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     private:
 585:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m, true_type) noexcept
 586:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__m, std::move(__rv))
 587:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { }
 588:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 589:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m, false_type)
 590:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__m)
 591:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 592:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__rv.get_allocator() == __m)
 593:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_swap_data(__rv._M_impl);
 594:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else if (!__rv.empty())
 595:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 596:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    this->_M_create_storage(__rv.size());
 597:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    this->_M_impl._M_finish =
 598:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      std::__uninitialized_move_a(__rv.begin(), __rv.end(),
 599:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  this->_M_impl._M_start,
 600:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  _M_get_Tp_allocator());
 601:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    __rv.clear();
 602:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
 603:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 604:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 605:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
 606:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /// Move constructor with alternative allocator
 607:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m)
 608:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       noexcept( noexcept(
 609:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	vector(std::declval<vector&&>(), std::declval<const allocator_type&>(),
 610:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       std::declval<typename _Alloc_traits::is_always_equal>())) )
 611:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : vector(std::move(__rv), __m, typename _Alloc_traits::is_always_equal{})
 612:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { }
 613:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 614:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 615:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Builds a %vector from an initializer list.
 616:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __l  An initializer_list.
 617:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 618:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 619:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Create a %vector consisting of copies of the elements in the
 620:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  initializer_list @a __l.
 621:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 622:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This will call the element type's copy constructor N times
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 311


 623:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  (where N is @a __l.size()) and do no memory reallocation.
 624:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 625:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector(initializer_list<value_type> __l,
 626:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 627:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       : _Base(__a)
 628:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 629:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_initialize(__l.begin(), __l.end(),
 630:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    random_access_iterator_tag());
 631:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 632:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 633:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 634:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 635:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Builds a %vector from a range.
 636:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  An input iterator.
 637:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last  An input iterator.
 638:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __a  An allocator.
 639:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 640:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Create a %vector consisting of copies of the elements from
 641:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  [first,last).
 642:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 643:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  If the iterators are forward, bidirectional, or
 644:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  random-access, then this will call the elements' copy
 645:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  constructor N times (where N is distance(first,last)) and do
 646:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  no memory reallocation.  But if only input iterators are
 647:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  used, then this will do at most 2N calls to the copy
 648:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  constructor, and logN memory reallocations.
 649:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 650:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 651:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator,
 652:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 653:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	vector(_InputIterator __first, _InputIterator __last,
 654:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 655:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Base(__a)
 656:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_range_initialize(__first, __last,
 658:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			      std::__iterator_category(__first));
 659:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 660:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 661:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
 662:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	vector(_InputIterator __first, _InputIterator __last,
 663:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 664:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _Base(__a)
 665:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 666:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 667:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 668:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_initialize_dispatch(__first, __last, _Integral());
 669:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 670:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 671:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 672:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 673:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The dtor only erases the elements, and note that if the
 674:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  elements themselves are pointers, the pointed-to memory is
 675:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  not touched in any way.  Managing the pointer is the user's
 676:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  responsibility.
 677:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 678:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       ~vector() _GLIBCXX_NOEXCEPT
 679:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 312


 680:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 681:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      _M_get_Tp_allocator());
 682:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC;
 683:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 684:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 685:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 686:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector assignment operator.
 687:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 688:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 689:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  All the elements of @a __x are copied, but any unused capacity in
 690:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @a __x will not be copied.
 691:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 692:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Whether the allocator is copied depends on the allocator traits.
 693:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 694:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector&
 695:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator=(const vector& __x);
 696:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 697:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 698:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 699:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector move assignment operator.
 700:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 701:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 702:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The contents of @a __x are moved into this %vector (without copying,
 703:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  if the allocators permit it).
 704:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Afterwards @a __x is a valid, but unspecified %vector.
 705:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 706:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Whether the allocator is moved depends on the allocator traits.
 707:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 708:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector&
 709:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())
 710:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 711:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	constexpr bool __move_storage =
 712:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Alloc_traits::_S_propagate_on_move_assign()
 713:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  || _Alloc_traits::_S_always_equal();
 714:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_move_assign(std::move(__x), __bool_constant<__move_storage>());
 715:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *this;
 716:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 717:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 718:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 719:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  %Vector list assignment operator.
 720:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __l  An initializer_list.
 721:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 722:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 723:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  initializer list @a __l.
 724:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 725:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 726:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 727:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  of elements assigned.
 728:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 729:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       vector&
 730:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator=(initializer_list<value_type> __l)
 731:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 732:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_assign_aux(__l.begin(), __l.end(),
 733:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    random_access_iterator_tag());
 734:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *this;
 735:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 736:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 313


 737:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 738:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 739:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Assigns a given value to a %vector.
 740:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  Number of elements to be assigned.
 741:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __val  Value to be assigned.
 742:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 743:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function fills a %vector with @a __n copies of the given
 744:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  value.  Note that the assignment completely changes the
 745:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and that the resulting %vector's size is the same as
 746:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the number of elements assigned.
 747:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 748:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 749:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       assign(size_type __n, const value_type& __val)
 750:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_fill_assign(__n, __val); }
 751:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 752:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 753:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Assigns a range to a %vector.
 754:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  An input iterator.
 755:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last   An input iterator.
 756:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 757:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 758:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  range [__first,__last).
 759:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 760:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 761:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 762:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  of elements assigned.
 763:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 764:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 765:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator,
 766:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 767:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
 768:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	assign(_InputIterator __first, _InputIterator __last)
 769:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _M_assign_dispatch(__first, __last, __false_type()); }
 770:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 771:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
 772:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
 773:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	assign(_InputIterator __first, _InputIterator __last)
 774:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
 775:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 776:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 777:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_assign_dispatch(__first, __last, _Integral());
 778:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
 779:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 780:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 781:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 782:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 783:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Assigns an initializer list to a %vector.
 784:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __l  An initializer_list.
 785:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 786:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 787:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  initializer list @a __l.
 788:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 789:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 790:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 791:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  of elements assigned.
 792:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 793:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 314


 794:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       assign(initializer_list<value_type> __l)
 795:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 796:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_assign_aux(__l.begin(), __l.end(),
 797:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    random_access_iterator_tag());
 798:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 799:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 800:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 801:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /// Get a copy of the memory allocation object.
 802:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       using _Base::get_allocator;
 803:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 804:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // iterators
 805:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 806:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write iterator that points to the first
 807:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element in the %vector.  Iteration is done in ordinary
 808:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 809:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 810:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
 811:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       begin() _GLIBCXX_NOEXCEPT
 812:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 813:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 814:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 815:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) iterator that points to the
 816:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  first element in the %vector.  Iteration is done in ordinary
 817:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 818:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 819:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator
 820:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       begin() const _GLIBCXX_NOEXCEPT
 821:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 822:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 823:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 824:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write iterator that points one past the last
 825:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element in the %vector.  Iteration is done in ordinary
 826:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 827:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 828:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
 829:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       end() _GLIBCXX_NOEXCEPT
 830:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 831:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 832:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 833:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) iterator that points one past
 834:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the last element in the %vector.  Iteration is done in
 835:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  ordinary element order.
 836:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 837:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator
 838:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       end() const _GLIBCXX_NOEXCEPT
 839:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 840:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 841:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 842:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write reverse iterator that points to the
 843:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  last element in the %vector.  Iteration is done in reverse
 844:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 845:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 846:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reverse_iterator
 847:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       rbegin() _GLIBCXX_NOEXCEPT
 848:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return reverse_iterator(end()); }
 849:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 850:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 315


 851:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 852:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to the last element in the %vector.  Iteration is done in
 853:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  reverse element order.
 854:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 855:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reverse_iterator
 856:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 857:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_reverse_iterator(end()); }
 858:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 859:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 860:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write reverse iterator that points to one
 861:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  before the first element in the %vector.  Iteration is done
 862:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  in reverse element order.
 863:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 864:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reverse_iterator
 865:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       rend() _GLIBCXX_NOEXCEPT
 866:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return reverse_iterator(begin()); }
 867:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 868:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 869:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 870:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to one before the first element in the %vector.  Iteration
 871:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  is done in reverse element order.
 872:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 873:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reverse_iterator
 874:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       rend() const _GLIBCXX_NOEXCEPT
 875:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_reverse_iterator(begin()); }
 876:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 877:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 878:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 879:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) iterator that points to the
 880:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  first element in the %vector.  Iteration is done in ordinary
 881:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element order.
 882:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 883:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator
 884:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       cbegin() const noexcept
 885:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 886:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 887:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 888:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) iterator that points one past
 889:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the last element in the %vector.  Iteration is done in
 890:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  ordinary element order.
 891:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 892:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_iterator
 893:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       cend() const noexcept
 894:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 895:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 896:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 897:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 898:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to the last element in the %vector.  Iteration is done in
 899:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  reverse element order.
 900:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 901:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reverse_iterator
 902:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       crbegin() const noexcept
 903:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_reverse_iterator(end()); }
 904:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 905:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 906:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 907:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to one before the first element in the %vector.  Iteration
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 316


 908:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  is done in reverse element order.
 909:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 910:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reverse_iterator
 911:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       crend() const noexcept
 912:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return const_reverse_iterator(begin()); }
 913:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 914:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 915:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // [23.2.4.2] capacity
 916:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**  Returns the number of elements in the %vector.  */
 917:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size_type
 918:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size() const _GLIBCXX_NOEXCEPT
 919:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 920:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 921:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**  Returns the size() of the largest possible %vector.  */
 922:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size_type
 923:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       max_size() const _GLIBCXX_NOEXCEPT
 924:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _S_max_size(_M_get_Tp_allocator()); }
 925:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 926:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 927:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 928:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 929:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 930:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 931:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will %resize the %vector to the specified
 932:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  number of elements.  If the number is smaller than the
 933:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 934:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  default constructed elements are appended.
 935:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 936:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 937:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       resize(size_type __new_size)
 938:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 939:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__new_size > size())
 940:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_default_append(__new_size - size());
 941:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else if (__new_size < size())
 942:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 943:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 944:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 945:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 946:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 947:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 948:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data with which new elements should be populated.
 949:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 950:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will %resize the %vector to the specified
 951:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  number of elements.  If the number is smaller than the
 952:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 953:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the %vector is extended and new elements are populated with
 954:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  given data.
 955:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 956:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 957:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       resize(size_type __new_size, const value_type& __x)
 958:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 959:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__new_size > size())
 960:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_fill_insert(end(), __new_size - size(), __x);
 961:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else if (__new_size < size())
 962:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 963:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 964:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 317


 965:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 966:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 967:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 968:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data with which new elements should be populated.
 969:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
 970:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will %resize the %vector to the specified
 971:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  number of elements.  If the number is smaller than the
 972:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 973:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the %vector is extended and new elements are populated with
 974:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  given data.
 975:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 976:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 977:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       resize(size_type __new_size, value_type __x = value_type())
 978:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 979:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__new_size > size())
 980:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_fill_insert(end(), __new_size - size(), __x);
 981:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else if (__new_size < size())
 982:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 983:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 984:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 985:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 986:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
 987:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**  A non-binding request to reduce capacity() to size().  */
 988:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
 989:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       shrink_to_fit()
 990:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_shrink_to_fit(); }
 991:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
 992:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 993:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
 994:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns the total number of elements that the %vector can
 995:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  hold before needing to allocate more memory.
 996:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
 997:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size_type
 998:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       capacity() const _GLIBCXX_NOEXCEPT
 999:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_end_of_storage
1000:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			 - this->_M_impl._M_start); }
1001:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1002:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1003:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns true if the %vector is empty.  (Thus begin() would
1004:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  equal end().)
1005:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1006:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _GLIBCXX_NODISCARD bool
1007:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       empty() const _GLIBCXX_NOEXCEPT
1008:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return begin() == end(); }
1009:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1010:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1011:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
1012:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *          elements.
1013:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  Number of elements required.
1014:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @throw  std::length_error  If @a n exceeds @c max_size().
1015:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1016:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function attempts to reserve enough memory for the
1017:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector to hold the specified number of elements.  If the
1018:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  number requested is more than max_size(), length_error is
1019:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  thrown.
1020:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1021:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The advantage of this function is that if optimal code is a
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 318


1022:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  necessity and the user can determine the number of elements
1023:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  that will be required, the user can reserve the memory in
1024:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %advance, and thus prevent a possible reallocation of memory
1025:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  and copying of %vector data.
1026:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1027:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1028:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reserve(size_type __n);
1029:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1030:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // element access
1031:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1032:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Subscript access to the data contained in the %vector.
1033:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param __n The index of the element for which data should be
1034:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  accessed.
1035:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  Read/write reference to data.
1036:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1037:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This operator allows for easy, array-style, data access.
1038:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that data access with this operator is unchecked and
1039:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  out_of_range lookups are not defined. (For checked lookups
1040:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  see at().)
1041:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1042:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reference
1043:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator[](size_type __n) _GLIBCXX_NOEXCEPT
1044:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1045:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_subscript(__n);
1046:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *(this->_M_impl._M_start + __n);
1047:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1048:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1049:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1050:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Subscript access to the data contained in the %vector.
1051:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param __n The index of the element for which data should be
1052:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  accessed.
1053:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  Read-only (constant) reference to data.
1054:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1055:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This operator allows for easy, array-style, data access.
1056:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that data access with this operator is unchecked and
1057:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  out_of_range lookups are not defined. (For checked lookups
1058:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  see at().)
1059:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1060:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reference
1061:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
1062:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1063:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_subscript(__n);
1064:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *(this->_M_impl._M_start + __n);
1065:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1066:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1067:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     protected:
1068:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /// Safety check used only from at().
1069:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1070:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_range_check(size_type __n) const
1071:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1072:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (__n >= this->size())
1073:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_out_of_range_fmt(__N("vector::_M_range_check: __n "
1074:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				       "(which is %zu) >= this->size() "
1075:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				       "(which is %zu)"),
1076:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				   __n, this->size());
1077:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1078:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 319


1079:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     public:
1080:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1081:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Provides access to the data contained in the %vector.
1082:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param __n The index of the element for which data should be
1083:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  accessed.
1084:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  Read/write reference to data.
1085:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
1086:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1087:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function provides for safer data access.  The parameter
1088:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  is first checked that it is in the range of the vector.  The
1089:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  function throws out_of_range if the check fails.
1090:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1091:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reference
1092:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       at(size_type __n)
1093:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1094:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_check(__n);
1095:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return (*this)[__n];
1096:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1097:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1098:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1099:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Provides access to the data contained in the %vector.
1100:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param __n The index of the element for which data should be
1101:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  accessed.
1102:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  Read-only (constant) reference to data.
1103:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
1104:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1105:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function provides for safer data access.  The parameter
1106:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  is first checked that it is in the range of the vector.  The
1107:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  function throws out_of_range if the check fails.
1108:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1109:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reference
1110:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       at(size_type __n) const
1111:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1112:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_check(__n);
1113:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return (*this)[__n];
1114:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1116:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1117:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write reference to the data at the first
1118:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element of the %vector.
1119:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reference
1121:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       front() _GLIBCXX_NOEXCEPT
1122:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1123:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_nonempty();
1124:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *begin();
1125:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1126:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1127:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1128:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reference to the data at the first
1129:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element of the %vector.
1130:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1131:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reference
1132:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       front() const _GLIBCXX_NOEXCEPT
1133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1134:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_nonempty();
1135:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *begin();
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 320


1136:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1137:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1138:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1139:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read/write reference to the data at the last
1140:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element of the %vector.
1141:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1142:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       reference
1143:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       back() _GLIBCXX_NOEXCEPT
1144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1145:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_nonempty();
1146:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *(end() - 1);
1147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1148:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1149:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Returns a read-only (constant) reference to the data at the
1151:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  last element of the %vector.
1152:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1153:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const_reference
1154:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       back() const _GLIBCXX_NOEXCEPT
1155:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1156:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_nonempty();
1157:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return *(end() - 1);
1158:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1161:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // DR 464. Suggestion for new member functions in standard containers.
1162:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // data access
1163:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1164:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *   Returns a pointer such that [data(), data() + size()) is a valid
1165:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *   range.  For a non-empty %vector, data() == &front().
1166:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1167:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _Tp*
1168:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       data() _GLIBCXX_NOEXCEPT
1169:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_data_ptr(this->_M_impl._M_start); }
1170:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1171:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       const _Tp*
1172:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       data() const _GLIBCXX_NOEXCEPT
1173:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_data_ptr(this->_M_impl._M_start); }
1174:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1175:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // [23.2.4.3] modifiers
1176:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1177:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Add data to the end of the %vector.
1178:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be added.
1179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1180:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This is a typical stack operation.  The function creates an
1181:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  element at the end of the %vector and assigns the given data
1182:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  to it.  Due to the nature of a %vector this operation can be
1183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  done in constant time if the %vector has preallocated space
1184:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  available.
1185:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       push_back(const value_type& __x)
1188:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1189:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
1190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
1191:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
1192:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 321


1193:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				     __x);
1194:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    ++this->_M_impl._M_finish;
1195:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
1196:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
1197:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	else
1198:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_realloc_insert(end(), __x);
1199:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1201:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1202:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1203:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       push_back(value_type&& __x)
1204:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { emplace_back(std::move(__x)); }
1205:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1206:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename... _Args>
1207:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus > 201402L
1208:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	reference
1209:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1210:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1212:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	emplace_back(_Args&&... __args);
1213:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1214:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1215:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1216:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Removes last element.
1217:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This is a typical stack operation. It shrinks the %vector by one.
1219:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1220:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that no data is returned, and if the last element's
1221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  data is needed, it should be retrieved before pop_back() is
1222:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  called.
1223:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1224:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1225:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       pop_back() _GLIBCXX_NOEXCEPT
1226:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1227:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_requires_nonempty();
1228:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	--this->_M_impl._M_finish;
1229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Alloc_traits::destroy(this->_M_impl, this->_M_impl._M_finish);
1230:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_GLIBCXX_ASAN_ANNOTATE_SHRINK(1);
1231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1232:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1233:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1234:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1235:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts an object in %vector before specified iterator.
1236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __args  Arguments.
1238:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1239:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1240:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert an object of type T constructed
1241:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  with T(std::forward<Args>(args)...) before the specified location.
1242:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a %vector
1243:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  and if it is frequently used the user should consider using
1244:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  std::list.
1245:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1246:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename... _Args>
1247:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	iterator
1248:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	emplace(const_iterator __position, _Args&&... __args)
1249:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ return _M_emplace_aux(__position, std::forward<_Args>(__args)...); }
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 322


1250:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1251:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1252:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts given value into %vector before specified iterator.
1253:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1254:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1255:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1256:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1257:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert a copy of the given value before
1258:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the specified location.  Note that this kind of operation
1259:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
1260:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  used the user should consider using std::list.
1261:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1262:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1263:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(const_iterator __position, const value_type& __x);
1264:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1265:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1266:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts given value into %vector before specified iterator.
1267:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1268:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1269:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1270:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1271:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert a copy of the given value before
1272:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the specified location.  Note that this kind of operation
1273:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
1274:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  used the user should consider using std::list.
1275:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1276:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1277:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(iterator __position, const value_type& __x);
1278:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1279:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1280:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1281:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1282:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts given rvalue into %vector before specified iterator.
1283:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1284:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1285:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1286:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1287:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert a copy of the given rvalue before
1288:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the specified location.  Note that this kind of operation
1289:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
1290:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  used the user should consider using std::list.
1291:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1292:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1293:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(const_iterator __position, value_type&& __x)
1294:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_insert_rval(__position, std::move(__x)); }
1295:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1296:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1297:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts an initializer_list into the %vector.
1298:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1299:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __l  An initializer_list.
1300:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1301:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert copies of the data in the
1302:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  initializer_list @a l into the %vector before the location
1303:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  specified by @a position.
1304:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1305:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1306:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 323


1307:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  consider using std::list.
1308:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1309:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1310:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(const_iterator __position, initializer_list<value_type> __l)
1311:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1312:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	auto __offset = __position - cbegin();
1313:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_insert(begin() + __offset, __l.begin(), __l.end(),
1314:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			std::random_access_iterator_tag());
1315:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return begin() + __offset;
1316:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1317:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1318:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1319:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1320:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1321:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts a number of copies of given data into the %vector.
1322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1323:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  Number of elements to be inserted.
1324:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1325:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1326:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1327:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert a specified number of copies of
1328:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the given data before the location specified by @a position.
1329:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1330:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1331:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1332:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  consider using std::list.
1333:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1334:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1335:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(const_iterator __position, size_type __n, const value_type& __x)
1336:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1337:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	difference_type __offset = __position - cbegin();
1338:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_fill_insert(begin() + __offset, __n, __x);
1339:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return begin() + __offset;
1340:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1341:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1342:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1343:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts a number of copies of given data into the %vector.
1344:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1345:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __n  Number of elements to be inserted.
1346:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  Data to be inserted.
1347:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1348:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert a specified number of copies of
1349:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the given data before the location specified by @a position.
1350:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1351:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1352:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1353:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  consider using std::list.
1354:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1355:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1356:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       insert(iterator __position, size_type __n, const value_type& __x)
1357:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_fill_insert(__position, __n, __x); }
1358:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1359:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1360:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1361:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1362:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts a range into the %vector.
1363:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 324


1364:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  An input iterator.
1365:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last   An input iterator.
1366:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1367:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1368:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert copies of the data in the range
1369:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  [__first,__last) into the %vector before the location specified
1370:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  by @a pos.
1371:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1372:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1373:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1374:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  consider using std::list.
1375:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1376:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator,
1377:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1378:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	iterator
1379:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	insert(const_iterator __position, _InputIterator __first,
1380:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       _InputIterator __last)
1381:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1382:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  difference_type __offset = __position - cbegin();
1383:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_insert_dispatch(begin() + __offset,
1384:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			     __first, __last, __false_type());
1385:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  return begin() + __offset;
1386:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1387:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1388:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1389:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Inserts a range into the %vector.
1390:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1391:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  An input iterator.
1392:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last   An input iterator.
1393:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1394:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will insert copies of the data in the range
1395:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  [__first,__last) into the %vector before the location specified
1396:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  by @a pos.
1397:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1398:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1399:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  %vector and if it is frequently used the user should
1400:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  consider using std::list.
1401:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1402:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1403:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1404:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	insert(iterator __position, _InputIterator __first,
1405:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	       _InputIterator __last)
1406:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1407:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
1408:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
1409:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_insert_dispatch(__position, __first, __last, _Integral());
1410:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1411:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1412:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1413:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1414:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Remove element at given position.
1415:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __position  Iterator pointing to element to be erased.
1416:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator pointing to the next element (or end()).
1417:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1418:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will erase the element at the given position and thus
1419:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  shorten the %vector by one.
1420:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 325


1421:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note This operation could be expensive and if it is
1422:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  frequently used the user should consider using std::list.
1423:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The user is also cautioned that this function only erases
1424:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the element, and that if the element is itself a pointer,
1425:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the pointed-to memory is not touched in any way.  Managing
1426:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the pointer is the user's responsibility.
1427:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1428:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1429:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1430:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       erase(const_iterator __position)
1431:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_erase(begin() + (__position - cbegin())); }
1432:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       erase(iterator __position)
1434:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_erase(__position); }
1435:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1436:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1437:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1438:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Remove a range of elements.
1439:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __first  Iterator pointing to the first element to be erased.
1440:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __last  Iterator pointing to one past the last element to be
1441:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *                  erased.
1442:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @return  An iterator pointing to the element pointed to by @a __last
1443:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *           prior to erasing (or end()).
1444:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1445:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This function will erase the elements in the range
1446:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  [__first,__last) and shorten the %vector accordingly.
1447:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1448:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note This operation could be expensive and if it is
1449:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  frequently used the user should consider using std::list.
1450:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  The user is also cautioned that this function only erases
1451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the elements, and that if the elements themselves are
1452:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  pointers, the pointed-to memory is not touched in any way.
1453:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Managing the pointer is the user's responsibility.
1454:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1455:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1456:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1457:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       erase(const_iterator __first, const_iterator __last)
1458:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1459:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	const auto __beg = begin();
1460:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	const auto __cbeg = cbegin();
1461:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	return _M_erase(__beg + (__first - __cbeg), __beg + (__last - __cbeg));
1462:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1463:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1464:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       erase(iterator __first, iterator __last)
1465:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_erase(__first, __last); }
1466:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1467:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1468:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1469:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @brief  Swaps data with another %vector.
1470:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  @param  __x  A %vector of the same element and allocator types.
1471:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1472:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  This exchanges the elements between two vectors in constant time.
1473:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  (Three pointers, so it should be quite fast.)
1474:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Note that the global std::swap() function is specialized such that
1475:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  std::swap(v1,v2) will feed to this function.
1476:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *
1477:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Whether the allocators are swapped depends on the allocator traits.
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 326


1478:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1479:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1480:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       swap(vector& __x) _GLIBCXX_NOEXCEPT
1481:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1482:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1483:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	__glibcxx_assert(_Alloc_traits::propagate_on_container_swap::value
1484:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			 || _M_get_Tp_allocator() == __x._M_get_Tp_allocator());
1485:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1486:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_swap_data(__x._M_impl);
1487:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Alloc_traits::_S_on_swap(_M_get_Tp_allocator(),
1488:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				  __x._M_get_Tp_allocator());
1489:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1490:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1492:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Erases all the elements.  Note that this function only erases the
1493:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  elements, and that if the elements themselves are pointers, the
1494:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  pointed-to memory is not touched in any way.  Managing the pointer is
1495:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  the user's responsibility.
1496:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1497:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1498:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       clear() _GLIBCXX_NOEXCEPT
1499:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { _M_erase_at_end(this->_M_impl._M_start); }
1500:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1501:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****     protected:
1502:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       /**
1503:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  Memory expansion handler.  Uses the member allocation function to
1504:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        *  obtain @a n bytes of memory, and then copies [first,last) into it.
1505:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****        */
1506:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _ForwardIterator>
1507:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	pointer
1508:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_allocate_and_copy(size_type __n,
1509:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			     _ForwardIterator __first, _ForwardIterator __last)
1510:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1511:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  pointer __result = this->_M_allocate(__n);
1512:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __try
1513:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
1514:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      std::__uninitialized_copy_a(__first, __last, __result,
1515:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					  _M_get_Tp_allocator());
1516:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      return __result;
1517:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    }
1518:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __catch(...)
1519:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    {
1520:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      _M_deallocate(__result, __n);
1521:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      __throw_exception_again;
1522:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    }
1523:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1524:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1525:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1526:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Internal constructor functions follow.
1527:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1528:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range constructor to implement [23.1.1]/9
1529:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1530:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus < 201103L
1531:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1532:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // 438. Ambiguity in the "do the right thing" clause
1533:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _Integer>
1534:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 327


1535:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_initialize_dispatch(_Integer __n, _Integer __value, __true_type)
1536:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1537:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_start = _M_allocate(_S_check_init_len(
1538:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		static_cast<size_type>(__n), _M_get_Tp_allocator()));
1539:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_end_of_storage =
1540:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    this->_M_impl._M_start + static_cast<size_type>(__n);
1541:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_fill_initialize(static_cast<size_type>(__n), __value);
1542:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1543:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1544:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range constructor to implement [23.1.1]/9
1545:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1546:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1547:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_initialize_dispatch(_InputIterator __first, _InputIterator __last,
1548:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			       __false_type)
1549:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1550:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_range_initialize(__first, __last,
1551:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			      std::__iterator_category(__first));
1552:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1553:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1554:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1555:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second initialize_dispatch above
1556:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1557:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1558:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_initialize(_InputIterator __first, _InputIterator __last,
1559:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    std::input_iterator_tag)
1560:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1561:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __try {
1562:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    for (; __first != __last; ++__first)
1563:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1564:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      emplace_back(*__first);
1565:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1566:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	      push_back(*__first);
1567:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1568:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  } __catch(...) {
1569:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    clear();
1570:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    __throw_exception_again;
1571:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
1572:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1573:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1574:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second initialize_dispatch above
1575:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _ForwardIterator>
1576:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1577:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
1578:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			    std::forward_iterator_tag)
1579:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1580:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  const size_type __n = std::distance(__first, __last);
1581:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_start
1582:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
1583:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
1584:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  this->_M_impl._M_finish =
1585:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    std::__uninitialized_copy_a(__first, __last,
1586:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					this->_M_impl._M_start,
1587:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					_M_get_Tp_allocator());
1588:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1589:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1590:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the first initialize_dispatch above and by the
1591:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // vector(n,value,a) constructor.
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 328


1592:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1593:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_fill_initialize(size_type __n, const value_type& __value)
1594:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1595:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish =
1596:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_fill_n_a(this->_M_impl._M_start, __n, __value,
1597:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					_M_get_Tp_allocator());
1598:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1599:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1600:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1601:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the vector(n) constructor.
1602:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1603:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_default_initialize(size_type __n)
1604:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1605:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	this->_M_impl._M_finish =
1606:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
1607:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 					   _M_get_Tp_allocator());
1608:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
1609:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1610:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1611:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Internal assign functions follow.  The *_aux functions do the actual
1612:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // assignment work for the range versions.
1613:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1614:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range assign to implement [23.1.1]/9
1615:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1616:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1617:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // 438. Ambiguity in the "do the right thing" clause
1618:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _Integer>
1619:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1620:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_assign_dispatch(_Integer __n, _Integer __val, __true_type)
1621:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _M_fill_assign(__n, __val); }
1622:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1623:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range assign to implement [23.1.1]/9
1624:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1625:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1626:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_assign_dispatch(_InputIterator __first, _InputIterator __last,
1627:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			   __false_type)
1628:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _M_assign_aux(__first, __last, std::__iterator_category(__first)); }
1629:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1630:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second assign_dispatch above
1631:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1632:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1633:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_assign_aux(_InputIterator __first, _InputIterator __last,
1634:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      std::input_iterator_tag);
1635:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1636:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second assign_dispatch above
1637:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _ForwardIterator>
1638:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1639:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_assign_aux(_ForwardIterator __first, _ForwardIterator __last,
1640:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		      std::forward_iterator_tag);
1641:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1642:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by assign(n,t), and the range assign when it turns out
1643:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // to be the same thing.
1644:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1645:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_fill_assign(size_type __n, const value_type& __val);
1646:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1647:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Internal insert functions follow.
1648:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 329


1649:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range insert to implement [23.1.1]/9
1650:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1651:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1652:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // 438. Ambiguity in the "do the right thing" clause
1653:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _Integer>
1654:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1655:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_insert_dispatch(iterator __pos, _Integer __n, _Integer __val,
1656:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			   __true_type)
1657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _M_fill_insert(__pos, __n, __val); }
1658:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1659:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the range insert to implement [23.1.1]/9
1660:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1661:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1662:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_insert_dispatch(iterator __pos, _InputIterator __first,
1663:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			   _InputIterator __last, __false_type)
1664:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{
1665:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _M_range_insert(__pos, __first, __last,
1666:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			  std::__iterator_category(__first));
1667:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	}
1668:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1669:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second insert_dispatch above
1670:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _InputIterator>
1671:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1672:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_insert(iterator __pos, _InputIterator __first,
1673:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			_InputIterator __last, std::input_iterator_tag);
1674:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1675:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by the second insert_dispatch above
1676:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _ForwardIterator>
1677:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1678:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_range_insert(iterator __pos, _ForwardIterator __first,
1679:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 			_ForwardIterator __last, std::forward_iterator_tag);
1680:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1681:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by insert(p,n,x), and the range insert when it turns out to be
1682:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // the same thing.
1683:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1684:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_fill_insert(iterator __pos, size_type __n, const value_type& __x);
1685:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1686:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus >= 201103L
1687:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by resize(n).
1688:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1689:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_default_append(size_type __n);
1690:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1691:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       bool
1692:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_shrink_to_fit();
1693:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1694:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1695:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #if __cplusplus < 201103L
1696:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by insert(p,x)
1697:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1698:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_insert_aux(iterator __position, const value_type& __x);
1699:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1700:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       void
1701:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_realloc_insert(iterator __position, const value_type& __x);
1702:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
1703:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // A value_type object constructed with _Alloc_traits::construct()
1704:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // and destroyed with _Alloc_traits::destroy().
1705:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       struct _Temporary_value
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 330


1706:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1707:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	template<typename... _Args>
1708:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  explicit
1709:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Temporary_value(vector* __vec, _Args&&... __args) : _M_this(__vec)
1710:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
1711:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _Alloc_traits::construct(_M_this->_M_impl, _M_ptr(),
1712:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 				     std::forward<_Args>(__args)...);
1713:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  }
1714:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1715:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	~_Temporary_value()
1716:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ _Alloc_traits::destroy(_M_this->_M_impl, _M_ptr()); }
1717:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1718:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	value_type&
1719:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_val() { return *_M_ptr(); }
1720:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1721:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       private:
1722:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_Tp*
1723:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_ptr() { return reinterpret_cast<_Tp*>(&__buf); }
1724:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1725:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	vector* _M_this;
1726:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	typename aligned_storage<sizeof(_Tp), alignof(_Tp)>::type __buf;
1727:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       };
1728:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1729:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by insert(p,x) and other functions when insertion needs to
1730:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // reallocate or move existing elements. _Arg is either _Tp& or _Tp.
1731:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename _Arg>
1732:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1733:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_insert_aux(iterator __position, _Arg&& __arg);
1734:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1735:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename... _Args>
1736:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	void
1737:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_realloc_insert(iterator __position, _Args&&... __args);
1738:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1739:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Either move-construct at the end, or forward to _M_insert_aux.
1740:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1741:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_insert_rval(const_iterator __position, value_type&& __v);
1742:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1743:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Try to emplace at the end, otherwise forward to _M_insert_aux.
1744:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       template<typename... _Args>
1745:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	iterator
1746:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	_M_emplace_aux(const_iterator __position, _Args&&... __args);
1747:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1748:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Emplacing an rvalue of the correct type can use _M_insert_rval.
1749:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       iterator
1750:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_emplace_aux(const_iterator __position, value_type&& __v)
1751:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return _M_insert_rval(__position, std::move(__v)); }
1752:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #endif
1753:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
1754:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       // Called by _M_fill_insert, _M_insert_aux etc.
1755:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       size_type
1756:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       _M_check_len(size_type __n, const char* __s) const
 4530              		.loc 29 1756 7 is_stmt 1 view .LVU1064
 4531              	.LBB4030:
 4532              	.LBB4031:
 4533              	.LBI4031:
 918:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 4534              		.loc 29 918 7 view .LVU1065
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 331


 4535              	.LBE4031:
 4536              	.LBE4030:
 4537              	.LBE4029:
 4538              		.loc 28 426 7 is_stmt 0 view .LVU1066
 4539 000a 9246     		mov	r10, r2
 4540              	.LBB4036:
 4541              	.LBB4034:
1757:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
1758:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	if (max_size() - size() < __n)
 4542              		.loc 29 1758 2 view .LVU1067
 4543 000c 6FF06041 		mvn	r1, #-536870912
 4544              	.LBB4033:
 4545              	.LBB4032:
 919:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 4546              		.loc 29 919 50 view .LVU1068
 4547 0010 A9EB0802 		sub	r2, r9, r8
 4548              	.LVL216:
 919:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 4549              		.loc 29 919 50 view .LVU1069
 4550              	.LBE4032:
 4551              	.LBE4033:
 4552              		.loc 29 1758 2 view .LVU1070
 4553 0014 B1EBA20F 		cmp	r1, r2, asr #2
 4554 0018 54D0     		beq	.L169
 4555 001a 9310     		asrs	r3, r2, #2
 4556 001c 0646     		mov	r6, r0
 4557              	.LBE4034:
 4558              	.LBE4036:
 4559              	.LBB4037:
 4560              	.LBB4038:
 4561              		.file 30 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
   1:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // Iterators -*- C++ -*-
   2:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
   3:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** //
   5:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // software; you can redistribute it and/or modify it under the
   7:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // terms of the GNU General Public License as published by the
   8:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // any later version.
  10:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  11:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // This library is distributed in the hope that it will be useful,
  12:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // GNU General Public License for more details.
  15:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  16:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  20:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // You should have received a copy of the GNU General Public License and
  21:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** // <http://www.gnu.org/licenses/>.
  24:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  25:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** /*
  26:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 332


  27:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Copyright (c) 1994
  28:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Hewlett-Packard Company
  29:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
  30:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * that both that copyright notice and this permission notice appear
  34:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * representations about the suitability of this software for any
  36:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
  38:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
  39:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Copyright (c) 1996-1998
  40:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
  42:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * that both that copyright notice and this permission notice appear
  46:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * representations about the suitability of this software for any
  48:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  */
  50:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  51:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** /** @file bits/stl_iterator.h
  52:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *  This is an internal header file, included by other library headers.
  53:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *  Do not attempt to use it directly. @headername{iterator}
  54:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *
  55:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *  This file implements reverse_iterator, back_insert_iterator,
  56:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *  front_insert_iterator, insert_iterator, __normal_iterator, and their
  57:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  *  supporting functions and overloaded operators.
  58:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****  */
  59:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  60:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #ifndef _STL_ITERATOR_H
  61:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #define _STL_ITERATOR_H 1
  62:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  63:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #include <bits/cpp_type_traits.h>
  64:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #include <ext/type_traits.h>
  65:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #include <bits/move.h>
  66:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #include <bits/ptr_traits.h>
  67:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  68:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus >= 201103L
  69:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # include <type_traits>
  70:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
  71:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  72:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L
  73:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # define __cpp_lib_array_constexpr 201811L
  74:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # define __cpp_lib_constexpr_iterator 201811L
  75:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #elif __cplusplus == 201703L
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # define __cpp_lib_array_constexpr 201803L
  77:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
  78:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L
  80:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # include <compare>
  81:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # include <new>
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # include <bits/iterator_concepts.h>
  83:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 333


  84:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  85:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  86:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** {
  87:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  88:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
  90:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    * @addtogroup iterators
  91:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    * @{
  92:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    */
  93:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
  94:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_lib_concepts
  95:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   namespace __detail
  96:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   {
  97:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     // Weaken iterator_category _Cat to _Limit if it is derived from that,
  98:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     // otherwise use _Otherwise.
  99:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     template<typename _Cat, typename _Limit, typename _Otherwise = _Cat>
 100:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using __clamp_iter_cat
 101:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	= conditional_t<derived_from<_Cat, _Limit>, _Limit, _Otherwise>;
 102:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   }
 103:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 104:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 105:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // 24.4.1 Reverse iterators
 106:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 107:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Bidirectional and random access iterators have corresponding reverse
 108:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  %iterator adaptors that iterate through the data structure in the
 109:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  opposite direction.  They have the same signatures as the corresponding
 110:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  iterators.  The fundamental relation between a reverse %iterator and its
 111:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  corresponding %iterator @c i is established by the identity:
 112:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @code
 113:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *      &*(reverse_iterator(i)) == &*(i - 1)
 114:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @endcode
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 116:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  <em>This mapping is dictated by the fact that while there is always a
 117:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  pointer past the end of an array, there might not be a valid pointer
 118:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  before the beginning of an array.</em> [24.4.1]/1,2
 119:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Reverse iterators can be tricky and surprising at first.  Their
 121:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  semantics make sense, however, and the trickiness is a side effect of
 122:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  the requirement that the iterators must be safe.
 123:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 124:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 125:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     class reverse_iterator
 126:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     : public iterator<typename iterator_traits<_Iterator>::iterator_category,
 127:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		      typename iterator_traits<_Iterator>::value_type,
 128:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		      typename iterator_traits<_Iterator>::difference_type,
 129:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		      typename iterator_traits<_Iterator>::pointer,
 130:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****                       typename iterator_traits<_Iterator>::reference>
 131:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 132:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Iterator current;
 134:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 135:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef iterator_traits<_Iterator>		__traits_type;
 136:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 137:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     public:
 138:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef _Iterator					iterator_type;
 139:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::difference_type	difference_type;
 140:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::pointer		pointer;
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 334


 141:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::reference		reference;
 142:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 143:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_lib_concepts
 144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using iterator_concept
 145:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	= conditional_t<random_access_iterator<_Iterator>,
 146:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 			random_access_iterator_tag,
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 			bidirectional_iterator_tag>;
 148:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using iterator_category
 149:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	= __detail::__clamp_iter_cat<typename __traits_type::iterator_category,
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 				     random_access_iterator_tag>;
 151:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 152:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 153:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 154:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The default constructor value-initializes member @p current.
 155:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  If it is a pointer, that means it is zero-initialized.
 156:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 157:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 158:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // 235 No specification of default ctor for reverse_iterator
 159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // 1012. reverse_iterator default ctor should value initialize
 160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR
 161:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       reverse_iterator() : current() { }
 162:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 163:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 164:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This %iterator will move in the opposite direction that @p x does.
 165:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 166:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       explicit _GLIBCXX17_CONSTEXPR
 167:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       reverse_iterator(iterator_type __x) : current(__x) { }
 168:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 169:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 170:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The copy constructor is normal.
 171:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 172:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR
 173:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       reverse_iterator(const reverse_iterator& __x)
 174:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : current(__x.current) { }
 175:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 176:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus >= 201103L
 177:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       reverse_iterator& operator=(const reverse_iterator&) = default;
 178:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 180:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 181:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  A %reverse_iterator across other types can be copied if the
 182:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  underlying %iterator can be converted to the type of @c current.
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 184:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<typename _Iter>
 185:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	_GLIBCXX17_CONSTEXPR
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         reverse_iterator(const reverse_iterator<_Iter>& __x)
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	: current(__x.base()) { }
 188:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 189:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  @c current, the %iterator used for underlying work.
 191:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 192:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR iterator_type
 193:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       base() const
 194:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return current; }
 195:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 196:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 197:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  A reference to the value at @c --current
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 335


 198:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 199:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This requires that @c --current is dereferenceable.
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 201:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @warning This implementation requires that for an iterator of the
 202:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *           underlying iterator type, @c x, a reference obtained by
 203:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *           @c *x remains valid after @c x has been modified or
 204:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *           destroyed. This is a bug: http://gcc.gnu.org/PR51823
 205:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 206:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reference
 207:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator*() const
 208:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 209:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	_Iterator __tmp = current;
 210:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *--__tmp;
 211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 212:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 213:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 214:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  A pointer to the value at @c --current
 215:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 216:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This requires that @c --current is dereferenceable.
 217:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR pointer
 219:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator->() const
 220:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_concepts >= 201907L
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       requires is_pointer_v<_Iterator>
 222:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	|| requires(const _Iterator __i) { __i.operator->(); }
 223:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 224:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 225:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 226:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	// 1052. operator-> should also support smart pointers
 227:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	_Iterator __tmp = current;
 228:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	--__tmp;
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return _S_to_pointer(__tmp);
 230:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 232:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 233:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  @c *this
 234:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 235:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Decrements the underlying iterator.
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator&
 238:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++()
 239:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 240:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	--current;
 241:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 242:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 243:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 244:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 245:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  The original value of @c *this
 246:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 247:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Decrements the underlying iterator.
 248:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 249:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 250:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++(int)
 251:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 252:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	reverse_iterator __tmp = *this;
 253:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	--current;
 254:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return __tmp;
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 336


 255:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 256:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 257:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 258:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  @c *this
 259:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 260:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Increments the underlying iterator.
 261:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 262:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator&
 263:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator--()
 264:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 265:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++current;
 266:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 267:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 268:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 269:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 270:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  A reverse_iterator with the previous value of @c *this
 271:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 272:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Increments the underlying iterator.
 273:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 274:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 275:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator--(int)
 276:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 277:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	reverse_iterator __tmp = *this;
 278:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++current;
 279:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return __tmp;
 280:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 281:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 282:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 283:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  A reverse_iterator that refers to @c current - @a __n
 284:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 285:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 286:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 287:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 288:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator+(difference_type __n) const
 289:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return reverse_iterator(current - __n); }
 290:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 291:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 292:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  *this
 293:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 294:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Moves the underlying iterator backwards @a __n steps.
 295:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 296:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 297:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator&
 298:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator+=(difference_type __n)
 299:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 300:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	current -= __n;
 301:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 302:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 303:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 304:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 305:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  A reverse_iterator that refers to @c current - @a __n
 306:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 307:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 308:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 309:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 310:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator-(difference_type __n) const
 311:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return reverse_iterator(current + __n); }
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 337


 312:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 313:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 314:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  *this
 315:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 316:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  Moves the underlying iterator forwards @a __n steps.
 317:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 318:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 319:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator&
 320:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator-=(difference_type __n)
 321:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	current += __n;
 323:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 324:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 325:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 326:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 327:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  The value at @c current - @a __n - 1
 328:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 329:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 330:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 331:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reference
 332:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator[](difference_type __n) const
 333:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *(*this + __n); }
 334:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 335:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_lib_concepts
 336:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       friend constexpr iter_rvalue_reference_t<_Iterator>
 337:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       iter_move(const reverse_iterator& __i)
 338:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       noexcept(is_nothrow_copy_constructible_v<_Iterator>
 339:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       && noexcept(ranges::iter_move(--std::declval<_Iterator&>())))
 340:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 341:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	auto __tmp = __i.base();
 342:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return ranges::iter_move(--__tmp);
 343:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 344:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 345:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<indirectly_swappable<_Iterator> _Iter2>
 346:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	friend constexpr void
 347:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	iter_swap(const reverse_iterator& __x,
 348:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		  const reverse_iterator<_Iter2>& __y)
 349:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	noexcept(is_nothrow_copy_constructible_v<_Iterator>
 350:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		 && is_nothrow_copy_constructible_v<_Iter2>
 351:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		 && noexcept(ranges::iter_swap(--std::declval<_Iterator&>(),
 352:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 					       --std::declval<_Iter2&>())))
 353:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	{
 354:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  auto __xtmp = __x.base();
 355:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  auto __ytmp = __y.base();
 356:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	  ranges::iter_swap(--__xtmp, --__ytmp);
 357:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	}
 358:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 359:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 360:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     private:
 361:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<typename _Tp>
 362:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	static _GLIBCXX17_CONSTEXPR _Tp*
 363:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	_S_to_pointer(_Tp* __p)
 364:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         { return __p; }
 365:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 366:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<typename _Tp>
 367:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	static _GLIBCXX17_CONSTEXPR pointer
 368:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	_S_to_pointer(_Tp __t)
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 338


 369:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         { return __t.operator->(); }
 370:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     };
 371:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 372:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   //@{
 373:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 374:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param  __x  A %reverse_iterator.
 375:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param  __y  A %reverse_iterator.
 376:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @return  A simple bool.
 377:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 378:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Reverse iterators forward comparisons to their underlying base()
 379:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  iterators.
 380:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 381:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 382:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus <= 201703L || ! defined __cpp_lib_concepts
 383:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 384:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 385:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator==(const reverse_iterator<_Iterator>& __x,
 386:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 387:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() == __y.base(); }
 388:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 389:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 390:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 391:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<(const reverse_iterator<_Iterator>& __x,
 392:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __y)
 393:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() < __x.base(); }
 394:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 395:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 396:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 397:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator!=(const reverse_iterator<_Iterator>& __x,
 398:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 399:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__x == __y); }
 400:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 401:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 402:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 403:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>(const reverse_iterator<_Iterator>& __x,
 404:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __y)
 405:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y < __x; }
 406:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 407:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 408:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 409:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=(const reverse_iterator<_Iterator>& __x,
 410:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 411:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__y < __x); }
 412:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 413:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 414:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 415:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>=(const reverse_iterator<_Iterator>& __x,
 416:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 417:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__x < __y); }
 418:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 419:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 420:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // DR 280. Comparison of reverse_iterator to const reverse_iterator.
 421:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 422:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 423:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator==(const reverse_iterator<_IteratorL>& __x,
 424:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 425:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() == __y.base(); }
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 339


 426:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 427:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 428:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 429:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<(const reverse_iterator<_IteratorL>& __x,
 430:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 431:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() < __x.base(); }
 432:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 434:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 435:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator!=(const reverse_iterator<_IteratorL>& __x,
 436:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 437:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__x == __y); }
 438:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 439:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 440:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 441:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>(const reverse_iterator<_IteratorL>& __x,
 442:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 443:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y < __x; }
 444:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 445:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 446:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 447:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=(const reverse_iterator<_IteratorL>& __x,
 448:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 449:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__y < __x); }
 450:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 452:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 453:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>=(const reverse_iterator<_IteratorL>& __x,
 454:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 455:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return !(__x < __y); }
 456:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else // C++20
 457:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 458:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 459:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator==(const reverse_iterator<_IteratorL>& __x,
 460:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 461:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() == __y.base() } -> convertible_to<bool>; }
 462:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() == __y.base(); }
 463:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 464:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 465:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 466:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator!=(const reverse_iterator<_IteratorL>& __x,
 467:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 468:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() != __y.base() } -> convertible_to<bool>; }
 469:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() != __y.base(); }
 470:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 471:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 472:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 473:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<(const reverse_iterator<_IteratorL>& __x,
 474:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 475:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() > __y.base() } -> convertible_to<bool>; }
 476:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() > __y.base(); }
 477:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 478:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 479:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 480:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>(const reverse_iterator<_IteratorL>& __x,
 481:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 482:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() < __y.base() } -> convertible_to<bool>; }
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 340


 483:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() < __y.base(); }
 484:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 485:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 486:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 487:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=(const reverse_iterator<_IteratorL>& __x,
 488:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 489:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() >= __y.base() } -> convertible_to<bool>; }
 490:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() >= __y.base(); }
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 492:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 493:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
 494:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>=(const reverse_iterator<_IteratorL>& __x,
 495:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 496:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires { { __x.base() <= __y.base() } -> convertible_to<bool>; }
 497:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __x.base() <= __y.base(); }
 498:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 499:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL,
 500:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	   three_way_comparable_with<_IteratorL> _IteratorR>
 501:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr compare_three_way_result_t<_IteratorL, _IteratorR>
 502:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=>(const reverse_iterator<_IteratorL>& __x,
 503:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		const reverse_iterator<_IteratorR>& __y)
 504:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() <=> __x.base(); }
 505:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif // C++20
 506:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   //@}
 507:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 508:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus < 201103L
 509:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 510:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline typename reverse_iterator<_Iterator>::difference_type
 511:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator-(const reverse_iterator<_Iterator>& __x,
 512:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __y)
 513:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() - __x.base(); }
 514:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 515:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 516:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline typename reverse_iterator<_IteratorL>::difference_type
 517:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator-(const reverse_iterator<_IteratorL>& __x,
 518:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 519:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() - __x.base(); }
 520:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 521:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 522:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // DR 685. reverse_iterator/move_iterator difference has invalid signatures
 523:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 524:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR auto
 525:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator-(const reverse_iterator<_IteratorL>& __x,
 526:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 527:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     -> decltype(__y.base() - __x.base())
 528:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __y.base() - __x.base(); }
 529:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 530:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 531:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 532:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR reverse_iterator<_Iterator>
 533:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator+(typename reverse_iterator<_Iterator>::difference_type __n,
 534:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __x)
 535:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return reverse_iterator<_Iterator>(__x.base() - __n); }
 536:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 537:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus >= 201103L
 538:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // Same as C++14 make_reverse_iterator but used in C++11 mode too.
 539:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 341


 540:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR reverse_iterator<_Iterator>
 541:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     __make_reverse_iterator(_Iterator __i)
 542:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return reverse_iterator<_Iterator>(__i); }
 543:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 544:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # if __cplusplus >= 201402L
 545:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #  define __cpp_lib_make_reverse_iterator 201402
 546:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 547:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 548:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // DR 2285. make_reverse_iterator
 549:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /// Generator function for reverse_iterator.
 550:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 551:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR reverse_iterator<_Iterator>
 552:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     make_reverse_iterator(_Iterator __i)
 553:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return reverse_iterator<_Iterator>(__i); }
 554:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 555:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #  if __cplusplus > 201703L && defined __cpp_lib_concepts
 556:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator1, typename _Iterator2>
 557:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires (!sized_sentinel_for<_Iterator1, _Iterator2>)
 558:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline constexpr bool
 559:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     disable_sized_sentinel_for<reverse_iterator<_Iterator1>,
 560:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 			       reverse_iterator<_Iterator2>> = true;
 561:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #  endif // C++20
 562:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** # endif // C++14
 563:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 564:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 565:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
 566:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     auto
 567:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     __niter_base(reverse_iterator<_Iterator> __it)
 568:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     -> decltype(__make_reverse_iterator(__niter_base(__it.base())))
 569:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __make_reverse_iterator(__niter_base(__it.base())); }
 570:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 571:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 572:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     struct __is_move_iterator<reverse_iterator<_Iterator> >
 573:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : __is_move_iterator<_Iterator>
 574:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { };
 575:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 576:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator>
 577:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
 578:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     auto
 579:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     __miter_base(reverse_iterator<_Iterator> __it)
 580:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     -> decltype(__make_reverse_iterator(__miter_base(__it.base())))
 581:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __make_reverse_iterator(__miter_base(__it.base())); }
 582:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif // C++11
 583:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 584:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // 24.4.2.2.1 back_insert_iterator
 585:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 586:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @brief  Turns assignment into insertion.
 587:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 588:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  These are output iterators, constructed from a container-of-T.
 589:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Assigning a T to the iterator appends it to the container using
 590:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  push_back.
 591:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 592:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Tip:  Using the back_inserter function to create these iterators can
 593:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  save typing.
 594:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 595:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 596:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     class back_insert_iterator
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 342


 597:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     : public iterator<output_iterator_tag, void, void, void, void>
 598:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 599:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 600:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Container* container;
 601:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 602:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     public:
 603:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// A nested typedef for the type of whatever container you used.
 604:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef _Container          container_type;
 605:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L
 606:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using difference_type = ptrdiff_t;
 607:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 608:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       constexpr back_insert_iterator() noexcept : container(nullptr) { }
 609:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 610:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 611:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// The only way to create this %iterator is with a container.
 612:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       explicit _GLIBCXX20_CONSTEXPR
 613:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator(_Container& __x)
 614:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : container(std::__addressof(__x)) { }
 615:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 616:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 617:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @param  __value  An instance of whatever type
 618:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 container_type::const_reference is; presumably a
 619:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 reference-to-const T for container<T>.
 620:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  This %iterator, for chained operations.
 621:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 622:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This kind of %iterator doesn't really have a @a position in the
 623:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  container (you can think of the position as being permanently at
 624:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  the end, if you like).  Assigning a value to the %iterator will
 625:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  always append the value to the end of the container.
 626:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 627:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus < 201103L
 628:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator&
 629:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::const_reference __value)
 630:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 631:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_back(__value);
 632:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 633:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 634:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 635:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 636:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator&
 637:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(const typename _Container::value_type& __value)
 638:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 639:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_back(__value);
 640:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 641:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 642:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 643:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 644:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator&
 645:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::value_type&& __value)
 646:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 647:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_back(std::move(__value));
 648:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 649:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 650:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 651:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 652:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.
 653:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 343


 654:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator&
 655:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator*()
 656:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 658:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 659:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 660:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator&
 661:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++()
 662:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 663:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 664:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 665:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 666:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       back_insert_iterator
 667:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++(int)
 668:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 669:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     };
 670:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 671:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 672:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param  __x  A container of arbitrary type.
 673:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @return  An instance of back_insert_iterator working on @p __x.
 674:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 675:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  This wrapper function helps in creating back_insert_iterator instances.
 676:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Typing the name of the %iterator requires knowing the precise full
 677:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  type of the container, which can be tedious and impedes generic
 678:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  programming.  Using this function lets you take advantage of automatic
 679:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  template parameter deduction, making the compiler match the correct
 680:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  types for you.
 681:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 682:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 683:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
 684:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline back_insert_iterator<_Container>
 685:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     back_inserter(_Container& __x)
 686:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return back_insert_iterator<_Container>(__x); }
 687:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 688:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 689:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @brief  Turns assignment into insertion.
 690:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 691:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  These are output iterators, constructed from a container-of-T.
 692:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Assigning a T to the iterator prepends it to the container using
 693:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  push_front.
 694:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 695:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Tip:  Using the front_inserter function to create these iterators can
 696:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  save typing.
 697:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 698:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 699:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     class front_insert_iterator
 700:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     : public iterator<output_iterator_tag, void, void, void, void>
 701:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 702:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 703:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Container* container;
 704:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 705:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     public:
 706:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// A nested typedef for the type of whatever container you used.
 707:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef _Container          container_type;
 708:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L
 709:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using difference_type = ptrdiff_t;
 710:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 344


 711:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       constexpr front_insert_iterator() noexcept : container(nullptr) { }
 712:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 713:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 714:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// The only way to create this %iterator is with a container.
 715:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       explicit _GLIBCXX20_CONSTEXPR
 716:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator(_Container& __x)
 717:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : container(std::__addressof(__x)) { }
 718:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 719:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 720:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @param  __value  An instance of whatever type
 721:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 container_type::const_reference is; presumably a
 722:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 reference-to-const T for container<T>.
 723:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  This %iterator, for chained operations.
 724:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 725:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This kind of %iterator doesn't really have a @a position in the
 726:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  container (you can think of the position as being permanently at
 727:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  the front, if you like).  Assigning a value to the %iterator will
 728:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  always prepend the value to the front of the container.
 729:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 730:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus < 201103L
 731:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator&
 732:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::const_reference __value)
 733:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 734:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_front(__value);
 735:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 736:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 737:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 738:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 739:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator&
 740:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(const typename _Container::value_type& __value)
 741:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 742:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_front(__value);
 743:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 744:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 745:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 746:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 747:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator&
 748:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::value_type&& __value)
 749:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 750:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	container->push_front(std::move(__value));
 751:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 752:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 753:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 754:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 755:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.
 756:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 757:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator&
 758:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator*()
 759:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 760:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 761:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 762:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 763:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator&
 764:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++()
 765:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 766:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 767:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 345


 768:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 769:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       front_insert_iterator
 770:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++(int)
 771:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 772:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     };
 773:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 774:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 775:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param  __x  A container of arbitrary type.
 776:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @return  An instance of front_insert_iterator working on @p x.
 777:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 778:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  This wrapper function helps in creating front_insert_iterator instances.
 779:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Typing the name of the %iterator requires knowing the precise full
 780:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  type of the container, which can be tedious and impedes generic
 781:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  programming.  Using this function lets you take advantage of automatic
 782:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  template parameter deduction, making the compiler match the correct
 783:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  types for you.
 784:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 785:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 786:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
 787:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline front_insert_iterator<_Container>
 788:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     front_inserter(_Container& __x)
 789:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return front_insert_iterator<_Container>(__x); }
 790:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 791:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 792:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @brief  Turns assignment into insertion.
 793:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 794:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  These are output iterators, constructed from a container-of-T.
 795:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Assigning a T to the iterator inserts it in the container at the
 796:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  %iterator's position, rather than overwriting the value at that
 797:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  position.
 798:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 799:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  (Sequences will actually insert a @e copy of the value before the
 800:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  %iterator's position.)
 801:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 802:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Tip:  Using the inserter function to create these iterators can
 803:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  save typing.
 804:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 805:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 806:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     class insert_iterator
 807:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     : public iterator<output_iterator_tag, void, void, void, void>
 808:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 809:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && defined __cpp_lib_concepts
 810:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using _Iter = std::__detail::__range_iter_t<_Container>;
 811:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 812:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 813:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Container* container = nullptr;
 814:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Iter iter = _Iter();
 815:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 816:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename _Container::iterator		_Iter;
 817:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 818:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 819:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Container* container;
 820:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Iter iter;
 821:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 822:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 823:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     public:
 824:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// A nested typedef for the type of whatever container you used.
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 346


 825:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef _Container          container_type;
 826:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 827:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && defined __cpp_lib_concepts
 828:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using difference_type = ptrdiff_t;
 829:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 830:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator() = default;
 831:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 832:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 833:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 834:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The only way to create this %iterator is with a container and an
 835:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  initial position (a normal %iterator into the container).
 836:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 837:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 838:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator(_Container& __x, _Iter __i)
 839:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : container(std::__addressof(__x)), iter(__i) {}
 840:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 841:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /**
 842:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @param  __value  An instance of whatever type
 843:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 container_type::const_reference is; presumably a
 844:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *                 reference-to-const T for container<T>.
 845:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @return  This %iterator, for chained operations.
 846:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 847:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  This kind of %iterator maintains its own position in the
 848:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  container.  Assigning a value to the %iterator will insert the
 849:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  value into the container at the place before the %iterator.
 850:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 851:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  The position is maintained such that subsequent assignments will
 852:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  insert values immediately after one another.  For example,
 853:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @code
 854:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     // vector v contains A and Z
 855:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 856:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     insert_iterator i (v, ++v.begin());
 857:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     i = 1;
 858:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     i = 2;
 859:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     i = 3;
 860:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *
 861:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *     // vector v contains A, 1, 2, 3, and Z
 862:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****        *  @endcode
 863:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       */
 864:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus < 201103L
 865:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 866:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::const_reference __value)
 867:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 868:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	iter = container->insert(iter, __value);
 869:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++iter;
 870:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 871:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 872:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 873:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 874:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 875:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(const typename _Container::value_type& __value)
 876:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 877:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	iter = container->insert(iter, __value);
 878:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++iter;
 879:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 880:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 881:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 347


 882:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 883:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 884:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator=(typename _Container::value_type&& __value)
 885:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
 886:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	iter = container->insert(iter, std::move(__value));
 887:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++iter;
 888:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
 889:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
 890:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 891:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 892:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.
 893:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 894:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 895:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator*()
 896:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 897:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 898:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 899:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 900:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 901:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++()
 902:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 903:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 904:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 905:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 906:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       insert_iterator&
 907:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++(int)
 908:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *this; }
 909:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     };
 910:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 911:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   /**
 912:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param __x  A container of arbitrary type.
 913:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @param __i  An iterator into the container.
 914:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  @return  An instance of insert_iterator working on @p __x.
 915:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *
 916:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  This wrapper function helps in creating insert_iterator instances.
 917:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  Typing the name of the %iterator requires knowing the precise full
 918:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  type of the container, which can be tedious and impedes generic
 919:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  programming.  Using this function lets you take advantage of automatic
 920:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  template parameter deduction, making the compiler match the correct
 921:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    *  types for you.
 922:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   */
 923:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && defined __cpp_lib_concepts
 924:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container>
 925:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr insert_iterator<_Container>
 926:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inserter(_Container& __x, std::__detail::__range_iter_t<_Container> __i)
 927:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return insert_iterator<_Container>(__x, __i); }
 928:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
 929:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Container, typename _Iterator>
 930:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline insert_iterator<_Container>
 931:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inserter(_Container& __x, _Iterator __i)
 932:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 933:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       return insert_iterator<_Container>(__x,
 934:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 					 typename _Container::iterator(__i));
 935:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     }
 936:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 937:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 938:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // @} group iterators
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 348


 939:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 940:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** _GLIBCXX_END_NAMESPACE_VERSION
 941:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** } // namespace
 942:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 943:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
 944:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** {
 945:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
 946:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 947:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // This iterator adapter is @a normal in the sense that it does not
 948:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // change the semantics of any of the operators of its iterator
 949:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // parameter.  Its primary purpose is to convert an iterator that is
 950:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // not a class, e.g. a pointer, into an iterator that is a class.
 951:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // The _Container parameter exists solely so that different containers
 952:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // using this template can instantiate different types, even if the
 953:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // _Iterator parameter is the same.
 954:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
 955:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     class __normal_iterator
 956:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     {
 957:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     protected:
 958:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _Iterator _M_current;
 959:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 960:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef std::iterator_traits<_Iterator>		__traits_type;
 961:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 962:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     public:
 963:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef _Iterator					iterator_type;
 964:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::iterator_category iterator_category;
 965:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::value_type  	value_type;
 966:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::difference_type 	difference_type;
 967:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::reference 	reference;
 968:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       typedef typename __traits_type::pointer   	pointer;
 969:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 970:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus > 201703L && __cpp_lib_concepts
 971:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       using iterator_concept = std::__detail::__iter_concept<_Iterator>;
 972:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
 973:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 974:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX_CONSTEXPR __normal_iterator() _GLIBCXX_NOEXCEPT
 975:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(_Iterator()) { }
 976:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 977:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       explicit _GLIBCXX20_CONSTEXPR
 978:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 979:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 980:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 981:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // Allow iterator to const_iterator conversion
 982:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       template<typename _Iter>
 983:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         _GLIBCXX20_CONSTEXPR
 984:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         __normal_iterator(const __normal_iterator<_Iter,
 985:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 			  typename __enable_if<
 986:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       	       (std::__are_same<_Iter, typename _Container::pointer>::__value),
 987:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		      _Container>::__type>& __i) _GLIBCXX_NOEXCEPT
 988:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****         : _M_current(__i.base()) { }
 989:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
 990:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // Forward iterator requirements
 991:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 992:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       reference
 993:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator*() const _GLIBCXX_NOEXCEPT
 994:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return *_M_current; }
 995:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 349


 996:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
 997:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       pointer
 998:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator->() const _GLIBCXX_NOEXCEPT
 999:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return _M_current; }
1000:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1001:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1002:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator&
1003:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++() _GLIBCXX_NOEXCEPT
1004:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
1005:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	++_M_current;
1006:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
1007:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
1008:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1009:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1010:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator
1011:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator++(int) _GLIBCXX_NOEXCEPT
1012:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return __normal_iterator(_M_current++); }
1013:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1014:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // Bidirectional iterator requirements
1015:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1016:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator&
1017:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator--() _GLIBCXX_NOEXCEPT
1018:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       {
1019:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	--_M_current;
1020:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	return *this;
1021:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       }
1022:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1023:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1024:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator
1025:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator--(int) _GLIBCXX_NOEXCEPT
1026:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return __normal_iterator(_M_current--); }
1027:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1028:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       // Random access iterator requirements
1029:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1030:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       reference
1031:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator[](difference_type __n) const _GLIBCXX_NOEXCEPT
1032:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return _M_current[__n]; }
1033:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1034:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1035:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator&
1036:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator+=(difference_type __n) _GLIBCXX_NOEXCEPT
1037:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { _M_current += __n; return *this; }
1038:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1039:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1040:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator
1041:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT
1042:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return __normal_iterator(_M_current + __n); }
1043:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1044:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1045:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator&
1046:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator-=(difference_type __n) _GLIBCXX_NOEXCEPT
1047:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { _M_current -= __n; return *this; }
1048:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1049:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1050:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       __normal_iterator
1051:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
1052:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return __normal_iterator(_M_current - __n); }
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 350


1053:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1054:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       _GLIBCXX20_CONSTEXPR
1055:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       const _Iterator&
1056:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       base() const _GLIBCXX_NOEXCEPT
1057:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       { return _M_current; }
1058:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     };
1059:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1060:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // Note: In what follows, the left- and right-hand-side iterators are
1061:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // allowed to vary in types (conceptually in cv-qualification) so that
1062:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // comparison between cv-qualified and non-cv-qualified iterators be
1063:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // valid.  However, the greedy and unfriendly operators in std::rel_ops
1064:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // will make overload resolution ambiguous (when in scope) if we don't
1065:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // provide overloads whose operands are of the same type.  Can someone
1066:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // remind me what generic programming is about? -- Gaby
1067:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1068:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cpp_lib_three_way_comparison
1069:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1070:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     requires requires (_IteratorL __lhs, _IteratorR __rhs)
1071:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { { __lhs == __rhs } -> std::convertible_to<bool>; }
1072:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr bool
1073:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,
1074:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
1075:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     noexcept(noexcept(__lhs.base() == __rhs.base()))
1076:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() == __rhs.base(); }
1077:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1078:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1079:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     constexpr std::__detail::__synth3way_t<_IteratorR, _IteratorL>
1080:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=>(const __normal_iterator<_IteratorL, _Container>& __lhs,
1081:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 		const __normal_iterator<_IteratorR, _Container>& __rhs)
1082:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     noexcept(noexcept(std::__detail::__synth3way(__lhs.base(), __rhs.base())))
1083:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return std::__detail::__synth3way(__lhs.base(), __rhs.base()); }
1084:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
1085:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****    // Forward iterator requirements
1086:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1087:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1088:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1089:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,
1090:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
1091:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1092:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() == __rhs.base(); }
1093:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1094:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
1095:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1096:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1097:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
1098:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
1099:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1100:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() == __rhs.base(); }
1101:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1102:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1103:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1104:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1105:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator!=(const __normal_iterator<_IteratorL, _Container>& __lhs,
1106:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
1107:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1108:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() != __rhs.base(); }
1109:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 351


1110:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
1111:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1112:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1113:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
1114:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
1115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1116:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() != __rhs.base(); }
1117:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1118:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // Random access iterator requirements
1119:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1121:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<(const __normal_iterator<_IteratorL, _Container>& __lhs,
1122:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_IteratorR, _Container>& __rhs)
1123:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1124:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() < __rhs.base(); }
1125:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1126:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
1127:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1128:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1129:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<(const __normal_iterator<_Iterator, _Container>& __lhs,
1130:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
1131:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1132:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() < __rhs.base(); }
1133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1134:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1135:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1136:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>(const __normal_iterator<_IteratorL, _Container>& __lhs,
1137:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_IteratorR, _Container>& __rhs)
1138:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1139:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() > __rhs.base(); }
1140:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1141:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
1142:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1143:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>(const __normal_iterator<_Iterator, _Container>& __lhs,
1145:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
1146:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() > __rhs.base(); }
1148:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1149:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1151:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=(const __normal_iterator<_IteratorL, _Container>& __lhs,
1152:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
1153:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1154:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() <= __rhs.base(); }
1155:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1156:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
1157:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1158:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator<=(const __normal_iterator<_Iterator, _Container>& __lhs,
1160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
1161:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1162:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() <= __rhs.base(); }
1163:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1164:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1165:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1166:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>=(const __normal_iterator<_IteratorL, _Container>& __lhs,
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 352


1167:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
1168:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1169:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() >= __rhs.base(); }
1170:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1171:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
1172:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1173:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline bool
1174:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator>=(const __normal_iterator<_Iterator, _Container>& __lhs,
1175:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
1176:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1177:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() >= __rhs.base(); }
1178:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif // three-way comparison
1179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1180:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
1181:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // According to the resolution of DR179 not only the various comparison
1182:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // operators but also operator- must accept mixed iterator/const_iterator
1183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   // parameters.
1184:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
1185:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #if __cplusplus >= 201103L
1186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     // DR 685.
1187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1188:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline auto
1189:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator-(const __normal_iterator<_IteratorL, _Container>& __lhs,
1190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_IteratorR, _Container>& __rhs) noexcept
1191:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     -> decltype(__lhs.base() - __rhs.base())
1192:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #else
1193:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline typename __normal_iterator<_IteratorL, _Container>::difference_type
1194:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator-(const __normal_iterator<_IteratorL, _Container>& __lhs,
1195:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_IteratorR, _Container>& __rhs)
1196:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** #endif
1197:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() - __rhs.base(); }
1198:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 
1199:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****   template<typename _Iterator, typename _Container>
1200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX20_CONSTEXPR
1201:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     inline typename __normal_iterator<_Iterator, _Container>::difference_type
1202:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
1203:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
1204:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     _GLIBCXX_NOEXCEPT
1205:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****     { return __lhs.base() - __rhs.base(); }
 4562              		.loc 30 1205 27 view .LVU1071
 4563 001e A7EB0805 		sub	r5, r7, r8
 4564 0022 012B     		cmp	r3, #1
 4565 0024 1C46     		mov	r4, r3
 4566 0026 38BF     		it	cc
 4567 0028 0124     		movcc	r4, #1
 4568 002a 1C19     		adds	r4, r3, r4
 4569 002c 48D2     		bcs	.L151
 4570              	.LVL217:
 4571              		.loc 30 1205 27 view .LVU1072
 4572              	.LBE4038:
 4573              	.LBE4037:
 4574              	.LBB4040:
 4575              	.LBI4040:
 811:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 4576              		.loc 29 811 7 is_stmt 1 view .LVU1073
 4577              	.LBB4041:
 4578              	.LBI4041:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 353


 978:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 4579              		.loc 30 978 7 view .LVU1074
 978:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 4580              		.loc 30 978 7 is_stmt 0 view .LVU1075
 4581              	.LBE4041:
 4582              	.LBE4040:
 4583              	.LBB4043:
 4584              	.LBI4037:
1202:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
 4585              		.loc 30 1202 5 is_stmt 1 view .LVU1076
1202:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
 4586              		.loc 30 1202 5 is_stmt 0 view .LVU1077
 4587              	.LBE4043:
 4588              	.LBB4044:
 4589              	.LBI4044:
 343:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 4590              		.loc 29 343 7 is_stmt 1 view .LVU1078
 4591              	.LBB4045:
 346:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 4592              		.loc 29 346 18 is_stmt 0 view .LVU1079
 4593 002e 002C     		cmp	r4, #0
 4594 0030 3CD1     		bne	.L170
 4595 0032 A346     		mov	fp, r4
 4596              	.LVL218:
 4597              	.L160:
 346:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 4598              		.loc 29 346 18 view .LVU1080
 4599              	.LBE4045:
 4600              	.LBE4044:
 4601              	.LBB4053:
 4602              	.LBI4053:
 507:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 4603              		.loc 13 507 2 is_stmt 1 view .LVU1081
 4604              	.LBB4054:
 4605              	.LBI4054:
 148:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 4606              		.loc 12 148 2 view .LVU1082
 148:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 4607              		.loc 12 148 2 is_stmt 0 view .LVU1083
 4608              	.LBE4054:
 4609              	.LBE4053:
 4610              		.loc 27 175 3 is_stmt 1 view .LVU1084
 4611              	.LBB4059:
 4612              	.LBB4057:
 4613              	.LBB4055:
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4614              		.loc 12 150 4 is_stmt 0 view .LVU1085
 4615 0034 DAF80030 		ldr	r3, [r10]
 4616              	.LBE4055:
 4617              	.LBE4057:
 4618              	.LBE4059:
 4619              	.LBB4060:
 4620              	.LBB4061:
 4621              	.LBB4062:
 4622              	.LBB4063:
 4623              	.LBB4064:
 4624              	.LBB4065:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 354


 4625              		.file 31 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
   1:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // Raw memory manipulators -*- C++ -*-
   2:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
   3:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** //
   5:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // software; you can redistribute it and/or modify it under the
   7:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // terms of the GNU General Public License as published by the
   8:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // any later version.
  10:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  11:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // This library is distributed in the hope that it will be useful,
  12:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // GNU General Public License for more details.
  15:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  16:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  20:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // You should have received a copy of the GNU General Public License and
  21:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** // <http://www.gnu.org/licenses/>.
  24:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  25:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** /*
  26:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *
  27:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Copyright (c) 1994
  28:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Hewlett-Packard Company
  29:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *
  30:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * provided that the above copyright notice appear in all copies and
  33:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * that both that copyright notice and this permission notice appear
  34:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * representations about the suitability of this software for any
  36:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *
  38:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *
  39:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Copyright (c) 1996,1997
  40:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Silicon Graphics Computer Systems, Inc.
  41:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *
  42:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * provided that the above copyright notice appear in all copies and
  45:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * that both that copyright notice and this permission notice appear
  46:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * representations about the suitability of this software for any
  48:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  */
  50:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  51:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** /** @file bits/stl_uninitialized.h
  52:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *  This is an internal header file, included by other library headers.
  53:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  *  Do not attempt to use it directly. @headername{memory}
  54:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****  */
  55:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  56:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #ifndef _STL_UNINITIALIZED_H
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 355


  57:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #define _STL_UNINITIALIZED_H 1
  58:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  59:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus > 201402L
  60:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #include <bits/stl_pair.h>
  61:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
  62:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  63:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus >= 201103L
  64:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #include <type_traits>
  65:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
  66:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  67:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #include <ext/alloc_traits.h>
  68:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  69:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** namespace std _GLIBCXX_VISIBILITY(default)
  70:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** {
  71:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  72:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  73:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /** @addtogroup memory
  74:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @{
  75:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    */
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  77:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
  78:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueTypes>
  80:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_copy
  81:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _InputIterator, typename _ForwardIterator>
  83:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
  84:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_copy(_InputIterator __first, _InputIterator __last,
  85:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      _ForwardIterator __result)
  86:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
  87:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __result;
  88:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
  90:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __first != __last; ++__first, (void)++__cur)
  91:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
  92:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      return __cur;
  93:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
  94:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
  95:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
  96:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__result, __cur);
  97:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
  98:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
  99:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 100:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 101:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 102:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
 103:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_copy<true>
 104:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 105:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _InputIterator, typename _ForwardIterator>
 106:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
 107:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_copy(_InputIterator __first, _InputIterator __last,
 108:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      _ForwardIterator __result)
 109:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         { return std::copy(__first, __last, __result); }
 110:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 111:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 112:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @endcond
 113:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 356


 114:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Copies the range [first,last) into result.
 116:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  An input iterator.
 117:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __last   An input iterator.
 118:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __result An output iterator.
 119:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return   __result + (__first - __last)
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *
 121:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  Like copy(), but does not require an initialized output range.
 122:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 123:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator>
 124:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 125:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_copy(_InputIterator __first, _InputIterator __last,
 126:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		       _ForwardIterator __result)
 127:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 128:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_InputIterator>::value_type
 129:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType1;
 130:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 131:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType2;
 132:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus < 201103L
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = true;
 134:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #else
 135:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted copy constructor, but the std::copy
 136:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // optimization that uses memmove would happily "copy" them anyway.
 137:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       static_assert(is_constructible<_ValueType2, decltype(*__first)>::value,
 138:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  "result type must be constructible from value type of input range");
 139:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 140:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_InputIterator>::reference _RefType1;
 141:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::reference _RefType2;
 142:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted assignment, so using std::copy
 143:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // would be ill-formed. Require assignability before using std::copy:
 144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = is_assignable<_RefType2, _RefType1>::value;
 145:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
 146:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return std::__uninitialized_copy<__is_trivial(_ValueType1)
 148:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				       && __is_trivial(_ValueType2)
 149:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				       && __assignable>::
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_copy(__first, __last, __result);
 151:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 152:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 153:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
 154:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 155:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueType>
 156:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_fill
 157:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 158:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Tp>
 159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static void
 160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_fill(_ForwardIterator __first, _ForwardIterator __last,
 161:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      const _Tp& __x)
 162:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
 163:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 164:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
 165:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 166:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __cur != __last; ++__cur)
 167:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), __x);
 168:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 169:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
 170:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 357


 171:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 172:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
 173:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 174:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 175:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 176:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 177:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
 178:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_fill<true>
 179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 180:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Tp>
 181:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static void
 182:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_fill(_ForwardIterator __first, _ForwardIterator __last,
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		      const _Tp& __x)
 184:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         { std::fill(__first, __last, __x); }
 185:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @endcond
 188:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 189:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Copies the value x into the range [first,last).
 191:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  An input iterator.
 192:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __last   An input iterator.
 193:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __x      The source value.
 194:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return   Nothing.
 195:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *
 196:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  Like fill(), but does not require an initialized output range.
 197:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 198:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp>
 199:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_fill(_ForwardIterator __first, _ForwardIterator __last,
 201:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		       const _Tp& __x)
 202:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 203:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 204:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType;
 205:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus < 201103L
 206:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = true;
 207:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #else
 208:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted copy constructor, but the std::fill
 209:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // optimization that uses memmove would happily "copy" them anyway.
 210:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       static_assert(is_constructible<_ValueType, const _Tp&>::value,
 211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  "result type must be constructible from input type");
 212:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 213:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted assignment, so using std::fill
 214:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // would be ill-formed. Require assignability before using std::fill:
 215:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 216:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
 217:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       std::__uninitialized_fill<__is_trivial(_ValueType) && __assignable>::
 219:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_fill(__first, __last, __x);
 220:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 222:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
 223:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 224:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueType>
 225:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_fill_n
 226:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 227:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size, typename _Tp>
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 358


 228:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_fill_n(_ForwardIterator __first, _Size __n,
 230:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			const _Tp& __x)
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
 232:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 233:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
 234:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 235:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __n > 0; --__n, (void) ++__cur)
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), __x);
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      return __cur;
 238:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 239:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
 240:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 241:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 242:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
 243:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 244:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 245:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 246:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 247:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
 248:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_fill_n<true>
 249:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 250:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size, typename _Tp>
 251:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
 252:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_fill_n(_ForwardIterator __first, _Size __n,
 253:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			const _Tp& __x)
 254:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         { return std::fill_n(__first, __n, __x); }
 255:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 256:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 257:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @endcond
 258:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 259:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    // _GLIBCXX_RESOLVE_LIB_DEFECTS
 260:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    // DR 1339. uninitialized_fill_n should return the end of its range
 261:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 262:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Copies the value x into the range [first,first+n).
 263:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  An input iterator.
 264:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __n      The number of copies to make.
 265:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __x      The source value.
 266:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return   Nothing.
 267:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *
 268:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  Like fill_n(), but does not require an initialized output range.
 269:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 270:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Tp>
 271:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 272:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_fill_n(_ForwardIterator __first, _Size __n, const _Tp& __x)
 273:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 274:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 275:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType;
 276:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus < 201103L
 277:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = true;
 278:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #else
 279:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted copy constructor, but the std::fill
 280:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // optimization that uses memmove would happily "copy" them anyway.
 281:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       static_assert(is_constructible<_ValueType, const _Tp&>::value,
 282:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  "result type must be constructible from input type");
 283:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 284:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // Trivial types can have deleted assignment, so using std::fill
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 359


 285:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // would be ill-formed. Require assignability before using std::fill:
 286:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 287:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
 288:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __uninitialized_fill_n<__is_trivial(_ValueType) && __assignable>::
 289:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_fill_n(__first, __n, __x);
 290:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 291:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 292:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
 293:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 294:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Extensions: versions of uninitialized_copy, uninitialized_fill,
 295:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  and uninitialized_fill_n that take an allocator parameter.
 296:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  We dispatch back to the standard versions when we're given the
 297:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  default allocator.  For nondefault allocators we do not use 
 298:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  any of the POD optimizations.
 299:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 300:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator,
 301:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _Allocator>
 302:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     _ForwardIterator
 303:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 304:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   _ForwardIterator __result, _Allocator& __alloc)
 305:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 306:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __cur = __result;
 307:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 308:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 309:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 310:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  for (; __first != __last; ++__first, (void)++__cur)
 311:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur), *__first);
 312:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return __cur;
 313:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 314:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 315:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 316:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__result, __cur, __alloc);
 317:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 318:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 319:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 320:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 321:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator, typename _Tp>
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 323:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 324:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   _ForwardIterator __result, allocator<_Tp>&)
 325:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     { return std::uninitialized_copy(__first, __last, __result); }
 326:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 327:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator,
 328:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _Allocator>
 329:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 330:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_move_a(_InputIterator __first, _InputIterator __last,
 331:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   _ForwardIterator __result, _Allocator& __alloc)
 332:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 333:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return std::__uninitialized_copy_a(_GLIBCXX_MAKE_MOVE_ITERATOR(__first),
 334:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 					 _GLIBCXX_MAKE_MOVE_ITERATOR(__last),
 335:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 					 __result, __alloc);
 336:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 337:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 338:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator,
 339:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _Allocator>
 340:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 341:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_move_if_noexcept_a(_InputIterator __first,
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 360


 342:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				       _InputIterator __last,
 343:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				       _ForwardIterator __result,
 344:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				       _Allocator& __alloc)
 345:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 346:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return std::__uninitialized_copy_a
 347:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	(_GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(__first),
 348:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	 _GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(__last), __result, __alloc);
 349:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 350:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 351:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp, typename _Allocator>
 352:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     void
 353:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_fill_a(_ForwardIterator __first, _ForwardIterator __last,
 354:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   const _Tp& __x, _Allocator& __alloc)
 355:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 356:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __cur = __first;
 357:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 358:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 359:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 360:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  for (; __cur != __last; ++__cur)
 361:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur), __x);
 362:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 363:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 364:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 365:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__first, __cur, __alloc);
 366:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 367:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 368:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 369:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 370:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp, typename _Tp2>
 371:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 372:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_fill_a(_ForwardIterator __first, _ForwardIterator __last,
 373:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   const _Tp& __x, allocator<_Tp2>&)
 374:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     { std::uninitialized_fill(__first, __last, __x); }
 375:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 376:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Tp,
 377:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _Allocator>
 378:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     _ForwardIterator
 379:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_fill_n_a(_ForwardIterator __first, _Size __n, 
 380:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			     const _Tp& __x, _Allocator& __alloc)
 381:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 382:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __cur = __first;
 383:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 384:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 385:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 386:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  for (; __n > 0; --__n, (void) ++__cur)
 387:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur), __x);
 388:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return __cur;
 389:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 390:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 391:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 392:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__first, __cur, __alloc);
 393:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 394:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 395:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 396:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 397:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Tp,
 398:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _Tp2>
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 361


 399:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 400:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_fill_n_a(_ForwardIterator __first, _Size __n, 
 401:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			     const _Tp& __x, allocator<_Tp2>&)
 402:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     { return std::uninitialized_fill_n(__first, __n, __x); }
 403:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 404:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 405:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Extensions: __uninitialized_copy_move, __uninitialized_move_copy,
 406:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_fill_move, __uninitialized_move_fill.
 407:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // All of these algorithms take a user-supplied allocator, which is used
 408:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // for construction and destruction.
 409:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 410:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_copy_move
 411:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Copies [first1, last1) into [result, result + (last1 - first1)), and
 412:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  move [first2, last2) into
 413:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  [result, result + (last1 - first1) + (last2 - first2)).
 414:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator1, typename _InputIterator2,
 415:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _ForwardIterator, typename _Allocator>
 416:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 417:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_move(_InputIterator1 __first1,
 418:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _InputIterator1 __last1,
 419:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _InputIterator2 __first2,
 420:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _InputIterator2 __last2,
 421:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _ForwardIterator __result,
 422:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _Allocator& __alloc)
 423:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 424:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __mid = std::__uninitialized_copy_a(__first1, __last1,
 425:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 							   __result,
 426:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 							   __alloc);
 427:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 428:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 429:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return std::__uninitialized_move_a(__first2, __last2, __mid, __alloc);
 430:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 431:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 432:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__result, __mid, __alloc);
 434:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 435:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 436:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 437:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 438:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_move_copy
 439:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Moves [first1, last1) into [result, result + (last1 - first1)), and
 440:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  copies [first2, last2) into
 441:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  [result, result + (last1 - first1) + (last2 - first2)).
 442:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator1, typename _InputIterator2,
 443:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _ForwardIterator, typename _Allocator>
 444:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 445:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_move_copy(_InputIterator1 __first1,
 446:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _InputIterator1 __last1,
 447:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _InputIterator2 __first2,
 448:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _InputIterator2 __last2,
 449:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _ForwardIterator __result,
 450:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _Allocator& __alloc)
 451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 452:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __mid = std::__uninitialized_move_a(__first1, __last1,
 453:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 							   __result,
 454:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 							   __alloc);
 455:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 362


 456:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 457:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return std::__uninitialized_copy_a(__first2, __last2, __mid, __alloc);
 458:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 459:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 460:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 461:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__result, __mid, __alloc);
 462:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 463:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 464:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 465:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   
 466:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_fill_move
 467:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Fills [result, mid) with x, and moves [first, last) into
 468:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  [mid, mid + (last - first)).
 469:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp, typename _InputIterator,
 470:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _Allocator>
 471:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 472:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_fill_move(_ForwardIterator __result, _ForwardIterator __mid,
 473:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      const _Tp& __x, _InputIterator __first,
 474:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _InputIterator __last, _Allocator& __alloc)
 475:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 476:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       std::__uninitialized_fill_a(__result, __mid, __x, __alloc);
 477:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 478:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 479:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return std::__uninitialized_move_a(__first, __last, __mid, __alloc);
 480:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 481:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 482:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 483:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__result, __mid, __alloc);
 484:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 485:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 486:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 487:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 488:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_move_fill
 489:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Moves [first1, last1) into [first2, first2 + (last1 - first1)), and
 490:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   //  fills [first2 + (last1 - first1), last2) with x.
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator, typename _Tp,
 492:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _Allocator>
 493:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 494:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_move_fill(_InputIterator __first1, _InputIterator __last1,
 495:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _ForwardIterator __first2,
 496:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _ForwardIterator __last2, const _Tp& __x,
 497:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _Allocator& __alloc)
 498:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 499:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __mid2 = std::__uninitialized_move_a(__first1, __last1,
 500:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 							    __first2,
 501:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 							    __alloc);
 502:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 503:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 504:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::__uninitialized_fill_a(__mid2, __last2, __x, __alloc);
 505:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 506:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 507:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 508:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__first2, __mid2, __alloc);
 509:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 510:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 511:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 512:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 363


 513:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @endcond
 514:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 515:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus >= 201103L
 516:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
 517:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 518:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Extensions: __uninitialized_default, __uninitialized_default_n,
 519:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_default_a, __uninitialized_default_n_a.
 520:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 521:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueType>
 522:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_default_1
 523:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 524:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator>
 525:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static void
 526:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_default(_ForwardIterator __first, _ForwardIterator __last)
 527:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
 528:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 529:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
 530:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 531:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __cur != __last; ++__cur)
 532:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur));
 533:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 534:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
 535:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 536:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 537:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
 538:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 539:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 540:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 541:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 542:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
 543:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_default_1<true>
 544:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 545:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator>
 546:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static void
 547:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_default(_ForwardIterator __first, _ForwardIterator __last)
 548:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
 549:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  typedef typename iterator_traits<_ForwardIterator>::value_type
 550:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    _ValueType;
 551:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 552:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::fill(__first, __last, _ValueType());
 553:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 554:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 555:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 556:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueType>
 557:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_default_n_1
 558:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 559:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size>
 560:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
 561:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_default_n(_ForwardIterator __first, _Size __n)
 562:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
 563:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 564:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
 565:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 566:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __n > 0; --__n, (void) ++__cur)
 567:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur));
 568:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      return __cur;
 569:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 364


 570:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
 571:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 572:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 573:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
 574:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 575:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 576:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 577:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 578:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
 579:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_default_n_1<true>
 580:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 581:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size>
 582:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static _ForwardIterator
 583:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_default_n(_ForwardIterator __first, _Size __n)
 584:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         {
 585:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  typedef typename iterator_traits<_ForwardIterator>::value_type
 586:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    _ValueType;
 587:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 588:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return std::fill_n(__first, __n, _ValueType());
 589:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 590:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 591:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 592:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_default
 593:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Fills [first, last) with std::distance(first, last) default
 594:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // constructed value_types(s).
 595:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator>
 596:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 597:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_default(_ForwardIterator __first,
 598:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			    _ForwardIterator __last)
 599:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 600:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 601:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType;
 602:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // trivial types can have deleted assignment
 603:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 604:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 605:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       std::__uninitialized_default_1<__is_trivial(_ValueType)
 606:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				     && __assignable>::
 607:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_default(__first, __last);
 608:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 609:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 610:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_default_n
 611:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Fills [first, first + n) with n default constructed value_type(s).
 612:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size>
 613:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 614:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_default_n(_ForwardIterator __first, _Size __n)
 615:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 616:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 617:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType;
 618:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       // trivial types can have deleted assignment
 619:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 620:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 621:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __uninitialized_default_n_1<__is_trivial(_ValueType)
 622:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				       && __assignable>::
 623:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_default_n(__first, __n);
 624:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 625:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 626:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 365


 627:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_default_a
 628:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Fills [first, last) with std::distance(first, last) default
 629:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // constructed value_types(s), constructed with the allocator alloc.
 630:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Allocator>
 631:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     void
 632:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_default_a(_ForwardIterator __first,
 633:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _ForwardIterator __last,
 634:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _Allocator& __alloc)
 635:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 636:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __cur = __first;
 637:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 638:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 639:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 640:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  for (; __cur != __last; ++__cur)
 641:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur));
 642:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 643:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 644:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 645:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__first, __cur, __alloc);
 646:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 647:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 648:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 649:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 650:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp>
 651:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 652:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_default_a(_ForwardIterator __first,
 653:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _ForwardIterator __last,
 654:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      allocator<_Tp>&)
 655:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     { std::__uninitialized_default(__first, __last); }
 656:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 658:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_default_n_a
 659:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Fills [first, first + n) with n default constructed value_types(s),
 660:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // constructed with the allocator alloc.
 661:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Allocator>
 662:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     _ForwardIterator
 663:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_default_n_a(_ForwardIterator __first, _Size __n, 
 664:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				_Allocator& __alloc)
 665:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 666:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __cur = __first;
 667:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 668:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 669:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 670:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  for (; __n > 0; --__n, (void) ++__cur)
 671:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur));
 672:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return __cur;
 673:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 674:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 675:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 676:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__first, __cur, __alloc);
 677:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 678:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 679:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 680:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 681:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Tp>
 682:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 683:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_default_n_a(_ForwardIterator __first, _Size __n, 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 366


 684:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				allocator<_Tp>&)
 685:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     { return std::__uninitialized_default_n(__first, __n); }
 686:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 687:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueType>
 688:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_default_novalue_1
 689:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 690:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator>
 691:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	static void
 692:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_default_novalue(_ForwardIterator __first,
 693:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				 _ForwardIterator __last)
 694:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 695:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 696:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
 697:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 698:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __cur != __last; ++__cur)
 699:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct_novalue(std::__addressof(*__cur));
 700:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 701:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
 702:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 703:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 704:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
 705:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 706:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 707:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 708:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 709:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
 710:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_default_novalue_1<true>
 711:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 712:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator>
 713:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         static void
 714:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****         __uninit_default_novalue(_ForwardIterator __first,
 715:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				 _ForwardIterator __last)
 716:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 717:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 718:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 719:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 720:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<bool _TrivialValueType>
 721:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_default_novalue_n_1
 722:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 723:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size>
 724:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	static _ForwardIterator
 725:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_default_novalue_n(_ForwardIterator __first, _Size __n)
 726:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 727:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 728:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __try
 729:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 730:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      for (; __n > 0; --__n, (void) ++__cur)
 731:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		std::_Construct_novalue(std::__addressof(*__cur));
 732:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      return __cur;
 733:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 734:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __catch(...)
 735:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    {
 736:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 737:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	      __throw_exception_again;
 738:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    }
 739:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 740:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 367


 741:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 742:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<>
 743:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __uninitialized_default_novalue_n_1<true>
 744:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 745:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size>
 746:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	static _ForwardIterator
 747:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_default_novalue_n(_ForwardIterator __first, _Size __n)
 748:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{ return std::next(__first, __n); }
 749:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     };
 750:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 751:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_default_novalue
 752:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Fills [first, last) with std::distance(first, last) default-initialized
 753:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // value_types(s).
 754:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator>
 755:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 756:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_default_novalue(_ForwardIterator __first,
 757:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				    _ForwardIterator __last)
 758:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 759:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 760:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType;
 761:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 762:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       std::__uninitialized_default_novalue_1<
 763:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	is_trivially_default_constructible<_ValueType>::value>::
 764:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_default_novalue(__first, __last);
 765:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 766:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 767:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // __uninitialized_default_n
 768:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Fills [first, first + n) with n default-initialized value_type(s).
 769:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size>
 770:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 771:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_default_novalue_n(_ForwardIterator __first, _Size __n)
 772:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 773:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 774:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType;
 775:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 776:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __uninitialized_default_novalue_n_1<
 777:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	is_trivially_default_constructible<_ValueType>::value>::
 778:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__uninit_default_novalue_n(__first, __n);
 779:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 780:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 781:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _Size,
 782:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _ForwardIterator>
 783:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     _ForwardIterator
 784:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_n(_InputIterator __first, _Size __n,
 785:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   _ForwardIterator __result, input_iterator_tag)
 786:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 787:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __cur = __result;
 788:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 789:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 790:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  for (; __n > 0; --__n, (void) ++__first, ++__cur)
 791:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    std::_Construct(std::__addressof(*__cur), *__first);
 792:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return __cur;
 793:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 794:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 795:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 796:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__result, __cur);
 797:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 368


 798:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 799:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 800:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 801:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _RandomAccessIterator, typename _Size,
 802:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _ForwardIterator>
 803:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 804:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_n(_RandomAccessIterator __first, _Size __n,
 805:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   _ForwardIterator __result,
 806:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   random_access_iterator_tag)
 807:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     { return std::uninitialized_copy(__first, __first + __n, __result); }
 808:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 809:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _Size,
 810:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _ForwardIterator>
 811:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     pair<_InputIterator, _ForwardIterator>
 812:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_n_pair(_InputIterator __first, _Size __n,
 813:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   _ForwardIterator __result, input_iterator_tag)
 814:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 815:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __cur = __result;
 816:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __try
 817:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 818:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  for (; __n > 0; --__n, (void) ++__first, ++__cur)
 819:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    std::_Construct(std::__addressof(*__cur), *__first);
 820:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  return {__first, __cur};
 821:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 822:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __catch(...)
 823:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	{
 824:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  std::_Destroy(__result, __cur);
 825:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  __throw_exception_again;
 826:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	}
 827:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 828:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 829:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _RandomAccessIterator, typename _Size,
 830:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	   typename _ForwardIterator>
 831:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline pair<_RandomAccessIterator, _ForwardIterator>
 832:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_n_pair(_RandomAccessIterator __first, _Size __n,
 833:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   _ForwardIterator __result,
 834:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			   random_access_iterator_tag)
 835:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 836:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       auto __second_res = uninitialized_copy(__first, __first + __n, __result);
 837:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       auto __first_res = std::next(__first, __n);
 838:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return {__first_res, __second_res};
 839:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 840:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 841:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @endcond
 842:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 843:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 844:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Copies the range [first,first+n) into result.
 845:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  An input iterator.
 846:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __n      The number of elements to copy.
 847:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __result An output iterator.
 848:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return  __result + __n
 849:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *
 850:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  Like copy_n(), but does not require an initialized output range.
 851:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 852:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _Size, typename _ForwardIterator>
 853:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 854:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_copy_n(_InputIterator __first, _Size __n,
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 369


 855:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			 _ForwardIterator __result)
 856:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     { return std::__uninitialized_copy_n(__first, __n, __result,
 857:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 					 std::__iterator_category(__first)); }
 858:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 859:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
 860:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _InputIterator, typename _Size, typename _ForwardIterator>
 861:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline pair<_InputIterator, _ForwardIterator>
 862:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __uninitialized_copy_n_pair(_InputIterator __first, _Size __n,
 863:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			      _ForwardIterator __result)
 864:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 865:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return
 866:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	std::__uninitialized_copy_n_pair(__first, __n, __result,
 867:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 					 std::__iterator_category(__first));
 868:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 869:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @endcond
 870:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif
 871:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 872:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus >= 201703L
 873:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** # define __cpp_lib_raw_memory_algorithms 201606L
 874:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 875:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 876:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Default-initializes objects in the range [first,last).
 877:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  A forward iterator.
 878:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __last   A forward iterator.
 879:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 880:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template <typename _ForwardIterator>
 881:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 882:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_default_construct(_ForwardIterator __first,
 883:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				    _ForwardIterator __last)
 884:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 885:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __uninitialized_default_novalue(__first, __last);
 886:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 887:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 888:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 889:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Default-initializes objects in the range [first,first+count).
 890:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  A forward iterator.
 891:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __count  The number of objects to construct.
 892:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return   __first + __count
 893:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 894:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template <typename _ForwardIterator, typename _Size>
 895:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 896:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_default_construct_n(_ForwardIterator __first, _Size __count)
 897:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 898:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __uninitialized_default_novalue_n(__first, __count);
 899:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 900:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 901:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 902:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Value-initializes objects in the range [first,last).
 903:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  A forward iterator.
 904:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __last   A forward iterator.
 905:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 906:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template <typename _ForwardIterator>
 907:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 908:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_value_construct(_ForwardIterator __first,
 909:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				  _ForwardIterator __last)
 910:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 911:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __uninitialized_default(__first, __last);
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 370


 912:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 913:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 914:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 915:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Value-initializes objects in the range [first,first+count).
 916:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  A forward iterator.
 917:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __count  The number of objects to construct.
 918:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return   __result + __count
 919:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 920:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template <typename _ForwardIterator, typename _Size>
 921:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 922:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_value_construct_n(_ForwardIterator __first, _Size __count)
 923:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 924:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __uninitialized_default_n(__first, __count);
 925:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 926:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 927:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 928:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Move-construct from the range [first,last) into result.
 929:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  An input iterator.
 930:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __last   An input iterator.
 931:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __result An output iterator.
 932:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return   __result + (__first - __last)
 933:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 934:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template <typename _InputIterator, typename _ForwardIterator>
 935:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
 936:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_move(_InputIterator __first, _InputIterator __last,
 937:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		       _ForwardIterator __result)
 938:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 939:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return std::uninitialized_copy
 940:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	(_GLIBCXX_MAKE_MOVE_ITERATOR(__first),
 941:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	 _GLIBCXX_MAKE_MOVE_ITERATOR(__last), __result);
 942:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 943:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 944:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /**
 945:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @brief Move-construct from the range [first,first+count) into result.
 946:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __first  An input iterator.
 947:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __count  The number of objects to initialize.
 948:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @param  __result An output iterator.
 949:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****    *  @return  __result + __count
 950:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   */
 951:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template <typename _InputIterator, typename _Size, typename _ForwardIterator>
 952:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline pair<_InputIterator, _ForwardIterator>
 953:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     uninitialized_move_n(_InputIterator __first, _Size __count,
 954:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			 _ForwardIterator __result)
 955:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 956:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       auto __res = std::__uninitialized_copy_n_pair
 957:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	(_GLIBCXX_MAKE_MOVE_ITERATOR(__first),
 958:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	 __count, __result);
 959:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return {__res.first.base(), __res.second};
 960:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 961:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #endif // C++17
 962:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 963:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** #if __cplusplus >= 201103L
 964:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   /// @cond undocumented
 965:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 966:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _Tp, typename _Up, typename _Allocator>
 967:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline void
 968:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __relocate_object_a(_Tp* __restrict __dest, _Up* __restrict __orig,
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 371


 969:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			_Allocator& __alloc)
 970:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     noexcept(noexcept(std::allocator_traits<_Allocator>::construct(__alloc,
 971:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			 __dest, std::move(*__orig)))
 972:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	     && noexcept(std::allocator_traits<_Allocator>::destroy(
 973:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 			    __alloc, std::__addressof(*__orig))))
 974:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 975:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef std::allocator_traits<_Allocator> __traits;
 976:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __traits::construct(__alloc, __dest, std::move(*__orig));
 977:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       __traits::destroy(__alloc, std::__addressof(*__orig));
 978:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 979:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 980:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // This class may be specialized for specific types.
 981:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   // Also known as is_trivially_relocatable.
 982:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template<typename _Tp, typename = void>
 983:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     struct __is_bitwise_relocatable
 984:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     : is_trivial<_Tp> { };
 985:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 986:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template <typename _Tp, typename _Up>
 987:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline __enable_if_t<std::__is_bitwise_relocatable<_Tp>::value, _Tp*>
 988:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __relocate_a_1(_Tp* __first, _Tp* __last,
 989:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		   _Tp* __result, allocator<_Up>&) noexcept
 990:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
 991:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       ptrdiff_t __count = __last - __first;
 992:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       if (__count > 0)
 4626              		.loc 31 992 7 view .LVU1086
 4627 0038 002D     		cmp	r5, #0
 4628              	.LBE4065:
 4629              	.LBE4064:
 4630              	.LBE4063:
 4631              	.LBE4062:
 4632              	.LBE4061:
 4633              	.LBE4060:
 4634              	.LBB4081:
 4635              	.LBB4058:
 4636              	.LBB4056:
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4637              		.loc 12 150 4 view .LVU1087
 4638 003a 4BF80530 		str	r3, [fp, r5]
 4639              	.LVL219:
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 4640              		.loc 12 150 4 view .LVU1088
 4641              	.LBE4056:
 4642              	.LBE4058:
 4643              	.LBE4081:
 4644              	.LBB4082:
 4645              	.LBI4060:
 465:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  _Tp_alloc_type& __alloc) noexcept
 4646              		.loc 29 465 7 is_stmt 1 view .LVU1089
 4647              	.LBB4078:
 4648              	.LBB4075:
 4649              	.LBI4062:
 453:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		     _Tp_alloc_type& __alloc, true_type) noexcept
 4650              		.loc 29 453 7 view .LVU1090
 4651              	.LBB4072:
 4652              	.LBI4063:
 993:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 994:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __result + __count;
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 372


 995:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 996:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
 997:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template <typename _InputIterator, typename _ForwardIterator,
 998:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    typename _Allocator>
 999:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
1000:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __relocate_a_1(_InputIterator __first, _InputIterator __last,
1001:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		   _ForwardIterator __result, _Allocator& __alloc)
1002:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     noexcept(noexcept(std::__relocate_object_a(std::addressof(*__result),
1003:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 					       std::addressof(*__first),
1004:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 					       __alloc)))
1005:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     {
1006:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_InputIterator>::value_type
1007:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType;
1008:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
1009:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	_ValueType2;
1010:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       static_assert(std::is_same<_ValueType, _ValueType2>::value,
1011:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	  "relocation is only possible for values of the same type");
1012:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       _ForwardIterator __cur = __result;
1013:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       for (; __first != __last; ++__first, (void)++__cur)
1014:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
1015:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 				 std::__addressof(*__first), __alloc);
1016:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __cur;
1017:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
1018:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 
1019:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****   template <typename _InputIterator, typename _ForwardIterator,
1020:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	    typename _Allocator>
1021:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     inline _ForwardIterator
1022:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     __relocate_a(_InputIterator __first, _InputIterator __last,
 4653              		.loc 31 1022 5 view .LVU1091
 4654              	.LBB4069:
 4655              	.LBI4064:
 988:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		   _Tp* __result, allocator<_Up>&) noexcept
 4656              		.loc 31 988 5 view .LVU1092
 4657              	.LBB4066:
 992:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 4658              		.loc 31 992 7 is_stmt 0 view .LVU1093
 4659 003e 24DC     		bgt	.L171
 4660              	.LVL220:
 992:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 4661              		.loc 31 992 7 view .LVU1094
 4662              	.LBE4066:
 4663              	.LBE4069:
 4664              	.LBE4072:
 4665              	.LBE4075:
 4666              	.LBE4078:
 4667              	.LBE4082:
 4668              	.LBB4083:
 4669              	.LBB4084:
 4670              	.LBB4085:
 4671              	.LBB4086:
 4672              	.LBB4087:
 4673              	.LBB4088:
 991:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       if (__count > 0)
 4674              		.loc 31 991 34 view .LVU1095
 4675 0040 A9EB0709 		sub	r9, r9, r7
 4676              	.LVL221:
 991:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       if (__count > 0)
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 373


 4677              		.loc 31 991 34 view .LVU1096
 4678              	.LBE4088:
 4679              	.LBE4087:
 4680              	.LBE4086:
 4681              	.LBE4085:
 4682              	.LBE4084:
 4683              	.LBE4083:
 427:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_realloc_insert(iterator __position, _Args&&... __args)
 428:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 429:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****   template<typename _Tp, typename _Alloc>
 430:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     void
 431:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     vector<_Tp, _Alloc>::
 432:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     _M_realloc_insert(iterator __position, const _Tp& __x)
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 434:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     {
 435:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       const size_type __len =
 436:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	_M_check_len(size_type(1), "vector::_M_realloc_insert");
 437:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       pointer __old_start = this->_M_impl._M_start;
 438:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       pointer __old_finish = this->_M_impl._M_finish;
 439:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       const size_type __elems_before = __position - begin();
 440:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       pointer __new_start(this->_M_allocate(__len));
 441:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       pointer __new_finish(__new_start);
 442:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       __try
 443:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
 444:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  // The order of the three operations is dictated by the C++11
 445:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  // case, where the moves could alter a new element belonging
 446:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  // to the existing vector.  This is an issue only for callers
 447:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  // taking the element by lvalue ref (see last bullet of C++11
 448:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  // [res.on.arguments]).
 449:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _Alloc_traits::construct(this->_M_impl,
 450:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				   __new_start + __elems_before,
 451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 452:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				   std::forward<_Args>(__args)...);
 453:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #else
 454:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				   __x);
 455:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 456:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  __new_finish = pointer();
 457:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 458:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 459:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if _GLIBCXX17_CONSTEXPR (_S_use_relocate())
 460:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 461:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      __new_finish = _S_relocate(__old_start, __position.base(),
 462:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					 __new_start, _M_get_Tp_allocator());
 463:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 464:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      ++__new_finish;
 4684              		.loc 28 464 8 view .LVU1097
 4685 0044 0435     		adds	r5, r5, #4
 4686              	.LVL222:
 4687              	.LBB4124:
 4688              	.LBB4117:
 4689              	.LBB4110:
 4690              	.LBB4103:
 4691              	.LBB4096:
 4692              	.LBB4089:
 992:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 4693              		.loc 31 992 7 view .LVU1098
 4694 0046 B9F1000F 		cmp	r9, #0
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 374


 4695              	.LBE4089:
 4696              	.LBE4096:
 4697              	.LBE4103:
 4698              	.LBE4110:
 4699              	.LBE4117:
 4700              	.LBE4124:
 4701              		.loc 28 464 8 view .LVU1099
 4702 004a 5D44     		add	r5, r5, fp
 4703              	.LVL223:
 4704              	.LBB4125:
 4705              	.LBI4083:
 465:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  _Tp_alloc_type& __alloc) noexcept
 4706              		.loc 29 465 7 is_stmt 1 view .LVU1100
 4707              	.LBB4118:
 4708              	.LBB4111:
 4709              	.LBI4085:
 453:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		     _Tp_alloc_type& __alloc, true_type) noexcept
 4710              		.loc 29 453 7 view .LVU1101
 4711              	.LBB4104:
 4712              	.LBI4086:
 4713              		.loc 31 1022 5 view .LVU1102
 4714              	.LBB4097:
 4715              	.LBI4087:
 988:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		   _Tp* __result, allocator<_Up>&) noexcept
 4716              		.loc 31 988 5 view .LVU1103
 4717              	.LBB4090:
 992:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 4718              		.loc 31 992 7 is_stmt 0 view .LVU1104
 4719 004c 13DC     		bgt	.L156
 994:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 4720              		.loc 31 994 25 view .LVU1105
 4721 004e 4D44     		add	r5, r5, r9
 4722              	.LVL224:
 994:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 4723              		.loc 31 994 25 view .LVU1106
 4724              	.LBE4090:
 4725              	.LBE4097:
 4726              	.LBE4104:
 4727              	.LBE4111:
 4728              	.LBE4118:
 4729              	.LBE4125:
 4730              	.LBB4126:
 4731              	.LBI4126:
 350:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 4732              		.loc 29 350 7 is_stmt 1 view .LVU1107
 4733              	.LBB4127:
 353:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 4734              		.loc 29 353 2 is_stmt 0 view .LVU1108
 4735 0050 B8F1000F 		cmp	r8, #0
 4736 0054 04D1     		bne	.L172
 4737              	.LVL225:
 4738              	.L159:
 353:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 4739              		.loc 29 353 2 view .LVU1109
 4740              	.LBE4127:
 4741              	.LBE4126:
 465:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 375


 466:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      __new_finish = _S_relocate(__position.base(), __old_finish,
 467:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 					 __new_finish, _M_get_Tp_allocator());
 468:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 469:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  else
 470:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 471:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    {
 472:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      __new_finish
 473:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		= std::__uninitialized_move_if_noexcept_a
 474:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		(__old_start, __position.base(),
 475:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		 __new_start, _M_get_Tp_allocator());
 476:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 477:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      ++__new_finish;
 478:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 479:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	      __new_finish
 480:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		= std::__uninitialized_move_if_noexcept_a
 481:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		(__position.base(), __old_finish,
 482:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		 __new_finish, _M_get_Tp_allocator());
 483:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    }
 484:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
 485:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       __catch(...)
 486:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	{
 487:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  if (!__new_finish)
 488:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    _Alloc_traits::destroy(this->_M_impl,
 489:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 				   __new_start + __elems_before);
 490:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  else
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	    std::_Destroy(__new_start, __new_finish, _M_get_Tp_allocator());
 492:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  _M_deallocate(__new_start, __len);
 493:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	  __throw_exception_again;
 494:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	}
 495:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #if __cplusplus >= 201103L
 496:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       if _GLIBCXX17_CONSTEXPR (!_S_use_relocate())
 497:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** #endif
 498:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 	std::_Destroy(__old_start, __old_finish, _M_get_Tp_allocator());
 499:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _GLIBCXX_ASAN_ANNOTATE_REINIT;
 500:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       _M_deallocate(__old_start,
 501:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 		    this->_M_impl._M_end_of_storage - __old_start);
 502:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_start = __new_start;
 503:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_finish = __new_finish;
 504:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_end_of_storage = __new_start + __len;
 4742              		.loc 28 504 39 view .LVU1110
 4743 0056 B460     		str	r4, [r6, #8]
 503:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_end_of_storage = __new_start + __len;
 4744              		.loc 28 503 31 view .LVU1111
 4745 0058 C6E900B5 		strd	fp, r5, [r6]
 505:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 4746              		.loc 28 505 5 view .LVU1112
 4747 005c BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4748              	.LVL226:
 4749              	.L172:
 501:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_start = __new_start;
 4750              		.loc 28 501 39 view .LVU1113
 4751 0060 B168     		ldr	r1, [r6, #8]
 4752 0062 A1EB0801 		sub	r1, r1, r8
 4753              	.L161:
 4754              	.LVL227:
 4755              	.LBB4134:
 4756              	.LBB4132:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 376


 4757              	.LBB4128:
 4758              	.LBI4128:
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 4759              		.loc 13 491 7 is_stmt 1 view .LVU1114
 4760              	.LBB4129:
 4761              	.LBB4130:
 4762              	.LBI4130:
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 4763              		.loc 12 120 7 view .LVU1115
 4764              	.LBB4131:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 4765              		.loc 12 133 19 is_stmt 0 view .LVU1116
 4766 0066 4046     		mov	r0, r8
 4767 0068 FFF7FEFF 		bl	_ZdlPvj
 4768              	.LVL228:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 4769              		.loc 12 133 19 view .LVU1117
 4770              	.LBE4131:
 4771              	.LBE4130:
 4772              	.LBE4129:
 4773              	.LBE4128:
 4774              	.LBE4132:
 4775              	.LBE4134:
 504:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 4776              		.loc 28 504 39 view .LVU1118
 4777 006c B460     		str	r4, [r6, #8]
 503:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_end_of_storage = __new_start + __len;
 4778              		.loc 28 503 31 view .LVU1119
 4779 006e C6E900B5 		strd	fp, r5, [r6]
 4780              		.loc 28 505 5 view .LVU1120
 4781 0072 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4782              	.LVL229:
 4783              	.L156:
 4784              	.LBB4135:
 4785              	.LBB4119:
 4786              	.LBB4112:
 4787              	.LBB4105:
 4788              	.LBB4098:
 4789              	.LBB4091:
 993:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __result + __count;
 4790              		.loc 31 993 19 view .LVU1121
 4791 0076 2846     		mov	r0, r5
 4792 0078 3946     		mov	r1, r7
 4793 007a 4A46     		mov	r2, r9
 994:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 4794              		.loc 31 994 25 view .LVU1122
 4795 007c 4D44     		add	r5, r5, r9
 4796              	.LVL230:
 993:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __result + __count;
 4797              		.loc 31 993 19 view .LVU1123
 4798 007e FFF7FEFF 		bl	memcpy
 4799              	.LVL231:
 993:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __result + __count;
 4800              		.loc 31 993 19 view .LVU1124
 4801              	.LBE4091:
 4802              	.LBE4098:
 4803              	.LBE4105:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 377


 4804              	.LBE4112:
 4805              	.LBE4119:
 4806              	.LBE4135:
 4807              	.LBB4136:
 350:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 4808              		.loc 29 350 7 is_stmt 1 view .LVU1125
 4809              	.LBB4133:
 353:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 4810              		.loc 29 353 2 is_stmt 0 view .LVU1126
 4811 0082 B8F1000F 		cmp	r8, #0
 4812 0086 E6D0     		beq	.L159
 4813 0088 EAE7     		b	.L172
 4814              	.LVL232:
 4815              	.L171:
 353:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 4816              		.loc 29 353 2 view .LVU1127
 4817              	.LBE4133:
 4818              	.LBE4136:
 4819              	.LBB4137:
 4820              	.LBB4120:
 4821              	.LBB4113:
 4822              	.LBB4106:
 4823              	.LBB4099:
 4824              	.LBB4092:
 991:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       if (__count > 0)
 4825              		.loc 31 991 34 view .LVU1128
 4826 008a A9EB0709 		sub	r9, r9, r7
 4827              	.LVL233:
 991:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       if (__count > 0)
 4828              		.loc 31 991 34 view .LVU1129
 4829              	.LBE4092:
 4830              	.LBE4099:
 4831              	.LBE4106:
 4832              	.LBE4113:
 4833              	.LBE4120:
 4834              	.LBE4137:
 4835              	.LBB4138:
 4836              	.LBB4079:
 4837              	.LBB4076:
 4838              	.LBB4073:
 4839              	.LBB4070:
 4840              	.LBB4067:
 993:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __result + __count;
 4841              		.loc 31 993 19 view .LVU1130
 4842 008e 2A46     		mov	r2, r5
 4843 0090 4146     		mov	r1, r8
 4844 0092 5846     		mov	r0, fp
 4845              	.LBE4067:
 4846              	.LBE4070:
 4847              	.LBE4073:
 4848              	.LBE4076:
 4849              	.LBE4079:
 4850              	.LBE4138:
 464:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 4851              		.loc 28 464 8 view .LVU1131
 4852 0094 0435     		adds	r5, r5, #4
 4853              	.LVL234:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 378


 4854              	.LBB4139:
 4855              	.LBB4080:
 4856              	.LBB4077:
 4857              	.LBB4074:
 4858              	.LBB4071:
 4859              	.LBB4068:
 993:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __result + __count;
 4860              		.loc 31 993 19 view .LVU1132
 4861 0096 FFF7FEFF 		bl	memmove
 4862              	.LVL235:
 993:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****       return __result + __count;
 4863              		.loc 31 993 19 view .LVU1133
 4864              	.LBE4068:
 4865              	.LBE4071:
 4866              	.LBE4074:
 4867              	.LBE4077:
 4868              	.LBE4080:
 4869              	.LBE4139:
 4870              	.LBB4140:
 4871              	.LBB4121:
 4872              	.LBB4114:
 4873              	.LBB4107:
 4874              	.LBB4100:
 4875              	.LBB4093:
 992:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 4876              		.loc 31 992 7 view .LVU1134
 4877 009a B9F1000F 		cmp	r9, #0
 4878              	.LBE4093:
 4879              	.LBE4100:
 4880              	.LBE4107:
 4881              	.LBE4114:
 4882              	.LBE4121:
 4883              	.LBE4140:
 464:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc **** 
 4884              		.loc 28 464 8 view .LVU1135
 4885 009e 5D44     		add	r5, r5, fp
 4886              	.LVL236:
 4887              	.LBB4141:
 465:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		  _Tp_alloc_type& __alloc) noexcept
 4888              		.loc 29 465 7 is_stmt 1 view .LVU1136
 4889              	.LBB4122:
 4890              	.LBB4115:
 453:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 		     _Tp_alloc_type& __alloc, true_type) noexcept
 4891              		.loc 29 453 7 view .LVU1137
 4892              	.LBB4108:
 4893              		.loc 31 1022 5 view .LVU1138
 4894              	.LBB4101:
 988:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 		   _Tp* __result, allocator<_Up>&) noexcept
 4895              		.loc 31 988 5 view .LVU1139
 4896              	.LBB4094:
 992:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h **** 	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 4897              		.loc 31 992 7 is_stmt 0 view .LVU1140
 4898 00a0 E9DC     		bgt	.L156
 4899              	.LBE4094:
 4900              	.LBE4101:
 4901              	.LBE4108:
 4902              	.LBE4115:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 379


 4903              	.LBE4122:
 4904              	.LBE4141:
 501:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_start = __new_start;
 4905              		.loc 28 501 39 view .LVU1141
 4906 00a2 B168     		ldr	r1, [r6, #8]
 4907              	.LBB4142:
 4908              	.LBB4123:
 4909              	.LBB4116:
 4910              	.LBB4109:
 4911              	.LBB4102:
 4912              	.LBB4095:
 994:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 4913              		.loc 31 994 25 view .LVU1142
 4914 00a4 4D44     		add	r5, r5, r9
 4915              	.LVL237:
 994:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_uninitialized.h ****     }
 4916              		.loc 31 994 25 view .LVU1143
 4917              	.LBE4095:
 4918              	.LBE4102:
 4919              	.LBE4109:
 4920              	.LBE4116:
 4921              	.LBE4123:
 4922              	.LBE4142:
 501:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****       this->_M_impl._M_start = __new_start;
 4923              		.loc 28 501 39 view .LVU1144
 4924 00a6 A1EB0801 		sub	r1, r1, r8
 4925              	.LVL238:
 4926              	.LBB4143:
 350:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 4927              		.loc 29 350 7 is_stmt 1 view .LVU1145
 4928 00aa DCE7     		b	.L161
 4929              	.LVL239:
 4930              	.L170:
 350:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 4931              		.loc 29 350 7 is_stmt 0 view .LVU1146
 4932              	.LBE4143:
 4933              	.LBB4144:
 4934              	.LBB4051:
 4935              	.LBB4046:
 4936              	.LBB4047:
 4937              	.LBB4048:
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 4938              		.loc 12 115 41 view .LVU1147
 4939 00ac 8C42     		cmp	r4, r1
 4940 00ae 28BF     		it	cs
 4941 00b0 0C46     		movcs	r4, r1
 4942              	.LVL240:
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 4943              		.loc 12 115 41 view .LVU1148
 4944 00b2 A400     		lsls	r4, r4, #2
 4945              	.LVL241:
 4946              	.L153:
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 4947              		.loc 12 115 41 view .LVU1149
 4948              	.LBE4048:
 4949              	.LBE4047:
 4950              	.LBI4046:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 380


 459:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 4951              		.loc 13 459 7 is_stmt 1 view .LVU1150
 4952              	.LBB4050:
 4953              	.LBI4047:
 103:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 4954              		.loc 12 103 7 view .LVU1151
 4955              	.LBB4049:
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 4956              		.loc 12 115 41 is_stmt 0 view .LVU1152
 4957 00b4 2046     		mov	r0, r4
 4958              	.LVL242:
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 4959              		.loc 12 115 41 view .LVU1153
 4960 00b6 FFF7FEFF 		bl	_Znwj
 4961              	.LVL243:
 4962 00ba 8346     		mov	fp, r0
 4963              	.LVL244:
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 4964              		.loc 12 115 41 view .LVU1154
 4965              	.LBE4049:
 4966              	.LBE4050:
 4967              	.LBE4046:
 4968              	.LBE4051:
 4969              	.LBE4144:
 504:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 4970              		.loc 28 504 53 view .LVU1155
 4971 00bc 0444     		add	r4, r4, r0
 4972              	.LBB4145:
 4973              	.LBB4052:
 4974 00be B9E7     		b	.L160
 4975              	.LVL245:
 4976              	.L151:
 504:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\vector.tcc ****     }
 4977              		.loc 28 504 53 view .LVU1156
 4978              	.LBE4052:
 4979              	.LBE4145:
 4980              	.LBB4146:
 811:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 4981              		.loc 29 811 7 is_stmt 1 view .LVU1157
 4982              	.LBB4042:
 978:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 4983              		.loc 30 978 7 view .LVU1158
 978:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 4984              		.loc 30 978 7 is_stmt 0 view .LVU1159
 4985              	.LBE4042:
 4986              	.LBE4146:
 4987              	.LBB4147:
1202:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
 4988              		.loc 30 1202 5 is_stmt 1 view .LVU1160
1202:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
 4989              		.loc 30 1202 5 is_stmt 0 view .LVU1161
 4990              	.LBE4147:
 4991              	.LBB4148:
 343:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 4992              		.loc 29 343 7 is_stmt 1 view .LVU1162
 4993              	.LBE4148:
 4994              	.LBB4149:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 381


 4995              	.LBB4039:
 4996              		.loc 30 1205 27 is_stmt 0 view .LVU1163
 4997 00c0 024C     		ldr	r4, .L173
 4998 00c2 F7E7     		b	.L153
 4999              	.LVL246:
 5000              	.L169:
 5001              		.loc 30 1205 27 view .LVU1164
 5002              	.LBE4039:
 5003              	.LBE4149:
 5004              	.LBB4150:
 5005              	.LBB4035:
1759:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  __throw_length_error(__N(__s));
 5006              		.loc 29 1759 24 view .LVU1165
 5007 00c4 0248     		ldr	r0, .L173+4
 5008              	.LVL247:
 5009              		.loc 29 1759 24 view .LVU1166
 5010 00c6 FFF7FEFF 		bl	_ZSt20__throw_length_errorPKc
 5011              	.LVL248:
 5012              	.L174:
 5013 00ca 00BF     		.align	2
 5014              	.L173:
 5015 00cc FCFFFF7F 		.word	2147483644
 5016 00d0 00000000 		.word	.LC4
 5017              	.LBE4035:
 5018              	.LBE4150:
 5019              		.cfi_endproc
 5020              	.LFE6039:
 5022              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 5023              		.align	2
 5024              	.LC5:
 5025 0000 506F7431 		.ascii	"Pot1\000"
 5025      00
 5026              		.section	.text.startup.main,"ax",%progbits
 5027              		.align	1
 5028              		.p2align 2,,3
 5029              		.global	main
 5030              		.syntax unified
 5031              		.thumb
 5032              		.thumb_func
 5033              		.fpu fpv5-d16
 5035              	main:
 5036              	.LFB5457:
 120:src/main.cpp  **** 
 121:src/main.cpp  **** int main(void)
 122:src/main.cpp  **** {
 5037              		.loc 8 122 1 is_stmt 1 view -0
 5038              		.cfi_startproc
 5039              		@ args = 0, pretend = 0, frame = 1088
 5040              		@ frame_needed = 0, uses_anonymous_args = 0
 123:src/main.cpp  **** 	hw.Init();
 5041              		.loc 8 123 2 view .LVU1168
 122:src/main.cpp  **** 	hw.Init();
 5042              		.loc 8 122 1 is_stmt 0 view .LVU1169
 5043 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5044              		.cfi_def_cfa_offset 36
 5045              		.cfi_offset 4, -36
 5046              		.cfi_offset 5, -32
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 382


 5047              		.cfi_offset 6, -28
 5048              		.cfi_offset 7, -24
 5049              		.cfi_offset 8, -20
 5050              		.cfi_offset 9, -16
 5051              		.cfi_offset 10, -12
 5052              		.cfi_offset 11, -8
 5053              		.cfi_offset 14, -4
 5054 0004 2DED028B 		vpush.64	{d8}
 5055              		.cfi_def_cfa_offset 44
 5056              		.cfi_offset 80, -44
 5057              		.cfi_offset 81, -40
 5058 0008 DFED5E8A 		vldr.32	s17, .L230	@ int
 5059 000c ADF24C4D 		subw	sp, sp, #1100
 5060              		.cfi_def_cfa_offset 1144
 5061              		.loc 8 123 9 view .LVU1170
 5062 0010 5D48     		ldr	r0, .L230+4
 5063 0012 18EE901A 		vmov	r1, s17	@ int
 122:src/main.cpp  **** 	hw.Init();
 5064              		.loc 8 122 1 view .LVU1171
 5065 0016 18EE904A 		vmov	r4, s17	@ int
 5066              		.loc 8 123 9 view .LVU1172
 5067 001a FFF7FEFF 		bl	_ZN5daisy9DaisySeed4InitEb
 5068              	.LVL249:
 124:src/main.cpp  **** 	hw.SetAudioBlockSize(4); // number of samples handled per callback
 5069              		.loc 8 124 2 is_stmt 1 view .LVU1173
 5070              		.loc 8 124 22 is_stmt 0 view .LVU1174
 5071 001e 0421     		movs	r1, #4
 5072 0020 5948     		ldr	r0, .L230+4
 5073 0022 0DF58965 		add	r5, sp, #1096
 5074 0026 FFF7FEFF 		bl	_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
 5075              	.LVL250:
 125:src/main.cpp  **** 	hw.SetAudioSampleRate(SaiHandle::Config::SampleRate::SAI_48KHZ);
 5076              		.loc 8 125 2 is_stmt 1 view .LVU1175
 5077              		.loc 8 125 23 is_stmt 0 view .LVU1176
 5078 002a 0321     		movs	r1, #3
 5079 002c 5648     		ldr	r0, .L230+4
 5080 002e FFF7FEFF 		bl	_ZN5daisy9DaisySeed18SetAudioSampleRateENS_9SaiHandle6Config10SampleRateE
 5081              	.LVL251:
 126:src/main.cpp  **** 	hw.StartAudio(AudioCallback); // callback in AudioHandler.h
 5082              		.loc 8 126 2 is_stmt 1 view .LVU1177
 5083              		.loc 8 126 15 is_stmt 0 view .LVU1178
 5084 0032 5649     		ldr	r1, .L230+8
 5085 0034 5448     		ldr	r0, .L230+4
 5086 0036 FFF7FEFF 		bl	_ZN5daisy9DaisySeed10StartAudioEPFvPKPKfPPfjE
 5087              	.LVL252:
 127:src/main.cpp  **** 	hw.StartLog(true);
 5088              		.loc 8 127 2 is_stmt 1 view .LVU1179
 5089              	.LBB4795:
 5090              	.LBI4795:
 122:../../libdaisy//src/daisy_seed.h ****     }
 123:../../libdaisy//src/daisy_seed.h **** 
 124:../../libdaisy//src/daisy_seed.h ****     /** Start the logging session. Optionally wait for terminal connection before proceeding.
 125:../../libdaisy//src/daisy_seed.h ****     */
 126:../../libdaisy//src/daisy_seed.h ****     static void StartLog(bool wait_for_pc = false)
 5091              		.loc 3 126 17 view .LVU1180
 5092              	.LBB4796:
 127:../../libdaisy//src/daisy_seed.h ****     {
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 383


 128:../../libdaisy//src/daisy_seed.h ****         Log::StartLog(wait_for_pc);
 5093              		.loc 3 128 9 view .LVU1181
 5094              		.loc 3 128 22 is_stmt 0 view .LVU1182
 5095 003a 0120     		movs	r0, #1
 5096 003c FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE8StartLogEb
 5097              	.LVL253:
 5098              		.loc 3 128 22 view .LVU1183
 5099              	.LBE4796:
 5100              	.LBE4795:
 128:src/main.cpp  **** 
 129:src/main.cpp  **** 	UART_Init(usart1);
 5101              		.loc 8 129 2 is_stmt 1 view .LVU1184
 5102              		.loc 8 129 11 is_stmt 0 view .LVU1185
 5103 0040 5348     		ldr	r0, .L230+12
 5104 0042 FFF7FEFF 		bl	_Z9UART_InitRN5daisy11UartHandlerE
 5105              	.LVL254:
 130:src/main.cpp  **** 
 131:src/main.cpp  **** 	//parameterMap.init();
 132:src/main.cpp  **** 
 133:src/main.cpp  **** 	param p[10];
 5106              		.loc 8 133 2 is_stmt 1 view .LVU1186
 5107              		.loc 8 133 12 view .LVU1187
 5108 0046 36AB     		add	r3, sp, #216
 5109              	.L176:
 5110              	.LVL255:
 5111              	.LBB4797:
 5112              	.LBI4797:
  37:src/parameter_controller.h **** 	std::string label;
 5113              		.loc 15 37 8 view .LVU1188
 5114              	.LBB4798:
 5115              	.LBI4798:
 431:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(is_nothrow_default_constructible<_Alloc>::value)
 5116              		.loc 16 431 7 view .LVU1189
 5117              	.LBB4799:
 5118              	.LBI4799:
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5119              		.loc 16 190 7 view .LVU1190
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5120              		.loc 16 190 7 is_stmt 0 view .LVU1191
 5121              	.LBE4799:
 5122              	.LBB4800:
 5123              	.LBI4800:
 144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 5124              		.loc 11 144 7 is_stmt 1 view .LVU1192
 5125              	.LBB4801:
 5126              	.LBI4801:
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5127              		.loc 12 79 7 view .LVU1193
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5128              		.loc 12 79 7 is_stmt 0 view .LVU1194
 5129              	.LBE4801:
 5130              	.LBE4800:
 5131              	.LBB4802:
 5132              	.LBI4802:
 159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 5133              		.loc 16 159 2 is_stmt 1 view .LVU1195
 5134              	.LBB4803:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 384


 5135              	.LBB4804:
 5136              	.LBI4804:
 5137              		.loc 19 101 5 view .LVU1196
 5138              		.loc 19 101 5 is_stmt 0 view .LVU1197
 5139              	.LBE4804:
 5140              	.LBB4805:
 5141              	.LBI4805:
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 5142              		.loc 11 147 7 is_stmt 1 view .LVU1198
 5143              	.LBB4806:
 5144              	.LBI4806:
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5145              		.loc 12 82 7 view .LVU1199
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5146              		.loc 12 82 7 is_stmt 0 view .LVU1200
 5147              	.LBE4806:
 5148              	.LBE4805:
 5149              	.LBE4803:
 5150              	.LBE4802:
 5151              	.LBB4808:
 5152              	.LBB4809:
 5153              	.LBB4810:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 5154              		.loc 16 183 26 view .LVU1201
 5155 0048 0026     		movs	r6, #0
 5156              	.LBE4810:
 5157              	.LBE4809:
 5158              	.LBE4808:
 5159              	.LBB4817:
 5160              	.LBB4807:
 160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 5161              		.loc 16 160 46 view .LVU1202
 5162 004a 03F10800 		add	r0, r3, #8
 5163              	.LVL256:
 160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 5164              		.loc 16 160 46 view .LVU1203
 5165              	.LBE4807:
 5166              	.LBE4817:
 5167              	.LBE4798:
 5168              	.LBB4820:
 5169              	.LBB4821:
 5170              	.LBB4822:
 5171 004e 03F12001 		add	r1, r3, #32
 5172              	.LBE4822:
 5173              	.LBE4821:
 5174              	.LBE4820:
 5175              	.LBB4839:
 5176              	.LBB4840:
 5177              	.LBB4841:
 5178 0052 03F13802 		add	r2, r3, #56
 5179              	.LBE4841:
 5180              	.LBE4840:
 5181              	.LBE4839:
 5182              	.LBB4858:
 5183              	.LBB4818:
 5184              	.LBB4812:
 5185              	.LBB4813:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 385


 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 5186              		.loc 17 322 14 view .LVU1204
 5187 0056 1E72     		strb	r6, [r3, #8]
 5188              	.LBE4813:
 5189              	.LBE4812:
 5190              	.LBE4818:
 5191              	.LBE4858:
 5192              	.LBB4859:
 5193              	.LBB4827:
 5194              	.LBB4828:
 5195              	.LBB4829:
 5196 0058 83F82060 		strb	r6, [r3, #32]
 5197              	.LBE4829:
 5198              	.LBE4828:
 5199              	.LBE4827:
 5200              	.LBE4859:
 5201              	.LBB4860:
 5202              	.LBB4846:
 5203              	.LBB4847:
 5204              	.LBB4848:
 5205 005c 83F83860 		strb	r6, [r3, #56]
 5206              	.LBE4848:
 5207              	.LBE4847:
 5208              	.LBE4846:
 5209              	.LBE4860:
 5210              	.LBB4861:
 5211              	.LBB4819:
 5212              	.LBB4815:
 5213              	.LBB4811:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 5214              		.loc 16 183 26 view .LVU1205
 5215 0060 C3E90006 		strd	r0, r6, [r3]
 5216              	.LVL257:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 5217              		.loc 16 183 26 view .LVU1206
 5218              	.LBE4811:
 5219              	.LBE4815:
 5220              	.LBB4816:
 5221              	.LBI4812:
 321:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 5222              		.loc 17 321 7 is_stmt 1 view .LVU1207
 5223              	.LBB4814:
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 5224              		.loc 17 322 9 view .LVU1208
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 5225              		.loc 17 322 9 is_stmt 0 view .LVU1209
 5226              	.LBE4814:
 5227              	.LBE4816:
 5228              	.LBE4819:
 5229              	.LBE4861:
 5230              	.LBB4862:
 5231              	.LBI4820:
 431:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(is_nothrow_default_constructible<_Alloc>::value)
 5232              		.loc 16 431 7 is_stmt 1 view .LVU1210
 5233              	.LBB4834:
 5234              	.LBI4834:
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 386


 5235              		.loc 16 190 7 view .LVU1211
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5236              		.loc 16 190 7 is_stmt 0 view .LVU1212
 5237              	.LBE4834:
 5238              	.LBB4835:
 5239              	.LBI4835:
 144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 5240              		.loc 11 144 7 is_stmt 1 view .LVU1213
 5241              	.LBB4836:
 5242              	.LBI4836:
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5243              		.loc 12 79 7 view .LVU1214
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5244              		.loc 12 79 7 is_stmt 0 view .LVU1215
 5245              	.LBE4836:
 5246              	.LBE4835:
 5247              	.LBB4837:
 5248              	.LBI4821:
 159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 5249              		.loc 16 159 2 is_stmt 1 view .LVU1216
 5250              	.LBB4826:
 5251              	.LBB4823:
 5252              	.LBI4823:
 5253              		.loc 19 101 5 view .LVU1217
 5254              		.loc 19 101 5 is_stmt 0 view .LVU1218
 5255              	.LBE4823:
 5256              	.LBB4824:
 5257              	.LBI4824:
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 5258              		.loc 11 147 7 is_stmt 1 view .LVU1219
 5259              	.LBB4825:
 5260              	.LBI4825:
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5261              		.loc 12 82 7 view .LVU1220
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5262              		.loc 12 82 7 is_stmt 0 view .LVU1221
 5263              	.LBE4825:
 5264              	.LBE4824:
 5265              	.LBE4826:
 5266              	.LBE4837:
 5267              	.LBB4838:
 5268              	.LBB4831:
 5269              	.LBB4832:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 5270              		.loc 16 183 26 view .LVU1222
 5271 0064 C3E90616 		strd	r1, r6, [r3, #24]
 5272              	.LVL258:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 5273              		.loc 16 183 26 view .LVU1223
 5274              	.LBE4832:
 5275              	.LBE4831:
 5276              	.LBB4833:
 5277              	.LBI4828:
 321:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 5278              		.loc 17 321 7 is_stmt 1 view .LVU1224
 5279              	.LBB4830:
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 387


 5280              		.loc 17 322 9 view .LVU1225
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 5281              		.loc 17 322 9 is_stmt 0 view .LVU1226
 5282              	.LBE4830:
 5283              	.LBE4833:
 5284              	.LBE4838:
 5285              	.LBE4862:
 5286              	.LBB4863:
 5287              	.LBI4839:
 431:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(is_nothrow_default_constructible<_Alloc>::value)
 5288              		.loc 16 431 7 is_stmt 1 view .LVU1227
 5289              	.LBB4853:
 5290              	.LBI4853:
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5291              		.loc 16 190 7 view .LVU1228
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5292              		.loc 16 190 7 is_stmt 0 view .LVU1229
 5293              	.LBE4853:
 5294              	.LBB4854:
 5295              	.LBI4854:
 144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 5296              		.loc 11 144 7 is_stmt 1 view .LVU1230
 5297              	.LBB4855:
 5298              	.LBI4855:
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5299              		.loc 12 79 7 view .LVU1231
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5300              		.loc 12 79 7 is_stmt 0 view .LVU1232
 5301              	.LBE4855:
 5302              	.LBE4854:
 5303              	.LBB4856:
 5304              	.LBI4840:
 159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 5305              		.loc 16 159 2 is_stmt 1 view .LVU1233
 5306              	.LBB4845:
 5307              	.LBB4842:
 5308              	.LBI4842:
 5309              		.loc 19 101 5 view .LVU1234
 5310              		.loc 19 101 5 is_stmt 0 view .LVU1235
 5311              	.LBE4842:
 5312              	.LBB4843:
 5313              	.LBI4843:
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 5314              		.loc 11 147 7 is_stmt 1 view .LVU1236
 5315              	.LBB4844:
 5316              	.LBI4844:
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5317              		.loc 12 82 7 view .LVU1237
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5318              		.loc 12 82 7 is_stmt 0 view .LVU1238
 5319              	.LBE4844:
 5320              	.LBE4843:
 5321              	.LBE4845:
 5322              	.LBE4856:
 5323              	.LBB4857:
 5324              	.LBB4850:
 5325              	.LBB4851:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 388


 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 5326              		.loc 16 183 26 view .LVU1239
 5327 0068 C3E90C26 		strd	r2, r6, [r3, #48]
 5328              	.LVL259:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 5329              		.loc 16 183 26 view .LVU1240
 5330              	.LBE4851:
 5331              	.LBE4850:
 5332              	.LBB4852:
 5333              	.LBI4847:
 321:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 5334              		.loc 17 321 7 is_stmt 1 view .LVU1241
 5335              	.LBB4849:
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 5336              		.loc 17 322 9 view .LVU1242
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 5337              		.loc 17 322 9 is_stmt 0 view .LVU1243
 5338              	.LBE4849:
 5339              	.LBE4852:
 5340              	.LBE4857:
 5341              	.LBE4863:
 5342              	.LBE4797:
 5343              		.loc 8 133 12 is_stmt 1 view .LVU1244
 5344              		.loc 8 133 12 view .LVU1245
 5345 006c 5833     		adds	r3, r3, #88
 5346              	.LVL260:
 5347              		.loc 8 133 12 is_stmt 0 view .LVU1246
 5348 006e 9D42     		cmp	r5, r3
 5349 0070 EAD1     		bne	.L176
 134:src/main.cpp  **** 
 135:src/main.cpp  **** 	p[0].label = "Pot1";
 5350              		.loc 8 135 2 is_stmt 1 discriminator 2 view .LVU1247
 5351              	.LVL261:
 5352              	.LBB4864:
 5353              	.LBI4864:
 675:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return this->assign(__s); }
 5354              		.loc 16 675 7 discriminator 2 view .LVU1248
 5355              	.LBB4865:
 676:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 5356              		.loc 16 676 28 is_stmt 0 discriminator 2 view .LVU1249
 5357 0072 4849     		ldr	r1, .L230+16
 5358              	.LVL262:
 676:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 5359              		.loc 16 676 28 discriminator 2 view .LVU1250
 5360 0074 36A8     		add	r0, sp, #216
 5361              	.LVL263:
 676:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 5362              		.loc 16 676 28 discriminator 2 view .LVU1251
 5363 0076 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKc
 5364              	.LVL264:
 676:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 5365              		.loc 16 676 28 discriminator 2 view .LVU1252
 5366              	.LBE4865:
 5367              	.LBE4864:
 136:src/main.cpp  **** 	p[0].val = 1;
 5368              		.loc 8 136 2 is_stmt 1 discriminator 2 view .LVU1253
 5369              		.loc 8 136 11 is_stmt 0 discriminator 2 view .LVU1254
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 389


 5370 007a 4FF07E53 		mov	r3, #1065353216
 5371              	.LBB4866:
 5372              	.LBB4867:
 688:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
 5373              		.loc 16 688 14 discriminator 2 view .LVU1255
 5374 007e 3246     		mov	r2, r6
 5375 0080 0121     		movs	r1, #1
 5376 0082 3CA8     		add	r0, sp, #240
 5377              	.LBE4867:
 5378              	.LBE4866:
 5379              		.loc 8 136 11 discriminator 2 view .LVU1256
 5380 0084 4993     		str	r3, [sp, #292]	@ float
 137:src/main.cpp  **** 	p[0].type = param_type::kPot;
 5381              		.loc 8 137 2 is_stmt 1 discriminator 2 view .LVU1257
 5382              	.LVL265:
 5383              	.LBB4869:
 5384              	.LBI4866:
 686:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5385              		.loc 16 686 7 discriminator 2 view .LVU1258
 5386              	.LBB4868:
 688:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
 5387              		.loc 16 688 14 is_stmt 0 discriminator 2 view .LVU1259
 5388 0086 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEjc
 5389              	.LVL266:
 688:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
 5390              		.loc 16 688 14 discriminator 2 view .LVU1260
 5391              	.LBE4868:
 5392              	.LBE4869:
 138:src/main.cpp  **** 
 139:src/main.cpp  **** 	parameterMap.insert(p[0]);
 5393              		.loc 8 139 2 is_stmt 1 discriminator 2 view .LVU1261
 5394              		.loc 8 139 26 is_stmt 0 discriminator 2 view .LVU1262
 5395 008a 36A9     		add	r1, sp, #216
 5396 008c 09A8     		add	r0, sp, #36
 5397              	.LBB4870:
 5398              	.LBB4871:
 5399              	.LBB4872:
 5400              	.LBB4873:
 5401              	.LBB4874:
 5402              	.LBB4875:
 5403              	.LBB4876:
 5404              	.LBB4877:
 5405              	.LBB4878:
 5406              	.LBB4879:
 5407              	.LBB4880:
 5408              	.LBB4881:
 5409              	.LBB4882:
 5410              	.LBB4883:
 5411              	.LBB4884:
 5412              	.LBB4885:
 5413              	.LBB4886:
 555:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 5414              		.loc 16 555 2 discriminator 2 view .LVU1263
 5415 008e 22AF     		add	r7, sp, #136
 5416              	.LBE4886:
 5417              	.LBE4885:
 5418              	.LBE4884:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 390


 5419              	.LBE4883:
 5420              	.LBE4882:
 5421              	.LBE4881:
 5422              	.LBE4880:
 5423              	.LBE4879:
 5424              	.LBE4878:
 5425              	.LBE4877:
 5426              	.LBE4876:
 5427              	.LBE4875:
 5428              	.LBE4874:
 5429              	.LBE4873:
 5430              	.LBE4872:
 5431              	.LBE4871:
 5432              	.LBE4870:
 5433              		.loc 8 139 26 discriminator 2 view .LVU1264
 5434 0090 FFF7FEFF 		bl	_ZN5paramC1ERKS_
 5435              	.LVL267:
 5436              	.LBB5343:
 5437              	.LBI4870:
 100:src/parameter_controller.h ****         int index = p.index;
 5438              		.loc 15 100 10 is_stmt 1 discriminator 2 view .LVU1265
 5439              	.LBB5339:
 101:src/parameter_controller.h **** 
 5440              		.loc 15 101 9 discriminator 2 view .LVU1266
 103:src/parameter_controller.h ****     }
 5441              		.loc 15 103 9 discriminator 2 view .LVU1267
 5442              	.LBB5273:
 5443              	.LBI5273:
 212:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     : private __pair_base<_T1, _T2>
 213:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     {
 214:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       typedef _T1 first_type;    ///< The type of the `first` member
 215:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       typedef _T2 second_type;   ///< The type of the `second` member
 216:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 217:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       _T1 first;                 ///< The first member
 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       _T2 second;                ///< The second member
 219:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 220:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       // 265.  std::pair::pair() effects overly restrictive
 222:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /** The default constructor creates @c first and @c second using their
 223:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        *  respective default constructors.  */
 224:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus >= 201103L
 225:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1 = _T1,
 226:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                 typename _U2 = _T2,
 227:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                 typename enable_if<__and_<
 228:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                                      __is_implicitly_default_constructible<_U1>,
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                                      __is_implicitly_default_constructible<_U2>>
 230:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                                    ::value, bool>::type = true>
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif
 232:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       _GLIBCXX_CONSTEXPR pair()
 233:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       : first(), second() { }
 234:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 235:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus >= 201103L
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1 = _T1,
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                 typename _U2 = _T2,
 238:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                 typename enable_if<__and_<
 239:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                        is_default_constructible<_U1>,
 240:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                        is_default_constructible<_U2>,
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 391


 241:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                        __not_<
 242:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          __and_<__is_implicitly_default_constructible<_U1>,
 243:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                                 __is_implicitly_default_constructible<_U2>>>>
 244:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                                    ::value, bool>::type = false>
 245:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       explicit constexpr pair()
 246:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       : first(), second() { }
 247:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif
 248:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 249:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus < 201103L
 250:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /// Two objects may be passed to a @c pair constructor to be copied.
 251:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       pair(const _T1& __a, const _T2& __b)
 252:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       : first(__a), second(__b) { }
 253:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #else
 254:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       // Shortcut for constraining the templates that don't take pairs.
 255:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /// @cond undocumented
 256:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       using _PCCP = _PCC<true, _T1, _T2>;
 257:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /// @endcond
 258:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 259:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /// Construct from two const lvalues, allowing implicit conversions.
 260:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U1 = _T1, typename _U2=_T2, typename
 261:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	       enable_if<_PCCP::template
 262:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _ConstructiblePair<_U1, _U2>()
 263:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	                 && _PCCP::template
 264:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _ImplicitlyConvertiblePair<_U1, _U2>(),
 265:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          bool>::type=true>
 266:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       constexpr pair(const _T1& __a, const _T2& __b)
 267:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       : first(__a), second(__b) { }
 268:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 269:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /// Construct from two const lvalues, disallowing implicit conversions.
 270:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        template<typename _U1 = _T1, typename _U2=_T2, typename
 271:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		enable_if<_PCCP::template
 272:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			    _ConstructiblePair<_U1, _U2>()
 273:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	                  && !_PCCP::template
 274:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			    _ImplicitlyConvertiblePair<_U1, _U2>(),
 275:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          bool>::type=false>
 276:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       explicit constexpr pair(const _T1& __a, const _T2& __b)
 277:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       : first(__a), second(__b) { }
 278:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif
 279:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 280:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus < 201103L
 281:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /// There is also a templated constructor to convert from other pairs.
 282:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U1, typename _U2>
 283:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	pair(const pair<_U1, _U2>& __p)
 284:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(__p.first), second(__p.second) { }
 285:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #else
 286:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       // Shortcut for constraining the templates that take pairs.
 287:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /// @cond undocumented
 288:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template <typename _U1, typename _U2>
 289:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****         using _PCCFP = _PCC<!is_same<_T1, _U1>::value
 290:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			    || !is_same<_T2, _U2>::value,
 291:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			    _T1, _T2>;
 292:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /// @endcond
 293:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 294:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U1, typename _U2, typename
 295:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	       enable_if<_PCCFP<_U1, _U2>::template
 296:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _ConstructiblePair<_U1, _U2>()
 297:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	                 && _PCCFP<_U1, _U2>::template
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 392


 298:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _ImplicitlyConvertiblePair<_U1, _U2>(),
 299:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			  bool>::type=true>
 300:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****         constexpr pair(const pair<_U1, _U2>& __p)
 301:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****         : first(__p.first), second(__p.second) { }
 302:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 303:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U1, typename _U2, typename
 304:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	       enable_if<_PCCFP<_U1, _U2>::template
 305:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _ConstructiblePair<_U1, _U2>()
 306:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			 && !_PCCFP<_U1, _U2>::template
 307:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _ImplicitlyConvertiblePair<_U1, _U2>(),
 308:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          bool>::type=false>
 309:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	explicit constexpr pair(const pair<_U1, _U2>& __p)
 310:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(__p.first), second(__p.second) { }
 311:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif
 312:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 313:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus >= 201103L
 314:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       constexpr pair(const pair&) = default;	///< Copy constructor
 315:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       constexpr pair(pair&&) = default;		///< Move constructor
 316:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 317:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       // DR 811.
 318:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U1, typename
 319:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	       enable_if<_PCCP::template
 320:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _MoveCopyPair<true, _U1, _T2>(),
 321:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          bool>::type=true>
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        constexpr pair(_U1&& __x, const _T2& __y)
 323:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        : first(std::forward<_U1>(__x)), second(__y) { }
 324:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 325:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U1, typename
 326:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	       enable_if<_PCCP::template
 327:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _MoveCopyPair<false, _U1, _T2>(),
 328:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          bool>::type=false>
 329:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        explicit constexpr pair(_U1&& __x, const _T2& __y)
 330:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        : first(std::forward<_U1>(__x)), second(__y) { }
 331:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 332:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U2, typename
 333:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	       enable_if<_PCCP::template
 334:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _CopyMovePair<true, _T1, _U2>(),
 335:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          bool>::type=true>
 336:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        constexpr pair(const _T1& __x, _U2&& __y)
 337:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        : first(__x), second(std::forward<_U2>(__y)) { }
 338:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 339:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U2, typename
 340:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	       enable_if<_PCCP::template
 341:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _CopyMovePair<false, _T1, _U2>(),
 342:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          bool>::type=false>
 343:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        explicit pair(const _T1& __x, _U2&& __y)
 344:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****        : first(__x), second(std::forward<_U2>(__y)) { }
 345:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 346:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U1, typename _U2, typename
 347:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	       enable_if<_PCCP::template
 348:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _MoveConstructiblePair<_U1, _U2>()
 349:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			  && _PCCP::template
 350:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _ImplicitlyMoveConvertiblePair<_U1, _U2>(),
 351:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          bool>::type=true>
 352:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	constexpr pair(_U1&& __x, _U2&& __y)
 353:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 354:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 393


 355:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U1, typename _U2, typename
 356:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	       enable_if<_PCCP::template
 357:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _MoveConstructiblePair<_U1, _U2>()
 358:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			  && !_PCCP::template
 359:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _ImplicitlyMoveConvertiblePair<_U1, _U2>(),
 360:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          bool>::type=false>
 361:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	explicit constexpr pair(_U1&& __x, _U2&& __y)
 362:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 363:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 364:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 365:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U1, typename _U2, typename
 366:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	       enable_if<_PCCFP<_U1, _U2>::template
 367:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _MoveConstructiblePair<_U1, _U2>()
 368:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			  && _PCCFP<_U1, _U2>::template
 369:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _ImplicitlyMoveConvertiblePair<_U1, _U2>(),
 370:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          bool>::type=true>
 371:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	constexpr pair(pair<_U1, _U2>&& __p)
 372:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__p.first)),
 373:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	  second(std::forward<_U2>(__p.second)) { }
 374:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 375:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U1, typename _U2, typename
 376:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	       enable_if<_PCCFP<_U1, _U2>::template
 377:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _MoveConstructiblePair<_U1, _U2>()
 378:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			  && !_PCCFP<_U1, _U2>::template
 379:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   _ImplicitlyMoveConvertiblePair<_U1, _U2>(),
 380:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                          bool>::type=false>
 381:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	explicit constexpr pair(pair<_U1, _U2>&& __p)
 382:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__p.first)),
 383:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	  second(std::forward<_U2>(__p.second)) { }
 384:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 385:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename... _Args1, typename... _Args2>
 386:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	_GLIBCXX20_CONSTEXPR
 387:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****         pair(piecewise_construct_t, tuple<_Args1...>, tuple<_Args2...>);
 388:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 389:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       _GLIBCXX20_CONSTEXPR pair&
 390:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       operator=(typename conditional<
 391:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		__and_<is_copy_assignable<_T1>,
 392:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		       is_copy_assignable<_T2>>::value,
 393:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		const pair&, const __nonesuch&>::type __p)
 394:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 395:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	first = __p.first;
 396:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	second = __p.second;
 397:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return *this;
 398:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 399:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 400:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       _GLIBCXX20_CONSTEXPR pair&
 401:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       operator=(typename conditional<
 402:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		__and_<is_move_assignable<_T1>,
 403:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		       is_move_assignable<_T2>>::value,
 404:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		pair&&, __nonesuch&&>::type __p)
 405:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       noexcept(__and_<is_nothrow_move_assignable<_T1>,
 406:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 		      is_nothrow_move_assignable<_T2>>::value)
 407:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 408:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	first = std::forward<first_type>(__p.first);
 409:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	second = std::forward<second_type>(__p.second);
 410:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return *this;
 411:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 394


 412:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 413:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U1, typename _U2>
 414:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	_GLIBCXX20_CONSTEXPR
 415:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	typename enable_if<__and_<is_assignable<_T1&, const _U1&>,
 416:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 				  is_assignable<_T2&, const _U2&>>::value,
 417:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   pair&>::type
 418:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	operator=(const pair<_U1, _U2>& __p)
 419:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	{
 420:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	  first = __p.first;
 421:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	  second = __p.second;
 422:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	  return *this;
 423:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	}
 424:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 425:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename _U1, typename _U2>
 426:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	_GLIBCXX20_CONSTEXPR
 427:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	typename enable_if<__and_<is_assignable<_T1&, _U1&&>,
 428:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 				  is_assignable<_T2&, _U2&&>>::value,
 429:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			   pair&>::type
 430:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	operator=(pair<_U1, _U2>&& __p)
 431:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	{
 432:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	  first = std::forward<_U1>(__p.first);
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	  second = std::forward<_U2>(__p.second);
 434:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	  return *this;
 435:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	}
 436:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 437:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       /// Swap the first members and then the second members.
 438:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       _GLIBCXX20_CONSTEXPR void
 439:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       swap(pair& __p)
 440:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       noexcept(__and_<__is_nothrow_swappable<_T1>,
 441:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                       __is_nothrow_swappable<_T2>>::value)
 442:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       {
 443:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	using std::swap;
 444:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	swap(first, __p.first);
 445:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	swap(second, __p.second);
 446:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       }
 447:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 448:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     private:
 449:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       template<typename... _Args1, std::size_t... _Indexes1,
 450:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                typename... _Args2, std::size_t... _Indexes2>
 451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	_GLIBCXX20_CONSTEXPR
 452:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****         pair(tuple<_Args1...>&, tuple<_Args2...>&,
 453:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****              _Index_tuple<_Indexes1...>, _Index_tuple<_Indexes2...>);
 454:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif // C++11
 455:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     };
 456:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 457:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   /// @relates pair @{
 458:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 459:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cpp_deduction_guides >= 201606
 460:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   template<typename _T1, typename _T2> pair(_T1, _T2) -> pair<_T1, _T2>;
 461:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif
 462:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 463:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   /// Two pairs of the same type are equal iff their members are equal.
 464:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   template<typename _T1, typename _T2>
 465:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     inline _GLIBCXX_CONSTEXPR bool
 466:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     operator==(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
 467:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     { return __x.first == __y.first && __x.second == __y.second; }
 468:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 395


 469:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cpp_lib_three_way_comparison && __cpp_lib_concepts
 470:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   template<typename _T1, typename _T2>
 471:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     constexpr common_comparison_category_t<__detail::__synth3way_t<_T1>,
 472:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 					   __detail::__synth3way_t<_T2>>
 473:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     operator<=>(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
 474:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     {
 475:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       if (auto __c = __detail::__synth3way(__x.first, __y.first); __c != 0)
 476:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	return __c;
 477:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****       return __detail::__synth3way(__x.second, __y.second);
 478:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     }
 479:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #else
 480:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   /** Defines a lexicographical order for pairs.
 481:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *
 482:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    * For two pairs of the same type, `P` is ordered before `Q` if
 483:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    * `P.first` is less than `Q.first`, or if `P.first` and `Q.first`
 484:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    * are equivalent (neither is less than the other) and `P.second` is less
 485:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    * than `Q.second`.
 486:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   */
 487:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   template<typename _T1, typename _T2>
 488:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     inline _GLIBCXX_CONSTEXPR bool
 489:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     operator<(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
 490:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     { return __x.first < __y.first
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	     || (!(__y.first < __x.first) && __x.second < __y.second); }
 492:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 493:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   /// Uses @c operator== to find the result.
 494:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   template<typename _T1, typename _T2>
 495:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     inline _GLIBCXX_CONSTEXPR bool
 496:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     operator!=(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
 497:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     { return !(__x == __y); }
 498:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 499:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   /// Uses @c operator< to find the result.
 500:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   template<typename _T1, typename _T2>
 501:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     inline _GLIBCXX_CONSTEXPR bool
 502:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     operator>(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
 503:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     { return __y < __x; }
 504:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 505:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   /// Uses @c operator< to find the result.
 506:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   template<typename _T1, typename _T2>
 507:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     inline _GLIBCXX_CONSTEXPR bool
 508:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     operator<=(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
 509:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     { return !(__y < __x); }
 510:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 511:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   /// Uses @c operator< to find the result.
 512:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   template<typename _T1, typename _T2>
 513:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     inline _GLIBCXX_CONSTEXPR bool
 514:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     operator>=(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
 515:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     { return !(__x < __y); }
 516:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif // !(three_way_comparison && concepts)
 517:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 518:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus >= 201103L
 519:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   /** Swap overload for pairs. Calls std::pair::swap().
 520:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *
 521:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    * @note This std::swap overload is not declared in C++03 mode,
 522:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    * which has performance implications, e.g. see https://gcc.gnu.org/PR38466
 523:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   */
 524:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   template<typename _T1, typename _T2>
 525:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     _GLIBCXX20_CONSTEXPR inline
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 396


 526:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus > 201402L || !defined(__STRICT_ANSI__) // c++1z or gnu++11
 527:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     // Constrained free swap overload, see p0185r1
 528:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     typename enable_if<__and_<__is_swappable<_T1>,
 529:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                               __is_swappable<_T2>>::value>::type
 530:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #else
 531:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     void
 532:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif
 533:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     swap(pair<_T1, _T2>& __x, pair<_T1, _T2>& __y)
 534:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     noexcept(noexcept(__x.swap(__y)))
 535:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     { __x.swap(__y); }
 536:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 537:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus > 201402L || !defined(__STRICT_ANSI__) // c++1z or gnu++11
 538:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   template<typename _T1, typename _T2>
 539:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     typename enable_if<!__and_<__is_swappable<_T1>,
 540:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 			       __is_swappable<_T2>>::value>::type
 541:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     swap(pair<_T1, _T2>&, pair<_T1, _T2>&) = delete;
 542:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif
 543:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #endif // __cplusplus >= 201103L
 544:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 545:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   // @} relates pair
 546:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 547:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   /**
 548:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *  @brief A convenience wrapper for creating a pair from two objects.
 549:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *  @param  __x  The first object.
 550:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *  @param  __y  The second object.
 551:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *  @return   A newly-constructed pair<> object of the appropriate type.
 552:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *
 553:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *  The C++98 standard says the objects are passed by reference-to-const,
 554:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *  but C++03 says they are passed by value (this was LWG issue #181).
 555:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *
 556:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *  Since C++11 they have been passed by forwarding reference and then
 557:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *  forwarded to the new members of the pair. To create a pair with a
 558:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    *  member of reference type, pass a `reference_wrapper` to this function.
 559:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****    */
 560:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 561:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   // 181.  make_pair() unintended behavior
 562:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** #if __cplusplus >= 201103L
 563:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   // NB: DR 706.
 564:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****   template<typename _T1, typename _T2>
 565:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     constexpr pair<typename __decay_and_strip<_T1>::__type,
 566:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****                    typename __decay_and_strip<_T2>::__type>
 567:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     make_pair(_T1&& __x, _T2&& __y)
 5444              		.loc 23 567 5 discriminator 2 view .LVU1268
 5445              	.LBB5274:
 5446              	.LBB5275:
 5447              	.LBI5275:
 352:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 5448              		.loc 23 352 12 discriminator 2 view .LVU1269
 5449              	.LBB5276:
 5450              	.LBB5277:
 5451              	.LBI5277:
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 5452              		.loc 19 76 5 discriminator 2 view .LVU1270
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 5453              		.loc 19 76 5 is_stmt 0 discriminator 2 view .LVU1271
 5454              	.LBE5277:
 353:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 397


 5455              		.loc 23 353 64 discriminator 2 view .LVU1272
 5456 0094 1B9B     		ldr	r3, [sp, #108]
 5457 0096 09A9     		add	r1, sp, #36
 5458              	.LVL268:
 353:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 5459              		.loc 23 353 64 discriminator 2 view .LVU1273
 5460 0098 20A8     		add	r0, sp, #128
 5461 009a 1F93     		str	r3, [sp, #124]
 5462              	.LVL269:
 5463              	.LBB5278:
 5464              	.LBI5278:
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 5465              		.loc 19 76 5 is_stmt 1 discriminator 2 view .LVU1274
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 5466              		.loc 19 76 5 is_stmt 0 discriminator 2 view .LVU1275
 5467              	.LBE5278:
 353:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 5468              		.loc 23 353 64 discriminator 2 view .LVU1276
 5469 009c FFF7FEFF 		bl	_ZN5paramC1ERKS_
 5470              	.LVL270:
 353:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 5471              		.loc 23 353 64 discriminator 2 view .LVU1277
 5472              	.LBE5276:
 5473              	.LBE5275:
 5474              	.LBE5274:
 5475              	.LBE5273:
 5476              	.LBB5279:
 5477              	.LBI4872:
 103:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****     {
 104:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       typedef __umap_hashtable<_Key, _Tp, _Hash, _Pred, _Alloc>  _Hashtable;
 105:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       _Hashtable _M_h;
 106:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 107:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****     public:
 108:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       // typedefs:
 109:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@{
 110:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /// Public typedefs.
 111:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       typedef typename _Hashtable::key_type	key_type;
 112:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       typedef typename _Hashtable::value_type	value_type;
 113:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       typedef typename _Hashtable::mapped_type	mapped_type;
 114:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       typedef typename _Hashtable::hasher	hasher;
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       typedef typename _Hashtable::key_equal	key_equal;
 116:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       typedef typename _Hashtable::allocator_type allocator_type;
 117:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@}
 118:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 119:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@{
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       ///  Iterator-related typedefs.
 121:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       typedef typename _Hashtable::pointer		pointer;
 122:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       typedef typename _Hashtable::const_pointer	const_pointer;
 123:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       typedef typename _Hashtable::reference		reference;
 124:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       typedef typename _Hashtable::const_reference	const_reference;
 125:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       typedef typename _Hashtable::iterator		iterator;
 126:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       typedef typename _Hashtable::const_iterator	const_iterator;
 127:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       typedef typename _Hashtable::local_iterator	local_iterator;
 128:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       typedef typename _Hashtable::const_local_iterator	const_local_iterator;
 129:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       typedef typename _Hashtable::size_type		size_type;
 130:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       typedef typename _Hashtable::difference_type	difference_type;
 131:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@}
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 398


 132:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** #if __cplusplus > 201402L
 134:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       using node_type = typename _Hashtable::node_type;
 135:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       using insert_return_type = typename _Hashtable::insert_return_type;
 136:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** #endif
 137:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 138:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //construct/destroy/copy
 139:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 140:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /// Default constructor.
 141:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       unordered_map() = default;
 142:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 143:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief  Default constructor creates no elements.
 145:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __n  Minimal initial number of buckets.
 146:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __hf  A hash functor.
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __eql  A key equality functor.
 148:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __a  An allocator object.
 149:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       explicit
 151:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       unordered_map(size_type __n,
 152:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		    const hasher& __hf = hasher(),
 153:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		    const key_equal& __eql = key_equal(),
 154:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		    const allocator_type& __a = allocator_type())
 155:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       : _M_h(__n, __hf, __eql, __a)
 156:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { }
 157:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 158:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief  Builds an %unordered_map from a range.
 160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __first  An input iterator.
 161:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __last  An input iterator.
 162:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __n  Minimal initial number of buckets.
 163:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __hf  A hash functor.
 164:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __eql  A key equality functor.
 165:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __a  An allocator object.
 166:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 167:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Create an %unordered_map consisting of copies of the elements from
 168:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  [__first,__last).  This is linear in N (where N is
 169:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  distance(__first,__last)).
 170:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 171:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template<typename _InputIterator>
 172:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	unordered_map(_InputIterator __first, _InputIterator __last,
 173:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		      size_type __n = 0,
 174:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		      const hasher& __hf = hasher(),
 175:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		      const key_equal& __eql = key_equal(),
 176:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		      const allocator_type& __a = allocator_type())
 177:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	: _M_h(__first, __last, __n, __hf, __eql, __a)
 178:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	{ }
 179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 180:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /// Copy constructor.
 181:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       unordered_map(const unordered_map&) = default;
 182:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /// Move constructor.
 184:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       unordered_map(unordered_map&&) = default;
 185:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief Creates an %unordered_map with no elements.
 188:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __a An allocator object.
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 399


 189:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       explicit
 191:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       unordered_map(const allocator_type& __a)
 192:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	: _M_h(__a)
 193:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { }
 194:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 195:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /*
 196:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief Copy constructor with allocator argument.
 197:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        * @param  __uset  Input %unordered_map to copy.
 198:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        * @param  __a  An allocator object.
 199:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       unordered_map(const unordered_map& __umap,
 201:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		    const allocator_type& __a)
 202:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       : _M_h(__umap._M_h, __a)
 203:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { }
 204:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 205:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /*
 206:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief  Move constructor with allocator argument.
 207:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __uset Input %unordered_map to move.
 208:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __a    An allocator object.
 209:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 210:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       unordered_map(unordered_map&& __umap,
 211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		    const allocator_type& __a)
 212:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       : _M_h(std::move(__umap._M_h), __a)
 213:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { }
 214:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 215:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 216:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief  Builds an %unordered_map from an initializer_list.
 217:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __l  An initializer_list.
 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __n  Minimal initial number of buckets.
 219:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __hf  A hash functor.
 220:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __eql  A key equality functor.
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __a  An allocator object.
 222:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 223:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Create an %unordered_map consisting of copies of the elements in the
 224:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  list. This is linear in N (where N is @a __l.size()).
 225:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 226:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       unordered_map(initializer_list<value_type> __l,
 227:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		    size_type __n = 0,
 228:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		    const hasher& __hf = hasher(),
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		    const key_equal& __eql = key_equal(),
 230:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		    const allocator_type& __a = allocator_type())
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       : _M_h(__l, __n, __hf, __eql, __a)
 232:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { }
 233:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 234:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       unordered_map(size_type __n, const allocator_type& __a)
 235:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       : unordered_map(__n, hasher(), key_equal(), __a)
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { }
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 238:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       unordered_map(size_type __n, const hasher& __hf,
 239:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		    const allocator_type& __a)
 240:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       : unordered_map(__n, __hf, key_equal(), __a)
 241:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { }
 242:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 243:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template<typename _InputIterator>
 244:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	unordered_map(_InputIterator __first, _InputIterator __last,
 245:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		      size_type __n,
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 400


 246:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		      const allocator_type& __a)
 247:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	: unordered_map(__first, __last, __n, hasher(), key_equal(), __a)
 248:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	{ }
 249:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 250:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template<typename _InputIterator>
 251:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	unordered_map(_InputIterator __first, _InputIterator __last,
 252:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		      size_type __n, const hasher& __hf,
 253:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		      const allocator_type& __a)
 254:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	  : unordered_map(__first, __last, __n, __hf, key_equal(), __a)
 255:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	{ }
 256:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 257:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       unordered_map(initializer_list<value_type> __l,
 258:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		    size_type __n,
 259:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		    const allocator_type& __a)
 260:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       : unordered_map(__l, __n, hasher(), key_equal(), __a)
 261:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { }
 262:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 263:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       unordered_map(initializer_list<value_type> __l,
 264:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		    size_type __n, const hasher& __hf,
 265:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		    const allocator_type& __a)
 266:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       : unordered_map(__l, __n, __hf, key_equal(), __a)
 267:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { }
 268:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 269:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /// Copy assignment operator.
 270:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       unordered_map&
 271:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       operator=(const unordered_map&) = default;
 272:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 273:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /// Move assignment operator.
 274:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       unordered_map&
 275:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       operator=(unordered_map&&) = default;
 276:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 277:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 278:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief  %Unordered_map list assignment operator.
 279:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __l  An initializer_list.
 280:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 281:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  This function fills an %unordered_map with copies of the elements in
 282:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  the initializer list @a __l.
 283:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 284:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Note that the assignment completely changes the %unordered_map and
 285:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  that the resulting %unordered_map's size is the same as the number
 286:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  of elements assigned.
 287:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 288:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       unordered_map&
 289:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       operator=(initializer_list<value_type> __l)
 290:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       {
 291:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	_M_h = __l;
 292:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	return *this;
 293:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       }
 294:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 295:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       ///  Returns the allocator object used by the %unordered_map.
 296:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       allocator_type
 297:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       get_allocator() const noexcept
 298:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.get_allocator(); }
 299:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 300:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       // size and capacity:
 301:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 302:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       ///  Returns true if the %unordered_map is empty.
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 401


 303:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       _GLIBCXX_NODISCARD bool
 304:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       empty() const noexcept
 305:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.empty(); }
 306:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 307:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       ///  Returns the size of the %unordered_map.
 308:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       size_type
 309:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       size() const noexcept
 310:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.size(); }
 311:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 312:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       ///  Returns the maximum size of the %unordered_map.
 313:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       size_type
 314:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       max_size() const noexcept
 315:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.max_size(); }
 316:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 317:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       // iterators.
 318:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 319:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 320:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Returns a read/write iterator that points to the first element in the
 321:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  %unordered_map.
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 323:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       iterator
 324:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       begin() noexcept
 325:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.begin(); }
 326:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 327:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@{
 328:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 329:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Returns a read-only (constant) iterator that points to the first
 330:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  element in the %unordered_map.
 331:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 332:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       const_iterator
 333:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       begin() const noexcept
 334:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.begin(); }
 335:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 336:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       const_iterator
 337:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       cbegin() const noexcept
 338:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.begin(); }
 339:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@}
 340:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 341:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 342:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Returns a read/write iterator that points one past the last element in
 343:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  the %unordered_map.
 344:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 345:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       iterator
 346:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       end() noexcept
 347:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.end(); }
 348:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 349:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@{
 350:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 351:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Returns a read-only (constant) iterator that points one past the last
 352:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  element in the %unordered_map.
 353:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 354:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       const_iterator
 355:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       end() const noexcept
 356:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.end(); }
 357:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 358:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       const_iterator
 359:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       cend() const noexcept
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 402


 360:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.end(); }
 361:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@}
 362:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 363:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       // modifiers.
 364:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 365:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 366:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief Attempts to build and insert a std::pair into the
 367:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  %unordered_map.
 368:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 369:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __args  Arguments used to generate a new pair instance (see
 370:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *	        std::piecewise_contruct for passing arguments to each
 371:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *	        part of the pair constructor).
 372:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 373:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @return  A pair, of which the first element is an iterator that points
 374:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *           to the possibly inserted pair, and the second is a bool that
 375:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *           is true if the pair was actually inserted.
 376:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 377:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  This function attempts to build and insert a (key, value) %pair into
 378:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  the %unordered_map.
 379:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  An %unordered_map relies on unique keys and thus a %pair is only
 380:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  inserted if its first element (the key) is not already present in the
 381:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  %unordered_map.
 382:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 383:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Insertion requires amortized constant time.
 384:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 385:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template<typename... _Args>
 386:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	std::pair<iterator, bool>
 387:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	emplace(_Args&&... __args)
 388:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	{ return _M_h.emplace(std::forward<_Args>(__args)...); }
 389:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 390:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 391:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief Attempts to build and insert a std::pair into the
 392:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  %unordered_map.
 393:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 394:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __pos  An iterator that serves as a hint as to where the pair
 395:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *                should be inserted.
 396:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __args  Arguments used to generate a new pair instance (see
 397:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *	         std::piecewise_contruct for passing arguments to each
 398:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *	         part of the pair constructor).
 399:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @return An iterator that points to the element with key of the
 400:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *          std::pair built from @a __args (may or may not be that
 401:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *          std::pair).
 402:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 403:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  This function is not concerned about whether the insertion took place,
 404:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  and thus does not return a boolean like the single-argument emplace()
 405:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  does.
 406:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Note that the first parameter is only a hint and can potentially
 407:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  improve the performance of the insertion process. A bad hint would
 408:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  cause no gains in efficiency.
 409:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 410:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  See
 411:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  https://gcc.gnu.org/onlinedocs/libstdc++/manual/associative.html#containers.associative.i
 412:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  for more on @a hinting.
 413:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 414:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Insertion requires amortized constant time.
 415:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 416:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template<typename... _Args>
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 403


 417:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	iterator
 418:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	emplace_hint(const_iterator __pos, _Args&&... __args)
 419:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	{ return _M_h.emplace_hint(__pos, std::forward<_Args>(__args)...); }
 420:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 421:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** #if __cplusplus > 201402L
 422:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /// Extract a node.
 423:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       node_type
 424:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       extract(const_iterator __pos)
 425:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       {
 426:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	__glibcxx_assert(__pos != end());
 427:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	return _M_h.extract(__pos);
 428:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       }
 429:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 430:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /// Extract a node.
 431:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       node_type
 432:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       extract(const key_type& __key)
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.extract(__key); }
 434:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 435:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /// Re-insert an extracted node.
 436:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       insert_return_type
 437:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       insert(node_type&& __nh)
 438:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h._M_reinsert_node(std::move(__nh)); }
 439:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 440:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /// Re-insert an extracted node.
 441:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       iterator
 442:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       insert(const_iterator, node_type&& __nh)
 443:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h._M_reinsert_node(std::move(__nh)).position; }
 444:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 445:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** #define __cpp_lib_unordered_map_try_emplace 201411
 446:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 447:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief Attempts to build and insert a std::pair into the
 448:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  %unordered_map.
 449:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 450:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __k    Key to use for finding a possibly existing pair in
 451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *                the unordered_map.
 452:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __args  Arguments used to generate the .second for a 
 453:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *                new pair instance.
 454:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 455:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @return  A pair, of which the first element is an iterator that points
 456:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *           to the possibly inserted pair, and the second is a bool that
 457:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *           is true if the pair was actually inserted.
 458:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 459:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  This function attempts to build and insert a (key, value) %pair into
 460:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  the %unordered_map.
 461:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  An %unordered_map relies on unique keys and thus a %pair is only
 462:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  inserted if its first element (the key) is not already present in the
 463:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  %unordered_map.
 464:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  If a %pair is not inserted, this function has no effect.
 465:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 466:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Insertion requires amortized constant time.
 467:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 468:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template <typename... _Args>
 469:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         pair<iterator, bool>
 470:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         try_emplace(const key_type& __k, _Args&&... __args)
 471:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         {
 472:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           iterator __i = find(__k);
 473:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           if (__i == end())
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 404


 474:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****             {
 475:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****               __i = emplace(std::piecewise_construct,
 476:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                             std::forward_as_tuple(__k),
 477:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                             std::forward_as_tuple(
 478:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                               std::forward<_Args>(__args)...))
 479:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                 .first;
 480:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****               return {__i, true};
 481:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****             }
 482:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           return {__i, false};
 483:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         }
 484:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 485:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       // move-capable overload
 486:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template <typename... _Args>
 487:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         pair<iterator, bool>
 488:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         try_emplace(key_type&& __k, _Args&&... __args)
 489:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         {
 490:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           iterator __i = find(__k);
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           if (__i == end())
 492:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****             {
 493:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****               __i = emplace(std::piecewise_construct,
 494:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                             std::forward_as_tuple(std::move(__k)),
 495:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                             std::forward_as_tuple(
 496:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                               std::forward<_Args>(__args)...))
 497:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                 .first;
 498:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****               return {__i, true};
 499:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****             }
 500:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           return {__i, false};
 501:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         }
 502:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 503:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 504:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief Attempts to build and insert a std::pair into the
 505:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  %unordered_map.
 506:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 507:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __hint  An iterator that serves as a hint as to where the pair
 508:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *                should be inserted.
 509:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __k    Key to use for finding a possibly existing pair in
 510:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *                the unordered_map.
 511:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __args  Arguments used to generate the .second for a 
 512:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *                new pair instance.
 513:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @return An iterator that points to the element with key of the
 514:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *          std::pair built from @a __args (may or may not be that
 515:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *          std::pair).
 516:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 517:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  This function is not concerned about whether the insertion took place,
 518:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  and thus does not return a boolean like the single-argument emplace()
 519:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  does. However, if insertion did not take place,
 520:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  this function has no effect.
 521:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Note that the first parameter is only a hint and can potentially
 522:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  improve the performance of the insertion process. A bad hint would
 523:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  cause no gains in efficiency.
 524:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 525:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  See
 526:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  https://gcc.gnu.org/onlinedocs/libstdc++/manual/associative.html#containers.associative.i
 527:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  for more on @a hinting.
 528:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 529:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Insertion requires amortized constant time.
 530:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 405


 531:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template <typename... _Args>
 532:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         iterator
 533:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         try_emplace(const_iterator __hint, const key_type& __k,
 534:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                     _Args&&... __args)
 535:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         {
 536:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           iterator __i = find(__k);
 537:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           if (__i == end())
 538:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****             __i = emplace_hint(__hint, std::piecewise_construct,
 539:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                                std::forward_as_tuple(__k),
 540:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                                std::forward_as_tuple(
 541:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                                  std::forward<_Args>(__args)...));
 542:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           return __i;
 543:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         }
 544:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 545:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       // move-capable overload
 546:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template <typename... _Args>
 547:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         iterator
 548:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         try_emplace(const_iterator __hint, key_type&& __k, _Args&&... __args)
 549:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         {
 550:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           iterator __i = find(__k);
 551:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           if (__i == end())
 552:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****             __i = emplace_hint(__hint, std::piecewise_construct,
 553:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                                std::forward_as_tuple(std::move(__k)),
 554:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                                std::forward_as_tuple(
 555:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                                  std::forward<_Args>(__args)...));
 556:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           return __i;
 557:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         }
 558:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** #endif // C++17
 559:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 560:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@{
 561:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 562:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief Attempts to insert a std::pair into the %unordered_map.
 563:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 564:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __x Pair to be inserted (see std::make_pair for easy
 565:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *	     creation of pairs).
 566:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 567:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @return  A pair, of which the first element is an iterator that 
 568:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *           points to the possibly inserted pair, and the second is 
 569:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *           a bool that is true if the pair was actually inserted.
 570:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 571:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  This function attempts to insert a (key, value) %pair into the
 572:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  %unordered_map. An %unordered_map relies on unique keys and thus a
 573:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  %pair is only inserted if its first element (the key) is not already
 574:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  present in the %unordered_map.
 575:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 576:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Insertion requires amortized constant time.
 577:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 578:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       std::pair<iterator, bool>
 579:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       insert(const value_type& __x)
 580:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.insert(__x); }
 581:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 582:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 583:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       // 2354. Unnecessary copying when inserting into maps with braced-init
 584:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       std::pair<iterator, bool>
 585:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       insert(value_type&& __x)
 586:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.insert(std::move(__x)); }
 587:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 406


 588:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template<typename _Pair>
 589:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	__enable_if_t<is_constructible<value_type, _Pair&&>::value,
 590:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 		      pair<iterator, bool>>
 591:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	insert(_Pair&& __x)
 5478              		.loc 24 591 2 is_stmt 1 discriminator 2 view .LVU1278
 5479              	.LBB5269:
 5480              	.LBI4873:
 787:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	{ return _M_emplace(__unique_keys(), std::forward<_Args>(__args)...); }
 5481              		.loc 9 787 2 discriminator 2 view .LVU1279
 5482              	.LBB5265:
 5483              	.LBI4874:
1667:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		 _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 5484              		.loc 9 1667 7 discriminator 2 view .LVU1280
 5485              	.LBB5261:
 5486              	.LBB5131:
 5487              	.LBI4876:
 270:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  : _M_h(__h),
 5488              		.loc 9 270 4 discriminator 2 view .LVU1281
 5489              	.LBB5123:
 5490              	.LBI5123:
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 5491              		.loc 19 76 5 discriminator 2 view .LVU1282
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 5492              		.loc 19 76 5 is_stmt 0 discriminator 2 view .LVU1283
 5493              	.LBE5123:
 5494              	.LBB5124:
 5495              	.LBI4877:
2029:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       -> __node_type*
 5496              		.loc 10 2029 7 is_stmt 1 discriminator 2 view .LVU1284
 5497              	.LBB5116:
 5498              	.LBB5095:
 5499              	.LBI5095:
 459:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { return __a.allocate(__n); }
 5500              		.loc 13 459 7 discriminator 2 view .LVU1285
 5501              	.LBB5096:
 5502              	.LBI5096:
 103:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 5503              		.loc 12 103 7 discriminator 2 view .LVU1286
 5504              	.LBB5097:
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 5505              		.loc 12 115 41 is_stmt 0 discriminator 2 view .LVU1287
 5506 00a0 6020     		movs	r0, #96
 5507 00a2 FFF7FEFF 		bl	_Znwj
 5508              	.LVL271:
 5509              	.LBE5097:
 5510              	.LBE5096:
 5511              	.LBE5095:
 5512              	.LBB5100:
 5513              	.LBB5087:
 5514              	.LBB5080:
 5515              	.LBB5073:
 5516              	.LBB5063:
 5517              	.LBB5055:
 5518              	.LBB4938:
 5519              	.LBB4931:
 5520              	.LBB4887:
 5521              	.LBB4888:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 407


 193:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 5522              		.loc 16 193 51 discriminator 2 view .LVU1288
 5523 00a6 00F11003 		add	r3, r0, #16
 5524              	.LBE4888:
 5525              	.LBE4887:
 5526              	.LBE4931:
 5527              	.LBE4938:
 5528              	.LBE5055:
 5529              	.LBE5063:
 373:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 5530              		.loc 23 373 40 discriminator 2 view .LVU1289
 5531 00aa DDF87CC0 		ldr	ip, [sp, #124]
 5532              	.LBE5073:
 5533              	.LBE5080:
 5534              	.LBE5087:
 5535              	.LBE5100:
 5536              	.LBB5101:
 5537              	.LBB5099:
 5538              	.LBB5098:
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 5539              		.loc 12 115 41 discriminator 2 view .LVU1290
 5540 00ae 0546     		mov	r5, r0
 5541              	.LVL272:
 115:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       }
 5542              		.loc 12 115 41 discriminator 2 view .LVU1291
 5543              	.LBE5098:
 5544              	.LBE5099:
 5545              	.LBE5101:
 5546              	.LBE5116:
 5547              	.LBE5124:
 5548              	.LBE5131:
 5549              	.LBE5261:
 5550              	.LBE5265:
 5551              	.LBE5269:
 5552              	.LBE5279:
 5553              	.LBE5339:
 5554              	.LBE5343:
 5555              		.loc 27 175 3 is_stmt 1 discriminator 2 view .LVU1292
 5556              	.LBB5344:
 5557              	.LBB5340:
 5558              	.LBB5280:
 5559              	.LBB5270:
 5560              	.LBB5266:
 5561              	.LBB5262:
 5562              	.LBB5132:
 5563              	.LBB5125:
 5564              	.LBB5117:
 5565              	.LBB5102:
 5566              	.LBI5102:
 279:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 5567              		.loc 10 279 12 discriminator 2 view .LVU1293
 5568              	.LBB5103:
 5569              	.LBI5103:
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 5570              		.loc 10 229 12 discriminator 2 view .LVU1294
 5571              	.LBB5104:
 5572              	.LBI5104:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 408


 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 5573              		.loc 10 218 5 discriminator 2 view .LVU1295
 5574              	.LBE5104:
 5575              	.LBE5103:
 5576              	.LBE5102:
 5577              	.LBB5108:
 5578              	.LBB5088:
 5579              	.LBB5081:
 5580              	.LBB5074:
 5581              	.LBB5064:
 5582              	.LBB5056:
 5583              	.LBB4939:
 5584              	.LBB4932:
 5585              	.LBB4890:
 5586              	.LBB4889:
 193:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 5587              		.loc 16 193 51 is_stmt 0 discriminator 2 view .LVU1296
 5588 00b0 0393     		str	r3, [sp, #12]
 5589              	.LBE4889:
 5590              	.LBE4890:
 5591              	.LBB4891:
 5592              	.LBB4892:
 160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 5593              		.loc 16 160 46 discriminator 2 view .LVU1297
 5594 00b2 8360     		str	r3, [r0, #8]
 5595              	.LBE4892:
 5596              	.LBE4891:
 5597              	.LBB4897:
 5598              	.LBB4898:
 5599              	.LBB4899:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 5600              		.loc 16 187 28 discriminator 2 view .LVU1298
 5601 00b4 209B     		ldr	r3, [sp, #128]
 5602              	.LBE4899:
 5603              	.LBE4898:
 5604              	.LBE4897:
 5605              	.LBE4932:
 5606              	.LBE4939:
 5607              	.LBE5056:
 5608              	.LBE5064:
 5609              	.LBE5074:
 5610              	.LBE5081:
 5611              	.LBE5088:
 5612              	.LBE5108:
 5613              	.LBB5109:
 5614              	.LBB5107:
 5615              	.LBB5106:
 5616              	.LBB5105:
 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 5617              		.loc 10 218 41 discriminator 2 view .LVU1299
 5618 00b6 0660     		str	r6, [r0]
 5619              	.LVL273:
 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 5620              		.loc 10 218 41 discriminator 2 view .LVU1300
 5621              	.LBE5105:
 5622              	.LBE5106:
 5623              	.LBE5107:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 409


 5624              	.LBE5109:
 5625              	.LBB5110:
 5626              	.LBI4879:
 507:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 5627              		.loc 13 507 2 is_stmt 1 discriminator 2 view .LVU1301
 5628              	.LBB5089:
 5629              	.LBI4880:
 148:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 5630              		.loc 12 148 2 discriminator 2 view .LVU1302
 148:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 5631              		.loc 12 148 2 is_stmt 0 discriminator 2 view .LVU1303
 5632              	.LBE5089:
 5633              	.LBE5110:
 5634              	.LBE5117:
 5635              	.LBE5125:
 5636              	.LBE5132:
 5637              	.LBE5262:
 5638              	.LBE5266:
 5639              	.LBE5270:
 5640              	.LBE5280:
 5641              	.LBE5340:
 5642              	.LBE5344:
 5643              		.loc 27 175 3 is_stmt 1 discriminator 2 view .LVU1304
 5644              	.LBB5345:
 5645              	.LBB5341:
 5646              	.LBB5281:
 5647              	.LBB5271:
 5648              	.LBB5267:
 5649              	.LBB5263:
 5650              	.LBB5133:
 5651              	.LBB5126:
 5652              	.LBB5118:
 5653              	.LBB5111:
 5654              	.LBB5090:
 5655              	.LBB5082:
 5656              	.LBI4881:
 371:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__p.first)),
 5657              		.loc 23 371 12 discriminator 2 view .LVU1305
 5658              	.LBB5075:
 5659              	.LBB5065:
 5660              	.LBI5065:
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 5661              		.loc 19 76 5 discriminator 2 view .LVU1306
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 5662              		.loc 19 76 5 is_stmt 0 discriminator 2 view .LVU1307
 5663              	.LBE5065:
 5664              	.LBB5066:
 5665              	.LBB5057:
 5666              	.LBB4940:
 5667              	.LBB4933:
 555:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 5668              		.loc 16 555 2 discriminator 2 view .LVU1308
 5669 00b8 BB42     		cmp	r3, r7
 5670              	.LBE4933:
 5671              	.LBE4940:
 5672              	.LBE5057:
 5673              	.LBE5066:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 410


 373:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 
 5674              		.loc 23 373 40 discriminator 2 view .LVU1309
 5675 00ba C0F804C0 		str	ip, [r0, #4]
 5676              	.LVL274:
 5677              	.LBB5067:
 5678              	.LBI5067:
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 5679              		.loc 19 76 5 is_stmt 1 discriminator 2 view .LVU1310
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 5680              		.loc 19 76 5 is_stmt 0 discriminator 2 view .LVU1311
 5681              	.LBE5067:
 5682              	.LBB5068:
 5683              	.LBI4883:
  37:src/parameter_controller.h **** 	std::string label;
 5684              		.loc 15 37 8 is_stmt 1 discriminator 2 view .LVU1312
 5685              	.LBB5058:
 5686              	.LBB4941:
 5687              	.LBI4885:
 552:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 5688              		.loc 16 552 7 discriminator 2 view .LVU1313
 5689              	.LBB4934:
 5690              	.LBB4902:
 5691              	.LBI4887:
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5692              		.loc 16 190 7 discriminator 2 view .LVU1314
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5693              		.loc 16 190 7 is_stmt 0 discriminator 2 view .LVU1315
 5694              	.LBE4902:
 5695              	.LBB4903:
 5696              	.LBI4903:
 286:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 5697              		.loc 16 286 7 is_stmt 1 discriminator 2 view .LVU1316
 286:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 5698              		.loc 16 286 7 is_stmt 0 discriminator 2 view .LVU1317
 5699              	.LBE4903:
 5700              	.LBB4904:
 5701              	.LBI4904:
 5702              		.loc 19 101 5 is_stmt 1 discriminator 2 view .LVU1318
 5703              		.loc 19 101 5 is_stmt 0 discriminator 2 view .LVU1319
 5704              	.LBE4904:
 5705              	.LBB4905:
 5706              	.LBI4891:
 159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 5707              		.loc 16 159 2 is_stmt 1 discriminator 2 view .LVU1320
 5708              	.LBB4896:
 5709              	.LBB4893:
 5710              	.LBI4893:
 5711              		.loc 19 101 5 discriminator 2 view .LVU1321
 5712              		.loc 19 101 5 is_stmt 0 discriminator 2 view .LVU1322
 5713              	.LBE4893:
 5714              	.LBB4894:
 5715              	.LBI4894:
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 5716              		.loc 11 147 7 is_stmt 1 discriminator 2 view .LVU1323
 5717              	.LBB4895:
 5718              	.LBI4895:
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 411


 5719              		.loc 12 82 7 discriminator 2 view .LVU1324
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5720              		.loc 12 82 7 is_stmt 0 discriminator 2 view .LVU1325
 5721              	.LBE4895:
 5722              	.LBE4894:
 5723              	.LBE4896:
 5724              	.LBE4905:
 5725              	.LBB4906:
 5726              	.LBI4897:
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 5727              		.loc 16 221 7 is_stmt 1 discriminator 2 view .LVU1326
 5728              	.LBB4900:
 5729              	.LBI4898:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 5730              		.loc 16 186 7 discriminator 2 view .LVU1327
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 5731              		.loc 16 186 7 is_stmt 0 discriminator 2 view .LVU1328
 5732              	.LBE4900:
 5733              	.LBB4901:
 5734              	.LBI4901:
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5735              		.loc 16 200 7 is_stmt 1 discriminator 2 view .LVU1329
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5736              		.loc 16 200 7 is_stmt 0 discriminator 2 view .LVU1330
 5737              	.LBE4901:
 5738              	.LBE4906:
 555:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 5739              		.loc 16 555 2 discriminator 2 view .LVU1331
 5740 00be 00F06981 		beq	.L226
 5741              	.LVL275:
 5742              	.LBB4907:
 5743              	.LBI4907:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 5744              		.loc 16 186 7 is_stmt 1 view .LVU1332
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 5745              		.loc 16 186 7 is_stmt 0 view .LVU1333
 5746              	.LBE4907:
 5747              	.LBB4908:
 5748              	.LBI4908:
 178:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 5749              		.loc 16 178 7 is_stmt 1 view .LVU1334
 5750              	.LBB4909:
 179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 5751              		.loc 16 179 26 is_stmt 0 view .LVU1335
 5752 00c2 8360     		str	r3, [r0, #8]
 5753              	.LVL276:
 179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 5754              		.loc 16 179 26 view .LVU1336
 5755              	.LBE4909:
 5756              	.LBE4908:
 5757              	.LBB4910:
 5758              	.LBI4910:
 210:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 5759              		.loc 16 210 7 is_stmt 1 view .LVU1337
 5760              	.LBB4911:
 211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 5761              		.loc 16 211 31 is_stmt 0 view .LVU1338
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 412


 5762 00c4 229B     		ldr	r3, [sp, #136]
 5763 00c6 0361     		str	r3, [r0, #16]
 5764              	.LVL277:
 5765              	.L178:
 211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 5766              		.loc 16 211 31 view .LVU1339
 5767              	.LBE4911:
 5768              	.LBE4910:
 5769              	.LBB4912:
 5770              	.LBI4912:
 907:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 5771              		.loc 16 907 7 is_stmt 1 view .LVU1340
 907:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 5772              		.loc 16 907 7 is_stmt 0 view .LVU1341
 5773              	.LBE4912:
 5774              	.LBB4913:
 5775              	.LBI4913:
 182:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 5776              		.loc 16 182 7 is_stmt 1 view .LVU1342
 5777              	.LBB4914:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 5778              		.loc 16 183 26 is_stmt 0 view .LVU1343
 5779 00c8 219B     		ldr	r3, [sp, #132]
 5780              	.LBE4914:
 5781              	.LBE4913:
 5782              	.LBE4934:
 5783              	.LBE4941:
 5784              	.LBB4942:
 5785              	.LBB4943:
 555:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 5786              		.loc 16 555 2 view .LVU1344
 5787 00ca 0DF1A008 		add	r8, sp, #160
 5788              	.LBB4944:
 5789              	.LBB4945:
 193:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 5790              		.loc 16 193 51 view .LVU1345
 5791 00ce 05F12806 		add	r6, r5, #40
 5792              	.LBE4945:
 5793              	.LBE4944:
 5794              	.LBE4943:
 5795              	.LBE4942:
 5796              	.LBB4989:
 5797              	.LBB4935:
 5798              	.LBB4916:
 5799              	.LBB4917:
 179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 5800              		.loc 16 179 26 view .LVU1346
 5801 00d2 2097     		str	r7, [sp, #128]
 5802              	.LBE4917:
 5803              	.LBE4916:
 5804              	.LBB4918:
 5805              	.LBB4915:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 5806              		.loc 16 183 26 view .LVU1347
 5807 00d4 EB60     		str	r3, [r5, #12]
 5808              	.LVL278:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 413


 5809              		.loc 16 183 26 view .LVU1348
 5810              	.LBE4915:
 5811              	.LBE4918:
 5812              	.LBB4919:
 5813              	.LBI4919:
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5814              		.loc 16 190 7 is_stmt 1 view .LVU1349
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5815              		.loc 16 190 7 is_stmt 0 view .LVU1350
 5816              	.LBE4919:
 5817              	.LBB4920:
 5818              	.LBI4916:
 178:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 5819              		.loc 16 178 7 is_stmt 1 view .LVU1351
 178:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 5820              		.loc 16 178 7 is_stmt 0 view .LVU1352
 5821              	.LBE4920:
 5822              	.LBB4921:
 5823              	.LBI4921:
 214:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5824              		.loc 16 214 7 is_stmt 1 view .LVU1353
 5825              	.LBB4922:
 5826              	.LBI4922:
 182:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 5827              		.loc 16 182 7 view .LVU1354
 5828              	.LBB4923:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 5829              		.loc 16 183 26 is_stmt 0 view .LVU1355
 5830 00d6 0023     		movs	r3, #0
 5831              	.LBE4923:
 5832              	.LBE4922:
 5833              	.LBE4921:
 5834              	.LBE4935:
 5835              	.LBE4989:
 5836              	.LBB4990:
 5837              	.LBB4984:
 5838              	.LBB4946:
 5839              	.LBB4947:
 160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 5840              		.loc 16 160 46 view .LVU1356
 5841 00d8 2E62     		str	r6, [r5, #32]
 5842              	.LBE4947:
 5843              	.LBE4946:
 5844              	.LBE4984:
 5845              	.LBE4990:
 5846              	.LBB4991:
 5847              	.LBB4936:
 5848              	.LBB4928:
 5849              	.LBB4925:
 5850              	.LBB4924:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 5851              		.loc 16 183 26 view .LVU1357
 5852 00da 2193     		str	r3, [sp, #132]
 5853              	.LVL279:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 5854              		.loc 16 183 26 view .LVU1358
 5855              	.LBE4924:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 414


 5856              	.LBE4925:
 5857              	.LBB4926:
 5858              	.LBI4926:
 321:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 5859              		.loc 17 321 7 is_stmt 1 view .LVU1359
 5860              	.LBB4927:
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 5861              		.loc 17 322 9 view .LVU1360
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 5862              		.loc 17 322 14 is_stmt 0 view .LVU1361
 5863 00dc 8DF88830 		strb	r3, [sp, #136]
 5864              	.LVL280:
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 5865              		.loc 17 322 14 view .LVU1362
 5866              	.LBE4927:
 5867              	.LBE4926:
 5868              	.LBE4928:
 5869              	.LBE4936:
 5870              	.LBE4991:
 5871              	.LBB4992:
 5872              	.LBI4942:
 552:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 5873              		.loc 16 552 7 is_stmt 1 view .LVU1363
 5874              	.LBB4985:
 5875              	.LBB4952:
 5876              	.LBI4944:
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5877              		.loc 16 190 7 view .LVU1364
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5878              		.loc 16 190 7 is_stmt 0 view .LVU1365
 5879              	.LBE4952:
 5880              	.LBB4953:
 5881              	.LBI4953:
 286:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 5882              		.loc 16 286 7 is_stmt 1 view .LVU1366
 286:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 5883              		.loc 16 286 7 is_stmt 0 view .LVU1367
 5884              	.LBE4953:
 5885              	.LBB4954:
 5886              	.LBI4954:
 5887              		.loc 19 101 5 is_stmt 1 view .LVU1368
 5888              		.loc 19 101 5 is_stmt 0 view .LVU1369
 5889              	.LBE4954:
 5890              	.LBB4955:
 5891              	.LBI4946:
 159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 5892              		.loc 16 159 2 is_stmt 1 view .LVU1370
 5893              	.LBB4951:
 5894              	.LBB4948:
 5895              	.LBI4948:
 5896              		.loc 19 101 5 view .LVU1371
 5897              		.loc 19 101 5 is_stmt 0 view .LVU1372
 5898              	.LBE4948:
 5899              	.LBB4949:
 5900              	.LBI4949:
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 5901              		.loc 11 147 7 is_stmt 1 view .LVU1373
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 415


 5902              	.LBB4950:
 5903              	.LBI4950:
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5904              		.loc 12 82 7 view .LVU1374
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 5905              		.loc 12 82 7 is_stmt 0 view .LVU1375
 5906              	.LBE4950:
 5907              	.LBE4949:
 5908              	.LBE4951:
 5909              	.LBE4955:
 5910              	.LBB4956:
 5911              	.LBI4956:
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 5912              		.loc 16 221 7 is_stmt 1 view .LVU1376
 5913              	.LBB4957:
 5914              	.LBI4957:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 5915              		.loc 16 186 7 view .LVU1377
 5916              	.LBB4958:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 5917              		.loc 16 187 28 is_stmt 0 view .LVU1378
 5918 00e0 269B     		ldr	r3, [sp, #152]
 5919              	.LVL281:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 5920              		.loc 16 187 28 view .LVU1379
 5921              	.LBE4958:
 5922              	.LBE4957:
 5923              	.LBB4959:
 5924              	.LBI4959:
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5925              		.loc 16 200 7 is_stmt 1 view .LVU1380
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 5926              		.loc 16 200 7 is_stmt 0 view .LVU1381
 5927              	.LBE4959:
 5928              	.LBE4956:
 555:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 5929              		.loc 16 555 2 view .LVU1382
 5930 00e2 4345     		cmp	r3, r8
 5931 00e4 00F05D81 		beq	.L227
 5932              	.LVL282:
 5933              	.LBB4960:
 5934              	.LBI4960:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 5935              		.loc 16 186 7 is_stmt 1 view .LVU1383
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 5936              		.loc 16 186 7 is_stmt 0 view .LVU1384
 5937              	.LBE4960:
 5938              	.LBB4961:
 5939              	.LBI4961:
 178:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 5940              		.loc 16 178 7 is_stmt 1 view .LVU1385
 5941              	.LBB4962:
 179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 5942              		.loc 16 179 26 is_stmt 0 view .LVU1386
 5943 00e8 2B62     		str	r3, [r5, #32]
 5944              	.LVL283:
 179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 416


 5945              		.loc 16 179 26 view .LVU1387
 5946              	.LBE4962:
 5947              	.LBE4961:
 5948              	.LBB4963:
 5949              	.LBI4963:
 210:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 5950              		.loc 16 210 7 is_stmt 1 view .LVU1388
 5951              	.LBB4964:
 211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 5952              		.loc 16 211 31 is_stmt 0 view .LVU1389
 5953 00ea 289B     		ldr	r3, [sp, #160]
 5954 00ec AB62     		str	r3, [r5, #40]
 5955              	.LVL284:
 5956              	.L180:
 211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 5957              		.loc 16 211 31 view .LVU1390
 5958              	.LBE4964:
 5959              	.LBE4963:
 5960              	.LBB4965:
 5961              	.LBI4965:
 907:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 5962              		.loc 16 907 7 is_stmt 1 view .LVU1391
 907:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 5963              		.loc 16 907 7 is_stmt 0 view .LVU1392
 5964              	.LBE4965:
 5965              	.LBB4966:
 5966              	.LBI4966:
 182:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 5967              		.loc 16 182 7 is_stmt 1 view .LVU1393
 5968              	.LBB4967:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 5969              		.loc 16 183 26 is_stmt 0 view .LVU1394
 5970 00ee 279B     		ldr	r3, [sp, #156]
 5971              	.LBE4967:
 5972              	.LBE4966:
 5973              	.LBE4985:
 5974              	.LBE4992:
 5975              	.LBB4993:
 5976              	.LBB4994:
 555:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 5977              		.loc 16 555 2 view .LVU1395
 5978 00f0 0DF1B809 		add	r9, sp, #184
 5979              	.LBB4995:
 5980              	.LBB4996:
 193:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #else
 5981              		.loc 16 193 51 view .LVU1396
 5982 00f4 05F1400E 		add	lr, r5, #64
 5983              	.LBE4996:
 5984              	.LBE4995:
 5985              	.LBE4994:
 5986              	.LBE4993:
 5987              	.LBB5046:
 5988              	.LBB4986:
 5989              	.LBB4969:
 5990              	.LBB4970:
 179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 5991              		.loc 16 179 26 view .LVU1397
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 417


 5992 00f8 CDF89880 		str	r8, [sp, #152]
 5993              	.LBE4970:
 5994              	.LBE4969:
 5995              	.LBB4971:
 5996              	.LBB4968:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 5997              		.loc 16 183 26 view .LVU1398
 5998 00fc 6B62     		str	r3, [r5, #36]
 5999              	.LVL285:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 6000              		.loc 16 183 26 view .LVU1399
 6001              	.LBE4968:
 6002              	.LBE4971:
 6003              	.LBB4972:
 6004              	.LBI4972:
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6005              		.loc 16 190 7 is_stmt 1 view .LVU1400
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6006              		.loc 16 190 7 is_stmt 0 view .LVU1401
 6007              	.LBE4972:
 6008              	.LBB4973:
 6009              	.LBI4969:
 178:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 6010              		.loc 16 178 7 is_stmt 1 view .LVU1402
 178:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 6011              		.loc 16 178 7 is_stmt 0 view .LVU1403
 6012              	.LBE4973:
 6013              	.LBB4974:
 6014              	.LBI4974:
 214:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6015              		.loc 16 214 7 is_stmt 1 view .LVU1404
 6016              	.LBB4975:
 6017              	.LBI4975:
 182:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 6018              		.loc 16 182 7 view .LVU1405
 6019              	.LBB4976:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 6020              		.loc 16 183 26 is_stmt 0 view .LVU1406
 6021 00fe 0023     		movs	r3, #0
 6022              	.LBE4976:
 6023              	.LBE4975:
 6024              	.LBE4974:
 6025              	.LBE4986:
 6026              	.LBE5046:
 6027              	.LBB5047:
 6028              	.LBB5041:
 6029              	.LBB4997:
 6030              	.LBB4998:
 160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 6031              		.loc 16 160 46 view .LVU1407
 6032 0100 C5F838E0 		str	lr, [r5, #56]
 6033              	.LBE4998:
 6034              	.LBE4997:
 6035              	.LBE5041:
 6036              	.LBE5047:
 6037              	.LBB5048:
 6038              	.LBB4987:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 418


 6039              	.LBB4981:
 6040              	.LBB4978:
 6041              	.LBB4977:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 6042              		.loc 16 183 26 view .LVU1408
 6043 0104 2793     		str	r3, [sp, #156]
 6044              	.LVL286:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 6045              		.loc 16 183 26 view .LVU1409
 6046              	.LBE4977:
 6047              	.LBE4978:
 6048              	.LBB4979:
 6049              	.LBI4979:
 321:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 6050              		.loc 17 321 7 is_stmt 1 view .LVU1410
 6051              	.LBB4980:
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 6052              		.loc 17 322 9 view .LVU1411
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 6053              		.loc 17 322 14 is_stmt 0 view .LVU1412
 6054 0106 8DF8A030 		strb	r3, [sp, #160]
 6055              	.LVL287:
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 6056              		.loc 17 322 14 view .LVU1413
 6057              	.LBE4980:
 6058              	.LBE4979:
 6059              	.LBE4981:
 6060              	.LBE4987:
 6061              	.LBE5048:
 6062              	.LBB5049:
 6063              	.LBI4993:
 552:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 6064              		.loc 16 552 7 is_stmt 1 view .LVU1414
 6065              	.LBB5042:
 6066              	.LBB5003:
 6067              	.LBI4995:
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6068              		.loc 16 190 7 view .LVU1415
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6069              		.loc 16 190 7 is_stmt 0 view .LVU1416
 6070              	.LBE5003:
 6071              	.LBB5004:
 6072              	.LBI5004:
 286:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 6073              		.loc 16 286 7 is_stmt 1 view .LVU1417
 286:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus; }
 6074              		.loc 16 286 7 is_stmt 0 view .LVU1418
 6075              	.LBE5004:
 6076              	.LBB5005:
 6077              	.LBI5005:
 6078              		.loc 19 101 5 is_stmt 1 view .LVU1419
 6079              		.loc 19 101 5 is_stmt 0 view .LVU1420
 6080              	.LBE5005:
 6081              	.LBB5006:
 6082              	.LBI4997:
 159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 6083              		.loc 16 159 2 is_stmt 1 view .LVU1421
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 419


 6084              	.LBB5002:
 6085              	.LBB4999:
 6086              	.LBI4999:
 6087              		.loc 19 101 5 view .LVU1422
 6088              		.loc 19 101 5 is_stmt 0 view .LVU1423
 6089              	.LBE4999:
 6090              	.LBB5000:
 6091              	.LBI5000:
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 6092              		.loc 11 147 7 is_stmt 1 view .LVU1424
 6093              	.LBB5001:
 6094              	.LBI5001:
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6095              		.loc 12 82 7 view .LVU1425
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6096              		.loc 12 82 7 is_stmt 0 view .LVU1426
 6097              	.LBE5001:
 6098              	.LBE5000:
 6099              	.LBE5002:
 6100              	.LBE5006:
 6101              	.LBB5007:
 6102              	.LBI5007:
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 6103              		.loc 16 221 7 is_stmt 1 view .LVU1427
 6104              	.LBB5008:
 6105              	.LBI5008:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 6106              		.loc 16 186 7 view .LVU1428
 6107              	.LBB5009:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 6108              		.loc 16 187 28 is_stmt 0 view .LVU1429
 6109 010a 2C9B     		ldr	r3, [sp, #176]
 6110              	.LVL288:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 6111              		.loc 16 187 28 view .LVU1430
 6112              	.LBE5009:
 6113              	.LBE5008:
 6114              	.LBB5010:
 6115              	.LBI5010:
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6116              		.loc 16 200 7 is_stmt 1 view .LVU1431
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6117              		.loc 16 200 7 is_stmt 0 view .LVU1432
 6118              	.LBE5010:
 6119              	.LBE5007:
 555:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  {
 6120              		.loc 16 555 2 view .LVU1433
 6121 010c 4B45     		cmp	r3, r9
 6122 010e 00F03681 		beq	.L228
 6123              	.LVL289:
 6124              	.LBB5011:
 6125              	.LBI5011:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 6126              		.loc 16 186 7 is_stmt 1 view .LVU1434
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 6127              		.loc 16 186 7 is_stmt 0 view .LVU1435
 6128              	.LBE5011:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 420


 6129              	.LBB5012:
 6130              	.LBI5012:
 178:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 6131              		.loc 16 178 7 is_stmt 1 view .LVU1436
 6132              	.LBB5013:
 179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 6133              		.loc 16 179 26 is_stmt 0 view .LVU1437
 6134 0112 AB63     		str	r3, [r5, #56]
 6135              	.LVL290:
 179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 6136              		.loc 16 179 26 view .LVU1438
 6137              	.LBE5013:
 6138              	.LBE5012:
 6139              	.LBB5014:
 6140              	.LBI5014:
 210:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_allocated_capacity = __capacity; }
 6141              		.loc 16 210 7 is_stmt 1 view .LVU1439
 6142              	.LBB5015:
 211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 6143              		.loc 16 211 31 is_stmt 0 view .LVU1440
 6144 0114 2E9B     		ldr	r3, [sp, #184]
 6145 0116 2B64     		str	r3, [r5, #64]
 6146              	.LVL291:
 6147              	.L182:
 211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 6148              		.loc 16 211 31 view .LVU1441
 6149              	.LBE5015:
 6150              	.LBE5014:
 6151              	.LBB5016:
 6152              	.LBI5016:
 907:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 6153              		.loc 16 907 7 is_stmt 1 view .LVU1442
 907:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_string_length; }
 6154              		.loc 16 907 7 is_stmt 0 view .LVU1443
 6155              	.LBE5016:
 6156              	.LBB5017:
 6157              	.LBI5017:
 182:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 6158              		.loc 16 182 7 is_stmt 1 view .LVU1444
 6159              	.LBE5017:
 6160              	.LBE5042:
 6161              	.LBE5049:
 6162              	.LBE5058:
 6163              	.LBE5068:
 6164              	.LBE5075:
 6165              	.LBE5082:
 6166              	.LBE5090:
 6167              	.LBE5111:
 6168              	.LBE5118:
 6169              	.LBE5126:
 6170              	.LBE5133:
 6171              	.LBB5134:
 6172              	.LBB5135:
 682:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 6173              		.loc 9 682 60 is_stmt 0 view .LVU1445
 6174 0118 1F4B     		ldr	r3, .L230+20
 6175              	.LBE5135:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 421


 6176              	.LBE5134:
 6177              	.LBB5144:
 6178              	.LBB5127:
 6179              	.LBB5119:
 6180              	.LBB5112:
 6181              	.LBB5091:
 6182              	.LBB5083:
 6183              	.LBB5076:
 6184              	.LBB5069:
 6185              	.LBB5059:
 6186              	.LBB5050:
 6187              	.LBB5043:
 6188              	.LBB5020:
 6189              	.LBB5021:
 6190              	.LBB5022:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 6191              		.loc 16 183 26 view .LVU1446
 6192 011a 0022     		movs	r2, #0
 6193              	.LBE5022:
 6194              	.LBE5021:
 6195              	.LBE5020:
 6196              	.LBB5030:
 6197              	.LBB5031:
 179:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 6198              		.loc 16 179 26 view .LVU1447
 6199 011c CDF8B090 		str	r9, [sp, #176]
 6200              	.LBE5031:
 6201              	.LBE5030:
 6202              	.LBB5032:
 6203              	.LBB5024:
 6204              	.LBB5025:
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 6205              		.loc 17 322 14 view .LVU1448
 6206 0120 8DF8B820 		strb	r2, [sp, #184]
 6207              	.LBE5025:
 6208              	.LBE5024:
 6209              	.LBE5032:
 6210              	.LBE5043:
 6211              	.LBE5050:
 6212              	.LBE5059:
 6213              	.LBE5069:
 6214              	.LBE5076:
 6215              	.LBE5083:
 6216              	.LBE5091:
 6217              	.LBE5112:
 6218              	.LBE5119:
 6219              	.LBE5127:
 6220              	.LBE5144:
 6221              	.LBB5145:
 6222              	.LBB5146:
 6223              	.LBB5147:
 6224              	.LBB5148:
 6225              	.LBB5149:
1573:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (!__prev_p)
 6226              		.loc 9 1573 20 view .LVU1449
 6227 0124 D3E9000A 		ldrd	r0, r10, [r3]
 6228              	.LBE5149:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 422


 6229              	.LBE5148:
 6230              	.LBE5147:
 6231              	.LBE5146:
 6232              	.LBE5145:
 6233              	.LBB5186:
 6234              	.LBB5128:
 6235              	.LBB5120:
 6236              	.LBB5113:
 6237              	.LBB5092:
 6238              	.LBB5084:
 6239              	.LBB5077:
 6240              	.LBB5070:
 6241              	.LBB5060:
 6242              	.LBB5051:
 6243              	.LBB5044:
 6244              	.LBB5033:
 6245              	.LBB5018:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 6246              		.loc 16 183 26 view .LVU1450
 6247 0128 2D9B     		ldr	r3, [sp, #180]
 6248              	.LBE5018:
 6249              	.LBE5033:
 6250              	.LBB5034:
 6251              	.LBB5027:
 6252              	.LBB5023:
 6253 012a 2D92     		str	r2, [sp, #180]
 6254              	.LVL292:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 6255              		.loc 16 183 26 view .LVU1451
 6256              	.LBE5023:
 6257              	.LBE5027:
 6258              	.LBE5034:
 6259              	.LBB5035:
 6260              	.LBB5019:
 6261 012c EB63     		str	r3, [r5, #60]
 6262              	.LVL293:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 6263              		.loc 16 183 26 view .LVU1452
 6264              	.LBE5019:
 6265              	.LBE5035:
 6266              	.LBB5036:
 6267              	.LBI5036:
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6268              		.loc 16 190 7 is_stmt 1 view .LVU1453
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6269              		.loc 16 190 7 is_stmt 0 view .LVU1454
 6270              	.LBE5036:
 6271              	.LBB5037:
 6272              	.LBI5030:
 178:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 6273              		.loc 16 178 7 is_stmt 1 view .LVU1455
 178:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dataplus._M_p = __p; }
 6274              		.loc 16 178 7 is_stmt 0 view .LVU1456
 6275              	.LBE5037:
 6276              	.LBB5038:
 6277              	.LBI5020:
 214:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 423


 6278              		.loc 16 214 7 is_stmt 1 view .LVU1457
 6279              	.LBB5028:
 6280              	.LBI5021:
 182:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 6281              		.loc 16 182 7 view .LVU1458
 182:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 6282              		.loc 16 182 7 is_stmt 0 view .LVU1459
 6283              	.LBE5028:
 6284              	.LBB5029:
 6285              	.LBI5024:
 321:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 6286              		.loc 17 321 7 is_stmt 1 view .LVU1460
 6287              	.LBB5026:
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 6288              		.loc 17 322 9 view .LVU1461
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 6289              		.loc 17 322 9 is_stmt 0 view .LVU1462
 6290              	.LBE5026:
 6291              	.LBE5029:
 6292              	.LBE5038:
 6293              	.LBE5044:
 6294              	.LBE5051:
  37:src/parameter_controller.h **** 	std::string label;
 6295              		.loc 15 37 8 view .LVU1463
 6296 012e 329B     		ldr	r3, [sp, #200]
 6297              	.LBE5060:
 6298              	.LBE5070:
 6299              	.LBE5077:
 6300              	.LBE5084:
 6301              	.LBE5092:
 6302              	.LBE5113:
 6303              	.LBE5120:
 6304              	.LBE5128:
 6305              	.LBE5186:
 6306              	.LBB5187:
 6307              	.LBB5142:
 6308              	.LBB5136:
 6309              	.LBB5137:
 6310              	.LBB5138:
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 6311              		.loc 10 433 22 view .LVU1464
 6312 0130 BCFBFAF1 		udiv	r1, ip, r10
 6313 0134 0AFB11C1 		mls	r1, r10, r1, ip
 6314              	.LBE5138:
 6315              	.LBE5137:
 6316              	.LBE5136:
 6317              	.LBE5142:
 6318              	.LBE5187:
 6319              	.LBB5188:
 6320              	.LBB5177:
 6321              	.LBB5175:
 6322              	.LBB5173:
 6323              	.LBB5171:
1573:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       if (!__prev_p)
 6324              		.loc 9 1573 20 view .LVU1465
 6325 0138 50F82120 		ldr	r2, [r0, r1, lsl #2]
 6326              	.LBE5171:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 424


 6327              	.LBE5173:
 6328              	.LBE5175:
 6329              	.LBE5177:
 6330              	.LBE5188:
 6331              	.LBB5189:
 6332              	.LBB5129:
 6333              	.LBB5121:
 6334              	.LBB5114:
 6335              	.LBB5093:
 6336              	.LBB5085:
 6337              	.LBB5078:
 6338              	.LBB5071:
 6339              	.LBB5061:
  37:src/parameter_controller.h **** 	std::string label;
 6340              		.loc 15 37 8 view .LVU1466
 6341 013c 2B65     		str	r3, [r5, #80]
 6342 013e 339B     		ldr	r3, [sp, #204]	@ float
 6343 0140 6B65     		str	r3, [r5, #84]	@ float
 6344 0142 349B     		ldr	r3, [sp, #208]	@ float
 6345 0144 AB65     		str	r3, [r5, #88]	@ float
 6346 0146 359B     		ldr	r3, [sp, #212]	@ float
 6347 0148 EB65     		str	r3, [r5, #92]	@ float
 6348              	.LVL294:
  37:src/parameter_controller.h **** 	std::string label;
 6349              		.loc 15 37 8 view .LVU1467
 6350              	.LBE5061:
 6351              	.LBE5071:
 6352              	.LBE5078:
 6353              	.LBE5085:
 6354              	.LBE5093:
 6355              	.LBE5114:
 6356              	.LBE5121:
 6357              	.LBE5129:
 6358              	.LBE5189:
 6359              	.LBB5190:
 6360              	.LBI5190:
1290:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       {
 6361              		.loc 10 1290 7 is_stmt 1 view .LVU1468
 6362              	.LBB5191:
 6363              	.LBI5191:
 6364              		.loc 14 153 3 view .LVU1469
 6365              	.LBB5192:
 6366              		.loc 14 153 3 view .LVU1470
 6367              		.loc 14 153 3 is_stmt 0 view .LVU1471
 6368              	.LBE5192:
 6369              	.LBE5191:
 6370              	.LBE5190:
 6371              	.LBB5193:
 6372              	.LBI5134:
 681:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __hash_code_base::_M_bucket_index(__k, __c, _M_bucket_count); }
 6373              		.loc 9 681 7 is_stmt 1 view .LVU1472
 6374              	.LBB5143:
 6375              	.LBB5141:
 6376              	.LBI5136:
1298:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 		      std::size_t __bkt_count) const
 6377              		.loc 10 1298 7 view .LVU1473
 6378              	.LBB5140:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 425


 6379              	.LBI5137:
 431:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	       second_argument_type __den) const noexcept
 6380              		.loc 10 431 5 view .LVU1474
 6381              	.LBB5139:
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 6382              		.loc 10 433 7 view .LVU1475
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 6383              		.loc 10 433 7 is_stmt 0 view .LVU1476
 6384              	.LBE5139:
 6385              	.LBE5140:
 6386              	.LBE5141:
 6387              	.LBE5143:
 6388              	.LBE5193:
 6389              	.LBB5194:
 6390              	.LBB5178:
 6391              	.LBI5146:
 690:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 		   __hash_code __c) const
 6392              		.loc 9 690 7 is_stmt 1 view .LVU1477
 6393              	.LBB5176:
 6394              	.LBB5174:
 6395              	.LBI5148:
1567:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	       _H1, _H2, _Hash, _RehashPolicy, _Traits>::
 6396              		.loc 9 1567 5 view .LVU1478
 6397              	.LBB5172:
1574:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	return nullptr;
 6398              		.loc 9 1574 7 is_stmt 0 view .LVU1479
 6399 014a 92B1     		cbz	r2, .L183
 6400              	.LBB5150:
1577:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	   __p = __p->_M_next())
 6401              		.loc 9 1577 25 view .LVU1480
 6402 014c 1068     		ldr	r0, [r2]
 6403              	.LVL295:
 6404              	.LBB5151:
 6405              	.LBB5152:
 6406              	.LBB5153:
 6407              	.LBB5154:
 6408              		.loc 25 356 20 view .LVU1481
 6409 014e 4368     		ldr	r3, [r0, #4]
 6410              	.LVL296:
 6411              	.L185:
 6412              		.loc 25 356 20 view .LVU1482
 6413              	.LBE5154:
 6414              	.LBE5153:
 6415              	.LBE5152:
 6416              	.LBI5151:
1798:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 6417              		.loc 10 1798 5 is_stmt 1 view .LVU1483
 6418              	.LBB5156:
 6419              	.LBB5155:
 6420              	.LBI5153:
 355:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return __x == __y; }
 6421              		.loc 25 355 7 view .LVU1484
 355:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_function.h ****       { return __x == __y; }
 6422              		.loc 25 355 7 is_stmt 0 view .LVU1485
 6423              	.LBE5155:
1804:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     }
 6424              		.loc 10 1804 2 view .LVU1486
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 426


 6425 0150 6345     		cmp	r3, ip
 6426 0152 23D0     		beq	.L184
 6427              	.LBE5156:
 6428              	.LBE5151:
1583:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    break;
 6429              		.loc 9 1583 14 view .LVU1487
 6430 0154 D0F800B0 		ldr	fp, [r0]
 6431              	.LVL297:
 6432              	.LBB5157:
 6433              	.LBI5157:
 677:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       { return __hash_code_base::_M_bucket_index(__n, _M_bucket_count); }
 6434              		.loc 9 677 7 is_stmt 1 view .LVU1488
 6435              	.LBB5158:
 6436              	.LBI5158:
1303:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	noexcept( noexcept(declval<const _H1&>()(declval<const _Key&>()))
 6437              		.loc 10 1303 7 view .LVU1489
 6438 0158 0246     		mov	r2, r0
 6439              	.LBE5158:
 6440              	.LBE5157:
1583:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    break;
 6441              		.loc 9 1583 21 is_stmt 0 view .LVU1490
 6442 015a BBF1000F 		cmp	fp, #0
 6443 015e 08D0     		beq	.L183
 6444              	.LBB5169:
 6445              	.LBB5167:
 6446              	.LBB5159:
1307:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 6447              		.loc 10 1307 23 view .LVU1491
 6448 0160 DBF80430 		ldr	r3, [fp, #4]
 6449              	.LVL298:
 6450              	.LBB5160:
 6451              	.LBI5160:
 6452              		.loc 14 153 3 is_stmt 1 view .LVU1492
 6453              	.LBB5161:
 6454              		.loc 14 153 3 view .LVU1493
 6455              		.loc 14 153 3 is_stmt 0 view .LVU1494
 6456              	.LBE5161:
 6457              	.LBE5160:
 6458              	.LBB5162:
 6459              	.LBI5162:
 431:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 	       second_argument_type __den) const noexcept
 6460              		.loc 10 431 5 is_stmt 1 view .LVU1495
 6461              	.LBB5163:
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 6462              		.loc 10 433 7 view .LVU1496
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 6463              		.loc 10 433 7 is_stmt 0 view .LVU1497
 6464              	.LBE5163:
 6465              	.LBE5162:
 6466              	.LBE5159:
 6467              	.LBE5167:
 6468              	.LBE5169:
 6469 0164 5846     		mov	r0, fp
 6470              	.LVL299:
 6471              	.LBB5170:
 6472              	.LBB5168:
 6473              	.LBB5166:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 427


 6474              	.LBB5165:
 6475              	.LBB5164:
 433:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****   };
 6476              		.loc 10 433 22 view .LVU1498
 6477 0166 B3FBFAFB 		udiv	fp, r3, r10
 6478 016a 0AFB1B3B 		mls	fp, r10, fp, r3
 6479              	.LBE5164:
 6480              	.LBE5165:
 6481              	.LBE5166:
 6482              	.LBE5168:
 6483              	.LBE5170:
1583:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    break;
 6484              		.loc 9 1583 21 view .LVU1499
 6485 016e 5945     		cmp	r1, fp
 6486 0170 EED0     		beq	.L185
 6487              	.LVL300:
 6488              	.L183:
1583:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	    break;
 6489              		.loc 9 1583 21 view .LVU1500
 6490              	.LBE5150:
 6491              	.LBE5172:
 6492              	.LBE5174:
 6493              	.LBE5176:
 6494              	.LBE5178:
 6495              	.LBE5194:
1682:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	__node._M_node = nullptr;
 6496              		.loc 9 1682 36 view .LVU1501
 6497 0172 0120     		movs	r0, #1
 6498 0174 2B46     		mov	r3, r5
 6499 0176 6246     		mov	r2, ip
 6500 0178 0090     		str	r0, [sp]
 6501 017a 0748     		ldr	r0, .L230+20
 6502 017c FFF7FEFF 		bl	_ZNSt10_HashtableIiSt4pairIKi5paramESaIS3_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS5
 6503              	.LVL301:
 6504              	.LBB5195:
 6505              	.LBI5195:
 352:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 6506              		.loc 23 352 12 is_stmt 1 view .LVU1502
 6507              	.LBB5196:
 6508              	.LBI5196:
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 6509              		.loc 19 76 5 view .LVU1503
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 6510              		.loc 19 76 5 is_stmt 0 view .LVU1504
 6511              	.LBE5196:
 6512              	.LBB5197:
 6513              	.LBI5197:
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 6514              		.loc 19 76 5 is_stmt 1 view .LVU1505
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 6515              		.loc 19 76 5 is_stmt 0 view .LVU1506
 6516              	.LBE5197:
 6517              	.LBE5195:
 6518              	.LBB5198:
 6519              	.LBI5198:
 276:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 6520              		.loc 9 276 2 is_stmt 1 view .LVU1507
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 428


 6521 0180 29E0     		b	.L188
 6522              	.L231:
 6523 0182 00BF     		.align	2
 6524              	.L230:
 6525 0184 00000000 		.word	0
 6526 0188 00000000 		.word	.LANCHOR0
 6527 018c 00000000 		.word	_Z13AudioCallbackPKPKfPPfj
 6528 0190 00000000 		.word	.LANCHOR1
 6529 0194 00000000 		.word	.LC5
 6530 0198 00000000 		.word	.LANCHOR2
 6531              	.LVL302:
 6532              	.L184:
 276:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 6533              		.loc 9 276 2 is_stmt 0 view .LVU1508
 6534              	.LBE5198:
 6535              	.LBB5258:
1677:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 	  // There is already an equivalent node, no insertion
 6536              		.loc 9 1677 2 view .LVU1509
 6537 019c 1368     		ldr	r3, [r2]
 6538 019e 002B     		cmp	r3, #0
 6539 01a0 E7D0     		beq	.L183
 6540              	.LVL303:
 6541              	.LBB5179:
 6542              	.LBI5179:
 340:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : __base_type(__p) { }
 6543              		.loc 10 340 7 is_stmt 1 view .LVU1510
 6544              	.LBB5180:
 6545              	.LBI5180:
 294:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : _M_cur(__p) { }
 6546              		.loc 10 294 7 view .LVU1511
 294:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : _M_cur(__p) { }
 6547              		.loc 10 294 7 is_stmt 0 view .LVU1512
 6548              	.LBE5180:
 6549              	.LBE5179:
 6550              	.LBB5181:
 6551              	.LBI5181:
 6552              		.loc 23 567 5 is_stmt 1 view .LVU1513
 6553              	.LBB5182:
 6554              	.LBB5183:
 6555              	.LBI5183:
 352:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 6556              		.loc 23 352 12 view .LVU1514
 6557              	.LBB5184:
 6558              	.LBI5184:
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 6559              		.loc 19 76 5 view .LVU1515
 6560              	.LBE5184:
 6561              	.LBB5185:
 6562              	.LBI5185:
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 6563              		.loc 19 76 5 view .LVU1516
  76:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\move.h ****     { return static_cast<_Tp&&>(__t); }
 6564              		.loc 19 76 5 is_stmt 0 view .LVU1517
 6565              	.LBE5185:
 6566              	.LBE5183:
 6567              	.LBE5182:
 6568              	.LBE5181:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 429


 6569              	.LBE5258:
 6570              	.LBB5259:
 276:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h **** 
 6571              		.loc 9 276 2 is_stmt 1 view .LVU1518
 6572              	.LBB5199:
 6573              	.LBI5199:
2051:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 6574              		.loc 10 2051 5 view .LVU1519
 6575              	.LBB5200:
 6576              	.LBB5201:
 6577              	.LBI5201:
 527:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 	noexcept(is_nothrow_destructible<_Up>::value)
 6578              		.loc 13 527 2 view .LVU1520
 6579              	.LBB5202:
 6580              	.LBI5202:
 6581              		.loc 12 154 2 view .LVU1521
 6582              	.LBB5203:
 6583              	.LBI5203:
 211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     : private __pair_base<_T1, _T2>
 6584              		.loc 23 211 12 view .LVU1522
 6585              	.LBB5204:
 6586              	.LBI5204:
  37:src/parameter_controller.h **** 	std::string label;
 6587              		.loc 15 37 8 view .LVU1523
 6588              	.LBB5205:
 6589              	.LBI5205:
 657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 6590              		.loc 16 657 7 view .LVU1524
 6591              	.LBB5206:
 6592              	.LBI5206:
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6593              		.loc 16 229 7 view .LVU1525
 6594              	.LBB5207:
 6595              	.LBB5208:
 6596              	.LBI5208:
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 6597              		.loc 16 221 7 view .LVU1526
 6598              	.LBB5209:
 6599              	.LBI5209:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 6600              		.loc 16 186 7 view .LVU1527
 6601              	.LBB5210:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 6602              		.loc 16 187 28 is_stmt 0 view .LVU1528
 6603 01a2 A86B     		ldr	r0, [r5, #56]
 6604              	.LVL304:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 6605              		.loc 16 187 28 view .LVU1529
 6606              	.LBE5210:
 6607              	.LBE5209:
 6608              	.LBE5208:
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 6609              		.loc 16 231 2 view .LVU1530
 6610 01a4 8645     		cmp	lr, r0
 6611 01a6 03D0     		beq	.L187
 6612              	.LVL305:
 6613              	.LBB5211:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 430


 6614              	.LBI5211:
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 6615              		.loc 16 236 7 is_stmt 1 view .LVU1531
 6616              	.LBB5212:
 6617              	.LBB5213:
 6618              	.LBI5213:
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 6619              		.loc 13 491 7 view .LVU1532
 6620              	.LBB5214:
 6621              	.LBI5214:
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 6622              		.loc 12 120 7 view .LVU1533
 6623              	.LBE5214:
 6624              	.LBE5213:
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 6625              		.loc 16 237 34 is_stmt 0 view .LVU1534
 6626 01a8 296C     		ldr	r1, [r5, #64]
 6627              	.LVL306:
 6628              	.LBB5217:
 6629              	.LBB5216:
 6630              	.LBB5215:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 6631              		.loc 12 133 19 view .LVU1535
 6632 01aa 0131     		adds	r1, r1, #1
 6633              	.LVL307:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 6634              		.loc 12 133 19 view .LVU1536
 6635 01ac FFF7FEFF 		bl	_ZdlPvj
 6636              	.LVL308:
 6637              	.L187:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 6638              		.loc 12 133 19 view .LVU1537
 6639              	.LBE5215:
 6640              	.LBE5216:
 6641              	.LBE5217:
 6642              	.LBE5212:
 6643              	.LBE5211:
 6644              	.LBE5207:
 6645              	.LBE5206:
 6646              	.LBB5218:
 6647              	.LBI5218:
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6648              		.loc 16 150 14 is_stmt 1 view .LVU1538
 6649              	.LBB5219:
 6650              	.LBI5219:
 6651              		.loc 11 162 7 view .LVU1539
 6652              	.LBB5220:
 6653              	.LBI5220:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6654              		.loc 12 89 7 view .LVU1540
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6655              		.loc 12 89 7 is_stmt 0 view .LVU1541
 6656              	.LBE5220:
 6657              	.LBE5219:
 6658              	.LBE5218:
 6659              	.LBE5205:
 6660              	.LBB5221:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 431


 6661              	.LBI5221:
 657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 6662              		.loc 16 657 7 is_stmt 1 view .LVU1542
 6663              	.LBB5222:
 6664              	.LBI5222:
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6665              		.loc 16 229 7 view .LVU1543
 6666              	.LBB5223:
 6667              	.LBB5224:
 6668              	.LBI5224:
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 6669              		.loc 16 221 7 view .LVU1544
 6670              	.LBB5225:
 6671              	.LBI5225:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 6672              		.loc 16 186 7 view .LVU1545
 6673              	.LBB5226:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 6674              		.loc 16 187 28 is_stmt 0 view .LVU1546
 6675 01b0 286A     		ldr	r0, [r5, #32]
 6676              	.LVL309:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 6677              		.loc 16 187 28 view .LVU1547
 6678              	.LBE5226:
 6679              	.LBE5225:
 6680              	.LBE5224:
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 6681              		.loc 16 231 2 view .LVU1548
 6682 01b2 8642     		cmp	r6, r0
 6683 01b4 03D0     		beq	.L189
 6684              	.LVL310:
 6685              	.LBB5227:
 6686              	.LBI5227:
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 6687              		.loc 16 236 7 is_stmt 1 view .LVU1549
 6688              	.LBB5228:
 6689              	.LBB5229:
 6690              	.LBI5229:
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 6691              		.loc 13 491 7 view .LVU1550
 6692              	.LBB5230:
 6693              	.LBI5230:
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 6694              		.loc 12 120 7 view .LVU1551
 6695              	.LBE5230:
 6696              	.LBE5229:
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 6697              		.loc 16 237 34 is_stmt 0 view .LVU1552
 6698 01b6 A96A     		ldr	r1, [r5, #40]
 6699              	.LBB5233:
 6700              	.LBB5232:
 6701              	.LBB5231:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 6702              		.loc 12 133 19 view .LVU1553
 6703 01b8 0131     		adds	r1, r1, #1
 6704              	.LVL311:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 432


 6705              		.loc 12 133 19 view .LVU1554
 6706 01ba FFF7FEFF 		bl	_ZdlPvj
 6707              	.LVL312:
 6708              	.L189:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 6709              		.loc 12 133 19 view .LVU1555
 6710              	.LBE5231:
 6711              	.LBE5232:
 6712              	.LBE5233:
 6713              	.LBE5228:
 6714              	.LBE5227:
 6715              	.LBE5223:
 6716              	.LBE5222:
 6717              	.LBB5234:
 6718              	.LBI5234:
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6719              		.loc 16 150 14 is_stmt 1 view .LVU1556
 6720              	.LBB5235:
 6721              	.LBI5235:
 6722              		.loc 11 162 7 view .LVU1557
 6723              	.LBB5236:
 6724              	.LBI5236:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6725              		.loc 12 89 7 view .LVU1558
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6726              		.loc 12 89 7 is_stmt 0 view .LVU1559
 6727              	.LBE5236:
 6728              	.LBE5235:
 6729              	.LBE5234:
 6730              	.LBE5221:
 6731              	.LBB5237:
 6732              	.LBI5237:
 657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 6733              		.loc 16 657 7 is_stmt 1 view .LVU1560
 6734              	.LBB5238:
 6735              	.LBI5238:
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6736              		.loc 16 229 7 view .LVU1561
 6737              	.LBB5239:
 6738              	.LBB5240:
 6739              	.LBI5240:
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 6740              		.loc 16 221 7 view .LVU1562
 6741              	.LBB5241:
 6742              	.LBI5241:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 6743              		.loc 16 186 7 view .LVU1563
 6744              	.LBB5242:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 6745              		.loc 16 187 28 is_stmt 0 view .LVU1564
 6746 01be A868     		ldr	r0, [r5, #8]
 6747              	.LVL313:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 6748              		.loc 16 187 28 view .LVU1565
 6749              	.LBE5242:
 6750              	.LBE5241:
 6751              	.LBE5240:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 433


 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 6752              		.loc 16 231 2 view .LVU1566
 6753 01c0 039B     		ldr	r3, [sp, #12]
 6754 01c2 8342     		cmp	r3, r0
 6755 01c4 03D0     		beq	.L190
 6756              	.LVL314:
 6757              	.LBB5243:
 6758              	.LBI5243:
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 6759              		.loc 16 236 7 is_stmt 1 view .LVU1567
 6760              	.LBB5244:
 6761              	.LBB5245:
 6762              	.LBI5245:
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 6763              		.loc 13 491 7 view .LVU1568
 6764              	.LBB5246:
 6765              	.LBI5246:
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 6766              		.loc 12 120 7 view .LVU1569
 6767              	.LBE5246:
 6768              	.LBE5245:
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 6769              		.loc 16 237 34 is_stmt 0 view .LVU1570
 6770 01c6 2969     		ldr	r1, [r5, #16]
 6771              	.LBB5249:
 6772              	.LBB5248:
 6773              	.LBB5247:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 6774              		.loc 12 133 19 view .LVU1571
 6775 01c8 0131     		adds	r1, r1, #1
 6776              	.LVL315:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 6777              		.loc 12 133 19 view .LVU1572
 6778 01ca FFF7FEFF 		bl	_ZdlPvj
 6779              	.LVL316:
 6780              	.L190:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 6781              		.loc 12 133 19 view .LVU1573
 6782              	.LBE5247:
 6783              	.LBE5248:
 6784              	.LBE5249:
 6785              	.LBE5244:
 6786              	.LBE5243:
 6787              	.LBE5239:
 6788              	.LBE5238:
 6789              	.LBB5250:
 6790              	.LBI5250:
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6791              		.loc 16 150 14 is_stmt 1 view .LVU1574
 6792              	.LBB5251:
 6793              	.LBI5251:
 6794              		.loc 11 162 7 view .LVU1575
 6795              	.LBB5252:
 6796              	.LBI5252:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6797              		.loc 12 89 7 view .LVU1576
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 434


 6798              		.loc 12 89 7 is_stmt 0 view .LVU1577
 6799              	.LBE5252:
 6800              	.LBE5251:
 6801              	.LBE5250:
 6802              	.LBE5237:
 6803              	.LBE5204:
 6804              	.LBE5203:
 6805              	.LBE5202:
 6806              	.LBE5201:
 6807              	.LBB5253:
 6808              	.LBI5253:
2059:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     {
 6809              		.loc 10 2059 5 is_stmt 1 view .LVU1578
 6810              	.LBB5254:
 6811              	.LBB5255:
 6812              	.LBI5255:
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 6813              		.loc 13 491 7 view .LVU1579
 6814              	.LBB5256:
 6815              	.LBI5256:
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 6816              		.loc 12 120 7 view .LVU1580
 6817              	.LBB5257:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 6818              		.loc 12 133 19 is_stmt 0 view .LVU1581
 6819 01ce 2846     		mov	r0, r5
 6820 01d0 6021     		movs	r1, #96
 6821 01d2 FFF7FEFF 		bl	_ZdlPvj
 6822              	.LVL317:
 6823              	.L188:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 6824              		.loc 12 133 19 view .LVU1582
 6825              	.LBE5257:
 6826              	.LBE5256:
 6827              	.LBE5255:
 6828              	.LBE5254:
 6829              	.LBE5253:
 6830              	.LBE5200:
 6831              	.LBE5199:
 6832              	.LBE5259:
 6833              	.LBE5263:
 6834              	.LBE5267:
 6835              	.LBE5271:
 6836              	.LBE5281:
 6837              	.LBB5282:
 6838              	.LBI5282:
 211:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_pair.h ****     : private __pair_base<_T1, _T2>
 6839              		.loc 23 211 12 is_stmt 1 view .LVU1583
 6840              	.LBB5283:
 6841              	.LBB5284:
 6842              	.LBI5284:
  37:src/parameter_controller.h **** 	std::string label;
 6843              		.loc 15 37 8 view .LVU1584
 6844              	.LBB5285:
 6845              	.LBI5285:
 657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 6846              		.loc 16 657 7 view .LVU1585
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 435


 6847              	.LBB5286:
 6848              	.LBB5287:
 6849              	.LBI5287:
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6850              		.loc 16 229 7 view .LVU1586
 6851              	.LBB5288:
 6852              	.LBB5289:
 6853              	.LBI5289:
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 6854              		.loc 16 221 7 view .LVU1587
 6855              	.LBB5290:
 6856              	.LBI5290:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 6857              		.loc 16 186 7 view .LVU1588
 6858              	.LBB5291:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 6859              		.loc 16 187 28 is_stmt 0 view .LVU1589
 6860 01d6 2C98     		ldr	r0, [sp, #176]
 6861              	.LVL318:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 6862              		.loc 16 187 28 view .LVU1590
 6863              	.LBE5291:
 6864              	.LBE5290:
 6865              	.LBB5292:
 6866              	.LBI5292:
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6867              		.loc 16 200 7 is_stmt 1 view .LVU1591
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6868              		.loc 16 200 7 is_stmt 0 view .LVU1592
 6869              	.LBE5292:
 6870              	.LBE5289:
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 6871              		.loc 16 231 2 view .LVU1593
 6872 01d8 4845     		cmp	r0, r9
 6873 01da 03D0     		beq	.L191
 6874              	.LVL319:
 6875              	.LBB5293:
 6876              	.LBI5293:
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 6877              		.loc 16 236 7 is_stmt 1 view .LVU1594
 6878              	.LBB5294:
 6879              	.LBB5295:
 6880              	.LBI5295:
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 6881              		.loc 13 491 7 view .LVU1595
 6882              	.LBB5296:
 6883              	.LBI5296:
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 6884              		.loc 12 120 7 view .LVU1596
 6885              	.LBE5296:
 6886              	.LBE5295:
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 6887              		.loc 16 237 34 is_stmt 0 view .LVU1597
 6888 01dc 2E99     		ldr	r1, [sp, #184]
 6889              	.LBB5299:
 6890              	.LBB5298:
 6891              	.LBB5297:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 436


 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 6892              		.loc 12 133 19 view .LVU1598
 6893 01de 0131     		adds	r1, r1, #1
 6894              	.LVL320:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 6895              		.loc 12 133 19 view .LVU1599
 6896 01e0 FFF7FEFF 		bl	_ZdlPvj
 6897              	.LVL321:
 6898              	.L191:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 6899              		.loc 12 133 19 view .LVU1600
 6900              	.LBE5297:
 6901              	.LBE5298:
 6902              	.LBE5299:
 6903              	.LBE5294:
 6904              	.LBE5293:
 6905              	.LBE5288:
 6906              	.LBE5287:
 6907              	.LBB5300:
 6908              	.LBI5300:
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6909              		.loc 16 150 14 is_stmt 1 view .LVU1601
 6910              	.LBB5301:
 6911              	.LBI5301:
 6912              		.loc 11 162 7 view .LVU1602
 6913              	.LBB5302:
 6914              	.LBI5302:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6915              		.loc 12 89 7 view .LVU1603
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6916              		.loc 12 89 7 is_stmt 0 view .LVU1604
 6917              	.LBE5302:
 6918              	.LBE5301:
 6919              	.LBE5300:
 6920              	.LBE5286:
 6921              	.LBE5285:
 6922              	.LBB5303:
 6923              	.LBI5303:
 657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 6924              		.loc 16 657 7 is_stmt 1 view .LVU1605
 6925              	.LBB5304:
 6926              	.LBB5305:
 6927              	.LBI5305:
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6928              		.loc 16 229 7 view .LVU1606
 6929              	.LBB5306:
 6930              	.LBB5307:
 6931              	.LBI5307:
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 6932              		.loc 16 221 7 view .LVU1607
 6933              	.LBB5308:
 6934              	.LBI5308:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 6935              		.loc 16 186 7 view .LVU1608
 6936              	.LBB5309:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 6937              		.loc 16 187 28 is_stmt 0 view .LVU1609
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 437


 6938 01e4 2698     		ldr	r0, [sp, #152]
 6939              	.LVL322:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 6940              		.loc 16 187 28 view .LVU1610
 6941              	.LBE5309:
 6942              	.LBE5308:
 6943              	.LBB5310:
 6944              	.LBI5310:
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6945              		.loc 16 200 7 is_stmt 1 view .LVU1611
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6946              		.loc 16 200 7 is_stmt 0 view .LVU1612
 6947              	.LBE5310:
 6948              	.LBE5307:
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 6949              		.loc 16 231 2 view .LVU1613
 6950 01e6 4045     		cmp	r0, r8
 6951 01e8 03D0     		beq	.L192
 6952              	.LVL323:
 6953              	.LBB5311:
 6954              	.LBI5311:
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 6955              		.loc 16 236 7 is_stmt 1 view .LVU1614
 6956              	.LBB5312:
 6957              	.LBB5313:
 6958              	.LBI5313:
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 6959              		.loc 13 491 7 view .LVU1615
 6960              	.LBB5314:
 6961              	.LBI5314:
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 6962              		.loc 12 120 7 view .LVU1616
 6963              	.LBE5314:
 6964              	.LBE5313:
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 6965              		.loc 16 237 34 is_stmt 0 view .LVU1617
 6966 01ea 2899     		ldr	r1, [sp, #160]
 6967              	.LBB5317:
 6968              	.LBB5316:
 6969              	.LBB5315:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 6970              		.loc 12 133 19 view .LVU1618
 6971 01ec 0131     		adds	r1, r1, #1
 6972              	.LVL324:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 6973              		.loc 12 133 19 view .LVU1619
 6974 01ee FFF7FEFF 		bl	_ZdlPvj
 6975              	.LVL325:
 6976              	.L192:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 6977              		.loc 12 133 19 view .LVU1620
 6978              	.LBE5315:
 6979              	.LBE5316:
 6980              	.LBE5317:
 6981              	.LBE5312:
 6982              	.LBE5311:
 6983              	.LBE5306:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 438


 6984              	.LBE5305:
 6985              	.LBB5318:
 6986              	.LBI5318:
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 6987              		.loc 16 150 14 is_stmt 1 view .LVU1621
 6988              	.LBB5319:
 6989              	.LBI5319:
 6990              		.loc 11 162 7 view .LVU1622
 6991              	.LBB5320:
 6992              	.LBI5320:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6993              		.loc 12 89 7 view .LVU1623
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 6994              		.loc 12 89 7 is_stmt 0 view .LVU1624
 6995              	.LBE5320:
 6996              	.LBE5319:
 6997              	.LBE5318:
 6998              	.LBE5304:
 6999              	.LBE5303:
 7000              	.LBB5321:
 7001              	.LBI5321:
 657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 7002              		.loc 16 657 7 is_stmt 1 view .LVU1625
 7003              	.LBB5322:
 7004              	.LBI5322:
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7005              		.loc 16 229 7 view .LVU1626
 7006              	.LBB5323:
 7007              	.LBB5324:
 7008              	.LBI5324:
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 7009              		.loc 16 221 7 view .LVU1627
 7010              	.LBB5325:
 7011              	.LBI5325:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 7012              		.loc 16 186 7 view .LVU1628
 7013              	.LBB5326:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 7014              		.loc 16 187 28 is_stmt 0 view .LVU1629
 7015 01f2 2098     		ldr	r0, [sp, #128]
 7016              	.LVL326:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 7017              		.loc 16 187 28 view .LVU1630
 7018              	.LBE5326:
 7019              	.LBE5325:
 7020              	.LBB5327:
 7021              	.LBI5327:
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7022              		.loc 16 200 7 is_stmt 1 view .LVU1631
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7023              		.loc 16 200 7 is_stmt 0 view .LVU1632
 7024              	.LBE5327:
 7025              	.LBE5324:
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 7026              		.loc 16 231 2 view .LVU1633
 7027 01f4 B842     		cmp	r0, r7
 7028 01f6 03D0     		beq	.L193
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 439


 7029              	.LVL327:
 7030              	.LBB5328:
 7031              	.LBI5328:
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 7032              		.loc 16 236 7 is_stmt 1 view .LVU1634
 7033              	.LBB5329:
 7034              	.LBB5330:
 7035              	.LBI5330:
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 7036              		.loc 13 491 7 view .LVU1635
 7037              	.LBB5331:
 7038              	.LBI5331:
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 7039              		.loc 12 120 7 view .LVU1636
 7040              	.LBE5331:
 7041              	.LBE5330:
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 7042              		.loc 16 237 34 is_stmt 0 view .LVU1637
 7043 01f8 2299     		ldr	r1, [sp, #136]
 7044              	.LBB5334:
 7045              	.LBB5333:
 7046              	.LBB5332:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 7047              		.loc 12 133 19 view .LVU1638
 7048 01fa 0131     		adds	r1, r1, #1
 7049              	.LVL328:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 7050              		.loc 12 133 19 view .LVU1639
 7051 01fc FFF7FEFF 		bl	_ZdlPvj
 7052              	.LVL329:
 7053              	.L193:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 7054              		.loc 12 133 19 view .LVU1640
 7055              	.LBE5332:
 7056              	.LBE5333:
 7057              	.LBE5334:
 7058              	.LBE5329:
 7059              	.LBE5328:
 7060              	.LBE5323:
 7061              	.LBE5322:
 7062              	.LBB5335:
 7063              	.LBI5335:
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7064              		.loc 16 150 14 is_stmt 1 view .LVU1641
 7065              	.LBB5336:
 7066              	.LBI5336:
 7067              		.loc 11 162 7 view .LVU1642
 7068              	.LBB5337:
 7069              	.LBI5337:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7070              		.loc 12 89 7 view .LVU1643
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7071              		.loc 12 89 7 is_stmt 0 view .LVU1644
 7072              	.LBE5337:
 7073              	.LBE5336:
 7074              	.LBE5335:
 7075              	.LBE5321:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 440


 7076              	.LBE5284:
 7077              	.LBE5283:
 7078              	.LBE5282:
 7079              	.LBE5341:
 7080              	.LBE5345:
 7081              	.LBB5346:
 7082              	.LBI5346:
  37:src/parameter_controller.h **** 	std::string label;
 7083              		.loc 15 37 8 is_stmt 1 view .LVU1645
 7084              	.LBB5347:
 7085              	.LBB5348:
 7086              	.LBI5348:
 657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 7087              		.loc 16 657 7 view .LVU1646
 7088              	.LBB5349:
 7089              	.LBB5350:
 7090              	.LBI5350:
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7091              		.loc 16 229 7 view .LVU1647
 7092              	.LBB5351:
 7093              	.LBB5352:
 7094              	.LBI5352:
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 7095              		.loc 16 221 7 view .LVU1648
 7096              	.LBB5353:
 7097              	.LBI5353:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 7098              		.loc 16 186 7 view .LVU1649
 7099              	.LBB5354:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 7100              		.loc 16 187 28 is_stmt 0 view .LVU1650
 7101 0200 1598     		ldr	r0, [sp, #84]
 7102              	.LVL330:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 7103              		.loc 16 187 28 view .LVU1651
 7104              	.LBE5354:
 7105              	.LBE5353:
 7106              	.LBB5355:
 7107              	.LBI5355:
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7108              		.loc 16 200 7 is_stmt 1 view .LVU1652
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7109              		.loc 16 200 7 is_stmt 0 view .LVU1653
 7110              	.LBE5355:
 7111              	.LBE5352:
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 7112              		.loc 16 231 2 view .LVU1654
 7113 0202 17AD     		add	r5, sp, #92
 7114              	.LVL331:
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 7115              		.loc 16 231 2 view .LVU1655
 7116 0204 A842     		cmp	r0, r5
 7117 0206 03D0     		beq	.L194
 7118              	.LVL332:
 7119              	.LBB5356:
 7120              	.LBI5356:
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 441


 7121              		.loc 16 236 7 is_stmt 1 view .LVU1656
 7122              	.LBB5357:
 7123              	.LBB5358:
 7124              	.LBI5358:
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 7125              		.loc 13 491 7 view .LVU1657
 7126              	.LBB5359:
 7127              	.LBI5359:
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 7128              		.loc 12 120 7 view .LVU1658
 7129              	.LBE5359:
 7130              	.LBE5358:
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 7131              		.loc 16 237 34 is_stmt 0 view .LVU1659
 7132 0208 1799     		ldr	r1, [sp, #92]
 7133              	.LBB5362:
 7134              	.LBB5361:
 7135              	.LBB5360:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 7136              		.loc 12 133 19 view .LVU1660
 7137 020a 0131     		adds	r1, r1, #1
 7138              	.LVL333:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 7139              		.loc 12 133 19 view .LVU1661
 7140 020c FFF7FEFF 		bl	_ZdlPvj
 7141              	.LVL334:
 7142              	.L194:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 7143              		.loc 12 133 19 view .LVU1662
 7144              	.LBE5360:
 7145              	.LBE5361:
 7146              	.LBE5362:
 7147              	.LBE5357:
 7148              	.LBE5356:
 7149              	.LBE5351:
 7150              	.LBE5350:
 7151              	.LBB5363:
 7152              	.LBI5363:
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7153              		.loc 16 150 14 is_stmt 1 view .LVU1663
 7154              	.LBB5364:
 7155              	.LBI5364:
 7156              		.loc 11 162 7 view .LVU1664
 7157              	.LBB5365:
 7158              	.LBI5365:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7159              		.loc 12 89 7 view .LVU1665
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7160              		.loc 12 89 7 is_stmt 0 view .LVU1666
 7161              	.LBE5365:
 7162              	.LBE5364:
 7163              	.LBE5363:
 7164              	.LBE5349:
 7165              	.LBE5348:
 7166              	.LBB5366:
 7167              	.LBI5366:
 657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 442


 7168              		.loc 16 657 7 is_stmt 1 view .LVU1667
 7169              	.LBB5367:
 7170              	.LBB5368:
 7171              	.LBI5368:
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7172              		.loc 16 229 7 view .LVU1668
 7173              	.LBB5369:
 7174              	.LBB5370:
 7175              	.LBI5370:
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 7176              		.loc 16 221 7 view .LVU1669
 7177              	.LBB5371:
 7178              	.LBI5371:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 7179              		.loc 16 186 7 view .LVU1670
 7180              	.LBB5372:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 7181              		.loc 16 187 28 is_stmt 0 view .LVU1671
 7182 0210 0F98     		ldr	r0, [sp, #60]
 7183              	.LVL335:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 7184              		.loc 16 187 28 view .LVU1672
 7185              	.LBE5372:
 7186              	.LBE5371:
 7187              	.LBB5373:
 7188              	.LBI5373:
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7189              		.loc 16 200 7 is_stmt 1 view .LVU1673
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7190              		.loc 16 200 7 is_stmt 0 view .LVU1674
 7191              	.LBE5373:
 7192              	.LBE5370:
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 7193              		.loc 16 231 2 view .LVU1675
 7194 0212 11AF     		add	r7, sp, #68
 7195 0214 B842     		cmp	r0, r7
 7196 0216 03D0     		beq	.L195
 7197              	.LVL336:
 7198              	.LBB5374:
 7199              	.LBI5374:
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 7200              		.loc 16 236 7 is_stmt 1 view .LVU1676
 7201              	.LBB5375:
 7202              	.LBB5376:
 7203              	.LBI5376:
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 7204              		.loc 13 491 7 view .LVU1677
 7205              	.LBB5377:
 7206              	.LBI5377:
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 7207              		.loc 12 120 7 view .LVU1678
 7208              	.LBE5377:
 7209              	.LBE5376:
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 7210              		.loc 16 237 34 is_stmt 0 view .LVU1679
 7211 0218 1199     		ldr	r1, [sp, #68]
 7212              	.LBB5380:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 443


 7213              	.LBB5379:
 7214              	.LBB5378:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 7215              		.loc 12 133 19 view .LVU1680
 7216 021a 0131     		adds	r1, r1, #1
 7217              	.LVL337:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 7218              		.loc 12 133 19 view .LVU1681
 7219 021c FFF7FEFF 		bl	_ZdlPvj
 7220              	.LVL338:
 7221              	.L195:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 7222              		.loc 12 133 19 view .LVU1682
 7223              	.LBE5378:
 7224              	.LBE5379:
 7225              	.LBE5380:
 7226              	.LBE5375:
 7227              	.LBE5374:
 7228              	.LBE5369:
 7229              	.LBE5368:
 7230              	.LBB5381:
 7231              	.LBI5381:
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7232              		.loc 16 150 14 is_stmt 1 view .LVU1683
 7233              	.LBB5382:
 7234              	.LBI5382:
 7235              		.loc 11 162 7 view .LVU1684
 7236              	.LBB5383:
 7237              	.LBI5383:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7238              		.loc 12 89 7 view .LVU1685
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7239              		.loc 12 89 7 is_stmt 0 view .LVU1686
 7240              	.LBE5383:
 7241              	.LBE5382:
 7242              	.LBE5381:
 7243              	.LBE5367:
 7244              	.LBE5366:
 7245              	.LBB5384:
 7246              	.LBI5384:
 657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 7247              		.loc 16 657 7 is_stmt 1 view .LVU1687
 7248              	.LBB5385:
 7249              	.LBI5385:
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7250              		.loc 16 229 7 view .LVU1688
 7251              	.LBB5386:
 7252              	.LBB5387:
 7253              	.LBI5387:
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 7254              		.loc 16 221 7 view .LVU1689
 7255              	.LBB5388:
 7256              	.LBI5388:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 7257              		.loc 16 186 7 view .LVU1690
 7258              	.LBB5389:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 444


 7259              		.loc 16 187 28 is_stmt 0 view .LVU1691
 7260 0220 0998     		ldr	r0, [sp, #36]
 7261              	.LVL339:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 7262              		.loc 16 187 28 view .LVU1692
 7263              	.LBE5389:
 7264              	.LBE5388:
 7265              	.LBB5390:
 7266              	.LBI5390:
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7267              		.loc 16 200 7 is_stmt 1 view .LVU1693
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7268              		.loc 16 200 7 is_stmt 0 view .LVU1694
 7269              	.LBE5390:
 7270              	.LBE5387:
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 7271              		.loc 16 231 2 view .LVU1695
 7272 0222 0BAE     		add	r6, sp, #44
 7273              	.LVL340:
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 7274              		.loc 16 231 2 view .LVU1696
 7275 0224 B042     		cmp	r0, r6
 7276 0226 03D0     		beq	.L196
 7277              	.LVL341:
 7278              	.LBB5391:
 7279              	.LBI5391:
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 7280              		.loc 16 236 7 is_stmt 1 view .LVU1697
 7281              	.LBB5392:
 7282              	.LBB5393:
 7283              	.LBI5393:
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 7284              		.loc 13 491 7 view .LVU1698
 7285              	.LBB5394:
 7286              	.LBI5394:
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 7287              		.loc 12 120 7 view .LVU1699
 7288              	.LBE5394:
 7289              	.LBE5393:
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 7290              		.loc 16 237 34 is_stmt 0 view .LVU1700
 7291 0228 0B99     		ldr	r1, [sp, #44]
 7292              	.LBB5397:
 7293              	.LBB5396:
 7294              	.LBB5395:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 7295              		.loc 12 133 19 view .LVU1701
 7296 022a 0131     		adds	r1, r1, #1
 7297              	.LVL342:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 7298              		.loc 12 133 19 view .LVU1702
 7299 022c FFF7FEFF 		bl	_ZdlPvj
 7300              	.LVL343:
 7301              	.L196:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 7302              		.loc 12 133 19 view .LVU1703
 7303              	.LBE5395:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 445


 7304              	.LBE5396:
 7305              	.LBE5397:
 7306              	.LBE5392:
 7307              	.LBE5391:
 7308              	.LBE5386:
 7309              	.LBE5385:
 7310              	.LBB5398:
 7311              	.LBI5398:
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7312              		.loc 16 150 14 is_stmt 1 view .LVU1704
 7313              	.LBB5399:
 7314              	.LBI5399:
 7315              		.loc 11 162 7 view .LVU1705
 7316              	.LBB5400:
 7317              	.LBI5400:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7318              		.loc 12 89 7 view .LVU1706
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7319              		.loc 12 89 7 is_stmt 0 view .LVU1707
 7320              	.LBE5400:
 7321              	.LBE5399:
 7322              	.LBE5398:
 7323              	.LBE5384:
 7324              	.LBE5347:
 7325              	.LBE5346:
 140:src/main.cpp  **** 
 141:src/main.cpp  **** 		
 142:src/main.cpp  **** 
 143:src/main.cpp  **** 	//TIM1_Init(htim1);
 144:src/main.cpp  **** 	//std::vector<uint32_t> paramBuf;
 145:src/main.cpp  **** 	//ParameterTree pt;
 146:src/main.cpp  **** 	//osThreadDef(Task3, Task1_Init, osPriorityBelowNormal, 128);
 147:src/main.cpp  **** 
 148:src/main.cpp  **** 	//osKernelInitialize();
 149:src/main.cpp  **** 	//thread1_id = osThreadCreate(osThread(thread1), NULL);
 150:src/main.cpp  **** 	//osThreadNew(Task1, NULL, &threadAttr_thread1);
 151:src/main.cpp  **** 	//osKernelStart();
 152:src/main.cpp  **** 
 153:src/main.cpp  **** 
 154:src/main.cpp  **** 	std::vector<uint32_t> param_buffer;
 7326              		.loc 8 154 2 is_stmt 1 view .LVU1708
 7327              	.LBB5401:
 7328              	.LBI5401:
 487:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 7329              		.loc 29 487 7 view .LVU1709
 7330              	.LBB5402:
 7331              	.LBB5403:
 7332              	.LBI5403:
 288:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** #else
 7333              		.loc 29 288 7 view .LVU1710
 7334              	.LBB5404:
 7335              	.LBI5404:
 131:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    is_nothrow_default_constructible<_Tp_alloc_type>::value)
 7336              		.loc 29 131 2 view .LVU1711
 7337              	.LBB5405:
 7338              	.LBI5405:
 144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 446


 7339              		.loc 11 144 7 view .LVU1712
 7340              	.LBB5406:
 7341              	.LBI5406:
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7342              		.loc 12 79 7 view .LVU1713
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7343              		.loc 12 79 7 is_stmt 0 view .LVU1714
 7344              	.LBE5406:
 7345              	.LBE5405:
 7346              	.LBB5407:
 7347              	.LBI5407:
  97:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 7348              		.loc 29 97 2 is_stmt 1 view .LVU1715
 7349              	.LBB5408:
 7350              	.LBB5409:
  98:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 7351              		.loc 29 98 47 is_stmt 0 view .LVU1716
 7352 0230 0023     		movs	r3, #0
 7353 0232 0DF1B40A 		add	r10, sp, #180
 7354 0236 0DF19C09 		add	r9, sp, #156
 7355 023a 0893     		str	r3, [sp, #32]
 7356              	.LVL344:
  98:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 7357              		.loc 29 98 47 view .LVU1717
 7358 023c CDE90633 		strd	r3, r3, [sp, #24]
 7359              	.LVL345:
 7360              	.L197:
  98:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	{ }
 7361              		.loc 29 98 47 view .LVU1718
 7362              	.LBE5409:
 7363              	.LBE5408:
 7364              	.LBE5407:
 7365              	.LBE5404:
 7366              	.LBE5403:
 7367              	.LBE5402:
 7368              	.LBE5401:
 155:src/main.cpp  **** 
 156:src/main.cpp  **** 	while (true) {
 7369              		.loc 8 156 2 is_stmt 1 view .LVU1719
 7370              	.LBB5410:
 157:src/main.cpp  **** 
 158:src/main.cpp  **** 		 while (usart1.Readable()) {
 7371              		.loc 8 158 4 view .LVU1720
 7372              		.loc 8 158 26 view .LVU1721
 7373 0240 5C48     		ldr	r0, .L232
 7374 0242 FFF7FEFF 		bl	_ZN5daisy11UartHandler8ReadableEv
 7375              	.LVL346:
 7376 0246 0028     		cmp	r0, #0
 7377 0248 FAD0     		beq	.L197
 7378              	.LBB5411:
 159:src/main.cpp  **** 			
 160:src/main.cpp  **** 			uint32_t curr_val = usart1.PopRx();
 7379              		.loc 8 160 4 view .LVU1722
 7380              		.loc 8 160 36 is_stmt 0 view .LVU1723
 7381 024a 5A48     		ldr	r0, .L232
 7382 024c FFF7FEFF 		bl	_ZN5daisy11UartHandler5PopRxEv
 7383              	.LVL347:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 447


 7384              		.loc 8 160 37 view .LVU1724
 7385 0250 0490     		str	r0, [sp, #16]
 161:src/main.cpp  **** 			param_buffer.push_back(curr_val);
 7386              		.loc 8 161 4 is_stmt 1 view .LVU1725
 7387              	.LVL348:
 7388              	.LBB5412:
 7389              	.LBI5412:
1187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 7390              		.loc 29 1187 7 view .LVU1726
 7391              	.LBB5413:
1189:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	  {
 7392              		.loc 29 1189 2 is_stmt 0 view .LVU1727
 7393 0252 DDE90713 		ldrd	r1, r3, [sp, #28]
 7394 0256 9942     		cmp	r1, r3
 7395 0258 00F08C80 		beq	.L198
 7396              	.LVL349:
 7397              	.LBB5414:
 7398              	.LBI5414:
 507:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h **** 		  _Args&&... __args)
 7399              		.loc 13 507 2 is_stmt 1 view .LVU1728
 7400              	.LBB5415:
 7401              	.LBI5415:
 148:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 7402              		.loc 12 148 2 view .LVU1729
 148:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 7403              		.loc 12 148 2 is_stmt 0 view .LVU1730
 7404              	.LBE5415:
 7405              	.LBE5414:
 7406              	.LBE5413:
 7407              	.LBE5412:
 7408              	.LBE5411:
 7409              	.LBE5410:
 7410              		.loc 27 175 3 is_stmt 1 view .LVU1731
 7411              	.LBB5688:
 7412              	.LBB5687:
 7413              	.LBB5423:
 7414              	.LBB5421:
 7415              	.LBB5418:
 7416              	.LBB5417:
 7417              	.LBB5416:
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7418              		.loc 12 150 4 is_stmt 0 view .LVU1732
 7419 025c 41F8040B 		str	r0, [r1], #4
 7420              	.LVL350:
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7421              		.loc 12 150 4 view .LVU1733
 7422              	.LBE5416:
 7423              	.LBE5417:
 7424              	.LBE5418:
1194:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 7425              		.loc 29 1194 6 view .LVU1734
 7426 0260 0791     		str	r1, [sp, #28]
 7427              	.L199:
 7428              	.LVL351:
1194:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 7429              		.loc 29 1194 6 view .LVU1735
 7430              	.LBE5421:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 448


 7431              	.LBE5423:
 162:src/main.cpp  **** 	
 163:src/main.cpp  **** 			if (!usart1.Readable()) {
 7432              		.loc 8 163 4 is_stmt 1 view .LVU1736
 7433              	.LBB5424:
 7434              		.loc 8 163 24 is_stmt 0 view .LVU1737
 7435 0262 5448     		ldr	r0, .L232
 7436 0264 FFF7FEFF 		bl	_ZN5daisy11UartHandler8ReadableEv
 7437              	.LVL352:
 7438              		.loc 8 163 4 view .LVU1738
 7439 0268 8046     		mov	r8, r0
 7440 026a 0028     		cmp	r0, #0
 7441 026c E8D1     		bne	.L197
 7442              	.LBB5425:
 164:src/main.cpp  **** 				usart1.FlushRx();
 7443              		.loc 8 164 5 is_stmt 1 view .LVU1739
 7444              		.loc 8 164 19 is_stmt 0 view .LVU1740
 7445 026e 5148     		ldr	r0, .L232
 7446 0270 FFF7FEFF 		bl	_ZN5daisy11UartHandler7FlushRxEv
 7447              	.LVL353:
 165:src/main.cpp  **** 
 166:src/main.cpp  **** 				uint16_t val;
 7448              		.loc 8 166 5 is_stmt 1 view .LVU1741
 167:src/main.cpp  **** 				uint16_t index;
 7449              		.loc 8 167 5 view .LVU1742
 168:src/main.cpp  **** 				for (int i = 0; i < param_buffer.size(); i++) {
 7450              		.loc 8 168 5 view .LVU1743
 7451              	.LBB5426:
 7452              		.loc 8 168 23 view .LVU1744
 7453              	.LBB5427:
 7454              	.LBI5427:
 918:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 7455              		.loc 29 918 7 view .LVU1745
 7456              	.LBE5427:
 7457              		.loc 8 168 23 is_stmt 0 view .LVU1746
 7458 0274 DDE90632 		ldrd	r3, r2, [sp, #24]
 7459 0278 9A42     		cmp	r2, r3
 7460 027a E1D0     		beq	.L197
 7461              	.LVL354:
 7462              	.LBB5429:
 169:src/main.cpp  **** 			 		//hw.PrintLine("%x", param_buffer[i]);
 170:src/main.cpp  **** 					if (i % 2 == 0)
 7463              		.loc 8 170 6 is_stmt 1 view .LVU1747
 7464 027c 18F0010F 		tst	r8, #1
 7465 0280 75D1     		bne	.L201
 7466              	.L229:
 171:src/main.cpp  **** 						val = param_buffer[i];
 7467              		.loc 8 171 7 view .LVU1748
 7468              	.LVL355:
 7469              	.LBB5430:
 7470              	.LBI5430:
1043:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 7471              		.loc 29 1043 7 view .LVU1749
1043:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 7472              		.loc 29 1043 7 is_stmt 0 view .LVU1750
 7473              	.LBE5430:
 7474              		.loc 8 171 11 view .LVU1751
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 449


 7475 0282 33F82830 		ldrh	r3, [r3, r8, lsl #2]
 7476              	.LVL356:
 7477              		.loc 8 171 11 view .LVU1752
 7478 0286 08EE903A 		vmov	s17, r3	@ int
 7479              	.L202:
 172:src/main.cpp  **** 					else if (i % 2 == 1)
 173:src/main.cpp  **** 						index = param_buffer[i];
 174:src/main.cpp  **** 
 175:src/main.cpp  **** 					param curr;
 7480              		.loc 8 175 6 is_stmt 1 view .LVU1753
 7481              	.LVL357:
 7482              	.LBB5431:
 7483              	.LBI5431:
  37:src/parameter_controller.h **** 	std::string label;
 7484              		.loc 15 37 8 view .LVU1754
 7485              	.LBB5432:
 7486              	.LBI5432:
 431:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(is_nothrow_default_constructible<_Alloc>::value)
 7487              		.loc 16 431 7 view .LVU1755
 7488              	.LBB5433:
 7489              	.LBB5434:
 7490              	.LBI5434:
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7491              		.loc 16 190 7 view .LVU1756
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7492              		.loc 16 190 7 is_stmt 0 view .LVU1757
 7493              	.LBE5434:
 7494              	.LBB5435:
 7495              	.LBI5435:
 144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 7496              		.loc 11 144 7 is_stmt 1 view .LVU1758
 7497              	.LBB5436:
 7498              	.LBI5436:
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7499              		.loc 12 79 7 view .LVU1759
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7500              		.loc 12 79 7 is_stmt 0 view .LVU1760
 7501              	.LBE5436:
 7502              	.LBE5435:
 7503              	.LBB5437:
 7504              	.LBI5437:
 159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 7505              		.loc 16 159 2 is_stmt 1 view .LVU1761
 7506              	.LBB5438:
 7507              	.LBB5439:
 7508              	.LBB5440:
 7509              	.LBI5440:
 7510              		.loc 19 101 5 view .LVU1762
 7511              		.loc 19 101 5 is_stmt 0 view .LVU1763
 7512              	.LBE5440:
 7513              	.LBB5441:
 7514              	.LBI5441:
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 7515              		.loc 11 147 7 is_stmt 1 view .LVU1764
 7516              	.LBB5442:
 7517              	.LBI5442:
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 450


 7518              		.loc 12 82 7 view .LVU1765
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7519              		.loc 12 82 7 is_stmt 0 view .LVU1766
 7520              	.LBE5442:
 7521              	.LBE5441:
 7522              	.LBE5439:
 7523              	.LBE5438:
 7524              	.LBE5437:
 7525              	.LBE5433:
 7526              	.LBE5432:
 7527              	.LBE5431:
 176:src/main.cpp  **** 					curr.val = val;
 7528              		.loc 8 176 15 view .LVU1767
 7529 028a B8EE688A 		vcvt.f32.u32	s16, s17
 7530              	.LBB5524:
 7531              	.LBB5463:
 7532              	.LBB5460:
 7533              	.LBB5445:
 7534              	.LBB5446:
 7535              	.LBB5447:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 7536              		.loc 16 183 26 view .LVU1768
 7537 028e 0023     		movs	r3, #0
 7538              	.LBE5447:
 7539              	.LBE5446:
 7540              	.LBE5445:
 7541              	.LBE5460:
 7542              	.LBE5463:
 7543              	.LBE5524:
 7544              	.LBB5525:
 7545              	.LBB5526:
 7546              	.LBB5527:
 7547              	.LBB5528:
 592:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         { return _M_h.emplace(std::forward<_Pair>(__x)); }
 593:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@}
 594:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 595:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@{
 596:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 597:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief Attempts to insert a std::pair into the %unordered_map.
 598:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __hint  An iterator that serves as a hint as to where the
 599:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *                 pair should be inserted.
 600:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __x  Pair to be inserted (see std::make_pair for easy creation
 601:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *               of pairs).
 602:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @return An iterator that points to the element with key of
 603:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *           @a __x (may or may not be the %pair passed in).
 604:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 605:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  This function is not concerned about whether the insertion took place,
 606:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  and thus does not return a boolean like the single-argument insert()
 607:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  does.  Note that the first parameter is only a hint and can
 608:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  potentially improve the performance of the insertion process.  A bad
 609:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  hint would cause no gains in efficiency.
 610:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 611:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  See
 612:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  https://gcc.gnu.org/onlinedocs/libstdc++/manual/associative.html#containers.associative.i
 613:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  for more on @a hinting.
 614:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 615:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Insertion requires amortized constant time.
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 451


 616:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 617:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       iterator
 618:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       insert(const_iterator __hint, const value_type& __x)
 619:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.insert(__hint, __x); }
 620:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 621:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 622:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       // 2354. Unnecessary copying when inserting into maps with braced-init
 623:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       iterator
 624:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       insert(const_iterator __hint, value_type&& __x)
 625:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.insert(__hint, std::move(__x)); }
 626:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 627:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template<typename _Pair>
 628:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	__enable_if_t<is_constructible<value_type, _Pair&&>::value, iterator>
 629:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	insert(const_iterator __hint, _Pair&& __x)
 630:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	{ return _M_h.emplace_hint(__hint, std::forward<_Pair>(__x)); }
 631:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@}
 632:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 633:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 634:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief A template function that attempts to insert a range of
 635:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  elements.
 636:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __first  Iterator pointing to the start of the range to be
 637:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *                   inserted.
 638:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __last  Iterator pointing to the end of the range.
 639:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 640:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Complexity similar to that of the range constructor.
 641:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 642:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template<typename _InputIterator>
 643:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	void
 644:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	insert(_InputIterator __first, _InputIterator __last)
 645:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	{ _M_h.insert(__first, __last); }
 646:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 647:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 648:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief Attempts to insert a list of elements into the %unordered_map.
 649:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __l  A std::initializer_list<value_type> of elements
 650:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *               to be inserted.
 651:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 652:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Complexity similar to that of the range constructor.
 653:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 654:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       void
 655:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       insert(initializer_list<value_type> __l)
 656:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { _M_h.insert(__l); }
 657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 658:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 659:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** #if __cplusplus > 201402L
 660:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 661:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief Attempts to insert a std::pair into the %unordered_map.
 662:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __k    Key to use for finding a possibly existing pair in
 663:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *                the map.
 664:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __obj  Argument used to generate the .second for a pair 
 665:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *                instance.
 666:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 667:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @return  A pair, of which the first element is an iterator that 
 668:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *           points to the possibly inserted pair, and the second is 
 669:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *           a bool that is true if the pair was actually inserted.
 670:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 671:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  This function attempts to insert a (key, value) %pair into the
 672:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  %unordered_map. An %unordered_map relies on unique keys and thus a
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 452


 673:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  %pair is only inserted if its first element (the key) is not already
 674:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  present in the %unordered_map.
 675:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  If the %pair was already in the %unordered_map, the .second of 
 676:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  the %pair is assigned from __obj.
 677:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 678:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Insertion requires amortized constant time.
 679:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 680:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template <typename _Obj>
 681:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         pair<iterator, bool>
 682:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         insert_or_assign(const key_type& __k, _Obj&& __obj)
 683:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         {
 684:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           iterator __i = find(__k);
 685:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           if (__i == end())
 686:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****             {
 687:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****               __i = emplace(std::piecewise_construct,
 688:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                             std::forward_as_tuple(__k),
 689:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                             std::forward_as_tuple(std::forward<_Obj>(__obj)))
 690:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                 .first;
 691:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****               return {__i, true};
 692:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****             }
 693:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           (*__i).second = std::forward<_Obj>(__obj);
 694:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           return {__i, false};
 695:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         }
 696:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 697:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       // move-capable overload
 698:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template <typename _Obj>
 699:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         pair<iterator, bool>
 700:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         insert_or_assign(key_type&& __k, _Obj&& __obj)
 701:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         {
 702:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           iterator __i = find(__k);
 703:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           if (__i == end())
 704:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****             {
 705:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****               __i = emplace(std::piecewise_construct,
 706:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                             std::forward_as_tuple(std::move(__k)),
 707:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                             std::forward_as_tuple(std::forward<_Obj>(__obj)))
 708:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                 .first;
 709:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****               return {__i, true};
 710:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****             }
 711:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           (*__i).second = std::forward<_Obj>(__obj);
 712:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           return {__i, false};
 713:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         }
 714:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 715:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 716:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief Attempts to insert a std::pair into the %unordered_map.
 717:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __hint  An iterator that serves as a hint as to where the
 718:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *                  pair should be inserted.
 719:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __k    Key to use for finding a possibly existing pair in
 720:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *                the unordered_map.
 721:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __obj  Argument used to generate the .second for a pair 
 722:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *                instance.
 723:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @return An iterator that points to the element with key of
 724:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *           @a __x (may or may not be the %pair passed in).
 725:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 726:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  This function is not concerned about whether the insertion took place,
 727:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  and thus does not return a boolean like the single-argument insert()
 728:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  does.         
 729:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  If the %pair was already in the %unordered map, the .second of
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 453


 730:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  the %pair is assigned from __obj.
 731:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Note that the first parameter is only a hint and can
 732:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  potentially improve the performance of the insertion process.  A bad
 733:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  hint would cause no gains in efficiency.
 734:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 735:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  See
 736:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  https://gcc.gnu.org/onlinedocs/libstdc++/manual/associative.html#containers.associative.i
 737:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  for more on @a hinting.
 738:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 739:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Insertion requires amortized constant time.
 740:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 741:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template <typename _Obj>
 742:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         iterator
 743:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         insert_or_assign(const_iterator __hint, const key_type& __k,
 744:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                          _Obj&& __obj)
 745:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         {
 746:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           iterator __i = find(__k);
 747:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           if (__i == end())
 748:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****             {
 749:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****               return emplace_hint(__hint, std::piecewise_construct,
 750:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                                   std::forward_as_tuple(__k),
 751:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                                   std::forward_as_tuple(
 752:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                                     std::forward<_Obj>(__obj)));
 753:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****             }
 754:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           (*__i).second = std::forward<_Obj>(__obj);
 755:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           return __i;
 756:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         }
 757:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 758:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       // move-capable overload
 759:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template <typename _Obj>
 760:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         iterator
 761:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         insert_or_assign(const_iterator __hint, key_type&& __k, _Obj&& __obj)
 762:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         {
 763:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           iterator __i = find(__k);
 764:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           if (__i == end())
 765:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****             {
 766:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****               return emplace_hint(__hint, std::piecewise_construct,
 767:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                                   std::forward_as_tuple(std::move(__k)),
 768:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                                   std::forward_as_tuple(
 769:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****                                     std::forward<_Obj>(__obj)));
 770:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****             }
 771:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           (*__i).second = std::forward<_Obj>(__obj);
 772:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****           return __i;
 773:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****         }
 774:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** #endif
 775:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 776:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@{
 777:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 778:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief Erases an element from an %unordered_map.
 779:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __position  An iterator pointing to the element to be erased.
 780:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @return An iterator pointing to the element immediately following
 781:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *          @a __position prior to the element being erased. If no such
 782:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *          element exists, end() is returned.
 783:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 784:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  This function erases an element, pointed to by the given iterator,
 785:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  from an %unordered_map.
 786:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Note that this function only erases the element, and that if the
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 454


 787:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  element is itself a pointer, the pointed-to memory is not touched in
 788:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  any way.  Managing the pointer is the user's responsibility.
 789:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 790:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       iterator
 791:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       erase(const_iterator __position)
 792:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.erase(__position); }
 793:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 794:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       // LWG 2059.
 795:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       iterator
 796:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       erase(iterator __position)
 797:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.erase(__position); }
 798:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@}
 799:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 800:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 801:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief Erases elements according to the provided key.
 802:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __x  Key of element to be erased.
 803:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @return  The number of elements erased.
 804:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 805:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  This function erases all the elements located by the given key from
 806:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  an %unordered_map. For an %unordered_map the result of this function
 807:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  can only be 0 (not present) or 1 (present).
 808:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Note that this function only erases the element, and that if the
 809:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  element is itself a pointer, the pointed-to memory is not touched in
 810:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  any way.  Managing the pointer is the user's responsibility.
 811:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 812:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       size_type
 813:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       erase(const key_type& __x)
 814:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.erase(__x); }
 815:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 816:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 817:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief Erases a [__first,__last) range of elements from an
 818:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  %unordered_map.
 819:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __first  Iterator pointing to the start of the range to be
 820:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *                  erased.
 821:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param __last  Iterator pointing to the end of the range to
 822:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *                be erased.
 823:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @return The iterator @a __last.
 824:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 825:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  This function erases a sequence of elements from an %unordered_map.
 826:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Note that this function only erases the elements, and that if
 827:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  the element is itself a pointer, the pointed-to memory is not touched
 828:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  in any way.  Managing the pointer is the user's responsibility.
 829:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 830:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       iterator
 831:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       erase(const_iterator __first, const_iterator __last)
 832:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.erase(__first, __last); }
 833:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 834:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 835:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Erases all elements in an %unordered_map.
 836:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Note that this function only erases the elements, and that if the
 837:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  elements themselves are pointers, the pointed-to memory is not touched
 838:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  in any way.  Managing the pointer is the user's responsibility.
 839:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 840:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       void
 841:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       clear() noexcept
 842:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { _M_h.clear(); }
 843:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 455


 844:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 845:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief  Swaps data with another %unordered_map.
 846:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __x  An %unordered_map of the same element and allocator
 847:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  types.
 848:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 849:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  This exchanges the elements between two %unordered_map in constant
 850:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  time.
 851:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Note that the global std::swap() function is specialized such that
 852:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  std::swap(m1,m2) will feed to this function.
 853:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 854:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       void
 855:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       swap(unordered_map& __x)
 856:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       noexcept( noexcept(_M_h.swap(__x._M_h)) )
 857:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { _M_h.swap(__x._M_h); }
 858:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 859:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** #if __cplusplus > 201402L
 860:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template<typename, typename, typename>
 861:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	friend class std::_Hash_merge_helper;
 862:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 863:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template<typename _H2, typename _P2>
 864:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	void
 865:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	merge(unordered_map<_Key, _Tp, _H2, _P2, _Alloc>& __source)
 866:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	{
 867:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	  using _Merge_helper = _Hash_merge_helper<unordered_map, _H2, _P2>;
 868:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	  _M_h._M_merge_unique(_Merge_helper::_S_get_table(__source));
 869:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	}
 870:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 871:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template<typename _H2, typename _P2>
 872:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	void
 873:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	merge(unordered_map<_Key, _Tp, _H2, _P2, _Alloc>&& __source)
 874:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	{ merge(__source); }
 875:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 876:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template<typename _H2, typename _P2>
 877:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	void
 878:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	merge(unordered_multimap<_Key, _Tp, _H2, _P2, _Alloc>& __source)
 879:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	{
 880:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	  using _Merge_helper = _Hash_merge_helper<unordered_map, _H2, _P2>;
 881:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	  _M_h._M_merge_unique(_Merge_helper::_S_get_table(__source));
 882:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	}
 883:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 884:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       template<typename _H2, typename _P2>
 885:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	void
 886:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	merge(unordered_multimap<_Key, _Tp, _H2, _P2, _Alloc>&& __source)
 887:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 	{ merge(__source); }
 888:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** #endif // C++17
 889:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 890:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       // observers.
 891:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 892:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       ///  Returns the hash functor object with which the %unordered_map was
 893:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       ///  constructed.
 894:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       hasher
 895:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       hash_function() const
 896:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.hash_function(); }
 897:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 898:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       ///  Returns the key comparison object with which the %unordered_map was
 899:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       ///  constructed.
 900:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       key_equal
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 456


 901:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       key_eq() const
 902:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.key_eq(); }
 903:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 904:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       // lookup.
 905:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 906:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@{
 907:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 908:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief Tries to locate an element in an %unordered_map.
 909:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __x  Key to be located.
 910:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @return  Iterator pointing to sought-after element, or end() if not
 911:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *           found.
 912:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 913:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  This function takes a key and tries to locate the element with which
 914:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  the key matches.  If successful the function returns an iterator
 915:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  pointing to the sought after element.  If unsuccessful it returns the
 916:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  past-the-end ( @c end() ) iterator.
 917:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 918:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       iterator
 919:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       find(const key_type& __x)
 920:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.find(__x); }
 921:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 922:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       const_iterator
 923:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       find(const key_type& __x) const
 924:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.find(__x); }
 925:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@}
 926:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 927:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 928:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief  Finds the number of elements.
 929:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __x  Key to count.
 930:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @return  Number of elements with specified key.
 931:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 932:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  This function only makes sense for %unordered_multimap; for
 933:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  %unordered_map the result will either be 0 (not present) or 1
 934:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  (present).
 935:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 936:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       size_type
 937:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       count(const key_type& __x) const
 938:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.count(__x); }
 939:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 940:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** #if __cplusplus > 201703L
 941:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 942:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief  Finds whether an element with the given key exists.
 943:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __x  Key of elements to be located.
 944:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @return  True if there is any element with the specified key.
 945:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 946:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       bool
 947:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       contains(const key_type& __x) const
 948:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.find(__x) != _M_h.end(); }
 949:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** #endif
 950:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 951:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@{
 952:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 953:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief Finds a subsequence matching given key.
 954:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __x  Key to be located.
 955:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @return  Pair of iterators that possibly points to the subsequence
 956:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *           matching given key.
 957:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 457


 958:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  This function probably only makes sense for %unordered_multimap.
 959:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 960:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       std::pair<iterator, iterator>
 961:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       equal_range(const key_type& __x)
 962:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.equal_range(__x); }
 963:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 964:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       std::pair<const_iterator, const_iterator>
 965:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       equal_range(const key_type& __x) const
 966:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h.equal_range(__x); }
 967:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@}
 968:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 969:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       //@{
 970:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       /**
 971:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @brief  Subscript ( @c [] ) access to %unordered_map data.
 972:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @param  __k  The key for which data should be retrieved.
 973:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  @return  A reference to the data of the (key,data) %pair.
 974:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 975:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Allows for easy lookup with the subscript ( @c [] )operator.  Returns
 976:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  data associated with the key specified in subscript.  If the key does
 977:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  not exist, a pair with that key is created using default values, which
 978:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  is then returned.
 979:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *
 980:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        *  Lookup requires constant time.
 981:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****        */
 982:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       mapped_type&
 983:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       operator[](const key_type& __k)
 984:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h[__k]; }
 985:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 986:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       mapped_type&
 987:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       operator[](key_type&& __k)
 988:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h[std::move(__k)]; }
 7548              		.loc 24 988 20 view .LVU1769
 7549 0290 05A9     		add	r1, sp, #20
 7550 0292 4948     		ldr	r0, .L232+4
 7551              	.LBE5528:
 7552              	.LBE5527:
 7553              	.LBE5526:
 7554              	.LBE5525:
 7555              	.LBB5623:
 7556              	.LBB5464:
 7557              	.LBB5461:
 7558              	.LBB5455:
 7559              	.LBB5449:
 7560              	.LBB5448:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 7561              		.loc 16 183 26 view .LVU1770
 7562 0294 0A93     		str	r3, [sp, #40]
 7563              	.LBE5448:
 7564              	.LBE5449:
 7565              	.LBB5450:
 7566              	.LBB5451:
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 7567              		.loc 17 322 14 view .LVU1771
 7568 0296 8DF82C30 		strb	r3, [sp, #44]
 7569              	.LBE5451:
 7570              	.LBE5450:
 7571              	.LBE5455:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 458


 7572              	.LBE5461:
 7573              	.LBE5464:
 7574              	.LBB5465:
 7575              	.LBB5466:
 7576              	.LBB5467:
 7577              	.LBB5468:
 7578              	.LBB5469:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 7579              		.loc 16 183 26 view .LVU1772
 7580 029a 1093     		str	r3, [sp, #64]
 7581              	.LBE5469:
 7582              	.LBE5468:
 7583              	.LBB5470:
 7584              	.LBB5471:
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 7585              		.loc 17 322 14 view .LVU1773
 7586 029c 8DF84430 		strb	r3, [sp, #68]
 7587              	.LBE5471:
 7588              	.LBE5470:
 7589              	.LBE5467:
 7590              	.LBE5466:
 7591              	.LBE5465:
 7592              	.LBB5492:
 7593              	.LBB5493:
 7594              	.LBB5494:
 7595              	.LBB5495:
 7596              	.LBB5496:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 7597              		.loc 16 183 26 view .LVU1774
 7598 02a0 1693     		str	r3, [sp, #88]
 7599              	.LBE5496:
 7600              	.LBE5495:
 7601              	.LBB5497:
 7602              	.LBB5498:
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 7603              		.loc 17 322 14 view .LVU1775
 7604 02a2 8DF85C30 		strb	r3, [sp, #92]
 7605              	.LBE5498:
 7606              	.LBE5497:
 7607              	.LBE5494:
 7608              	.LBE5493:
 7609              	.LBE5492:
 7610              	.LBB5519:
 7611              	.LBB5462:
 7612              	.LBB5456:
 7613              	.LBB5444:
 7614              	.LBB5443:
 160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 7615              		.loc 16 160 46 view .LVU1776
 7616 02a6 0996     		str	r6, [sp, #36]
 7617              	.LVL358:
 160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 7618              		.loc 16 160 46 view .LVU1777
 7619              	.LBE5443:
 7620              	.LBE5444:
 7621              	.LBE5456:
 7622              	.LBB5457:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 459


 7623              	.LBI5457:
 7624              		.loc 11 162 7 is_stmt 1 view .LVU1778
 7625              	.LBB5458:
 7626              	.LBI5458:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7627              		.loc 12 89 7 view .LVU1779
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7628              		.loc 12 89 7 is_stmt 0 view .LVU1780
 7629              	.LBE5458:
 7630              	.LBE5457:
 7631              	.LBB5459:
 7632              	.LBI5445:
 214:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7633              		.loc 16 214 7 is_stmt 1 view .LVU1781
 7634              	.LBB5453:
 7635              	.LBI5446:
 182:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 7636              		.loc 16 182 7 view .LVU1782
 182:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 7637              		.loc 16 182 7 is_stmt 0 view .LVU1783
 7638              	.LBE5453:
 7639              	.LBB5454:
 7640              	.LBI5450:
 321:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 7641              		.loc 17 321 7 is_stmt 1 view .LVU1784
 7642              	.LBB5452:
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 7643              		.loc 17 322 9 view .LVU1785
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 7644              		.loc 17 322 9 is_stmt 0 view .LVU1786
 7645              	.LBE5452:
 7646              	.LBE5454:
 7647              	.LBE5459:
 7648              	.LBE5462:
 7649              	.LBE5519:
 7650              	.LBB5520:
 7651              	.LBI5465:
 431:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(is_nothrow_default_constructible<_Alloc>::value)
 7652              		.loc 16 431 7 is_stmt 1 view .LVU1787
 7653              	.LBB5490:
 7654              	.LBB5475:
 7655              	.LBI5475:
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7656              		.loc 16 190 7 view .LVU1788
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7657              		.loc 16 190 7 is_stmt 0 view .LVU1789
 7658              	.LBE5475:
 7659              	.LBB5476:
 7660              	.LBI5476:
 144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 7661              		.loc 11 144 7 is_stmt 1 view .LVU1790
 7662              	.LBB5477:
 7663              	.LBI5477:
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7664              		.loc 12 79 7 view .LVU1791
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7665              		.loc 12 79 7 is_stmt 0 view .LVU1792
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 460


 7666              	.LBE5477:
 7667              	.LBE5476:
 7668              	.LBB5478:
 7669              	.LBI5478:
 159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 7670              		.loc 16 159 2 is_stmt 1 view .LVU1793
 7671              	.LBB5479:
 7672              	.LBB5480:
 7673              	.LBB5481:
 7674              	.LBI5481:
 7675              		.loc 19 101 5 view .LVU1794
 7676              		.loc 19 101 5 is_stmt 0 view .LVU1795
 7677              	.LBE5481:
 7678              	.LBB5482:
 7679              	.LBI5482:
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 7680              		.loc 11 147 7 is_stmt 1 view .LVU1796
 7681              	.LBB5483:
 7682              	.LBI5483:
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7683              		.loc 12 82 7 view .LVU1797
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7684              		.loc 12 82 7 is_stmt 0 view .LVU1798
 7685              	.LBE5483:
 7686              	.LBE5482:
 7687              	.LBE5480:
 7688              	.LBE5479:
 7689              	.LBE5478:
 7690              	.LBB5486:
 7691              	.LBI5486:
 7692              		.loc 11 162 7 is_stmt 1 view .LVU1799
 7693              	.LBB5487:
 7694              	.LBI5487:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7695              		.loc 12 89 7 view .LVU1800
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7696              		.loc 12 89 7 is_stmt 0 view .LVU1801
 7697              	.LBE5487:
 7698              	.LBE5486:
 7699              	.LBB5488:
 7700              	.LBI5467:
 214:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7701              		.loc 16 214 7 is_stmt 1 view .LVU1802
 7702              	.LBB5473:
 7703              	.LBI5468:
 182:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 7704              		.loc 16 182 7 view .LVU1803
 182:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 7705              		.loc 16 182 7 is_stmt 0 view .LVU1804
 7706              	.LBE5473:
 7707              	.LBB5474:
 7708              	.LBI5470:
 321:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 7709              		.loc 17 321 7 is_stmt 1 view .LVU1805
 7710              	.LBB5472:
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 7711              		.loc 17 322 9 view .LVU1806
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 461


 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 7712              		.loc 17 322 9 is_stmt 0 view .LVU1807
 7713              	.LBE5472:
 7714              	.LBE5474:
 7715              	.LBE5488:
 7716              	.LBE5490:
 7717              	.LBE5520:
 7718              	.LBB5521:
 7719              	.LBI5492:
 431:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(is_nothrow_default_constructible<_Alloc>::value)
 7720              		.loc 16 431 7 is_stmt 1 view .LVU1808
 7721              	.LBB5517:
 7722              	.LBB5502:
 7723              	.LBI5502:
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7724              		.loc 16 190 7 view .LVU1809
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7725              		.loc 16 190 7 is_stmt 0 view .LVU1810
 7726              	.LBE5502:
 7727              	.LBB5503:
 7728              	.LBI5503:
 144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 7729              		.loc 11 144 7 is_stmt 1 view .LVU1811
 7730              	.LBB5504:
 7731              	.LBI5504:
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7732              		.loc 12 79 7 view .LVU1812
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7733              		.loc 12 79 7 is_stmt 0 view .LVU1813
 7734              	.LBE5504:
 7735              	.LBE5503:
 7736              	.LBB5505:
 7737              	.LBI5505:
 159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 7738              		.loc 16 159 2 is_stmt 1 view .LVU1814
 7739              	.LBB5506:
 7740              	.LBB5507:
 7741              	.LBB5508:
 7742              	.LBI5508:
 7743              		.loc 19 101 5 view .LVU1815
 7744              		.loc 19 101 5 is_stmt 0 view .LVU1816
 7745              	.LBE5508:
 7746              	.LBB5509:
 7747              	.LBI5509:
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 7748              		.loc 11 147 7 is_stmt 1 view .LVU1817
 7749              	.LBB5510:
 7750              	.LBI5510:
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7751              		.loc 12 82 7 view .LVU1818
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7752              		.loc 12 82 7 is_stmt 0 view .LVU1819
 7753              	.LBE5510:
 7754              	.LBE5509:
 7755              	.LBE5507:
 7756              	.LBE5506:
 7757              	.LBE5505:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 462


 7758              	.LBB5513:
 7759              	.LBI5513:
 7760              		.loc 11 162 7 is_stmt 1 view .LVU1820
 7761              	.LBB5514:
 7762              	.LBI5514:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7763              		.loc 12 89 7 view .LVU1821
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 7764              		.loc 12 89 7 is_stmt 0 view .LVU1822
 7765              	.LBE5514:
 7766              	.LBE5513:
 7767              	.LBB5515:
 7768              	.LBI5494:
 214:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7769              		.loc 16 214 7 is_stmt 1 view .LVU1823
 7770              	.LBB5500:
 7771              	.LBI5495:
 182:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 7772              		.loc 16 182 7 view .LVU1824
 182:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_string_length = __length; }
 7773              		.loc 16 182 7 is_stmt 0 view .LVU1825
 7774              	.LBE5500:
 7775              	.LBB5501:
 7776              	.LBI5497:
 321:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 7777              		.loc 17 321 7 is_stmt 1 view .LVU1826
 7778              	.LBB5499:
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 7779              		.loc 17 322 9 view .LVU1827
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 7780              		.loc 17 322 9 is_stmt 0 view .LVU1828
 7781              	.LBE5499:
 7782              	.LBE5501:
 7783              	.LBE5515:
 7784              	.LBE5517:
 7785              	.LBE5521:
 7786              	.LBE5623:
 7787              		.loc 8 176 6 is_stmt 1 view .LVU1829
 177:src/main.cpp  **** 					if (curr.index == index) {
 7788              		.loc 8 177 6 view .LVU1830
 178:src/main.cpp  **** 						curr.index = index;
 179:src/main.cpp  **** 					}
 180:src/main.cpp  **** 					parameterMap.setValueAtIndex(val, index);
 7789              		.loc 8 180 6 view .LVU1831
 7790              	.LBB5624:
 7791              	.LBI5525:
 110:src/parameter_controller.h ****         param curr = map[index];
 7792              		.loc 15 110 10 view .LVU1832
 7793              	.LBB5620:
 111:src/parameter_controller.h ****         curr.val = val;
 7794              		.loc 15 111 9 view .LVU1833
 7795              	.LBB5530:
 7796              	.LBI5527:
 987:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h[std::move(__k)]; }
 7797              		.loc 24 987 7 view .LVU1834
 7798              	.LBE5530:
 7799              	.LBE5620:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 463


 7800              	.LBE5624:
 7801              	.LBB5625:
 7802              	.LBB5522:
 7803              	.LBB5491:
 7804              	.LBB5489:
 7805              	.LBB5485:
 7806              	.LBB5484:
 160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 7807              		.loc 16 160 46 is_stmt 0 view .LVU1835
 7808 02a8 0F97     		str	r7, [sp, #60]
 7809              	.LBE5484:
 7810              	.LBE5485:
 7811              	.LBE5489:
 7812              	.LBE5491:
 7813              	.LBE5522:
 7814              	.LBB5523:
 7815              	.LBB5518:
 7816              	.LBB5516:
 7817              	.LBB5512:
 7818              	.LBB5511:
 7819 02aa 1595     		str	r5, [sp, #84]
 7820              	.LBE5511:
 7821              	.LBE5512:
 7822              	.LBE5516:
 7823              	.LBE5518:
 7824              	.LBE5523:
 7825              	.LBE5625:
 7826              	.LBB5626:
 7827              	.LBB5621:
 111:src/parameter_controller.h ****         curr.val = val;
 7828              		.loc 15 111 26 view .LVU1836
 7829 02ac 0594     		str	r4, [sp, #20]
 7830              	.LBE5621:
 7831              	.LBE5626:
 176:src/main.cpp  **** 					if (curr.index == index) {
 7832              		.loc 8 176 15 view .LVU1837
 7833 02ae 8DED1C8A 		vstr.32	s16, [sp, #112]
 7834              	.LBB5627:
 7835              	.LBB5622:
 7836              	.LBB5531:
 7837              	.LBB5529:
 7838              		.loc 24 988 20 view .LVU1838
 7839 02b2 FFF7FEFF 		bl	_ZNSt8__detail9_Map_baseIiSt4pairIKi5paramESaIS4_ENS_10_Select1stESt8equal_toIiESt4hashIiENS_18
 7840              	.LVL359:
 7841              		.loc 24 988 20 view .LVU1839
 7842 02b6 0146     		mov	r1, r0
 7843              	.LBE5529:
 7844              	.LBE5531:
 111:src/parameter_controller.h ****         curr.val = val;
 7845              		.loc 15 111 31 view .LVU1840
 7846 02b8 1FA8     		add	r0, sp, #124
 7847 02ba FFF7FEFF 		bl	_ZN5paramC1ERKS_
 7848              	.LVL360:
 112:src/parameter_controller.h ****         map[index] = curr;
 7849              		.loc 15 112 9 is_stmt 1 view .LVU1841
 7850              	.LBB5532:
 7851              	.LBB5533:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 464


 7852              		.loc 24 988 20 is_stmt 0 view .LVU1842
 7853 02be 05A9     		add	r1, sp, #20
 7854 02c0 3D48     		ldr	r0, .L232+4
 7855              	.LBE5533:
 7856              	.LBE5532:
 112:src/parameter_controller.h ****         map[index] = curr;
 7857              		.loc 15 112 18 view .LVU1843
 7858 02c2 8DED328A 		vstr.32	s16, [sp, #200]
 113:src/parameter_controller.h ****     }
 7859              		.loc 15 113 9 is_stmt 1 view .LVU1844
 113:src/parameter_controller.h ****     }
 7860              		.loc 15 113 13 is_stmt 0 view .LVU1845
 7861 02c6 0594     		str	r4, [sp, #20]
 7862              	.LVL361:
 7863              	.LBB5535:
 7864              	.LBI5532:
 987:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h ****       { return _M_h[std::move(__k)]; }
 7865              		.loc 24 987 7 is_stmt 1 view .LVU1846
 7866              	.LBB5534:
 7867              		.loc 24 988 20 is_stmt 0 view .LVU1847
 7868 02c8 FFF7FEFF 		bl	_ZNSt8__detail9_Map_baseIiSt4pairIKi5paramESaIS4_ENS_10_Select1stESt8equal_toIiESt4hashIiENS_18
 7869              	.LVL362:
 7870              		.loc 24 988 20 view .LVU1848
 7871 02cc 8346     		mov	fp, r0
 7872              	.LVL363:
 7873              		.loc 24 988 20 view .LVU1849
 7874              	.LBE5534:
 7875              	.LBE5535:
 7876              	.LBB5536:
 7877              	.LBI5536:
  37:src/parameter_controller.h **** 	std::string label;
 7878              		.loc 15 37 8 is_stmt 1 view .LVU1850
 7879              	.LBB5537:
 7880              	.LBB5538:
 7881              	.LBI5538:
 665:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7882              		.loc 16 665 7 view .LVU1851
 7883              	.LBB5539:
 7884              	.LBI5539:
1335:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7885              		.loc 16 1335 7 view .LVU1852
 7886              	.LBB5540:
1366:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
 7887              		.loc 16 1366 17 is_stmt 0 view .LVU1853
 7888 02ce 1FA9     		add	r1, sp, #124
 7889              	.LVL364:
1366:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
 7890              		.loc 16 1366 17 view .LVU1854
 7891 02d0 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_
 7892              	.LVL365:
1366:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
 7893              		.loc 16 1366 17 view .LVU1855
 7894              	.LBE5540:
 7895              	.LBE5539:
 7896              	.LBE5538:
 7897              	.LBB5541:
 7898              	.LBI5541:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 465


 665:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7899              		.loc 16 665 7 is_stmt 1 view .LVU1856
 7900              	.LBB5542:
 7901              	.LBI5542:
1335:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7902              		.loc 16 1335 7 view .LVU1857
 7903              	.LBB5543:
1366:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
 7904              		.loc 16 1366 17 is_stmt 0 view .LVU1858
 7905 02d4 25A9     		add	r1, sp, #148
 7906              	.LVL366:
1366:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
 7907              		.loc 16 1366 17 view .LVU1859
 7908 02d6 0BF11800 		add	r0, fp, #24
 7909              	.LVL367:
1366:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
 7910              		.loc 16 1366 17 view .LVU1860
 7911 02da FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_
 7912              	.LVL368:
1366:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
 7913              		.loc 16 1366 17 view .LVU1861
 7914              	.LBE5543:
 7915              	.LBE5542:
 7916              	.LBE5541:
 7917              	.LBB5544:
 7918              	.LBI5544:
 665:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7919              		.loc 16 665 7 is_stmt 1 view .LVU1862
 7920              	.LBB5545:
 7921              	.LBI5545:
1335:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 7922              		.loc 16 1335 7 view .LVU1863
 7923              	.LBB5546:
1366:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
 7924              		.loc 16 1366 17 is_stmt 0 view .LVU1864
 7925 02de 0BF13000 		add	r0, fp, #48
 7926              	.LVL369:
1366:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
 7927              		.loc 16 1366 17 view .LVU1865
 7928 02e2 2BA9     		add	r1, sp, #172
 7929              	.LVL370:
1366:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
 7930              		.loc 16 1366 17 view .LVU1866
 7931 02e4 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_
 7932              	.LVL371:
1366:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	return *this;
 7933              		.loc 16 1366 17 view .LVU1867
 7934              	.LBE5546:
 7935              	.LBE5545:
 7936              	.LBE5544:
  37:src/parameter_controller.h **** 	std::string label;
 7937              		.loc 15 37 8 view .LVU1868
 7938 02e8 319B     		ldr	r3, [sp, #196]
 7939              	.LBE5537:
 7940              	.LBE5536:
 7941              	.LBB5549:
 7942              	.LBB5550:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 466


 7943              	.LBB5551:
 7944              	.LBB5552:
 7945              	.LBB5553:
 7946              	.LBB5554:
 7947              	.LBB5555:
 7948              	.LBB5556:
 7949              	.LBB5557:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 7950              		.loc 16 187 28 view .LVU1869
 7951 02ea 2B98     		ldr	r0, [sp, #172]
 7952              	.LBE5557:
 7953              	.LBE5556:
 7954              	.LBE5555:
 7955              	.LBE5554:
 7956              	.LBE5553:
 7957              	.LBE5552:
 7958              	.LBE5551:
 7959              	.LBE5550:
 7960              	.LBE5549:
 7961              	.LBB5616:
 7962              	.LBB5547:
  37:src/parameter_controller.h **** 	std::string label;
 7963              		.loc 15 37 8 view .LVU1870
 7964 02ec CBF84830 		str	r3, [fp, #72]
 7965 02f0 329B     		ldr	r3, [sp, #200]	@ float
 7966              	.LBE5547:
 7967              	.LBE5616:
 7968              	.LBB5617:
 7969              	.LBB5614:
 7970              	.LBB5577:
 7971              	.LBB5575:
 7972              	.LBB5570:
 7973              	.LBB5568:
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 7974              		.loc 16 231 2 view .LVU1871
 7975 02f2 5045     		cmp	r0, r10
 7976              	.LBE5568:
 7977              	.LBE5570:
 7978              	.LBE5575:
 7979              	.LBE5577:
 7980              	.LBE5614:
 7981              	.LBE5617:
 7982              	.LBB5618:
 7983              	.LBB5548:
  37:src/parameter_controller.h **** 	std::string label;
 7984              		.loc 15 37 8 view .LVU1872
 7985 02f4 CBF84C30 		str	r3, [fp, #76]	@ float
 7986 02f8 339B     		ldr	r3, [sp, #204]	@ float
 7987 02fa CBF85030 		str	r3, [fp, #80]	@ float
 7988 02fe 349B     		ldr	r3, [sp, #208]	@ float
 7989 0300 CBF85430 		str	r3, [fp, #84]	@ float
 7990              	.LVL372:
  37:src/parameter_controller.h **** 	std::string label;
 7991              		.loc 15 37 8 view .LVU1873
 7992              	.LBE5548:
 7993              	.LBE5618:
 7994              	.LBB5619:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 467


 7995              	.LBI5549:
  37:src/parameter_controller.h **** 	std::string label;
 7996              		.loc 15 37 8 is_stmt 1 view .LVU1874
 7997              	.LBB5615:
 7998              	.LBB5578:
 7999              	.LBI5551:
 657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 8000              		.loc 16 657 7 view .LVU1875
 8001              	.LBB5576:
 8002              	.LBB5571:
 8003              	.LBI5553:
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 8004              		.loc 16 229 7 view .LVU1876
 8005              	.LBB5569:
 8006              	.LBB5560:
 8007              	.LBI5555:
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 8008              		.loc 16 221 7 view .LVU1877
 8009              	.LBB5558:
 8010              	.LBI5556:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 8011              		.loc 16 186 7 view .LVU1878
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 8012              		.loc 16 186 7 is_stmt 0 view .LVU1879
 8013              	.LBE5558:
 8014              	.LBB5559:
 8015              	.LBI5559:
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 8016              		.loc 16 200 7 is_stmt 1 view .LVU1880
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 8017              		.loc 16 200 7 is_stmt 0 view .LVU1881
 8018              	.LBE5559:
 8019              	.LBE5560:
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 8020              		.loc 16 231 2 view .LVU1882
 8021 0304 03D0     		beq	.L203
 8022              	.LVL373:
 8023              	.LBB5561:
 8024              	.LBI5561:
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 8025              		.loc 16 236 7 is_stmt 1 view .LVU1883
 8026              	.LBB5562:
 8027              	.LBB5563:
 8028              	.LBI5563:
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 8029              		.loc 13 491 7 view .LVU1884
 8030              	.LBB5564:
 8031              	.LBI5564:
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 8032              		.loc 12 120 7 view .LVU1885
 8033              	.LBE5564:
 8034              	.LBE5563:
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 8035              		.loc 16 237 34 is_stmt 0 view .LVU1886
 8036 0306 2D99     		ldr	r1, [sp, #180]
 8037              	.LBB5567:
 8038              	.LBB5566:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 468


 8039              	.LBB5565:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8040              		.loc 12 133 19 view .LVU1887
 8041 0308 0131     		adds	r1, r1, #1
 8042              	.LVL374:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8043              		.loc 12 133 19 view .LVU1888
 8044 030a FFF7FEFF 		bl	_ZdlPvj
 8045              	.LVL375:
 8046              	.L203:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8047              		.loc 12 133 19 view .LVU1889
 8048              	.LBE5565:
 8049              	.LBE5566:
 8050              	.LBE5567:
 8051              	.LBE5562:
 8052              	.LBE5561:
 8053              	.LBE5569:
 8054              	.LBE5571:
 8055              	.LBB5572:
 8056              	.LBI5572:
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 8057              		.loc 16 150 14 is_stmt 1 view .LVU1890
 8058              	.LBB5573:
 8059              	.LBI5573:
 8060              		.loc 11 162 7 view .LVU1891
 8061              	.LBB5574:
 8062              	.LBI5574:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8063              		.loc 12 89 7 view .LVU1892
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8064              		.loc 12 89 7 is_stmt 0 view .LVU1893
 8065              	.LBE5574:
 8066              	.LBE5573:
 8067              	.LBE5572:
 8068              	.LBE5576:
 8069              	.LBE5578:
 8070              	.LBB5579:
 8071              	.LBI5579:
 657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 8072              		.loc 16 657 7 is_stmt 1 view .LVU1894
 8073              	.LBB5580:
 8074              	.LBB5581:
 8075              	.LBI5581:
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 8076              		.loc 16 229 7 view .LVU1895
 8077              	.LBB5582:
 8078              	.LBB5583:
 8079              	.LBI5583:
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 8080              		.loc 16 221 7 view .LVU1896
 8081              	.LBB5584:
 8082              	.LBI5584:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 8083              		.loc 16 186 7 view .LVU1897
 8084              	.LBB5585:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 469


 8085              		.loc 16 187 28 is_stmt 0 view .LVU1898
 8086 030e 2598     		ldr	r0, [sp, #148]
 8087              	.LVL376:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 8088              		.loc 16 187 28 view .LVU1899
 8089              	.LBE5585:
 8090              	.LBE5584:
 8091              	.LBB5586:
 8092              	.LBI5586:
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 8093              		.loc 16 200 7 is_stmt 1 view .LVU1900
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 8094              		.loc 16 200 7 is_stmt 0 view .LVU1901
 8095              	.LBE5586:
 8096              	.LBE5583:
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 8097              		.loc 16 231 2 view .LVU1902
 8098 0310 4845     		cmp	r0, r9
 8099 0312 03D0     		beq	.L204
 8100              	.LVL377:
 8101              	.LBB5587:
 8102              	.LBI5587:
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 8103              		.loc 16 236 7 is_stmt 1 view .LVU1903
 8104              	.LBB5588:
 8105              	.LBB5589:
 8106              	.LBI5589:
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 8107              		.loc 13 491 7 view .LVU1904
 8108              	.LBB5590:
 8109              	.LBI5590:
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 8110              		.loc 12 120 7 view .LVU1905
 8111              	.LBE5590:
 8112              	.LBE5589:
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 8113              		.loc 16 237 34 is_stmt 0 view .LVU1906
 8114 0314 2799     		ldr	r1, [sp, #156]
 8115              	.LBB5593:
 8116              	.LBB5592:
 8117              	.LBB5591:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8118              		.loc 12 133 19 view .LVU1907
 8119 0316 0131     		adds	r1, r1, #1
 8120              	.LVL378:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8121              		.loc 12 133 19 view .LVU1908
 8122 0318 FFF7FEFF 		bl	_ZdlPvj
 8123              	.LVL379:
 8124              	.L204:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8125              		.loc 12 133 19 view .LVU1909
 8126              	.LBE5591:
 8127              	.LBE5592:
 8128              	.LBE5593:
 8129              	.LBE5588:
 8130              	.LBE5587:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 470


 8131              	.LBE5582:
 8132              	.LBE5581:
 8133              	.LBB5594:
 8134              	.LBI5594:
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 8135              		.loc 16 150 14 is_stmt 1 view .LVU1910
 8136              	.LBB5595:
 8137              	.LBI5595:
 8138              		.loc 11 162 7 view .LVU1911
 8139              	.LBB5596:
 8140              	.LBI5596:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8141              		.loc 12 89 7 view .LVU1912
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8142              		.loc 12 89 7 is_stmt 0 view .LVU1913
 8143              	.LBE5596:
 8144              	.LBE5595:
 8145              	.LBE5594:
 8146              	.LBE5580:
 8147              	.LBE5579:
 8148              	.LBB5597:
 8149              	.LBI5597:
 657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 8150              		.loc 16 657 7 is_stmt 1 view .LVU1914
 8151              	.LBB5598:
 8152              	.LBI5598:
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 8153              		.loc 16 229 7 view .LVU1915
 8154              	.LBB5599:
 8155              	.LBB5600:
 8156              	.LBI5600:
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 8157              		.loc 16 221 7 view .LVU1916
 8158              	.LBB5601:
 8159              	.LBI5601:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 8160              		.loc 16 186 7 view .LVU1917
 8161              	.LBB5602:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 8162              		.loc 16 187 28 is_stmt 0 view .LVU1918
 8163 031c 1F98     		ldr	r0, [sp, #124]
 8164              	.LVL380:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 8165              		.loc 16 187 28 view .LVU1919
 8166              	.LBE5602:
 8167              	.LBE5601:
 8168              	.LBB5603:
 8169              	.LBI5603:
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 8170              		.loc 16 200 7 is_stmt 1 view .LVU1920
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 8171              		.loc 16 200 7 is_stmt 0 view .LVU1921
 8172              	.LBE5603:
 8173              	.LBE5600:
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 8174              		.loc 16 231 2 view .LVU1922
 8175 031e 21AB     		add	r3, sp, #132
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 471


 8176 0320 9842     		cmp	r0, r3
 8177 0322 03D0     		beq	.L205
 8178              	.LVL381:
 8179              	.LBB5604:
 8180              	.LBI5604:
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 8181              		.loc 16 236 7 is_stmt 1 view .LVU1923
 8182              	.LBB5605:
 8183              	.LBB5606:
 8184              	.LBI5606:
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 8185              		.loc 13 491 7 view .LVU1924
 8186              	.LBB5607:
 8187              	.LBI5607:
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 8188              		.loc 12 120 7 view .LVU1925
 8189              	.LBE5607:
 8190              	.LBE5606:
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 8191              		.loc 16 237 34 is_stmt 0 view .LVU1926
 8192 0324 2199     		ldr	r1, [sp, #132]
 8193              	.LBB5610:
 8194              	.LBB5609:
 8195              	.LBB5608:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8196              		.loc 12 133 19 view .LVU1927
 8197 0326 0131     		adds	r1, r1, #1
 8198              	.LVL382:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8199              		.loc 12 133 19 view .LVU1928
 8200 0328 FFF7FEFF 		bl	_ZdlPvj
 8201              	.LVL383:
 8202              	.L205:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8203              		.loc 12 133 19 view .LVU1929
 8204              	.LBE5608:
 8205              	.LBE5609:
 8206              	.LBE5610:
 8207              	.LBE5605:
 8208              	.LBE5604:
 8209              	.LBE5599:
 8210              	.LBE5598:
 8211              	.LBB5611:
 8212              	.LBI5611:
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 8213              		.loc 16 150 14 is_stmt 1 view .LVU1930
 8214              	.LBB5612:
 8215              	.LBI5612:
 8216              		.loc 11 162 7 view .LVU1931
 8217              	.LBB5613:
 8218              	.LBI5613:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8219              		.loc 12 89 7 view .LVU1932
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8220              		.loc 12 89 7 is_stmt 0 view .LVU1933
 8221              	.LBE5613:
 8222              	.LBE5612:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 472


 8223              	.LBE5611:
 8224              	.LBE5597:
 8225              	.LBE5615:
 8226              	.LBE5619:
 8227              	.LBE5622:
 8228              	.LBE5627:
 8229              	.LBB5628:
 8230              	.LBI5628:
  37:src/parameter_controller.h **** 	std::string label;
 8231              		.loc 15 37 8 is_stmt 1 view .LVU1934
 8232              	.LBB5629:
 8233              	.LBB5630:
 8234              	.LBI5630:
 657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 8235              		.loc 16 657 7 view .LVU1935
 8236              	.LBB5631:
 8237              	.LBB5632:
 8238              	.LBI5632:
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 8239              		.loc 16 229 7 view .LVU1936
 8240              	.LBB5633:
 8241              	.LBB5634:
 8242              	.LBI5634:
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 8243              		.loc 16 221 7 view .LVU1937
 8244              	.LBB5635:
 8245              	.LBI5635:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 8246              		.loc 16 186 7 view .LVU1938
 8247              	.LBB5636:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 8248              		.loc 16 187 28 is_stmt 0 view .LVU1939
 8249 032c 1598     		ldr	r0, [sp, #84]
 8250              	.LVL384:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 8251              		.loc 16 187 28 view .LVU1940
 8252              	.LBE5636:
 8253              	.LBE5635:
 8254              	.LBB5637:
 8255              	.LBI5637:
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 8256              		.loc 16 200 7 is_stmt 1 view .LVU1941
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 8257              		.loc 16 200 7 is_stmt 0 view .LVU1942
 8258              	.LBE5637:
 8259              	.LBE5634:
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 8260              		.loc 16 231 2 view .LVU1943
 8261 032e A842     		cmp	r0, r5
 8262 0330 03D0     		beq	.L206
 8263              	.LVL385:
 8264              	.LBB5638:
 8265              	.LBI5638:
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 8266              		.loc 16 236 7 is_stmt 1 view .LVU1944
 8267              	.LBB5639:
 8268              	.LBB5640:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 473


 8269              	.LBI5640:
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 8270              		.loc 13 491 7 view .LVU1945
 8271              	.LBB5641:
 8272              	.LBI5641:
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 8273              		.loc 12 120 7 view .LVU1946
 8274              	.LBE5641:
 8275              	.LBE5640:
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 8276              		.loc 16 237 34 is_stmt 0 view .LVU1947
 8277 0332 1799     		ldr	r1, [sp, #92]
 8278              	.LBB5644:
 8279              	.LBB5643:
 8280              	.LBB5642:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8281              		.loc 12 133 19 view .LVU1948
 8282 0334 0131     		adds	r1, r1, #1
 8283              	.LVL386:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8284              		.loc 12 133 19 view .LVU1949
 8285 0336 FFF7FEFF 		bl	_ZdlPvj
 8286              	.LVL387:
 8287              	.L206:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8288              		.loc 12 133 19 view .LVU1950
 8289              	.LBE5642:
 8290              	.LBE5643:
 8291              	.LBE5644:
 8292              	.LBE5639:
 8293              	.LBE5638:
 8294              	.LBE5633:
 8295              	.LBE5632:
 8296              	.LBB5645:
 8297              	.LBI5645:
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 8298              		.loc 16 150 14 is_stmt 1 view .LVU1951
 8299              	.LBB5646:
 8300              	.LBI5646:
 8301              		.loc 11 162 7 view .LVU1952
 8302              	.LBB5647:
 8303              	.LBI5647:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8304              		.loc 12 89 7 view .LVU1953
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8305              		.loc 12 89 7 is_stmt 0 view .LVU1954
 8306              	.LBE5647:
 8307              	.LBE5646:
 8308              	.LBE5645:
 8309              	.LBE5631:
 8310              	.LBE5630:
 8311              	.LBB5648:
 8312              	.LBI5648:
 657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 8313              		.loc 16 657 7 is_stmt 1 view .LVU1955
 8314              	.LBB5649:
 8315              	.LBB5650:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 474


 8316              	.LBI5650:
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 8317              		.loc 16 229 7 view .LVU1956
 8318              	.LBB5651:
 8319              	.LBB5652:
 8320              	.LBI5652:
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 8321              		.loc 16 221 7 view .LVU1957
 8322              	.LBB5653:
 8323              	.LBI5653:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 8324              		.loc 16 186 7 view .LVU1958
 8325              	.LBB5654:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 8326              		.loc 16 187 28 is_stmt 0 view .LVU1959
 8327 033a 0F98     		ldr	r0, [sp, #60]
 8328              	.LVL388:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 8329              		.loc 16 187 28 view .LVU1960
 8330              	.LBE5654:
 8331              	.LBE5653:
 8332              	.LBB5655:
 8333              	.LBI5655:
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 8334              		.loc 16 200 7 is_stmt 1 view .LVU1961
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 8335              		.loc 16 200 7 is_stmt 0 view .LVU1962
 8336              	.LBE5655:
 8337              	.LBE5652:
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 8338              		.loc 16 231 2 view .LVU1963
 8339 033c B842     		cmp	r0, r7
 8340 033e 03D0     		beq	.L207
 8341              	.LVL389:
 8342              	.LBB5656:
 8343              	.LBI5656:
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 8344              		.loc 16 236 7 is_stmt 1 view .LVU1964
 8345              	.LBB5657:
 8346              	.LBB5658:
 8347              	.LBI5658:
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 8348              		.loc 13 491 7 view .LVU1965
 8349              	.LBB5659:
 8350              	.LBI5659:
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 8351              		.loc 12 120 7 view .LVU1966
 8352              	.LBE5659:
 8353              	.LBE5658:
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 8354              		.loc 16 237 34 is_stmt 0 view .LVU1967
 8355 0340 1199     		ldr	r1, [sp, #68]
 8356              	.LBB5662:
 8357              	.LBB5661:
 8358              	.LBB5660:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8359              		.loc 12 133 19 view .LVU1968
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 475


 8360 0342 0131     		adds	r1, r1, #1
 8361              	.LVL390:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8362              		.loc 12 133 19 view .LVU1969
 8363 0344 FFF7FEFF 		bl	_ZdlPvj
 8364              	.LVL391:
 8365              	.L207:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8366              		.loc 12 133 19 view .LVU1970
 8367              	.LBE5660:
 8368              	.LBE5661:
 8369              	.LBE5662:
 8370              	.LBE5657:
 8371              	.LBE5656:
 8372              	.LBE5651:
 8373              	.LBE5650:
 8374              	.LBB5663:
 8375              	.LBI5663:
 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 8376              		.loc 16 150 14 is_stmt 1 view .LVU1971
 8377              	.LBB5664:
 8378              	.LBI5664:
 8379              		.loc 11 162 7 view .LVU1972
 8380              	.LBB5665:
 8381              	.LBI5665:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8382              		.loc 12 89 7 view .LVU1973
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8383              		.loc 12 89 7 is_stmt 0 view .LVU1974
 8384              	.LBE5665:
 8385              	.LBE5664:
 8386              	.LBE5663:
 8387              	.LBE5649:
 8388              	.LBE5648:
 8389              	.LBB5666:
 8390              	.LBI5666:
 657:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _M_dispose(); }
 8391              		.loc 16 657 7 is_stmt 1 view .LVU1975
 8392              	.LBB5667:
 8393              	.LBI5667:
 229:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 8394              		.loc 16 229 7 view .LVU1976
 8395              	.LBB5668:
 8396              	.LBB5669:
 8397              	.LBI5669:
 221:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_data() == _M_local_data(); }
 8398              		.loc 16 221 7 view .LVU1977
 8399              	.LBB5670:
 8400              	.LBI5670:
 186:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { return _M_dataplus._M_p; }
 8401              		.loc 16 186 7 view .LVU1978
 8402              	.LBB5671:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 8403              		.loc 16 187 28 is_stmt 0 view .LVU1979
 8404 0348 0998     		ldr	r0, [sp, #36]
 8405              	.LVL392:
 187:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 476


 8406              		.loc 16 187 28 view .LVU1980
 8407              	.LBE5671:
 8408              	.LBE5670:
 8409              	.LBB5672:
 8410              	.LBI5672:
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 8411              		.loc 16 200 7 is_stmt 1 view .LVU1981
 200:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 8412              		.loc 16 200 7 is_stmt 0 view .LVU1982
 8413              	.LBE5672:
 8414              	.LBE5669:
 231:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 8415              		.loc 16 231 2 view .LVU1983
 8416 034a B042     		cmp	r0, r6
 8417 034c 03D0     		beq	.L208
 8418              	.LVL393:
 8419              	.LBB5673:
 8420              	.LBI5673:
 236:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 8421              		.loc 16 236 7 is_stmt 1 view .LVU1984
 8422              	.LBB5674:
 8423              	.LBB5675:
 8424              	.LBI5675:
 491:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\alloc_traits.h ****       { __a.deallocate(__p, __n); }
 8425              		.loc 13 491 7 view .LVU1985
 8426              	.LBB5676:
 8427              	.LBI5676:
 120:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h ****       {
 8428              		.loc 12 120 7 view .LVU1986
 8429              	.LBE5676:
 8430              	.LBE5675:
 237:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 8431              		.loc 16 237 34 is_stmt 0 view .LVU1987
 8432 034e 0B99     		ldr	r1, [sp, #44]
 8433              	.LBB5679:
 8434              	.LBB5678:
 8435              	.LBB5677:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8436              		.loc 12 133 19 view .LVU1988
 8437 0350 0131     		adds	r1, r1, #1
 8438              	.LVL394:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8439              		.loc 12 133 19 view .LVU1989
 8440 0352 FFF7FEFF 		bl	_ZdlPvj
 8441              	.LVL395:
 8442              	.L208:
 133:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** #if __cpp_sized_deallocation
 8443              		.loc 12 133 19 view .LVU1990
 8444              	.LBE5677:
 8445              	.LBE5678:
 8446              	.LBE5679:
 8447              	.LBE5674:
 8448              	.LBE5673:
 8449              	.LBE5668:
 8450              	.LBE5667:
 8451              	.LBB5680:
 8452              	.LBI5680:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 477


 150:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 8453              		.loc 16 150 14 is_stmt 1 view .LVU1991
 8454              	.LBB5681:
 8455              	.LBI5681:
 8456              		.loc 11 162 7 view .LVU1992
 8457              	.LBB5682:
 8458              	.LBI5682:
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8459              		.loc 12 89 7 view .LVU1993
  89:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8460              		.loc 12 89 7 is_stmt 0 view .LVU1994
 8461              	.LBE5682:
 8462              	.LBE5681:
 8463              	.LBE5680:
 8464              	.LBE5666:
 8465              	.LBE5629:
 8466              	.LBE5628:
 8467              	.LBE5429:
 168:src/main.cpp  **** 			 		//hw.PrintLine("%x", param_buffer[i]);
 8468              		.loc 8 168 5 is_stmt 1 view .LVU1995
 8469 0356 08F10108 		add	r8, r8, #1
 8470              	.LVL396:
 168:src/main.cpp  **** 			 		//hw.PrintLine("%x", param_buffer[i]);
 8471              		.loc 8 168 23 view .LVU1996
 8472              	.LBB5684:
 918:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 8473              		.loc 29 918 7 view .LVU1997
 8474              	.LBB5428:
 919:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h **** 
 8475              		.loc 29 919 50 is_stmt 0 view .LVU1998
 8476 035a DDE90632 		ldrd	r3, r2, [sp, #24]
 8477 035e D21A     		subs	r2, r2, r3
 8478              	.LBE5428:
 8479              	.LBE5684:
 168:src/main.cpp  **** 			 		//hw.PrintLine("%x", param_buffer[i]);
 8480              		.loc 8 168 23 view .LVU1999
 8481 0360 B8EBA20F 		cmp	r8, r2, asr #2
 8482 0364 BFF46CAF 		bcs	.L197
 8483              	.LVL397:
 8484              	.LBB5685:
 170:src/main.cpp  **** 						val = param_buffer[i];
 8485              		.loc 8 170 6 is_stmt 1 view .LVU2000
 8486 0368 18F0010F 		tst	r8, #1
 8487 036c 89D0     		beq	.L229
 8488              	.LVL398:
 8489              	.L201:
 172:src/main.cpp  **** 						index = param_buffer[i];
 8490              		.loc 8 172 11 view .LVU2001
 173:src/main.cpp  **** 
 8491              		.loc 8 173 7 view .LVU2002
 8492              	.LBB5683:
 8493              	.LBI5683:
1043:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8494              		.loc 29 1043 7 view .LVU2003
1043:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       {
 8495              		.loc 29 1043 7 is_stmt 0 view .LVU2004
 8496              	.LBE5683:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 478


 173:src/main.cpp  **** 
 8497              		.loc 8 173 13 view .LVU2005
 8498 036e 33F82840 		ldrh	r4, [r3, r8, lsl #2]
 8499              	.LVL399:
 173:src/main.cpp  **** 
 8500              		.loc 8 173 13 view .LVU2006
 8501 0372 8AE7     		b	.L202
 8502              	.LVL400:
 8503              	.L198:
 173:src/main.cpp  **** 
 8504              		.loc 8 173 13 view .LVU2007
 8505              	.LBE5685:
 8506              	.LBE5426:
 8507              	.LBE5425:
 8508              	.LBE5424:
 8509              	.LBB5686:
 8510              	.LBB5422:
 8511              	.LBB5419:
 8512              	.LBI5419:
 829:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 8513              		.loc 29 829 7 is_stmt 1 view .LVU2008
 8514              	.LBB5420:
 8515              	.LBI5420:
 978:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 8516              		.loc 30 978 7 view .LVU2009
 978:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_iterator.h ****       : _M_current(__i) { }
 8517              		.loc 30 978 7 is_stmt 0 view .LVU2010
 8518              	.LBE5420:
 8519              	.LBE5419:
1198:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 8520              		.loc 29 1198 21 view .LVU2011
 8521 0374 04AA     		add	r2, sp, #16
 8522              	.LVL401:
1198:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 8523              		.loc 29 1198 21 view .LVU2012
 8524 0376 06A8     		add	r0, sp, #24
 8525              	.LVL402:
1198:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 8526              		.loc 29 1198 21 view .LVU2013
 8527 0378 FFF7FEFF 		bl	_ZNSt6vectorImSaImEE17_M_realloc_insertIJRKmEEEvN9__gnu_cxx17__normal_iteratorIPmS1_EEDpOT_
 8528              	.LVL403:
1198:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 8529              		.loc 29 1198 21 view .LVU2014
 8530 037c 71E7     		b	.L199
 8531              	.LVL404:
 8532              	.L228:
1198:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\stl_vector.h ****       }
 8533              		.loc 29 1198 21 view .LVU2015
 8534              	.LBE5422:
 8535              	.LBE5686:
 8536              	.LBE5687:
 8537              	.LBE5688:
 8538              	.LBB5689:
 8539              	.LBB5342:
 8540              	.LBB5338:
 8541              	.LBB5272:
 8542              	.LBB5268:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 479


 8543              	.LBB5264:
 8544              	.LBB5260:
 8545              	.LBB5130:
 8546              	.LBB5122:
 8547              	.LBB5115:
 8548              	.LBB5094:
 8549              	.LBB5086:
 8550              	.LBB5079:
 8551              	.LBB5072:
 8552              	.LBB5062:
 8553              	.LBB5052:
 8554              	.LBB5045:
 8555              	.LBB5039:
 8556              	.LBI5039:
 387:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 8557              		.loc 17 387 7 is_stmt 1 view .LVU2016
 8558              	.LBB5040:
 389:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 8559              		.loc 17 389 2 view .LVU2017
 8560              		.loc 17 395 2 view .LVU2018
 8561              		.loc 17 395 49 is_stmt 0 view .LVU2019
 8562 037e CA46     		mov	r10, r9
 8563 0380 BAE80F00 		ldmia	r10!, {r0, r1, r2, r3}
 8564 0384 2864     		str	r0, [r5, #64]	@ unaligned
 8565 0386 CEF80410 		str	r1, [lr, #4]	@ unaligned
 8566 038a CEF80820 		str	r2, [lr, #8]	@ unaligned
 8567 038e CEF80C30 		str	r3, [lr, #12]	@ unaligned
 8568 0392 C1E6     		b	.L182
 8569              	.LVL405:
 8570              	.L226:
 8571              		.loc 17 395 49 view .LVU2020
 8572              	.LBE5040:
 8573              	.LBE5039:
 8574              	.LBE5045:
 8575              	.LBE5052:
 8576              	.LBB5053:
 8577              	.LBB4937:
 8578              	.LBB4929:
 8579              	.LBI4929:
 387:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 8580              		.loc 17 387 7 is_stmt 1 view .LVU2021
 8581              	.LBB4930:
 389:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 8582              		.loc 17 389 2 view .LVU2022
 8583              		.loc 17 395 2 view .LVU2023
 8584              		.loc 17 395 49 is_stmt 0 view .LVU2024
 8585 0394 3E46     		mov	r6, r7
 8586 0396 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 8587              	.LVL406:
 8588              		.loc 17 395 49 view .LVU2025
 8589 0398 2861     		str	r0, [r5, #16]	@ unaligned
 8590 039a 6961     		str	r1, [r5, #20]	@ unaligned
 8591 039c AA61     		str	r2, [r5, #24]	@ unaligned
 8592 039e EB61     		str	r3, [r5, #28]	@ unaligned
 8593 03a0 92E6     		b	.L178
 8594              	.LVL407:
 8595              	.L227:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 480


 8596              		.loc 17 395 49 view .LVU2026
 8597              	.LBE4930:
 8598              	.LBE4929:
 8599              	.LBE4937:
 8600              	.LBE5053:
 8601              	.LBB5054:
 8602              	.LBB4988:
 8603              	.LBB4982:
 8604              	.LBI4982:
 387:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       {
 8605              		.loc 17 387 7 is_stmt 1 view .LVU2027
 8606              	.LBB4983:
 389:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 	  return __s1;
 8607              		.loc 17 389 2 view .LVU2028
 8608              		.loc 17 395 2 view .LVU2029
 8609              		.loc 17 395 49 is_stmt 0 view .LVU2030
 8610 03a2 C646     		mov	lr, r8
 8611 03a4 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 8612 03a8 A862     		str	r0, [r5, #40]	@ unaligned
 8613 03aa 7160     		str	r1, [r6, #4]	@ unaligned
 8614 03ac B260     		str	r2, [r6, #8]	@ unaligned
 8615 03ae F360     		str	r3, [r6, #12]	@ unaligned
 8616 03b0 9DE6     		b	.L180
 8617              	.L233:
 8618 03b2 00BF     		.align	2
 8619              	.L232:
 8620 03b4 00000000 		.word	.LANCHOR1
 8621 03b8 00000000 		.word	.LANCHOR2
 8622              	.LBE4983:
 8623              	.LBE4982:
 8624              	.LBE4988:
 8625              	.LBE5054:
 8626              	.LBE5062:
 8627              	.LBE5072:
 8628              	.LBE5079:
 8629              	.LBE5086:
 8630              	.LBE5094:
 8631              	.LBE5115:
 8632              	.LBE5122:
 8633              	.LBE5130:
 8634              	.LBE5260:
 8635              	.LBE5264:
 8636              	.LBE5268:
 8637              	.LBE5272:
 8638              	.LBE5338:
 8639              	.LBE5342:
 8640              	.LBE5689:
 8641              		.cfi_endproc
 8642              	.LFE5457:
 8644              		.section	.text.startup._GLOBAL__sub_I_hw,"ax",%progbits
 8645              		.align	1
 8646              		.p2align 2,,3
 8647              		.syntax unified
 8648              		.thumb
 8649              		.thumb_func
 8650              		.fpu fpv5-d16
 8652              	_GLOBAL__sub_I_hw:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 481


 8653              	.LFB6578:
 181:src/main.cpp  **** 			 	}
 182:src/main.cpp  **** 			}
 183:src/main.cpp  **** 		 }
 184:src/main.cpp  **** 		 
 185:src/main.cpp  **** 
 186:src/main.cpp  **** 		//  for (int i = 0; i < param_buffer_size; i++) {
 187:src/main.cpp  **** 		// 	 hw.Print("%c", param_buffer[i]);
 188:src/main.cpp  **** 		// 	 if (i == param_buffer_size) {
 189:src/main.cpp  **** 		// 	 	param_buffer_size = 0;
 190:src/main.cpp  **** 		// 	 }
 191:src/main.cpp  **** 		//  }
 192:src/main.cpp  **** 
 193:src/main.cpp  **** 		// while (!paramBuf.empty()) {
 194:src/main.cpp  **** 		// 	uint32_t curr = paramBuf.back();
 195:src/main.cpp  **** 		// 	paramBuf.pop_back();
 196:src/main.cpp  **** 		// }
 197:src/main.cpp  **** 
 198:src/main.cpp  **** 	}
 199:src/main.cpp  **** }
 8654              		.loc 8 199 1 is_stmt 1 view -0
 8655              		.cfi_startproc
 8656              		@ args = 0, pretend = 0, frame = 0
 8657              		@ frame_needed = 0, uses_anonymous_args = 0
 8658              	.LBB5882:
 8659              	.LBI5882:
 8660              		.loc 8 199 1 view .LVU2032
 8661              	.LVL408:
 8662              	.LBB5883:
 8663              	.LBB5884:
 8664              	.LBI5884:
  21:../../libdaisy//src/daisy_seed.h ****     ~DaisySeed() {}
 8665              		.loc 3 21 5 view .LVU2033
 8666              	.LBB5885:
 8667              	.LBB5886:
 8668              	.LBI5886:
 8669              		.file 32 "../../libdaisy//src/per/qspi.h"
   1:../../libdaisy//src/per/qspi.h **** #ifndef DSY_QSPI
   2:../../libdaisy//src/per/qspi.h **** #define DSY_QSPI /**< Macro */
   3:../../libdaisy//src/per/qspi.h **** 
   4:../../libdaisy//src/per/qspi.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation
   5:../../libdaisy//src/per/qspi.h **** 
   6:../../libdaisy//src/per/qspi.h **** #include <cstdint>
   7:../../libdaisy//src/per/qspi.h **** #include "daisy_core.h" // Added for dsy_gpio_pin typedef
   8:../../libdaisy//src/per/qspi.h **** 
   9:../../libdaisy//src/per/qspi.h **** #define DSY_QSPI_TEXT       \
  10:../../libdaisy//src/per/qspi.h ****     __attribute__((section( \
  11:../../libdaisy//src/per/qspi.h ****         ".qspiflash_text"))) /**< used for reading memory in memory_mapped mode. */
  12:../../libdaisy//src/per/qspi.h **** #define DSY_QSPI_DATA       \
  13:../../libdaisy//src/per/qspi.h ****     __attribute__((section( \
  14:../../libdaisy//src/per/qspi.h ****         ".qspiflash_data"))) /**< used for reading memory in memory_mapped mode. */
  15:../../libdaisy//src/per/qspi.h **** #define DSY_QSPI_BSS        \
  16:../../libdaisy//src/per/qspi.h ****     __attribute__((section( \
  17:../../libdaisy//src/per/qspi.h ****         ".qspiflash_bss"))) /**< used for reading memory in memory_mapped mode. */
  18:../../libdaisy//src/per/qspi.h **** 
  19:../../libdaisy//src/per/qspi.h **** namespace daisy
  20:../../libdaisy//src/per/qspi.h **** {
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 482


  21:../../libdaisy//src/per/qspi.h **** /** @addtogroup serial
  22:../../libdaisy//src/per/qspi.h **** @{
  23:../../libdaisy//src/per/qspi.h **** */
  24:../../libdaisy//src/per/qspi.h **** 
  25:../../libdaisy//src/per/qspi.h **** /** 
  26:../../libdaisy//src/per/qspi.h ****  Driver for QSPI peripheral to interface with external flash memory. \n 
  27:../../libdaisy//src/per/qspi.h ****     Currently supported QSPI Devices: \n 
  28:../../libdaisy//src/per/qspi.h ****     * IS25LP080D
  29:../../libdaisy//src/per/qspi.h **** */
  30:../../libdaisy//src/per/qspi.h **** class QSPIHandle
  31:../../libdaisy//src/per/qspi.h **** {
  32:../../libdaisy//src/per/qspi.h ****   public:
  33:../../libdaisy//src/per/qspi.h ****     enum Result
  34:../../libdaisy//src/per/qspi.h ****     {
  35:../../libdaisy//src/per/qspi.h ****         OK = 0,
  36:../../libdaisy//src/per/qspi.h ****         ERR
  37:../../libdaisy//src/per/qspi.h ****     };
  38:../../libdaisy//src/per/qspi.h **** 
  39:../../libdaisy//src/per/qspi.h ****     /** Indicates the current status of the module. 
  40:../../libdaisy//src/per/qspi.h ****          *  Warnings are indicated by a leading W.
  41:../../libdaisy//src/per/qspi.h ****          *  Errors are indicated by a leading E and cause an immediate exit.
  42:../../libdaisy//src/per/qspi.h ****          * 
  43:../../libdaisy//src/per/qspi.h ****          *  \param GOOD - No errors have been reported.
  44:../../libdaisy//src/per/qspi.h ****          *  \param E_HAL_ERROR - HAL code did not return HAL_OK.
  45:../../libdaisy//src/per/qspi.h ****          *  \param E_SWITCHING_MODES - An error was encountered while switching QSPI peripheral mod
  46:../../libdaisy//src/per/qspi.h ****          *  \param E_INVALID_MODE - QSPI should not be written to while the program is executing fr
  47:../../libdaisy//src/per/qspi.h ****          */
  48:../../libdaisy//src/per/qspi.h ****     enum Status
  49:../../libdaisy//src/per/qspi.h ****     {
  50:../../libdaisy//src/per/qspi.h ****         GOOD = 0,
  51:../../libdaisy//src/per/qspi.h ****         E_HAL_ERROR,
  52:../../libdaisy//src/per/qspi.h ****         E_SWITCHING_MODES,
  53:../../libdaisy//src/per/qspi.h ****         E_INVALID_MODE,
  54:../../libdaisy//src/per/qspi.h ****     };
  55:../../libdaisy//src/per/qspi.h **** 
  56:../../libdaisy//src/per/qspi.h ****     /** Configuration structure for interfacing with QSPI Driver */
  57:../../libdaisy//src/per/qspi.h ****     struct Config
  58:../../libdaisy//src/per/qspi.h ****     {
  59:../../libdaisy//src/per/qspi.h ****         /** Flash Devices supported. (Both of these are more-or-less the same, just different sizes
  60:../../libdaisy//src/per/qspi.h ****         enum Device
  61:../../libdaisy//src/per/qspi.h ****         {
  62:../../libdaisy//src/per/qspi.h ****             IS25LP080D,  /**< & */
  63:../../libdaisy//src/per/qspi.h ****             IS25LP064A,  /**< & */
  64:../../libdaisy//src/per/qspi.h ****             DEVICE_LAST, /**< & */
  65:../../libdaisy//src/per/qspi.h ****         };
  66:../../libdaisy//src/per/qspi.h **** 
  67:../../libdaisy//src/per/qspi.h ****         /** 
  68:../../libdaisy//src/per/qspi.h ****         Modes of operation.
  69:../../libdaisy//src/per/qspi.h ****         Memory Mapped mode: QSPI configured so that the QSPI can be
  70:../../libdaisy//src/per/qspi.h ****         read from starting address 0x90000000. Writing is not
  71:../../libdaisy//src/per/qspi.h ****         possible in this mode. \n 
  72:../../libdaisy//src/per/qspi.h ****         Indirect Polling mode: Device driver enabled. 
  73:../../libdaisy//src/per/qspi.h ****         */
  74:../../libdaisy//src/per/qspi.h ****         enum Mode
  75:../../libdaisy//src/per/qspi.h ****         {
  76:../../libdaisy//src/per/qspi.h ****             MEMORY_MAPPED,    /**< & */
  77:../../libdaisy//src/per/qspi.h ****             INDIRECT_POLLING, /**< & */
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 483


  78:../../libdaisy//src/per/qspi.h ****             MODE_LAST,
  79:../../libdaisy//src/per/qspi.h ****         };
  80:../../libdaisy//src/per/qspi.h **** 
  81:../../libdaisy//src/per/qspi.h ****         //SCK,  CE# (active low)
  82:../../libdaisy//src/per/qspi.h ****         struct
  83:../../libdaisy//src/per/qspi.h ****         {
  84:../../libdaisy//src/per/qspi.h ****             dsy_gpio_pin io0; /**< & */
  85:../../libdaisy//src/per/qspi.h ****             dsy_gpio_pin io1; /**< & */
  86:../../libdaisy//src/per/qspi.h ****             dsy_gpio_pin io2; /**< & */
  87:../../libdaisy//src/per/qspi.h ****             dsy_gpio_pin io3; /**< & */
  88:../../libdaisy//src/per/qspi.h ****             dsy_gpio_pin clk; /**< & */
  89:../../libdaisy//src/per/qspi.h ****             dsy_gpio_pin ncs; /**< & */
  90:../../libdaisy//src/per/qspi.h ****         } pin_config;
  91:../../libdaisy//src/per/qspi.h **** 
  92:../../libdaisy//src/per/qspi.h ****         Device device;
  93:../../libdaisy//src/per/qspi.h ****         Mode   mode;
  94:../../libdaisy//src/per/qspi.h ****     };
  95:../../libdaisy//src/per/qspi.h **** 
  96:../../libdaisy//src/per/qspi.h ****     /** 
  97:../../libdaisy//src/per/qspi.h ****         Initializes QSPI peripheral, and Resets, and prepares memory for access.
  98:../../libdaisy//src/per/qspi.h ****         \param config should be populated with the mode, device and pin_config before calling this 
  99:../../libdaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 100:../../libdaisy//src/per/qspi.h ****         */
 101:../../libdaisy//src/per/qspi.h ****     Result Init(const Config& config);
 102:../../libdaisy//src/per/qspi.h **** 
 103:../../libdaisy//src/per/qspi.h ****     /** Returns the current config. */
 104:../../libdaisy//src/per/qspi.h ****     const Config& GetConfig() const;
 105:../../libdaisy//src/per/qspi.h **** 
 106:../../libdaisy//src/per/qspi.h ****     // Couldn't this just be called before anything else in init? That
 107:../../libdaisy//src/per/qspi.h ****     // would make manually calling it unnecessary.
 108:../../libdaisy//src/per/qspi.h ****     /** 
 109:../../libdaisy//src/per/qspi.h ****         Deinitializes the peripheral
 110:../../libdaisy//src/per/qspi.h ****         This should be called before reinitializing QSPI in a different mode.
 111:../../libdaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 112:../../libdaisy//src/per/qspi.h ****         */
 113:../../libdaisy//src/per/qspi.h ****     Result DeInit();
 114:../../libdaisy//src/per/qspi.h **** 
 115:../../libdaisy//src/per/qspi.h ****     /** 
 116:../../libdaisy//src/per/qspi.h ****         Writes a single page to to the specified address on the QSPI chip.
 117:../../libdaisy//src/per/qspi.h ****         For IS25LP*, page size is 256 bytes.
 118:../../libdaisy//src/per/qspi.h ****         \param address Address to write to
 119:../../libdaisy//src/per/qspi.h ****         \param size Buffer size
 120:../../libdaisy//src/per/qspi.h ****         \param buffer Buffer to write
 121:../../libdaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 122:../../libdaisy//src/per/qspi.h ****         */
 123:../../libdaisy//src/per/qspi.h ****     Result WritePage(uint32_t address, uint32_t size, uint8_t* buffer);
 124:../../libdaisy//src/per/qspi.h **** 
 125:../../libdaisy//src/per/qspi.h ****     /** 
 126:../../libdaisy//src/per/qspi.h ****         Writes data in buffer to to the QSPI. Starting at address to address+size 
 127:../../libdaisy//src/per/qspi.h ****         \param address Address to write to
 128:../../libdaisy//src/per/qspi.h ****         \param size Buffer size
 129:../../libdaisy//src/per/qspi.h ****         \param buffer Buffer to write
 130:../../libdaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 131:../../libdaisy//src/per/qspi.h ****         */
 132:../../libdaisy//src/per/qspi.h ****     Result Write(uint32_t address, uint32_t size, uint8_t* buffer);
 133:../../libdaisy//src/per/qspi.h **** 
 134:../../libdaisy//src/per/qspi.h ****     /** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 484


 135:../../libdaisy//src/per/qspi.h ****         Erases the area specified on the chip.
 136:../../libdaisy//src/per/qspi.h ****         Erasures will happen by 4K, 32K or 64K increments.
 137:../../libdaisy//src/per/qspi.h ****         Smallest erase possible is 4kB at a time. (on IS25LP*)
 138:../../libdaisy//src/per/qspi.h ****         \param start_addr Address to begin erasing from
 139:../../libdaisy//src/per/qspi.h ****         \param end_addr  Address to stop erasing at
 140:../../libdaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 141:../../libdaisy//src/per/qspi.h ****         */
 142:../../libdaisy//src/per/qspi.h ****     Result Erase(uint32_t start_addr, uint32_t end_addr);
 143:../../libdaisy//src/per/qspi.h **** 
 144:../../libdaisy//src/per/qspi.h ****     /**  
 145:../../libdaisy//src/per/qspi.h ****          Erases a single sector of the chip.  
 146:../../libdaisy//src/per/qspi.h ****         TODO: Document the size of this function. 
 147:../../libdaisy//src/per/qspi.h ****         \param address Address of sector to erase
 148:../../libdaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 149:../../libdaisy//src/per/qspi.h ****         */
 150:../../libdaisy//src/per/qspi.h ****     Result EraseSector(uint32_t address);
 151:../../libdaisy//src/per/qspi.h **** 
 152:../../libdaisy//src/per/qspi.h ****     /** Returns the current class status. Useful for debugging.
 153:../../libdaisy//src/per/qspi.h ****      *  \returns Status
 154:../../libdaisy//src/per/qspi.h ****      */
 155:../../libdaisy//src/per/qspi.h ****     Status GetStatus();
 156:../../libdaisy//src/per/qspi.h **** 
 157:../../libdaisy//src/per/qspi.h ****     /** Returns a pointer to the actual memory used 
 158:../../libdaisy//src/per/qspi.h ****      *  The memory at this address is read-only
 159:../../libdaisy//src/per/qspi.h ****      *  to write to it use the Write function.
 160:../../libdaisy//src/per/qspi.h ****      * 
 161:../../libdaisy//src/per/qspi.h ****      *  \param offset returns the pointer starting this 
 162:../../libdaisy//src/per/qspi.h ****      *                many bytes into the memory
 163:../../libdaisy//src/per/qspi.h ****     */
 164:../../libdaisy//src/per/qspi.h ****     void* GetData(uint32_t offset = 0);
 165:../../libdaisy//src/per/qspi.h **** 
 166:../../libdaisy//src/per/qspi.h ****     QSPIHandle() : pimpl_(nullptr) {}
 8670              		.loc 32 166 5 view .LVU2034
 8671              	.LBE5886:
 8672              	.LBE5885:
 8673              	.LBE5884:
 8674              	.LBE5883:
 8675              	.LBE5882:
 8676              		.loc 8 199 1 is_stmt 0 view .LVU2035
 8677 0000 38B5     		push	{r3, r4, r5, lr}
 8678              		.cfi_def_cfa_offset 16
 8679              		.cfi_offset 3, -16
 8680              		.cfi_offset 4, -12
 8681              		.cfi_offset 5, -8
 8682              		.cfi_offset 14, -4
 8683              	.LBB6155:
 8684              	.LBB6152:
 8685              	.LBB5904:
 8686              	.LBB5902:
 8687              	.LBB5891:
 8688              	.LBB5887:
 8689              	.LBB5888:
 8690              		.loc 32 166 34 view .LVU2036
 8691 0002 3B48     		ldr	r0, .L240
 8692 0004 0024     		movs	r4, #0
 8693              	.LBE5888:
 8694              	.LBE5887:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 485


 8695              	.LBE5891:
 8696              	.LBE5902:
 8697              	.LBE5904:
  21:src/main.cpp  **** 
 8698              		.loc 8 21 18 view .LVU2037
 8699 0006 3B4A     		ldr	r2, .L240+4
 8700 0008 3B49     		ldr	r1, .L240+8
 8701              	.LBB5905:
 8702              	.LBB5903:
 8703              	.LBB5892:
 8704              	.LBB5890:
 8705              	.LBB5889:
 8706              		.loc 32 166 34 view .LVU2038
 8707 000a 0460     		str	r4, [r0]
 8708              	.LVL409:
 8709              		.loc 32 166 34 view .LVU2039
 8710              	.LBE5889:
 8711              	.LBE5890:
 8712              	.LBE5892:
 8713              	.LBB5893:
 8714              	.LBI5893:
  76:../../libdaisy//src/hid/audio.h ****     ~AudioHandle() {}
 8715              		.loc 7 76 5 is_stmt 1 view .LVU2040
 8716              	.LBB5894:
 8717              	.LBB5895:
  76:../../libdaisy//src/hid/audio.h ****     ~AudioHandle() {}
 8718              		.loc 7 76 35 is_stmt 0 view .LVU2041
 8719 000c 4461     		str	r4, [r0, #20]
 8720              	.LVL410:
  76:../../libdaisy//src/hid/audio.h ****     ~AudioHandle() {}
 8721              		.loc 7 76 35 view .LVU2042
 8722              	.LBE5895:
 8723              	.LBE5894:
 8724              	.LBE5893:
 8725              	.LBB5896:
 8726              	.LBI5896:
  92:../../libdaisy//src/per/adc.h ****     ~AdcHandle() {}
 8727              		.loc 6 92 5 is_stmt 1 view .LVU2043
  92:../../libdaisy//src/per/adc.h ****     ~AdcHandle() {}
 8728              		.loc 6 92 5 is_stmt 0 view .LVU2044
 8729              	.LBE5896:
 8730              	.LBB5897:
 8731              	.LBI5897:
 8732              		.file 33 "../../libdaisy//src/per/dac.h"
   1:../../libdaisy//src/per/dac.h **** #pragma once
   2:../../libdaisy//src/per/dac.h **** #ifndef DSY_DAC_H
   3:../../libdaisy//src/per/dac.h **** #define DSY_DAC_H
   4:../../libdaisy//src/per/dac.h **** 
   5:../../libdaisy//src/per/dac.h **** #include "daisy_core.h"
   6:../../libdaisy//src/per/dac.h **** 
   7:../../libdaisy//src/per/dac.h **** namespace daisy
   8:../../libdaisy//src/per/dac.h **** {
   9:../../libdaisy//src/per/dac.h **** /** @brief DAC handle for Built-in DAC Peripheral 
  10:../../libdaisy//src/per/dac.h ****  *  @ingroup per_analog
  11:../../libdaisy//src/per/dac.h ****  ** 
  12:../../libdaisy//src/per/dac.h ****  ** For now only Normal Mode is supported,
  13:../../libdaisy//src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 486


  14:../../libdaisy//src/per/dac.h ****  **
  15:../../libdaisy//src/per/dac.h ****  ** For now connecting the DAC through other internal peripherals is also not supported.
  16:../../libdaisy//src/per/dac.h ****  **
  17:../../libdaisy//src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  18:../../libdaisy//src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  19:../../libdaisy//src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  20:../../libdaisy//src/per/dac.h ****  ***/
  21:../../libdaisy//src/per/dac.h **** class DacHandle
  22:../../libdaisy//src/per/dac.h **** {
  23:../../libdaisy//src/per/dac.h ****   public:
  24:../../libdaisy//src/per/dac.h ****     /** Return Values for the DacHandle class */
  25:../../libdaisy//src/per/dac.h ****     enum class Result
  26:../../libdaisy//src/per/dac.h ****     {
  27:../../libdaisy//src/per/dac.h ****         OK,
  28:../../libdaisy//src/per/dac.h ****         ERR,
  29:../../libdaisy//src/per/dac.h ****     };
  30:../../libdaisy//src/per/dac.h **** 
  31:../../libdaisy//src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  32:../../libdaisy//src/per/dac.h ****     enum class Channel
  33:../../libdaisy//src/per/dac.h ****     {
  34:../../libdaisy//src/per/dac.h ****         ONE,
  35:../../libdaisy//src/per/dac.h ****         TWO,
  36:../../libdaisy//src/per/dac.h ****         BOTH,
  37:../../libdaisy//src/per/dac.h ****     };
  38:../../libdaisy//src/per/dac.h **** 
  39:../../libdaisy//src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  40:../../libdaisy//src/per/dac.h ****      **
  41:../../libdaisy//src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  42:../../libdaisy//src/per/dac.h ****      **
  43:../../libdaisy//src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  44:../../libdaisy//src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  45:../../libdaisy//src/per/dac.h ****      ***/
  46:../../libdaisy//src/per/dac.h ****     enum class Mode
  47:../../libdaisy//src/per/dac.h ****     {
  48:../../libdaisy//src/per/dac.h ****         POLLING,
  49:../../libdaisy//src/per/dac.h ****         DMA,
  50:../../libdaisy//src/per/dac.h ****     };
  51:../../libdaisy//src/per/dac.h **** 
  52:../../libdaisy//src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  53:../../libdaisy//src/per/dac.h ****      ** The output range will be: 0V - VDDA
  54:../../libdaisy//src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  55:../../libdaisy//src/per/dac.h ****      ***/
  56:../../libdaisy//src/per/dac.h ****     enum class BitDepth
  57:../../libdaisy//src/per/dac.h ****     {
  58:../../libdaisy//src/per/dac.h ****         BITS_8,
  59:../../libdaisy//src/per/dac.h ****         BITS_12
  60:../../libdaisy//src/per/dac.h ****     };
  61:../../libdaisy//src/per/dac.h **** 
  62:../../libdaisy//src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  63:../../libdaisy//src/per/dac.h ****     enum class BufferState
  64:../../libdaisy//src/per/dac.h ****     {
  65:../../libdaisy//src/per/dac.h ****         ENABLED,
  66:../../libdaisy//src/per/dac.h ****         DISABLED,
  67:../../libdaisy//src/per/dac.h ****     };
  68:../../libdaisy//src/per/dac.h **** 
  69:../../libdaisy//src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  70:../../libdaisy//src/per/dac.h ****     struct Config
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 487


  71:../../libdaisy//src/per/dac.h ****     {
  72:../../libdaisy//src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  73:../../libdaisy//src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  74:../../libdaisy//src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  75:../../libdaisy//src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  76:../../libdaisy//src/per/dac.h ****         uint32_t target_samplerate;
  77:../../libdaisy//src/per/dac.h **** 
  78:../../libdaisy//src/per/dac.h ****         Channel     chn;
  79:../../libdaisy//src/per/dac.h ****         Mode        mode;
  80:../../libdaisy//src/per/dac.h ****         BitDepth    bitdepth;
  81:../../libdaisy//src/per/dac.h ****         BufferState buff_state;
  82:../../libdaisy//src/per/dac.h ****     };
  83:../../libdaisy//src/per/dac.h **** 
  84:../../libdaisy//src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 8733              		.loc 33 84 5 is_stmt 1 view .LVU2045
 8734              	.LBB5898:
 8735              	.LBB5899:
 8736              		.loc 33 84 33 is_stmt 0 view .LVU2046
 8737 000e 0462     		str	r4, [r0, #32]
 8738              	.LVL411:
 8739              		.loc 33 84 33 view .LVU2047
 8740              	.LBE5899:
 8741              	.LBE5898:
 8742              	.LBE5897:
 8743              	.LBB5900:
 8744              	.LBI5900:
  40:../../libdaisy//src/hid/usb.h **** 
 8745              		.loc 5 40 5 is_stmt 1 view .LVU2048
  40:../../libdaisy//src/hid/usb.h **** 
 8746              		.loc 5 40 5 is_stmt 0 view .LVU2049
 8747              	.LBE5900:
 8748              	.LBB5901:
 8749              	.LBI5901:
  77:../../libdaisy//src/sys/system.h ****     ~System() {}
 8750              		.loc 4 77 5 is_stmt 1 view .LVU2050
  77:../../libdaisy//src/sys/system.h ****     ~System() {}
 8751              		.loc 4 77 5 is_stmt 0 view .LVU2051
 8752              	.LBE5901:
 8753              	.LBE5903:
 8754              	.LBE5905:
  21:src/main.cpp  **** 
 8755              		.loc 8 21 18 view .LVU2052
 8756 0010 FFF7FEFF 		bl	__aeabi_atexit
 8757              	.LVL412:
 8758              	.LBB5906:
 8759              	.LBI5906:
  85:../../libdaisy//src/per/uart.h ****         }
  86:../../libdaisy//src/per/uart.h **** 
  87:../../libdaisy//src/per/uart.h ****         Peripheral periph;
  88:../../libdaisy//src/per/uart.h ****         StopBits   stopbits;
  89:../../libdaisy//src/per/uart.h ****         Parity     parity;
  90:../../libdaisy//src/per/uart.h ****         Mode       mode;
  91:../../libdaisy//src/per/uart.h ****         WordLength wordlength;
  92:../../libdaisy//src/per/uart.h ****         uint32_t   baudrate;
  93:../../libdaisy//src/per/uart.h ****     };
  94:../../libdaisy//src/per/uart.h **** 
  95:../../libdaisy//src/per/uart.h **** 
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 488


  96:../../libdaisy//src/per/uart.h ****     UartHandler() : pimpl_(nullptr) {}
 8760              		.loc 21 96 5 is_stmt 1 view .LVU2053
 8761              	.LBB5907:
 8762              	.LBB5908:
 8763              		.loc 21 96 35 is_stmt 0 view .LVU2054
 8764 0014 394B     		ldr	r3, .L240+12
 8765              	.LBE5908:
 8766              	.LBE5907:
 8767              	.LBE5906:
 8768              	.LBB5911:
 8769              	.LBB5912:
 8770              	.LBB5913:
  70:../../libdaisy//src/per/tim.h ****     TimerHandle(const TimerHandle& other) = default;
 8771              		.loc 1 70 35 view .LVU2055
 8772 0016 3A48     		ldr	r0, .L240+16
 8773              	.LBE5913:
 8774              	.LBE5912:
 8775              	.LBE5911:
  24:src/main.cpp  **** daisy::GPIO gpio;
 8776              		.loc 8 24 20 view .LVU2056
 8777 0018 364A     		ldr	r2, .L240+4
 8778 001a 3A49     		ldr	r1, .L240+20
 8779              	.LBB5916:
 8780              	.LBB5910:
 8781              	.LBB5909:
 8782              		.loc 21 96 35 view .LVU2057
 8783 001c 1C60     		str	r4, [r3]
 8784              	.LVL413:
 8785              		.loc 21 96 35 view .LVU2058
 8786              	.LBE5909:
 8787              	.LBE5910:
 8788              	.LBE5916:
 8789              	.LBB5917:
 8790              	.LBI5911:
  70:../../libdaisy//src/per/tim.h ****     TimerHandle(const TimerHandle& other) = default;
 8791              		.loc 1 70 5 is_stmt 1 view .LVU2059
 8792              	.LBB5915:
 8793              	.LBB5914:
  70:../../libdaisy//src/per/tim.h ****     TimerHandle(const TimerHandle& other) = default;
 8794              		.loc 1 70 35 is_stmt 0 view .LVU2060
 8795 001e 0460     		str	r4, [r0]
 8796              	.LBE5914:
 8797              	.LBE5915:
 8798              	.LBE5917:
  24:src/main.cpp  **** daisy::GPIO gpio;
 8799              		.loc 8 24 20 view .LVU2061
 8800 0020 FFF7FEFF 		bl	__aeabi_atexit
 8801              	.LVL414:
 8802              	.LBB5918:
 8803              	.LBI5918:
 8804              		.file 34 "../../libdaisy//src/per/gpio.h"
   1:../../libdaisy//src/per/gpio.h **** #pragma once
   2:../../libdaisy//src/per/gpio.h **** #ifndef DSY_GPIO_H
   3:../../libdaisy//src/per/gpio.h **** #define DSY_GPIO_H
   4:../../libdaisy//src/per/gpio.h **** #include "daisy_core.h"
   5:../../libdaisy//src/per/gpio.h **** 
   6:../../libdaisy//src/per/gpio.h **** #ifdef __cplusplus
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 489


   7:../../libdaisy//src/per/gpio.h **** 
   8:../../libdaisy//src/per/gpio.h **** namespace daisy
   9:../../libdaisy//src/per/gpio.h **** {
  10:../../libdaisy//src/per/gpio.h **** /** @brief General Purpose I/O control 
  11:../../libdaisy//src/per/gpio.h ****  *  @details peripheral control over a single GPIO
  12:../../libdaisy//src/per/gpio.h ****  *  @ingroup peripheral
  13:../../libdaisy//src/per/gpio.h ****  *   
  14:../../libdaisy//src/per/gpio.h ****  *  Button Input (with internal Pullup resistor)
  15:../../libdaisy//src/per/gpio.h ****  *  @include GPIO_Input.cpp 
  16:../../libdaisy//src/per/gpio.h ****  * 
  17:../../libdaisy//src/per/gpio.h ****  *  Output Example (perfect for blinking an LED)
  18:../../libdaisy//src/per/gpio.h ****  *  @include GPIO_Output.cpp
  19:../../libdaisy//src/per/gpio.h ****  * 
  20:../../libdaisy//src/per/gpio.h **** */
  21:../../libdaisy//src/per/gpio.h **** class GPIO
  22:../../libdaisy//src/per/gpio.h **** {
  23:../../libdaisy//src/per/gpio.h ****   public:
  24:../../libdaisy//src/per/gpio.h ****     /** @brief Mode of operation for the specified GPIO */
  25:../../libdaisy//src/per/gpio.h ****     enum class Mode
  26:../../libdaisy//src/per/gpio.h ****     {
  27:../../libdaisy//src/per/gpio.h ****         INPUT,     /**< Input for reading state of pin */
  28:../../libdaisy//src/per/gpio.h ****         OUTPUT,    /**< Output w/ push-pull configuration */
  29:../../libdaisy//src/per/gpio.h ****         OUTPUT_OD, /**< Output w/ open-drain configuration */
  30:../../libdaisy//src/per/gpio.h ****         ANALOG,    /**< Analog for connection to ADC or DAC peripheral */
  31:../../libdaisy//src/per/gpio.h ****     };
  32:../../libdaisy//src/per/gpio.h **** 
  33:../../libdaisy//src/per/gpio.h ****     /** @brief Configures whether an internal Pull up or Pull down resistor is used. 
  34:../../libdaisy//src/per/gpio.h ****      *  
  35:../../libdaisy//src/per/gpio.h ****      * Internal Pull up/down resistors are typically 40k ohms, and will be between
  36:../../libdaisy//src/per/gpio.h ****      * 30k and 50k
  37:../../libdaisy//src/per/gpio.h ****      * 
  38:../../libdaisy//src/per/gpio.h ****      * When the Pin is configured in Analog mode, the pull up/down resistors are
  39:../../libdaisy//src/per/gpio.h ****      * disabled by hardware. 
  40:../../libdaisy//src/per/gpio.h ****      */
  41:../../libdaisy//src/per/gpio.h ****     enum class Pull
  42:../../libdaisy//src/per/gpio.h ****     {
  43:../../libdaisy//src/per/gpio.h ****         NOPULL,   /**< No pull up resistor */
  44:../../libdaisy//src/per/gpio.h ****         PULLUP,   /**< Internal pull up enabled */
  45:../../libdaisy//src/per/gpio.h ****         PULLDOWN, /**< Internal pull down enabled*/
  46:../../libdaisy//src/per/gpio.h ****     };
  47:../../libdaisy//src/per/gpio.h **** 
  48:../../libdaisy//src/per/gpio.h ****     /** @brief Output speed controls the drive strength, and slew rate of the pin */
  49:../../libdaisy//src/per/gpio.h ****     enum class Speed
  50:../../libdaisy//src/per/gpio.h ****     {
  51:../../libdaisy//src/per/gpio.h ****         LOW,
  52:../../libdaisy//src/per/gpio.h ****         MEDIUM,
  53:../../libdaisy//src/per/gpio.h ****         HIGH,
  54:../../libdaisy//src/per/gpio.h ****         VERY_HIGH,
  55:../../libdaisy//src/per/gpio.h ****     };
  56:../../libdaisy//src/per/gpio.h **** 
  57:../../libdaisy//src/per/gpio.h ****     /** @brief Configuration for a given GPIO */
  58:../../libdaisy//src/per/gpio.h ****     struct Config
  59:../../libdaisy//src/per/gpio.h ****     {
  60:../../libdaisy//src/per/gpio.h ****         Pin   pin;
  61:../../libdaisy//src/per/gpio.h ****         Mode  mode;
  62:../../libdaisy//src/per/gpio.h ****         Pull  pull;
  63:../../libdaisy//src/per/gpio.h ****         Speed speed;
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 490


  64:../../libdaisy//src/per/gpio.h **** 
  65:../../libdaisy//src/per/gpio.h ****         /** Constructor with no arguments will prepare an invalid GPIO set as
  66:../../libdaisy//src/per/gpio.h ****          *  an input, with no pullup. 
  67:../../libdaisy//src/per/gpio.h ****          */
  68:../../libdaisy//src/per/gpio.h ****         Config()
  69:../../libdaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
  70:../../libdaisy//src/per/gpio.h ****         {
  71:../../libdaisy//src/per/gpio.h ****         }
  72:../../libdaisy//src/per/gpio.h ****     };
  73:../../libdaisy//src/per/gpio.h **** 
  74:../../libdaisy//src/per/gpio.h ****     GPIO() {}
 8805              		.loc 34 74 5 is_stmt 1 view .LVU2062
 8806              	.LBB5919:
 8807              	.LBB5920:
 8808              	.LBI5920:
  68:../../libdaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 8809              		.loc 34 68 9 view .LVU2063
 8810              	.LBB5921:
 8811              	.LBB5922:
 8812              	.LBB5923:
 8813              	.LBI5923:
 272:../../libdaisy//src/daisy_core.h **** 
 8814              		.loc 22 272 15 view .LVU2064
 272:../../libdaisy//src/daisy_core.h **** 
 8815              		.loc 22 272 15 is_stmt 0 view .LVU2065
 8816              	.LBE5923:
 8817              	.LBE5922:
 8818              	.LBE5921:
 8819              	.LBE5920:
 8820              	.LBE5919:
 8821              	.LBE5918:
 8822              	.LBB5934:
 8823              	.LBB5935:
 8824              	.LBB5936:
 8825              	.LBB5937:
 8826              	.LBB5938:
 8827              	.LBB5939:
 451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(size_type __bkt_count_hint,
 8828              		.loc 9 451 7 view .LVU2066
 8829 0024 3849     		ldr	r1, .L240+24
 8830              	.LBE5939:
 8831              	.LBE5938:
 8832              	.LBE5937:
 8833              	.LBE5936:
 8834              	.LBE5935:
 8835              	.LBE5934:
 8836              	.LBB6117:
 8837              	.LBB5930:
 8838              		.loc 34 74 12 view .LVU2067
 8839 0026 394B     		ldr	r3, .L240+28
 8840 0028 4FF60B72 		movw	r2, #65291
 8841              	.LBE5930:
 8842              	.LBE6117:
 8843              	.LBB6118:
 8844              	.LBB6113:
 8845              	.LBB5974:
 8846              	.LBB5966:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 491


 8847              	.LBB5962:
 8848              	.LBB5958:
 8849              	.LBB5940:
 8850              	.LBB5941:
 8851              	.LBB5942:
 450:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 8852              		.loc 10 450 48 view .LVU2068
 8853 002c 4FF07E50 		mov	r0, #1065353216
 8854 0030 01F5487C 		add	ip, r1, #800
 8855              	.LBE5942:
 8856              	.LBE5941:
 8857              	.LBE5940:
 8858              	.LBE5958:
 8859              	.LBE5962:
 8860              	.LBE5966:
 8861              	.LBE5974:
 8862              	.LBE6113:
 8863              	.LBE6118:
 8864              	.LBB6119:
 8865              	.LBB5931:
 8866              		.loc 34 74 12 view .LVU2069
 8867 0034 1A60     		str	r2, [r3]
 8868              	.LBE5931:
 8869              	.LBE6119:
 8870              	.LBB6120:
 8871              	.LBB6114:
 8872              	.LBB5975:
 8873              	.LBB5967:
 8874              	.LBB5963:
 8875              	.LBB5959:
 451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(size_type __bkt_count_hint,
 8876              		.loc 9 451 7 view .LVU2070
 8877 0036 01F11C02 		add	r2, r1, #28
 8878              	.LBE5959:
 8879              	.LBE5963:
 8880              	.LBE5967:
 8881              	.LBE5975:
 8882              	.LBE6114:
 8883              	.LBE6120:
 8884              	.LBB6121:
 8885              	.LBB5932:
 8886              	.LBB5928:
 8887              	.LBB5926:
 8888              	.LBB5924:
  69:../../libdaisy//src/per/gpio.h ****         {
 8889              		.loc 34 69 73 view .LVU2071
 8890 003a DC60     		str	r4, [r3, #12]
 8891              	.LVL415:
  69:../../libdaisy//src/per/gpio.h ****         {
 8892              		.loc 34 69 73 view .LVU2072
 8893              	.LBE5924:
 8894              	.LBE5926:
 8895              	.LBE5928:
 8896              	.LBE5932:
 8897              	.LBE6121:
 8898              	.LBB6122:
 8899              	.LBI5934:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 492


 122:src/parameter_controller.h **** 
 8900              		.loc 15 122 7 is_stmt 1 view .LVU2073
 8901              	.LBB6115:
 8902              	.LBB5976:
 8903              	.LBI5936:
  97:src/parameter_controller.h ****     ~ParameterMap() {};
 8904              		.loc 15 97 5 view .LVU2074
 8905              	.LBB5968:
 8906              	.LBI5937:
 141:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 8907              		.loc 24 141 7 view .LVU2075
 8908              	.LBB5964:
 8909              	.LBI5938:
 451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(size_type __bkt_count_hint,
 8910              		.loc 9 451 7 view .LVU2076
 8911              	.LBB5960:
 8912              	.LBB5947:
 8913              	.LBI5947:
1982:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Hashtable_alloc(const _Hashtable_alloc&) = default;
 8914              		.loc 10 1982 7 view .LVU2077
 8915              	.LBB5948:
 8916              	.LBI5948:
1112:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 8917              		.loc 10 1112 7 view .LVU2078
 8918              	.LBB5949:
 8919              	.LBI5949:
 144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 8920              		.loc 11 144 7 view .LVU2079
 8921              	.LBB5950:
 8922              	.LBI5950:
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8923              		.loc 12 79 7 view .LVU2080
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 8924              		.loc 12 79 7 is_stmt 0 view .LVU2081
 8925              	.LBE5950:
 8926              	.LBE5949:
 8927              	.LBE5948:
 8928              	.LBE5947:
 451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(size_type __bkt_count_hint,
 8929              		.loc 9 451 7 view .LVU2082
 8930 003c 4A60     		str	r2, [r1, #4]
 8931 003e 0122     		movs	r2, #1
 8932              	.LBB5951:
 8933              	.LBB5945:
 8934              	.LBB5943:
 450:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 8935              		.loc 10 450 48 view .LVU2083
 8936 0040 4861     		str	r0, [r1, #20]	@ float
 8937              	.LBE5943:
 8938              	.LBE5945:
 8939              	.LBE5951:
 451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(size_type __bkt_count_hint,
 8940              		.loc 9 451 7 view .LVU2084
 8941 0042 8A60     		str	r2, [r1, #8]
 8942              	.LVL416:
 8943              	.LBB5952:
 8944              	.LBI5952:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 493


 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 8945              		.loc 10 218 5 is_stmt 1 view .LVU2085
 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 8946              		.loc 10 218 5 is_stmt 0 view .LVU2086
 8947              	.LBE5952:
 8948              	.LBB5955:
 8949              	.LBI5940:
 449:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : _M_max_load_factor(__z), _M_next_resize(0) { }
 8950              		.loc 10 449 5 is_stmt 1 view .LVU2087
 449:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : _M_max_load_factor(__z), _M_next_resize(0) { }
 8951              		.loc 10 449 5 is_stmt 0 view .LVU2088
 8952              	.LBE5955:
 8953              	.LBE5960:
 8954              	.LBE5964:
 8955              	.LBE5968:
 8956              	.LBE5976:
 122:src/parameter_controller.h **** 
 8957              		.loc 15 122 7 view .LVU2089
 8958 0044 0A46     		mov	r2, r1
 8959 0046 3248     		ldr	r0, .L240+32
 8960              	.LBB5977:
 8961              	.LBB5969:
 8962              	.LBB5965:
 8963              	.LBB5961:
 8964              	.LBB5956:
 8965              	.LBB5953:
 8966              	.LBB5954:
 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 8967              		.loc 10 218 41 view .LVU2090
 8968 0048 CC60     		str	r4, [r1, #12]
 8969              	.LBE5954:
 8970              	.LBE5953:
 8971              	.LBE5956:
 451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(size_type __bkt_count_hint,
 8972              		.loc 9 451 7 view .LVU2091
 8973 004a 0C61     		str	r4, [r1, #16]
 8974              	.LBB5957:
 8975              	.LBB5946:
 8976              	.LBB5944:
 450:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 8977              		.loc 10 450 48 view .LVU2092
 8978 004c 8C61     		str	r4, [r1, #24]
 8979              	.LBE5944:
 8980              	.LBE5946:
 8981              	.LBE5957:
 8982              	.LBE5961:
 8983              	.LBE5965:
 8984              	.LBE5969:
 8985              	.LBE5977:
 122:src/parameter_controller.h **** 
 8986              		.loc 15 122 7 view .LVU2093
 8987 004e 0860     		str	r0, [r1]
 8988              	.LBE6115:
 8989              	.LBE6122:
 8990              	.LBB6123:
 8991              	.LBB5933:
 8992              	.LBB5929:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 494


 8993              	.LBB5927:
 8994              	.LBB5925:
  69:../../libdaisy//src/per/gpio.h ****         {
 8995              		.loc 34 69 73 view .LVU2094
 8996 0050 C3E90144 		strd	r4, r4, [r3, #4]
 8997 0054 0B46     		mov	r3, r1
 8998              	.LBE5925:
 8999              	.LBE5927:
 9000              	.LBE5929:
 9001              	.LBE5933:
 9002              	.LBE6123:
 9003              	.LBB6124:
 9004              	.LBB6116:
 9005              	.LBB5978:
 9006              	.LBB5970:
 9007              	.LBB5971:
 9008              	.LBB5972:
 9009              	.LBB5973:
 295:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 9010              		.loc 10 295 19 view .LVU2095
 9011 0056 C1E90744 		strd	r4, r4, [r1, #28]
 9012              	.LVL417:
 295:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 9013              		.loc 10 295 19 view .LVU2096
 9014              	.LBE5973:
 9015              	.LBE5972:
 9016              	.LBE5971:
 9017              	.LBE5970:
 9018              	.LBE5978:
 122:src/parameter_controller.h **** 
 9019              		.loc 15 122 7 is_stmt 1 view .LVU2097
 9020              	.L235:
 9021              	.LBB5979:
 9022              	.LBI5979:
  30:src/parameter_controller.h ****     std::string label;
 9023              		.loc 15 30 8 view .LVU2098
 9024              	.LBB5980:
 9025              	.LBI5980:
 431:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(is_nothrow_default_constructible<_Alloc>::value)
 9026              		.loc 16 431 7 view .LVU2099
 9027              	.LBB5981:
 9028              	.LBI5981:
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9029              		.loc 16 190 7 view .LVU2100
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9030              		.loc 16 190 7 is_stmt 0 view .LVU2101
 9031              	.LBE5981:
 9032              	.LBB5982:
 9033              	.LBI5982:
 144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 9034              		.loc 11 144 7 is_stmt 1 view .LVU2102
 9035              	.LBB5983:
 9036              	.LBI5983:
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9037              		.loc 12 79 7 view .LVU2103
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9038              		.loc 12 79 7 is_stmt 0 view .LVU2104
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 495


 9039              	.LBE5983:
 9040              	.LBE5982:
 9041              	.LBB5984:
 9042              	.LBI5984:
 159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 9043              		.loc 16 159 2 is_stmt 1 view .LVU2105
 9044              	.LBB5985:
 9045              	.LBB5986:
 9046              	.LBI5986:
 9047              		.loc 19 101 5 view .LVU2106
 9048              		.loc 19 101 5 is_stmt 0 view .LVU2107
 9049              	.LBE5986:
 9050              	.LBB5987:
 9051              	.LBI5987:
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 9052              		.loc 11 147 7 is_stmt 1 view .LVU2108
 9053              	.LBB5988:
 9054              	.LBI5988:
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9055              		.loc 12 82 7 view .LVU2109
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9056              		.loc 12 82 7 is_stmt 0 view .LVU2110
 9057              	.LBE5988:
 9058              	.LBE5987:
 9059              	.LBE5985:
 9060              	.LBE5984:
 9061              	.LBB5990:
 9062              	.LBB5991:
 9063              	.LBB5992:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9064              		.loc 16 183 26 view .LVU2111
 9065 005a 0021     		movs	r1, #0
 9066              	.LBE5992:
 9067              	.LBE5991:
 9068              	.LBE5990:
 9069              	.LBB5999:
 9070              	.LBB5989:
 160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 9071              		.loc 16 160 46 view .LVU2112
 9072 005c 02F12C05 		add	r5, r2, #44
 9073              	.LVL418:
 160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 9074              		.loc 16 160 46 view .LVU2113
 9075              	.LBE5989:
 9076              	.LBE5999:
 9077              	.LBE5980:
 9078              	.LBB6002:
 9079              	.LBB6003:
 9080              	.LBB6004:
 9081 0060 02F14404 		add	r4, r2, #68
 9082              	.LBE6004:
 9083              	.LBE6003:
 9084              	.LBE6002:
 9085              	.LBB6021:
 9086              	.LBB6022:
 9087              	.LBB6023:
 9088 0064 02F15C00 		add	r0, r2, #92
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 496


 9089              	.LBE6023:
 9090              	.LBE6022:
 9091              	.LBE6021:
 9092              	.LBB6040:
 9093              	.LBB6000:
 9094              	.LBB5994:
 9095              	.LBB5995:
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 9096              		.loc 17 322 14 view .LVU2114
 9097 0068 82F82C10 		strb	r1, [r2, #44]
 9098              	.LBE5995:
 9099              	.LBE5994:
 9100              	.LBE6000:
 9101              	.LBE6040:
 9102              	.LBB6041:
 9103              	.LBB6009:
 9104              	.LBB6010:
 9105              	.LBB6011:
 9106 006c 82F84410 		strb	r1, [r2, #68]
 9107              	.LBE6011:
 9108              	.LBE6010:
 9109              	.LBE6009:
 9110              	.LBE6041:
 9111              	.LBB6042:
 9112              	.LBB6028:
 9113              	.LBB6029:
 9114              	.LBB6030:
 9115 0070 82F85C10 		strb	r1, [r2, #92]
 9116              	.LBE6030:
 9117              	.LBE6029:
 9118              	.LBE6028:
 9119              	.LBE6042:
 9120              	.LBB6043:
 9121              	.LBB6001:
 9122              	.LBB5997:
 9123              	.LBB5993:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9124              		.loc 16 183 26 view .LVU2115
 9125 0074 C2E90951 		strd	r5, r1, [r2, #36]
 9126              	.LVL419:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9127              		.loc 16 183 26 view .LVU2116
 9128              	.LBE5993:
 9129              	.LBE5997:
 9130              	.LBB5998:
 9131              	.LBI5994:
 321:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 9132              		.loc 17 321 7 is_stmt 1 view .LVU2117
 9133              	.LBB5996:
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 9134              		.loc 17 322 9 view .LVU2118
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 9135              		.loc 17 322 9 is_stmt 0 view .LVU2119
 9136              	.LBE5996:
 9137              	.LBE5998:
 9138              	.LBE6001:
 9139              	.LBE6043:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 497


 9140              	.LBB6044:
 9141              	.LBI6002:
 431:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(is_nothrow_default_constructible<_Alloc>::value)
 9142              		.loc 16 431 7 is_stmt 1 view .LVU2120
 9143              	.LBB6016:
 9144              	.LBI6016:
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9145              		.loc 16 190 7 view .LVU2121
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9146              		.loc 16 190 7 is_stmt 0 view .LVU2122
 9147              	.LBE6016:
 9148              	.LBB6017:
 9149              	.LBI6017:
 144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 9150              		.loc 11 144 7 is_stmt 1 view .LVU2123
 9151              	.LBB6018:
 9152              	.LBI6018:
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9153              		.loc 12 79 7 view .LVU2124
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9154              		.loc 12 79 7 is_stmt 0 view .LVU2125
 9155              	.LBE6018:
 9156              	.LBE6017:
 9157              	.LBB6019:
 9158              	.LBI6003:
 159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 9159              		.loc 16 159 2 is_stmt 1 view .LVU2126
 9160              	.LBB6008:
 9161              	.LBB6005:
 9162              	.LBI6005:
 9163              		.loc 19 101 5 view .LVU2127
 9164              		.loc 19 101 5 is_stmt 0 view .LVU2128
 9165              	.LBE6005:
 9166              	.LBB6006:
 9167              	.LBI6006:
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 9168              		.loc 11 147 7 is_stmt 1 view .LVU2129
 9169              	.LBB6007:
 9170              	.LBI6007:
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9171              		.loc 12 82 7 view .LVU2130
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9172              		.loc 12 82 7 is_stmt 0 view .LVU2131
 9173              	.LBE6007:
 9174              	.LBE6006:
 9175              	.LBE6008:
 9176              	.LBE6019:
 9177              	.LBB6020:
 9178              	.LBB6013:
 9179              	.LBB6014:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9180              		.loc 16 183 26 view .LVU2132
 9181 0078 C2E90F41 		strd	r4, r1, [r2, #60]
 9182              	.LVL420:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9183              		.loc 16 183 26 view .LVU2133
 9184              	.LBE6014:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 498


 9185              	.LBE6013:
 9186              	.LBB6015:
 9187              	.LBI6010:
 321:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 9188              		.loc 17 321 7 is_stmt 1 view .LVU2134
 9189              	.LBB6012:
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 9190              		.loc 17 322 9 view .LVU2135
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 9191              		.loc 17 322 9 is_stmt 0 view .LVU2136
 9192              	.LBE6012:
 9193              	.LBE6015:
 9194              	.LBE6020:
 9195              	.LBE6044:
 9196              	.LBB6045:
 9197              	.LBI6021:
 431:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(is_nothrow_default_constructible<_Alloc>::value)
 9198              		.loc 16 431 7 is_stmt 1 view .LVU2137
 9199              	.LBB6035:
 9200              	.LBI6035:
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9201              		.loc 16 190 7 view .LVU2138
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9202              		.loc 16 190 7 is_stmt 0 view .LVU2139
 9203              	.LBE6035:
 9204              	.LBB6036:
 9205              	.LBI6036:
 144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 9206              		.loc 11 144 7 is_stmt 1 view .LVU2140
 9207              	.LBB6037:
 9208              	.LBI6037:
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9209              		.loc 12 79 7 view .LVU2141
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9210              		.loc 12 79 7 is_stmt 0 view .LVU2142
 9211              	.LBE6037:
 9212              	.LBE6036:
 9213              	.LBB6038:
 9214              	.LBI6022:
 159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 9215              		.loc 16 159 2 is_stmt 1 view .LVU2143
 9216              	.LBB6027:
 9217              	.LBB6024:
 9218              	.LBI6024:
 9219              		.loc 19 101 5 view .LVU2144
 9220              		.loc 19 101 5 is_stmt 0 view .LVU2145
 9221              	.LBE6024:
 9222              	.LBB6025:
 9223              	.LBI6025:
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 9224              		.loc 11 147 7 is_stmt 1 view .LVU2146
 9225              	.LBB6026:
 9226              	.LBI6026:
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9227              		.loc 12 82 7 view .LVU2147
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9228              		.loc 12 82 7 is_stmt 0 view .LVU2148
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 499


 9229              	.LBE6026:
 9230              	.LBE6025:
 9231              	.LBE6027:
 9232              	.LBE6038:
 9233              	.LBB6039:
 9234              	.LBB6032:
 9235              	.LBB6033:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9236              		.loc 16 183 26 view .LVU2149
 9237 007c C2E91501 		strd	r0, r1, [r2, #84]
 9238              	.LVL421:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9239              		.loc 16 183 26 view .LVU2150
 9240              	.LBE6033:
 9241              	.LBE6032:
 9242              	.LBB6034:
 9243              	.LBI6029:
 321:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 9244              		.loc 17 321 7 is_stmt 1 view .LVU2151
 9245              	.LBB6031:
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 9246              		.loc 17 322 9 view .LVU2152
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 9247              		.loc 17 322 9 is_stmt 0 view .LVU2153
 9248              	.LBE6031:
 9249              	.LBE6034:
 9250              	.LBE6039:
 9251              	.LBE6045:
 9252              	.LBE5979:
 122:src/parameter_controller.h **** 
 9253              		.loc 15 122 7 is_stmt 1 view .LVU2154
 122:src/parameter_controller.h **** 
 9254              		.loc 15 122 7 view .LVU2155
 9255 0080 5032     		adds	r2, r2, #80
 9256              	.LVL422:
 122:src/parameter_controller.h **** 
 9257              		.loc 15 122 7 is_stmt 0 view .LVU2156
 9258 0082 6245     		cmp	r2, ip
 9259 0084 E9D1     		bne	.L235
 9260 0086 234D     		ldr	r5, .L240+36
 9261              	.LVL423:
 9262              	.L236:
 9263              	.LBB6046:
 9264              	.LBI6046:
  37:src/parameter_controller.h **** 	std::string label;
 9265              		.loc 15 37 8 is_stmt 1 view .LVU2157
 9266              	.LBB6047:
 9267              	.LBI6047:
 431:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(is_nothrow_default_constructible<_Alloc>::value)
 9268              		.loc 16 431 7 view .LVU2158
 9269              	.LBB6048:
 9270              	.LBI6048:
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9271              		.loc 16 190 7 view .LVU2159
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9272              		.loc 16 190 7 is_stmt 0 view .LVU2160
 9273              	.LBE6048:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 500


 9274              	.LBB6049:
 9275              	.LBI6049:
 144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 9276              		.loc 11 144 7 is_stmt 1 view .LVU2161
 9277              	.LBB6050:
 9278              	.LBI6050:
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9279              		.loc 12 79 7 view .LVU2162
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9280              		.loc 12 79 7 is_stmt 0 view .LVU2163
 9281              	.LBE6050:
 9282              	.LBE6049:
 9283              	.LBB6051:
 9284              	.LBI6051:
 159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 9285              		.loc 16 159 2 is_stmt 1 view .LVU2164
 9286              	.LBB6052:
 9287              	.LBB6053:
 9288              	.LBI6053:
 9289              		.loc 19 101 5 view .LVU2165
 9290              		.loc 19 101 5 is_stmt 0 view .LVU2166
 9291              	.LBE6053:
 9292              	.LBB6054:
 9293              	.LBI6054:
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 9294              		.loc 11 147 7 is_stmt 1 view .LVU2167
 9295              	.LBB6055:
 9296              	.LBI6055:
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9297              		.loc 12 82 7 view .LVU2168
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9298              		.loc 12 82 7 is_stmt 0 view .LVU2169
 9299              	.LBE6055:
 9300              	.LBE6054:
 9301              	.LBE6052:
 9302              	.LBE6051:
 9303              	.LBB6057:
 9304              	.LBB6058:
 9305              	.LBB6059:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9306              		.loc 16 183 26 view .LVU2170
 9307 0088 0024     		movs	r4, #0
 9308              	.LBE6059:
 9309              	.LBE6058:
 9310              	.LBE6057:
 9311              	.LBB6066:
 9312              	.LBB6056:
 160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 9313              		.loc 16 160 46 view .LVU2171
 9314 008a 03F55370 		add	r0, r3, #844
 9315              	.LVL424:
 160:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** #endif
 9316              		.loc 16 160 46 view .LVU2172
 9317              	.LBE6056:
 9318              	.LBE6066:
 9319              	.LBE6047:
 9320              	.LBB6069:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 501


 9321              	.LBB6070:
 9322              	.LBB6071:
 9323 008e 03F55971 		add	r1, r3, #868
 9324              	.LBE6071:
 9325              	.LBE6070:
 9326              	.LBE6069:
 9327              	.LBB6088:
 9328              	.LBB6089:
 9329              	.LBB6090:
 9330 0092 03F55F72 		add	r2, r3, #892
 9331              	.LBE6090:
 9332              	.LBE6089:
 9333              	.LBE6088:
 9334              	.LBB6107:
 9335              	.LBB6067:
 9336              	.LBB6061:
 9337              	.LBB6062:
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 9338              		.loc 17 322 14 view .LVU2173
 9339 0096 83F84C43 		strb	r4, [r3, #844]
 9340              	.LBE6062:
 9341              	.LBE6061:
 9342              	.LBE6067:
 9343              	.LBE6107:
 9344              	.LBB6108:
 9345              	.LBB6076:
 9346              	.LBB6077:
 9347              	.LBB6078:
 9348 009a 83F86443 		strb	r4, [r3, #868]
 9349              	.LBE6078:
 9350              	.LBE6077:
 9351              	.LBE6076:
 9352              	.LBE6108:
 9353              	.LBB6109:
 9354              	.LBB6095:
 9355              	.LBB6096:
 9356              	.LBB6097:
 9357 009e 83F87C43 		strb	r4, [r3, #892]
 9358              	.LBE6097:
 9359              	.LBE6096:
 9360              	.LBE6095:
 9361              	.LBE6109:
 9362              	.LBB6110:
 9363              	.LBB6068:
 9364              	.LBB6064:
 9365              	.LBB6060:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9366              		.loc 16 183 26 view .LVU2174
 9367 00a2 C3E9D104 		strd	r0, r4, [r3, #836]
 9368              	.LVL425:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9369              		.loc 16 183 26 view .LVU2175
 9370              	.LBE6060:
 9371              	.LBE6064:
 9372              	.LBB6065:
 9373              	.LBI6061:
 321:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 502


 9374              		.loc 17 321 7 is_stmt 1 view .LVU2176
 9375              	.LBB6063:
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 9376              		.loc 17 322 9 view .LVU2177
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 9377              		.loc 17 322 9 is_stmt 0 view .LVU2178
 9378              	.LBE6063:
 9379              	.LBE6065:
 9380              	.LBE6068:
 9381              	.LBE6110:
 9382              	.LBB6111:
 9383              	.LBI6069:
 431:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(is_nothrow_default_constructible<_Alloc>::value)
 9384              		.loc 16 431 7 is_stmt 1 view .LVU2179
 9385              	.LBB6083:
 9386              	.LBI6083:
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9387              		.loc 16 190 7 view .LVU2180
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9388              		.loc 16 190 7 is_stmt 0 view .LVU2181
 9389              	.LBE6083:
 9390              	.LBB6084:
 9391              	.LBI6084:
 144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 9392              		.loc 11 144 7 is_stmt 1 view .LVU2182
 9393              	.LBB6085:
 9394              	.LBI6085:
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9395              		.loc 12 79 7 view .LVU2183
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9396              		.loc 12 79 7 is_stmt 0 view .LVU2184
 9397              	.LBE6085:
 9398              	.LBE6084:
 9399              	.LBB6086:
 9400              	.LBI6070:
 159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 9401              		.loc 16 159 2 is_stmt 1 view .LVU2185
 9402              	.LBB6075:
 9403              	.LBB6072:
 9404              	.LBI6072:
 9405              		.loc 19 101 5 view .LVU2186
 9406              		.loc 19 101 5 is_stmt 0 view .LVU2187
 9407              	.LBE6072:
 9408              	.LBB6073:
 9409              	.LBI6073:
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 9410              		.loc 11 147 7 is_stmt 1 view .LVU2188
 9411              	.LBB6074:
 9412              	.LBI6074:
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9413              		.loc 12 82 7 view .LVU2189
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9414              		.loc 12 82 7 is_stmt 0 view .LVU2190
 9415              	.LBE6074:
 9416              	.LBE6073:
 9417              	.LBE6075:
 9418              	.LBE6086:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 503


 9419              	.LBB6087:
 9420              	.LBB6080:
 9421              	.LBB6081:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9422              		.loc 16 183 26 view .LVU2191
 9423 00a6 C3E9D714 		strd	r1, r4, [r3, #860]
 9424              	.LVL426:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9425              		.loc 16 183 26 view .LVU2192
 9426              	.LBE6081:
 9427              	.LBE6080:
 9428              	.LBB6082:
 9429              	.LBI6077:
 321:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 9430              		.loc 17 321 7 is_stmt 1 view .LVU2193
 9431              	.LBB6079:
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 9432              		.loc 17 322 9 view .LVU2194
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 9433              		.loc 17 322 9 is_stmt 0 view .LVU2195
 9434              	.LBE6079:
 9435              	.LBE6082:
 9436              	.LBE6087:
 9437              	.LBE6111:
 9438              	.LBB6112:
 9439              	.LBI6088:
 431:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(is_nothrow_default_constructible<_Alloc>::value)
 9440              		.loc 16 431 7 is_stmt 1 view .LVU2196
 9441              	.LBB6102:
 9442              	.LBI6102:
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9443              		.loc 16 190 7 view .LVU2197
 190:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h ****       {
 9444              		.loc 16 190 7 is_stmt 0 view .LVU2198
 9445              	.LBE6102:
 9446              	.LBB6103:
 9447              	.LBI6103:
 144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 9448              		.loc 11 144 7 is_stmt 1 view .LVU2199
 9449              	.LBB6104:
 9450              	.LBI6104:
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9451              		.loc 12 79 7 view .LVU2200
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9452              		.loc 12 79 7 is_stmt 0 view .LVU2201
 9453              	.LBE6104:
 9454              	.LBE6103:
 9455              	.LBB6105:
 9456              	.LBI6089:
 159:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 9457              		.loc 16 159 2 is_stmt 1 view .LVU2202
 9458              	.LBB6094:
 9459              	.LBB6091:
 9460              	.LBI6091:
 9461              		.loc 19 101 5 view .LVU2203
 9462              		.loc 19 101 5 is_stmt 0 view .LVU2204
 9463              	.LBE6091:
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 504


 9464              	.LBB6092:
 9465              	.LBI6092:
 147:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h ****       : __allocator_base<_Tp>(__a) { }
 9466              		.loc 11 147 7 is_stmt 1 view .LVU2205
 9467              	.LBB6093:
 9468              	.LBI6093:
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9469              		.loc 12 82 7 view .LVU2206
  82:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9470              		.loc 12 82 7 is_stmt 0 view .LVU2207
 9471              	.LBE6093:
 9472              	.LBE6092:
 9473              	.LBE6094:
 9474              	.LBE6105:
 9475              	.LBB6106:
 9476              	.LBB6099:
 9477              	.LBB6100:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9478              		.loc 16 183 26 view .LVU2208
 9479 00aa C3E9DD24 		strd	r2, r4, [r3, #884]
 9480              	.LVL427:
 183:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\basic_string.h **** 
 9481              		.loc 16 183 26 view .LVU2209
 9482              	.LBE6100:
 9483              	.LBE6099:
 9484              	.LBB6101:
 9485              	.LBI6096:
 321:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h ****       { __c1 = __c2; }
 9486              		.loc 17 321 7 is_stmt 1 view .LVU2210
 9487              	.LBB6098:
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 9488              		.loc 17 322 9 view .LVU2211
 322:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\char_traits.h **** 
 9489              		.loc 17 322 9 is_stmt 0 view .LVU2212
 9490              	.LBE6098:
 9491              	.LBE6101:
 9492              	.LBE6106:
 9493              	.LBE6112:
 9494              	.LBE6046:
 122:src/parameter_controller.h **** 
 9495              		.loc 15 122 7 is_stmt 1 view .LVU2213
 122:src/parameter_controller.h **** 
 9496              		.loc 15 122 7 view .LVU2214
 9497 00ae 5833     		adds	r3, r3, #88
 9498              	.LVL428:
 122:src/parameter_controller.h **** 
 9499              		.loc 15 122 7 is_stmt 0 view .LVU2215
 9500 00b0 AB42     		cmp	r3, r5
 9501 00b2 E9D1     		bne	.L236
 9502              	.LVL429:
 122:src/parameter_controller.h **** 
 9503              		.loc 15 122 7 view .LVU2216
 9504              	.LBE6116:
 9505              	.LBE6124:
  99:src/main.cpp  **** ParameterMap parameterMap;
 9506              		.loc 8 99 17 view .LVU2217
 9507 00b4 0F4A     		ldr	r2, .L240+4
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 505


 9508              	.LVL430:
  99:src/main.cpp  **** ParameterMap parameterMap;
 9509              		.loc 8 99 17 view .LVU2218
 9510 00b6 1849     		ldr	r1, .L240+40
 9511              	.LVL431:
  99:src/main.cpp  **** ParameterMap parameterMap;
 9512              		.loc 8 99 17 view .LVU2219
 9513 00b8 1348     		ldr	r0, .L240+24
 9514              	.LVL432:
  99:src/main.cpp  **** ParameterMap parameterMap;
 9515              		.loc 8 99 17 view .LVU2220
 9516 00ba FFF7FEFF 		bl	__aeabi_atexit
 9517              	.LVL433:
 9518              	.LBB6125:
 9519              	.LBI6125:
  97:src/parameter_controller.h ****     ~ParameterMap() {};
 9520              		.loc 15 97 5 is_stmt 1 view .LVU2221
 9521              	.LBB6126:
 9522              	.LBI6126:
 141:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\unordered_map.h **** 
 9523              		.loc 24 141 7 view .LVU2222
 9524              	.LBB6127:
 9525              	.LBI6127:
 451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(size_type __bkt_count_hint,
 9526              		.loc 9 451 7 view .LVU2223
 9527              	.LBB6128:
 9528              	.LBB6129:
 9529              	.LBI6129:
1982:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       _Hashtable_alloc(const _Hashtable_alloc&) = default;
 9530              		.loc 10 1982 7 view .LVU2224
 9531              	.LBB6130:
 9532              	.LBI6130:
1112:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 9533              		.loc 10 1112 7 view .LVU2225
 9534              	.LBB6131:
 9535              	.LBI6131:
 144:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\allocator.h **** 
 9536              		.loc 11 144 7 view .LVU2226
 9537              	.LBB6132:
 9538              	.LBI6132:
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9539              		.loc 12 79 7 view .LVU2227
  79:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\ext\new_allocator.h **** 
 9540              		.loc 12 79 7 is_stmt 0 view .LVU2228
 9541              	.LBE6132:
 9542              	.LBE6131:
 9543              	.LBE6130:
 9544              	.LBE6129:
 451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(size_type __bkt_count_hint,
 9545              		.loc 9 451 7 view .LVU2229
 9546 00be 1748     		ldr	r0, .L240+44
 9547              	.LBB6133:
 9548              	.LBB6134:
 9549              	.LBB6135:
 450:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 9550              		.loc 10 450 48 view .LVU2230
 9551 00c0 4FF07E53 		mov	r3, #1065353216
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 506


 9552              	.LBE6135:
 9553              	.LBE6134:
 9554              	.LBE6133:
 451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(size_type __bkt_count_hint,
 9555              		.loc 9 451 7 view .LVU2231
 9556 00c4 0122     		movs	r2, #1
 9557 00c6 00F11801 		add	r1, r0, #24
 9558 00ca C460     		str	r4, [r0, #12]
 9559              	.LBB6138:
 9560              	.LBB6137:
 9561              	.LBB6136:
 450:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 9562              		.loc 10 450 48 view .LVU2232
 9563 00cc 0361     		str	r3, [r0, #16]	@ float
 9564              	.LBE6136:
 9565              	.LBE6137:
 9566              	.LBE6138:
 451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(size_type __bkt_count_hint,
 9567              		.loc 9 451 7 view .LVU2233
 9568 00ce 0160     		str	r1, [r0]
 9569              	.LBE6128:
 9570              	.LBE6127:
 9571              	.LBE6126:
 9572              	.LBB6143:
 9573              	.LBB6144:
 9574              	.LBB6145:
 9575              	.LBB6146:
 295:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 9576              		.loc 10 295 19 view .LVU2234
 9577 00d0 C461     		str	r4, [r0, #28]
 9578              	.LBE6146:
 9579              	.LBE6145:
 9580              	.LBE6144:
 9581              	.LBE6143:
 9582              	.LBE6125:
 100:src/main.cpp  **** 
 9583              		.loc 8 100 14 view .LVU2235
 9584 00d2 1349     		ldr	r1, .L240+48
 9585              	.LBB6150:
 9586              	.LBB6148:
 9587              	.LBB6142:
 9588              	.LBB6141:
 451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(size_type __bkt_count_hint,
 9589              		.loc 9 451 7 view .LVU2236
 9590 00d4 C0E90124 		strd	r2, r4, [r0, #4]
 9591              	.LVL434:
 9592              	.LBB6139:
 9593              	.LBI6139:
 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 9594              		.loc 10 218 5 is_stmt 1 view .LVU2237
 218:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h **** 
 9595              		.loc 10 218 5 is_stmt 0 view .LVU2238
 9596              	.LBE6139:
 9597              	.LBB6140:
 9598              	.LBI6133:
 449:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****     : _M_max_load_factor(__z), _M_next_resize(0) { }
 9599              		.loc 10 449 5 is_stmt 1 view .LVU2239
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 507


 9600              	.LBE6140:
 451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(size_type __bkt_count_hint,
 9601              		.loc 9 451 7 is_stmt 0 view .LVU2240
 9602 00d8 C0E90544 		strd	r4, r4, [r0, #20]
 9603              	.LVL435:
 451:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable.h ****       _Hashtable(size_type __bkt_count_hint,
 9604              		.loc 9 451 7 view .LVU2241
 9605              	.LBE6141:
 9606              	.LBE6142:
 9607              	.LBE6148:
 9608              	.LBB6149:
 9609              	.LBI6143:
 336:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : __base_type(0) { }
 9610              		.loc 10 336 7 is_stmt 1 view .LVU2242
 9611              	.LBB6147:
 9612              	.LBI6144:
 294:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : _M_cur(__p) { }
 9613              		.loc 10 294 7 view .LVU2243
 294:c:\users\amelia\desktop\capstone\daisy\daisytoolchain-0.3.1\windows\arm-none-eabi\include\c++\10.2.1\bits\hashtable_policy.h ****       : _M_cur(__p) { }
 9614              		.loc 10 294 7 is_stmt 0 view .LVU2244
 9615              	.LBE6147:
 9616              	.LBE6149:
 9617              	.LBE6150:
 100:src/main.cpp  **** 
 9618              		.loc 8 100 14 view .LVU2245
 9619 00dc 054A     		ldr	r2, .L240+4
 9620 00de FFF7FEFF 		bl	__aeabi_atexit
 9621              	.LVL436:
 9622              	.LBB6151:
 9623              	.LBI6151:
  85:../../DaisySP//Source/Effects/phaser.h ****     ~Phaser() {}
 9624              		.loc 2 85 5 is_stmt 1 view .LVU2246
 9625              	.LBE6151:
 9626              	.LBE6152:
 9627              	.LBE6155:
  85:../../DaisySP//Source/Effects/phaser.h ****     ~Phaser() {}
 9628              		.loc 2 85 14 view .LVU2247
 9629              	.LBB6156:
 9630              	.LBB6153:
 110:src/main.cpp  **** 
 9631              		.loc 8 110 17 is_stmt 0 view .LVU2248
 9632 00e2 044A     		ldr	r2, .L240+4
 9633 00e4 0F49     		ldr	r1, .L240+52
 9634 00e6 1048     		ldr	r0, .L240+56
 9635              	.LBE6153:
 9636              	.LBE6156:
 9637              		.loc 8 199 1 view .LVU2249
 9638 00e8 BDE83840 		pop	{r3, r4, r5, lr}
 9639              		.cfi_restore 14
 9640              		.cfi_restore 5
 9641              		.cfi_restore 4
 9642              		.cfi_restore 3
 9643              		.cfi_def_cfa_offset 0
 9644              	.LBB6157:
 9645              	.LBB6154:
 110:src/main.cpp  **** 
 9646              		.loc 8 110 17 view .LVU2250
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 508


 9647 00ec FFF7FEBF 		b	__aeabi_atexit
 9648              	.LVL437:
 9649              	.L241:
 9650              		.align	2
 9651              	.L240:
 9652 00f0 00000000 		.word	.LANCHOR0
 9653 00f4 00000000 		.word	__dso_handle
 9654 00f8 00000000 		.word	_ZN5daisy9DaisySeedD1Ev
 9655 00fc 00000000 		.word	.LANCHOR1
 9656 0100 00000000 		.word	.LANCHOR3
 9657 0104 00000000 		.word	_ZN5daisy11TimerHandleD1Ev
 9658 0108 00000000 		.word	.LANCHOR5
 9659 010c 00000000 		.word	.LANCHOR4
 9660 0110 08000000 		.word	_ZTV15ParameterConfig+8
 9661 0114 70030000 		.word	.LANCHOR5+880
 9662 0118 00000000 		.word	_ZN15ParameterConfigD1Ev
 9663 011c 00000000 		.word	.LANCHOR2
 9664 0120 00000000 		.word	_ZN12ParameterMapD1Ev
 9665 0124 00000000 		.word	_ZN7daisysp6PhaserD1Ev
 9666 0128 00000000 		.word	phaser
 9667              	.LBE6154:
 9668              	.LBE6157:
 9669              		.cfi_endproc
 9670              	.LFE6578:
 9672              		.section	.init_array,"aw",%init_array
 9673              		.align	2
 9674 0000 00000000 		.word	_GLOBAL__sub_I_hw(target1)
 9675              		.weak	_ZTS12ParameterMap
 9676              		.section	.rodata._ZTS12ParameterMap,"aG",%progbits,_ZTS12ParameterMap,comdat
 9677              		.align	2
 9680              	_ZTS12ParameterMap:
 9681 0000 31325061 		.ascii	"12ParameterMap\000"
 9681      72616D65 
 9681      7465724D 
 9681      617000
 9682              		.weak	_ZTI12ParameterMap
 9683              		.section	.rodata._ZTI12ParameterMap,"aG",%progbits,_ZTI12ParameterMap,comdat
 9684              		.align	2
 9687              	_ZTI12ParameterMap:
 9688 0000 08000000 		.word	_ZTVN10__cxxabiv117__class_type_infoE+8
 9689 0004 00000000 		.word	_ZTS12ParameterMap
 9690              		.weak	_ZTS15ParameterConfig
 9691              		.section	.rodata._ZTS15ParameterConfig,"aG",%progbits,_ZTS15ParameterConfig,comdat
 9692              		.align	2
 9695              	_ZTS15ParameterConfig:
 9696 0000 31355061 		.ascii	"15ParameterConfig\000"
 9696      72616D65 
 9696      74657243 
 9696      6F6E6669 
 9696      6700
 9697              		.weak	_ZTI15ParameterConfig
 9698              		.section	.rodata._ZTI15ParameterConfig,"aG",%progbits,_ZTI15ParameterConfig,comdat
 9699              		.align	2
 9702              	_ZTI15ParameterConfig:
 9703 0000 08000000 		.word	_ZTVN10__cxxabiv121__vmi_class_type_infoE+8
 9704 0004 00000000 		.word	_ZTS15ParameterConfig
 9705 0008 00000000 		.word	0
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 509


 9706 000c 01000000 		.word	1
 9707 0010 00000000 		.word	_ZTI12ParameterMap
 9708 0014 02040000 		.word	1026
 9709              		.weak	_ZTV15ParameterConfig
 9710              		.section	.rodata._ZTV15ParameterConfig,"aG",%progbits,_ZTV15ParameterConfig,comdat
 9711              		.align	2
 9714              	_ZTV15ParameterConfig:
 9715 0000 00000000 		.word	0
 9716 0004 00000000 		.word	_ZTI15ParameterConfig
 9717 0008 00000000 		.word	_ZN15ParameterConfig13setParametersEv
 9718              		.global	phaser
 9719              		.global	parameterMap
 9720              		.global	paramConf
 9721              		.global	paramVal
 9722              		.global	gpio
 9723              		.global	htim1
 9724              		.global	usart1
 9725              		.global	hw
 9726              		.section	.bss.gpio,"aw",%nobits
 9727              		.align	2
 9728              		.set	.LANCHOR4,. + 0
 9731              	gpio:
 9732 0000 00000000 		.space	20
 9732      00000000 
 9732      00000000 
 9732      00000000 
 9732      00000000 
 9733              		.section	.bss.htim1,"aw",%nobits
 9734              		.align	2
 9735              		.set	.LANCHOR3,. + 0
 9738              	htim1:
 9739 0000 00000000 		.space	4
 9740              		.section	.bss.hw,"aw",%nobits
 9741              		.align	2
 9742              		.set	.LANCHOR0,. + 0
 9745              	hw:
 9746 0000 00000000 		.space	60
 9746      00000000 
 9746      00000000 
 9746      00000000 
 9746      00000000 
 9747              		.section	.bss.paramConf,"aw",%nobits
 9748              		.align	2
 9749              		.set	.LANCHOR5,. + 0
 9752              	paramConf:
 9753 0000 00000000 		.space	1716
 9753      00000000 
 9753      00000000 
 9753      00000000 
 9753      00000000 
 9754              		.section	.bss.paramVal,"aw",%nobits
 9755              		.align	2
 9758              	paramVal:
 9759 0000 00000000 		.space	4
 9760              		.section	.bss.parameterMap,"aw",%nobits
 9761              		.align	2
 9762              		.set	.LANCHOR2,. + 0
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 510


 9765              	parameterMap:
 9766 0000 00000000 		.space	32
 9766      00000000 
 9766      00000000 
 9766      00000000 
 9766      00000000 
 9767              		.section	.bss.phaser,"aw",%nobits
 9768              		.align	2
 9771              	phaser:
 9772 0000 00000000 		.space	77192
 9772      00000000 
 9772      00000000 
 9772      00000000 
 9772      00000000 
 9773              		.section	.bss.usart1,"aw",%nobits
 9774              		.align	2
 9775              		.set	.LANCHOR1,. + 0
 9778              	usart1:
 9779 0000 00000000 		.space	4
 9780              		.text
 9781              	.Letext0:
 9782              		.file 35 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 9783              		.file 36 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 9784              		.file 37 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 9785              		.file 38 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\lib\\gcc\\ar
 9786              		.file 39 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 9787              		.file 40 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 9788              		.file 41 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 9789              		.file 42 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 9790              		.file 43 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 9791              		.file 44 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 9792              		.file 45 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 9793              		.file 46 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 9794              		.file 47 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 9795              		.file 48 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 9796              		.file 49 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 9797              		.file 50 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 9798              		.file 51 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 9799              		.file 52 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 9800              		.file 53 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 9801              		.file 54 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 9802              		.file 55 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 9803              		.file 56 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 9804              		.file 57 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 9805              		.file 58 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 9806              		.file 59 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 9807              		.file 60 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 9808              		.file 61 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 9809              		.file 62 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 9810              		.file 63 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 9811              		.file 64 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 9812              		.file 65 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 9813              		.file 66 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 9814              		.file 67 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 9815              		.file 68 "<built-in>"
 9816              		.file 69 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 9817              		.file 70 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 511


 9818              		.file 71 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 9819              		.file 72 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 9820              		.file 73 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 9821              		.file 74 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 9822              		.file 75 "../../libdaisy//src/per/sai.h"
 9823              		.file 76 "../../libdaisy//src/hid/logger_impl.h"
 9824              		.file 77 "../../libdaisy//src/util/wav_format.h"
 9825              		.file 78 "../../libdaisy//src/dev/max11300.h"
 9826              		.file 79 "../../libdaisy//src/hid/logger.h"
 9827              		.file 80 "../../libdaisy//src/dev/sdram.h"
 9828              		.file 81 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\lib\\gcc\\ar
 9829              		.file 82 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 9830              		.file 83 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 9831              		.file 84 "../../DaisySP//Source/Control/adenv.h"
 9832              		.file 85 "../../DaisySP//Source/Utility/dsp.h"
 9833              		.file 86 "../../DaisySP//Source/Utility/delayline.h"
 9834              		.file 87 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 9835              		.file 88 "c:\\users\\amelia\\desktop\\capstone\\daisy\\daisytoolchain-0.3.1\\windows\\arm-none-eab
 9836              		.file 89 "../../libdaisy//src/dev/sr_595.h"
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 512


DEFINED SYMBOLS
                            *ABS*:00000000 main.cpp
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:17     .text._ZN5daisy11TimerHandleD2Ev:00000000 $t
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:26     .text._ZN5daisy11TimerHandleD2Ev:00000000 _ZN5daisy11TimerHandleD2Ev
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:26     .text._ZN5daisy11TimerHandleD2Ev:00000000 _ZN5daisy11TimerHandleD1Ev
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:43     .text._ZN7daisysp6PhaserD2Ev:00000000 $t
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:51     .text._ZN7daisysp6PhaserD2Ev:00000000 _ZN7daisysp6PhaserD2Ev
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:51     .text._ZN7daisysp6PhaserD2Ev:00000000 _ZN7daisysp6PhaserD1Ev
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:68     .text._ZN5daisy9DaisySeedD2Ev:00000000 $t
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:76     .text._ZN5daisy9DaisySeedD2Ev:00000000 _ZN5daisy9DaisySeedD2Ev
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:76     .text._ZN5daisy9DaisySeedD2Ev:00000000 _ZN5daisy9DaisySeedD1Ev
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:117    .text._Z13AudioCallbackPKPKfPPfj:00000000 $t
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:125    .text._Z13AudioCallbackPKPKfPPfj:00000000 _Z13AudioCallbackPKPKfPPfj
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:182    .text._ZNSt10_HashtableIiSt4pairIKi5paramESaIS3_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_insert_unique_nodeERS1_jjPNS5_10_Hash_nodeIS3_Lb0EEEj.isra.0:00000000 $t
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:189    .text._ZNSt10_HashtableIiSt4pairIKi5paramESaIS3_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_insert_unique_nodeERS1_jjPNS5_10_Hash_nodeIS3_Lb0EEEj.isra.0:00000000 _ZNSt10_HashtableIiSt4pairIKi5paramESaIS3_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb0ELb0ELb1EEEE21_M_insert_unique_nodeERS1_jjPNS5_10_Hash_nodeIS3_Lb0EEEj.isra.0
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:708    .rodata._ZN15ParameterConfig13setParametersEv.str1.4:00000000 $d
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:712    .text._ZN15ParameterConfig13setParametersEv:00000000 $t
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:720    .text._ZN15ParameterConfig13setParametersEv:00000000 _ZN15ParameterConfig13setParametersEv
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:1003   .text._ZN15ParameterConfig13setParametersEv:00000098 $d
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:1008   .rodata._ZN5paramC2ERKS_.str1.4:00000000 $d
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:1012   .text._ZN5paramC2ERKS_:00000000 $t
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:1020   .text._ZN5paramC2ERKS_:00000000 _ZN5paramC2ERKS_
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:2157   .text._ZN5paramC2ERKS_:00000108 $d
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:1020   .text._ZN5paramC2ERKS_:00000000 _ZN5paramC1ERKS_
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:2173   .rodata._Z9UART_InitRN5daisy11UartHandlerE.str1.4:00000000 $d
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:2180   .text._Z9UART_InitRN5daisy11UartHandlerE:00000000 $t
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:2188   .text._Z9UART_InitRN5daisy11UartHandlerE:00000000 _Z9UART_InitRN5daisy11UartHandlerE
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:2355   .text._Z9UART_InitRN5daisy11UartHandlerE:00000054 $d
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:2362   .text._ZNSt10_HashtableIiSt4pairIKi5paramESaIS3_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb0ELb0ELb1EEEE5clearEv:00000000 $t
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:2370   .text._ZNSt10_HashtableIiSt4pairIKi5paramESaIS3_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb0ELb0ELb1EEEE5clearEv:00000000 _ZNSt10_HashtableIiSt4pairIKi5paramESaIS3_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS5_18_Mod_range_hashingENS5_20_Default_ranged_hashENS5_20_Prime_rehash_policyENS5_17_Hashtable_traitsILb0ELb0ELb1EEEE5clearEv
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:2796   .text._ZN12ParameterMapD2Ev:00000000 $t
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:2804   .text._ZN12ParameterMapD2Ev:00000000 _ZN12ParameterMapD2Ev
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:2804   .text._ZN12ParameterMapD2Ev:00000000 _ZN12ParameterMapD1Ev
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:2940   .text._ZN15ParameterConfigD2Ev:00000000 $t
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:2948   .text._ZN15ParameterConfigD2Ev:00000000 _ZN15ParameterConfigD2Ev
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:3629   .text._ZN15ParameterConfigD2Ev:000000a8 $d
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:9714   .rodata._ZTV15ParameterConfig:00000000 _ZTV15ParameterConfig
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:2948   .text._ZN15ParameterConfigD2Ev:00000000 _ZN15ParameterConfigD1Ev
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:3636   .text._ZNSt8__detail9_Map_baseIiSt4pairIKi5paramESaIS4_ENS_10_Select1stESt8equal_toIiESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_20_Prime_rehash_policyENS_17_Hashtable_traitsILb0ELb0ELb1EEELb1EEixEOi:00000000 $t
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:3644   .text._ZNSt8__detail9_Map_baseIiSt4pairIKi5paramESaIS4_ENS_10_Select1stESt8equal_toIiESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_20_Prime_rehash_policyENS_17_Hashtable_traitsILb0ELb0ELb1EEELb1EEixEOi:00000000 _ZNSt8__detail9_Map_baseIiSt4pairIKi5paramESaIS4_ENS_10_Select1stESt8equal_toIiESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_20_Prime_rehash_policyENS_17_Hashtable_traitsILb0ELb0ELb1EEELb1EEixEOi
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:4490   .rodata._ZNSt6vectorImSaImEE17_M_realloc_insertIJRKmEEEvN9__gnu_cxx17__normal_iteratorIPmS1_EEDpOT_.str1.4:00000000 $d
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:4494   .text._ZNSt6vectorImSaImEE17_M_realloc_insertIJRKmEEEvN9__gnu_cxx17__normal_iteratorIPmS1_EEDpOT_:00000000 $t
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:4502   .text._ZNSt6vectorImSaImEE17_M_realloc_insertIJRKmEEEvN9__gnu_cxx17__normal_iteratorIPmS1_EEDpOT_:00000000 _ZNSt6vectorImSaImEE17_M_realloc_insertIJRKmEEEvN9__gnu_cxx17__normal_iteratorIPmS1_EEDpOT_
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:5015   .text._ZNSt6vectorImSaImEE17_M_realloc_insertIJRKmEEEvN9__gnu_cxx17__normal_iteratorIPmS1_EEDpOT_:000000cc $d
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:5023   .rodata.main.str1.4:00000000 $d
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:5027   .text.startup.main:00000000 $t
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:5035   .text.startup.main:00000000 main
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:6525   .text.startup.main:00000184 $d
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:6537   .text.startup.main:0000019c $t
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:8620   .text.startup.main:000003b4 $d
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:8645   .text.startup._GLOBAL__sub_I_hw:00000000 $t
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:8652   .text.startup._GLOBAL__sub_I_hw:00000000 _GLOBAL__sub_I_hw
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:9652   .text.startup._GLOBAL__sub_I_hw:000000f0 $d
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:9771   .bss.phaser:00000000 phaser
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:9673   .init_array:00000000 $d
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:9680   .rodata._ZTS12ParameterMap:00000000 _ZTS12ParameterMap
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:9677   .rodata._ZTS12ParameterMap:00000000 $d
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 513


C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:9687   .rodata._ZTI12ParameterMap:00000000 _ZTI12ParameterMap
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:9684   .rodata._ZTI12ParameterMap:00000000 $d
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:9695   .rodata._ZTS15ParameterConfig:00000000 _ZTS15ParameterConfig
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:9692   .rodata._ZTS15ParameterConfig:00000000 $d
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:9702   .rodata._ZTI15ParameterConfig:00000000 _ZTI15ParameterConfig
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:9699   .rodata._ZTI15ParameterConfig:00000000 $d
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:9711   .rodata._ZTV15ParameterConfig:00000000 $d
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:9765   .bss.parameterMap:00000000 parameterMap
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:9752   .bss.paramConf:00000000 paramConf
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:9758   .bss.paramVal:00000000 paramVal
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:9731   .bss.gpio:00000000 gpio
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:9738   .bss.htim1:00000000 htim1
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:9778   .bss.usart1:00000000 usart1
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:9745   .bss.hw:00000000 hw
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:9727   .bss.gpio:00000000 $d
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:9734   .bss.htim1:00000000 $d
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:9741   .bss.hw:00000000 $d
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:9748   .bss.paramConf:00000000 $d
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:9755   .bss.paramVal:00000000 $d
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:9761   .bss.parameterMap:00000000 $d
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:9768   .bss.phaser:00000000 $d
C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s:9774   .bss.usart1:00000000 $d
                           .group:00000000 _ZN5daisy11TimerHandleD5Ev
                           .group:00000000 _ZN7daisysp6PhaserD5Ev
                           .group:00000000 _ZN5daisy9DaisySeedD5Ev
                           .group:00000000 _ZN5paramC5ERKS_
                           .group:00000000 _ZN12ParameterMapD5Ev
                           .group:00000000 _ZN15ParameterConfigD5Ev

UNDEFINED SYMBOLS
_ZNKSt8__detail20_Prime_rehash_policy14_M_need_rehashEjjj
_Znwj
memset
_ZdlPvj
_ZSt17__throw_bad_allocv
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEjjjc
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
memcpy
_ZSt19__throw_logic_errorPKc
_ZN5daisy11UartHandler4InitERKNS0_6ConfigE
_ZN5daisy11UartHandler7StartRxEv
_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
memmove
_ZSt20__throw_length_errorPKc
_ZN5daisy9DaisySeed4InitEb
_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
_ZN5daisy9DaisySeed18SetAudioSampleRateENS_9SaiHandle6Config10SampleRateE
_ZN5daisy9DaisySeed10StartAudioEPFvPKPKfPPfjE
_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE8StartLogEb
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKc
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEjc
_ZN5daisy11UartHandler8ReadableEv
_ZN5daisy11UartHandler5PopRxEv
_ZN5daisy11UartHandler7FlushRxEv
__aeabi_atexit
ARM GAS  C:\Users\Amelia\AppData\Local\Temp\ccQMK7MV.s 			page 514


__dso_handle
_ZTVN10__cxxabiv117__class_type_infoE
_ZTVN10__cxxabiv121__vmi_class_type_infoE
